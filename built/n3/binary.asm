; Interface tables: 625/1952 (32%)
; Virtual methods: 37 / 253
; generated code sizes (bytes): 134004 (incl. 92748 user, 4658 helpers, 13098 vtables, 23500 lits); src size 0
; assembly: 82156 lines; density: 33.99 bytes/stmt; (2729 stmts)
; total bytes: 251764 (48.0% of 512.0k flash with 272524 free)
; peep hole pass: 1607 instructions removed and 2980 updated
; peep hole pass: 1370 instructions removed and 5 updated
; peep hole pass: 1 instructions removed and 1 updated
; peep hole pass: 0 instructions removed and 0 updated


; start
    .startaddr 0x1cc00
    .hex 708E3B92C615A841C49866C975EE5197 ; magic number
    .hex 0086CD5DBF35521D ; hex template hash
    .hex 873266330af9dbdb ; replaced in binary by program hash
    .short 94   ; num. globals
    .short 0 ; patched with number of 64 bit words resulting from assembly
    .word _pxt_config_data
    .short 0 ; patched with comm section size
    .short 1 ; number of globals that are not pointers (they come first)
    .word _pxt_iface_member_names
    .word _pxt_lambda_trampoline@fn
    .word _pxt_perf_counters
    .word _pxt_restore_exception_state@fn
    .word _str89 ; name
    ;
; Function src/SerialComms.ts(1,1): <main>
    ;
    .object _main___P4418 "src/SerialComms.ts(1,1): <main>"
_main___P4418_pre:
    .section code
    .balign 4
_main___P4418_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _main___P4418_args@fn
_main___P4418_args:
    .section code
_main___P4418:
_main___P4418_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_main___P4418_locals:
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #4]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    movs r0, #3
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    ldr r1, _ldlit_2 ; listeners_inline__P4482_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    pop {r0} ; tmpref @1
    movs r1, #69
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #6
    movs r1, #39
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #1
    movs r1, #77
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_3 ; music_Melody__C1623_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_4 ; _str18      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl music_Melody_constructor__P1626
_proccall90:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #83
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_3 ; music_Melody__C1623_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_5 ; _str19      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl music_Melody_constructor__P1626
_proccall91:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #41
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #201
    movs r1, #19
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #98
    movs r2, #13
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #97
    movs r2, #17
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #114
    ldr r2, _ldlit_6 ; _hexlit20      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
    movs r1, #160
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #98
    movs r2, #25
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #97
    movs r2, #25
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #114
    ldr r2, _ldlit_7 ; _hexlit21      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
    movs r1, #156
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #98
    movs r2, #13
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #97
    movs r2, #11
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #114
    ldr r2, _ldlit_8 ; _hexlit22      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #120]
    @stackempty locals
    movs r0, #10
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    ldr r0, _ldlit_9 ; control___screen_inline__P4632_Lit      
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_10 ; _hexlit23      
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setPalette
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl _screen_internal_createScreen__P2014
_proccall92:
    movs r1, #128
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_11 ; _str24      
    movs r1, #91
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_12 ; _str25      
    movs r1, #23
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl settings_initScopes__P4663
_proccall93:
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall94:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #144
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #11
    push {r0} ; proc-arg
    movs r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall95:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #148
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #95
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall96:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #216
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #99
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall97:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #220
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #97
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall98:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #224
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall99:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #228
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #103
    push {r0} ; proc-arg
    movs r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall100:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #232
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_14 ; controller_Controller__C2111_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Controller_constructor__P2115
_proccall101:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #204
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_14 ; controller_Controller__C2111_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Controller_constructor__P2115
_proccall102:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #208
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_14 ; controller_Controller__C2111_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Controller_constructor__P2115
_proccall103:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #212
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl controller__player1__P2105
_proccall104:
    movs r1, #200
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_15 ; controller_inline__P4691_Lit      
    push {r0} ; proc-arg
    bl game_addScenePopHandler__P2996
_proccall105:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_16 ; controller_inline__P4731_Lit      
    push {r0} ; proc-arg
    bl game_addScenePushHandler__P2994
_proccall106:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_17 ; controller_AnyButton__C4754_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall107:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #20]
    @stackempty locals
    movs r0, #66
    movs r1, #67
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    movs r1, #65
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #61
    movs r1, #33
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl SpriteKind_create__P2455
_proccall108:
    ldr r7, [r6, #0]
    str r0, [r7, #24]
    @stackempty locals
    bl SpriteKind_create__P2455
_proccall109:
    ldr r7, [r6, #0]
    str r0, [r7, #28]
    @stackempty locals
    bl SpriteKind_create__P2455
_proccall110:
    ldr r7, [r6, #0]
    str r0, [r7, #32]
    @stackempty locals
    ldr r0, _ldlit_18 ; _dbl40      
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall111:
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    str r0, [r7, #36]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
    ldr r0, _ldlit_19 ; info_inline__P4841_Lit      
    push {r0} ; proc-arg
    bl game_addScenePushHandler__P2994
    b _jmpwords_20      
.object PUSH
.balign 4
_ldlit_2:
 .word listeners_inline__P4482_Lit
_ldlit_3:
 .word music_Melody__C1623_VT
_ldlit_4:
 .word _str18
_ldlit_5:
 .word _str19
_ldlit_6:
 .word _hexlit20
_ldlit_7:
 .word _hexlit21
_ldlit_8:
 .word _hexlit22
_ldlit_9:
 .word control___screen_inline__P4632_Lit
_ldlit_10:
 .word _hexlit23
_ldlit_11:
 .word _str24
_ldlit_12:
 .word _str25
_ldlit_13:
 .word controller_Button__C2166_VT
_ldlit_14:
 .word controller_Controller__C2111_VT
_ldlit_15:
 .word controller_inline__P4691_Lit
_ldlit_16:
 .word controller_inline__P4731_Lit
_ldlit_17:
 .word controller_AnyButton__C4754_VT
_ldlit_18:
 .word _dbl40
_ldlit_19:
 .word info_inline__P4841_Lit
_jmpwords_20:
.object POP
_proccall112:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_21 ; info_inline__P4857_Lit      
    push {r0} ; proc-arg
    bl game_addScenePopHandler__P2996
_proccall113:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #68]
    @stackempty locals
    ldr r0, _ldlit_22 ; _hexlit44      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #48]
    @stackempty locals
    ldr r0, _ldlit_23 ; _hexlit45      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #52]
    @stackempty locals
    ldr r0, _ldlit_24 ; _hexlit46      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #56]
    @stackempty locals
    movs r0, #10
    movs r1, #196
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #10
    movs r1, #184
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_25 ; gameOverConfig_inline__P4965_Lit      
    ldr r7, [r6, #0]
    str r0, [r7, #60]
    @stackempty locals
    movs r0, #10
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl scene_systemMenu_initVolume__P5239
_proccall114:
    @stackempty locals
    bl scene_systemMenu_initScreen__P5240
_proccall115:
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
    push {r0} ; proc-arg
    bl _conv_5
    ldr r1, _ldlit_26 ; scene_systemMenu_register__P3082_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_27 ; _hexlit65      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #72]
    @stackempty locals
    ldr r0, _ldlit_28 ; _hexlit66      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #76]
    @stackempty locals
    ldr r0, _ldlit_29 ; _hexlit67      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #80]
    @stackempty locals
    ldr r0, _ldlit_30 ; _hexlit68      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #84]
    @stackempty locals
    ldr r0, _ldlit_31 ; _hexlit69      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #88]
    @stackempty locals
    ldr r0, _ldlit_32 ; _hexlit70      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #92]
    @stackempty locals
    ldr r0, _ldlit_33 ; _hexlit71      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #96]
    @stackempty locals
    ldr r0, _ldlit_34 ; _hexlit72      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #100]
    @stackempty locals
    ldr r0, _ldlit_35 ; _hexlit73      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #104]
    @stackempty locals
    ldr r0, _ldlit_36 ; _hexlit74      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #108]
    @stackempty locals
    ldr r0, _ldlit_37 ; _hexlit75      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #112]
    @stackempty locals
    movs r0, #3
    movs r1, #252
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #17
    movs r1, #248
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #120]
    ldr r7, [r6, #0]
    str r0, [r7, #116]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall116:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_subs
    ldr r7, [r6, #0]
    str r0, [r7, #124]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #17
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r1, #98
    bl _ifacecall1_get_8
_proccall117:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #132
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_38 ; game_consoleOverlay_listener__P5306_Lit      
    push {r0} ; proc-arg
    bl console_addListener__P383
_proccall118:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_39 ; MAX_SOURCES_inline__P13947_Lit      
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    movs r1, #21
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_40 ; particles_SprayFactory__C3167_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #121
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl particles_SprayFactory_constructor__P3168
_proccall120:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
    movs r1, #85
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_41 ; Math_FastRandom__C3035_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Math_FastRandom_constructor__P3037
_proccall121:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #136
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_42 ; _dbl77      
    movs r1, #43
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; effects_ScreenEffect__C3242_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_44 ; confetti_inline__P13700_Lit      
    push {r0} ; proc-arg
    movs r0, #31
    lsls r0, r0, #8
    adds r0, #65
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    ldr r0, [sp, #4*4] ; tmpref @1
    push {r0} ; proc-arg
    bl effects_ScreenEffect_constructor__P3243
_proccall122:
    add sp, #4*5 ; pop locals 5
    pop {r0} ; tmpref @1
    movs r1, #5
    lsls r1, r1, #6
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_45 ; effects_ImageEffect__C3266_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_46 ; dissolve_inline__P12239_Lit      
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl effects_ImageEffect_constructor__P3267
_proccall123:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #73
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_45 ; effects_ImageEffect__C3266_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_47 ; melt_inline__P13647_Lit      
    push {r0} ; proc-arg
    movs r0, #251
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl effects_ImageEffect_constructor__P3267
_proccall124:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #81
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_48 ; controller_pauseUntilAnyButtonIsPressed__P2182_Lit      
    push {r0} ; proc-arg
    bl game_setWaitAnyButton__P2976
_proccall125:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl game_eventContext__P2978
_proccall126:
    @stackempty locals
    bl SpriteKind_create__P2455
_proccall127:
    movs r1, #140
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_49 ; _str86      
    movs r1, #172
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_50 ; inline__P7042_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall128:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_51 ; inline__P7047_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall129:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_52 ; inline__P7050_Lit      
    push {r0} ; proc-arg
    bl basic_forever__P2062
_proccall130:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_53 ; _str88      
    push {r0} ; proc-arg
    bl serial_writeLine__P4363
_proccall131:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, _ldlit_54 ; _str87      
    push {r0} ; proc-arg
    bl textsprite_create__P4341
_proccall132:
    add sp, #4*3 ; pop locals 3
    movs r1, #152
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl Sprite_setPosition__P2385
_proccall133:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4418:
    @stackempty locals
    movs r0, #0
.final_0_1:
_main___P4418_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_21:
 .word info_inline__P4857_Lit
_ldlit_22:
 .word _hexlit44
_ldlit_23:
 .word _hexlit45
_ldlit_24:
 .word _hexlit46
_ldlit_25:
 .word gameOverConfig_inline__P4965_Lit
_ldlit_26:
 .word scene_systemMenu_register__P3082_Lit
_ldlit_27:
 .word _hexlit65
_ldlit_28:
 .word _hexlit66
_ldlit_29:
 .word _hexlit67
_ldlit_30:
 .word _hexlit68
_ldlit_31:
 .word _hexlit69
_ldlit_32:
 .word _hexlit70
_ldlit_33:
 .word _hexlit71
_ldlit_34:
 .word _hexlit72
_ldlit_35:
 .word _hexlit73
_ldlit_36:
 .word _hexlit74
_ldlit_37:
 .word _hexlit75
_ldlit_38:
 .word game_consoleOverlay_listener__P5306_Lit
_ldlit_39:
 .word MAX_SOURCES_inline__P13947_Lit
_ldlit_40:
 .word particles_SprayFactory__C3167_VT
_ldlit_41:
 .word Math_FastRandom__C3035_VT
_ldlit_42:
 .word _dbl77
_ldlit_43:
 .word effects_ScreenEffect__C3242_VT
_ldlit_44:
 .word confetti_inline__P13700_Lit
_ldlit_45:
 .word effects_ImageEffect__C3266_VT
_ldlit_46:
 .word dissolve_inline__P12239_Lit
_ldlit_47:
 .word melt_inline__P13647_Lit
_ldlit_48:
 .word controller_pauseUntilAnyButtonIsPressed__P2182_Lit
_ldlit_49:
 .word _str86
_ldlit_50:
 .word inline__P7042_Lit
_ldlit_51:
 .word inline__P7047_Lit
_ldlit_52:
 .word inline__P7050_Lit
_ldlit_53:
 .word _str88
_ldlit_54:
 .word _str87
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/frame.ts(18,27): control.__screen.inline
    ;
    .object control___screen_inline__P4632 "screen---st7735/frame.ts(18,27): control.__screen.inline"
control___screen_inline__P4632_pre:
    .section code
    .balign 4
control___screen_inline__P4632_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control___screen_inline__P4632_args@fn
control___screen_inline__P4632_args:
    .section code
control___screen_inline__P4632:
control___screen_inline__P4632_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control___screen_inline__P4632_locals:
.cont.4633:
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.4633      
.jmpz134:
    movs r0, #10
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    bl pause__P413
_proccall135:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_2      
.jmpz136:
    bl control___screen_update__P1971
_proccall137:
    @stackempty locals
    movs r0, #66
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
.else_0_2:
.afterif_1_2:
    b .cont.4633      
.brk.4633:
    movs r0, #0
.ret.4632:
    @stackempty locals
.final_2_2:
control___screen_inline__P4632_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(16,29): controller.inline
    ;
    .object controller_inline__P4691 "game/controller.ts(16,29): controller.inline"
controller_inline__P4691_pre:
    .section code
    .balign 4
controller_inline__P4691_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_inline__P4691_args@fn
controller_inline__P4691_args:
    .section code
controller_inline__P4691:
controller_inline__P4691_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_inline__P4691_locals:
    bl game_currentScene__P2975
_proccall138:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #80]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_3      
.jmpz139:
    b .ret.4691      
.else_0_3:
.afterif_1_3:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.4699:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz140
    b .brk.4699      
.jmpz140:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_3      
.jmpz141:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_3      
.lazySkip_4_3:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.lazy_3_3:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_3      
.jmpz142:
    ldr r0, [sp, locals@2]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_5_3      
.jmpz143:
    movs r0, #3
    b .condexprfin_6_3      
.condexprz_5_3:
    movs r0, #5
.condexprfin_6_3:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@2]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_3:
.afterif_7_3:
.cont.4699:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.4699      
.brk.4699:
.ret.4691:
    @stackempty locals
    movs r0, #0
.final_8_3:
    add sp, #4*3 ; pop locals 3
controller_inline__P4691_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(32,30): controller.inline
    ;
    .object controller_inline__P4731 "game/controller.ts(32,30): controller.inline"
controller_inline__P4731_pre:
    .section code
    .balign 4
controller_inline__P4731_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_inline__P4731_args@fn
controller_inline__P4731_args:
    cmp r4, #1
    bge controller_inline__P4731_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_inline__P4731_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_inline__P4731:
controller_inline__P4731_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
controller_inline__P4731_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_scene_Scene__C2819_validate_10
    str r1, [r0, #80]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.4737:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.4737      
.jmpz144:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_4      
.jmpz145:
    ldr r0, [sp, args@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #80]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_4:
.afterif_1_4:
.cont.4737:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.4737      
.brk.4737:
.ret.4731:
    @stackempty locals
    movs r0, #0
.final_2_4:
    add sp, #4*1 ; pop locals 1
controller_inline__P4731_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/info.ts(94,30): info.inline
    ;
    .object info_inline__P4841 "game/info.ts(94,30): info.inline"
info_inline__P4841_pre:
    .section code
    .balign 4
info_inline__P4841_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word info_inline__P4841_args@fn
info_inline__P4841_args:
    cmp r4, #1
    bge info_inline__P4841_nochk
    push {lr}
    bl _expand_args_1_12
    bl info_inline__P4841_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
info_inline__P4841:
info_inline__P4841_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
info_inline__P4841_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_5      
.jmpz146:
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_5      
.jmpz147:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #44]
    @stackempty locals
.else_1_5:
.afterif_2_5:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #167
    lsls r1, r1, #1
    ldr r7, [r6, #0]
    ldr r2, [r7, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #143
    lsls r1, r1, #1
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
.else_0_5:
.afterif_3_5:
.ret.4841:
    @stackempty locals
    movs r0, #0
.final_4_5:
info_inline__P4841_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/info.ts(105,29): info.inline
    ;
    .object info_inline__P4857 "game/info.ts(105,29): info.inline"
info_inline__P4857_pre:
    .section code
    .balign 4
info_inline__P4857_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word info_inline__P4857_args@fn
info_inline__P4857_args:
    .section code
info_inline__P4857:
info_inline__P4857_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
info_inline__P4857_locals:
    bl game_currentScene__P2975
_proccall148:
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_6      
.jmpz149:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_6      
.lazySkip_2_6:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_1_6:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_6      
.jmpz150:
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #143
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall152:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _cmp_eq
    beq .else_3_6      
.jmpz151:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #167
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall153:
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
    b .afterif_4_6      
.else_3_6:
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_4_6:
.else_0_6:
.afterif_5_6:
.ret.4857:
    @stackempty locals
    movs r0, #0
.final_6_6:
    add sp, #4*2 ; pop locals 2
info_inline__P4857_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(108,35): gameOverConfig.inline
    ;
    .object gameOverConfig_inline__P4965 "game/game.ts(108,35): gameOverConfig.inline"
gameOverConfig_inline__P4965_pre:
    .section code
    .balign 4
gameOverConfig_inline__P4965_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word gameOverConfig_inline__P4965_args@fn
gameOverConfig_inline__P4965_args:
    .section code
gameOverConfig_inline__P4965:
gameOverConfig_inline__P4965_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
gameOverConfig_inline__P4965_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_7      
.jmpz154:
    ldr r0, _ldlit_56 ; game_GameOverConfig__C2949_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl game_GameOverConfig_constructor__P2964
_proccall155:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #64]
    @stackempty locals
.else_0_7:
.afterif_1_7:
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
.ret.4965:
    @stackempty locals
.final_2_7:
gameOverConfig_inline__P4965_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function src/SerialComms.ts(1,53): inline
    ;
    .object inline__P7042 "src/SerialComms.ts(1,53): inline"
inline__P7042_pre:
    .section code
    .balign 4
inline__P7042_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P7042_args@fn
inline__P7042_args:
    .section code
inline__P7042:
inline__P7042_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P7042_locals:
    ldr r0, _ldlit_57 ; _str87      
    push {r0} ; proc-arg
    bl serial_writeLine__P4363
_proccall156:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.7042:
    @stackempty locals
    movs r0, #0
.final_0_8:
inline__P7042_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function src/SerialComms.ts(4,53): inline
    ;
    .object inline__P7047 "src/SerialComms.ts(4,53): inline"
inline__P7047_pre:
    .section code
    .balign 4
inline__P7047_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P7047_args@fn
inline__P7047_args:
    .section code
inline__P7047:
inline__P7047_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P7047_locals:
    ldr r0, _ldlit_58 ; _str88      
    push {r0} ; proc-arg
    bl serial_writeLine__P4363
_proccall157:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.7047:
    @stackempty locals
    movs r0, #0
.final_0_9:
inline__P7047_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function src/SerialComms.ts(7,15): inline
    ;
    .object inline__P7050 "src/SerialComms.ts(7,15): inline"
inline__P7050_pre:
    .section code
    .balign 4
inline__P7050_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P7050_args@fn
inline__P7050_args:
    .section code
inline__P7050:
inline__P7050_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P7050_locals:
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl serial_readString__P4359
_proccall158:
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl TextSprite_setText__P4335
_proccall159:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.7050:
    @stackempty locals
    movs r0, #0
.final_0_10:
inline__P7050_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(497,5): Sprite.setPosition
    ;
    .object Sprite_setPosition__P2385 "game/sprite.ts(497,5): Sprite.setPosition"
Sprite_setPosition__P2385_pre:
    .section code
    .balign 4
Sprite_setPosition__P2385_args:
    cmp r4, #3
    bge Sprite_setPosition__P2385_nochk
    push {lr}
    bl _expand_args_3_14
    bl Sprite_setPosition__P2385_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite_setPosition__P2385:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_setPosition__P2385_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite_setPosition__P2385_locals:
    bl game_currentScene__P2975
_proccall160:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #28]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_x__P2330_nochk
_proccall161:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall162:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_y__P2332_nochk
_proccall163:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall164:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    movs r1, #44
    bl _classCall_PhysicsEngine__C2487_16
_proccall165:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.2385:
    @stackempty locals
    movs r0, #0
.final_0_11:
    add sp, #4*1 ; pop locals 1
Sprite_setPosition__P2385_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(122,5): Sprite.y
    ;
    .object Sprite_y__P2332 "game/sprite.ts(122,5): Sprite.y"
Sprite_y__P2332_pre:
    .section code
    .balign 4
Sprite_y__P2332_args:
    cmp r4, #1
    bge Sprite_y__P2332_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_y__P2332_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_y__P2332:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_y__P2332_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_y__P2332_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    mov r3, r0
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_div__P162
_proccall166:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2332:
    @stackempty locals
.final_0_12:
Sprite_y__P2332_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(36,5): Fx.div
    ;
    .object Fx_div__P162 "base/fixed.ts(36,5): Fx.div"
Fx_div__P162_pre:
    .section code
    .balign 4
    .section code
Fx_div__P162:
Fx_div__P162_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_div__P162_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.162:
    @stackempty locals
.final_0_13:
Fx_div__P162_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(111,5): Sprite.x
    ;
    .object Sprite_x__P2330 "game/sprite.ts(111,5): Sprite.x"
Sprite_x__P2330_pre:
    .section code
    .balign 4
Sprite_x__P2330_args:
    cmp r4, #1
    bge Sprite_x__P2330_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_x__P2330_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_x__P2330:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_x__P2330_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_x__P2330_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_div__P162
_proccall167:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2330:
    @stackempty locals
.final_0_16:
Sprite_x__P2330_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(14,5): PhysicsEngine.moveSprite
    ;
    .object PhysicsEngine_moveSprite__P2491 "game/physics.ts(14,5): PhysicsEngine.moveSprite"
PhysicsEngine_moveSprite__P2491_pre:
    .section code
    .balign 4
PhysicsEngine_moveSprite__P2491_args:
    cmp r4, #4
    bge PhysicsEngine_moveSprite__P2491_nochk
    push {lr}
    bl _expand_args_4_17
    bl PhysicsEngine_moveSprite__P2491_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
PhysicsEngine_moveSprite__P2491:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2487_validate_18
    mov lr, r7
PhysicsEngine_moveSprite__P2491_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_moveSprite__P2491_locals:
.ret.2491:
    @stackempty locals
    movs r0, #0
.final_0_17:
PhysicsEngine_moveSprite__P2491_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function arcade-text/text.ts(139,5): textsprite.create
    ;
    .object textsprite_create__P4341 "arcade-text/text.ts(139,5): textsprite.create"
textsprite_create__P4341_pre:
    .section code
    .balign 4
    .section code
textsprite_create__P4341:
textsprite_create__P4341_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
textsprite_create__P4341_locals:
    ldr r0, _ldlit_59 ; TextSprite__C4330_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #6
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #17
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*10] ; tmpref @1
    push {r0} ; proc-arg
    bl TextSprite_constructor__P4331
_proccall168:
    add sp, #4*11 ; pop locals 11
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    bl game_currentScene__P2975
_proccall169:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_PhysicsEngine__C2487_16
_proccall170:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.4341:
    @stackempty locals
.final_0_18:
    add sp, #4*1 ; pop locals 1
textsprite_create__P4341_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(9,5): PhysicsEngine.addSprite
    ;
    .object PhysicsEngine_addSprite__P2489 "game/physics.ts(9,5): PhysicsEngine.addSprite"
PhysicsEngine_addSprite__P2489_pre:
    .section code
    .balign 4
PhysicsEngine_addSprite__P2489_args:
    cmp r4, #2
    bge PhysicsEngine_addSprite__P2489_nochk
    push {lr}
    bl _expand_args_2_19
    bl PhysicsEngine_addSprite__P2489_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
PhysicsEngine_addSprite__P2489:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2487_validate_18
    mov lr, r7
PhysicsEngine_addSprite__P2489_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_addSprite__P2489_locals:
.ret.2489:
    @stackempty locals
    movs r0, #0
.final_0_19:
PhysicsEngine_addSprite__P2489_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_56:
 .word game_GameOverConfig__C2949_VT
_ldlit_57:
 .word _str87
_ldlit_58:
 .word _str88
_ldlit_59:
 .word TextSprite__C4330_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function arcade-text/text.ts(9,5): TextSprite.constructor
    ;
    .object TextSprite_constructor__P4331 "arcade-text/text.ts(9,5): TextSprite.constructor"
TextSprite_constructor__P4331_pre:
    .section code
    .balign 4
    .section code
TextSprite_constructor__P4331:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_TextSprite__C4330_validate_20
    mov lr, r7
TextSprite_constructor__P4331_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
TextSprite_constructor__P4331_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #124]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    movs r3, #128
    str r1, [r0, r3]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    movs r3, #132
    str r1, [r0, r3]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    movs r3, #136
    str r1, [r0, r3]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    movs r3, #140
    str r1, [r0, r3]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@6]
    movs r3, #144
    str r1, [r0, r3]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@7]
    movs r3, #148
    str r1, [r0, r3]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@8]
    movs r3, #152
    str r1, [r0, r3]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@9]
    movs r3, #156
    str r1, [r0, r3]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@10]
    movs r3, #160
    str r1, [r0, r3]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_constructor__P2364
_proccall171:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_setKind__P2384_nochk
_proccall172:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #56
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_setFlag__P2395_nochk
_proccall173:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl TextSprite_update__P4332_nochk
_proccall174:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.4331:
    @stackempty locals
.final_0_20:
TextSprite_constructor__P4331_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function arcade-text/text.ts(27,5): TextSprite.update
    ;
    .object TextSprite_update__P4332 "arcade-text/text.ts(27,5): TextSprite.update"
TextSprite_update__P4332_pre:
    .section code
    .balign 4
TextSprite_update__P4332_args:
    cmp r4, #1
    bge TextSprite_update__P4332_nochk
    push {lr}
    bl _expand_args_1_12
    bl TextSprite_update__P4332_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
TextSprite_update__P4332:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_TextSprite__C4330_validate_20
    mov lr, r7
TextSprite_update__P4332_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
TextSprite_update__P4332_locals:
    ldr r0, [sp, args@0]
    movs r3, #140
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #148
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #152
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r3, #160
    ldr r0, [r0, r3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_21      
.jmpz175:
    ldr r0, [sp, args@0]
    movs r3, #160
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #148
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #152
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_21      
.condexprz_0_21:
    movs r0, #1
.condexprfin_1_21:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r3, #160
    ldr r0, [r0, r3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_21      
.jmpz176:
    ldr r0, [sp, args@0]
    movs r3, #160
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    b .condexprfin_3_21      
.condexprz_2_21:
    movs r0, #1
.condexprfin_3_21:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #136
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl textsprite_getFontForTextAndHeight__P4340
_proccall177:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #98
    bl _ifacecall1_get_8
_proccall178:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #124]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall179:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_max__P130
_proccall180:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #144
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::fill
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #140
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #140
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #140
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #140
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #128
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    bl helpers_imageFillRect__P1936
_proccall181:
    add sp, #4*12 ; pop locals 12
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r3, #160
    ldr r0, [r0, r3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_21      
.jmpz182:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r3, #160
    ldr r0, [r0, r3]
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl textsprite_renderScaledImage__P4339
_proccall183:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.else_4_21:
.afterif_5_21:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall184:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #132
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    bl helpers_imagePrint__P1968
_proccall185:
    add sp, #4*12 ; pop locals 12
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r3, #152
    ldr r0, [r0, r3]
    movs r1, #1
    bl _cmp_gt
    beq .else_6_21      
.jmpz186:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #132
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #152
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r3, #156
    ldr r0, [r0, r3]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl textsprite_outlineOtherColor__P4342
_proccall187:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_6_21:
.afterif_7_21:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_setImage__P2367_nochk
_proccall188:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4332:
    @stackempty locals
    movs r0, #0
.final_8_21:
    add sp, #4*9 ; pop locals 9
TextSprite_update__P4332_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(333,5): Sprite.setImage
    ;
    .object Sprite_setImage__P2367 "game/sprite.ts(333,5): Sprite.setImage"
Sprite_setImage__P2367_pre:
    .section code
    .balign 4
Sprite_setImage__P2367_args:
    cmp r4, #2
    bge Sprite_setImage__P2367_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_setImage__P2367_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_setImage__P2367:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_setImage__P2367_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_setImage__P2367_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_22      
.jmpz189:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_22      
.lazySkip_2_22:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_1_22:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_22      
.jmpz190:
    b .ret.2367      
.else_0_22:
.afterif_3_22:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #88]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #56
    bl _classCall_Sprite__C2317_this_23
_proccall191:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2367:
    @stackempty locals
    movs r0, #0
.final_4_22:
Sprite_setImage__P2367_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(364,5): Sprite.recalcSize
    ;
    .object Sprite_recalcSize__P4780 "game/sprite.ts(364,5): Sprite.recalcSize"
Sprite_recalcSize__P4780_pre:
    .section code
    .balign 4
Sprite_recalcSize__P4780_args:
    cmp r4, #1
    bge Sprite_recalcSize__P4780_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_recalcSize__P4780_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_recalcSize__P4780:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_recalcSize__P4780_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_recalcSize__P4780_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2346_nochk
_proccall192:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall193:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #52]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2348_nochk
_proccall194:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall195:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #56]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_resetHitbox__P2369_nochk
_proccall196:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4780:
    @stackempty locals
    movs r0, #0
.final_0_23:
Sprite_recalcSize__P4780_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(343,5): Sprite.resetHitbox
    ;
    .object Sprite_resetHitbox__P2369 "game/sprite.ts(343,5): Sprite.resetHitbox"
Sprite_resetHitbox__P2369_pre:
    .section code
    .balign 4
Sprite_resetHitbox__P2369_args:
    cmp r4, #1
    bge Sprite_resetHitbox__P2369_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_resetHitbox__P2369_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_resetHitbox__P2369:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_resetHitbox__P2369_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_resetHitbox__P2369_locals:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #104]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2317_this_23
_proccall197:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2369:
    @stackempty locals
    movs r0, #0
.final_0_24:
Sprite_resetHitbox__P2369_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(348,5): Sprite.setHitbox
    ;
    .object Sprite_setHitbox__P2370 "game/sprite.ts(348,5): Sprite.setHitbox"
Sprite_setHitbox__P2370_pre:
    .section code
    .balign 4
Sprite_setHitbox__P2370_args:
    cmp r4, #1
    bge Sprite_setHitbox__P2370_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_setHitbox__P2370_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_setHitbox__P2370:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_setHitbox__P2370_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_setHitbox__P2370_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_25      
.jmpz198:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_updateIfInvalid__P2199
_proccall199:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_25      
.else_0_25:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_calculateHitBox__P2201
_proccall200:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_25:
.ret.2370:
    @stackempty locals
    movs r0, #0
.final_2_25:
Sprite_setHitbox__P2370_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(104,5): game.calculateHitBox
    ;
    .object game_calculateHitBox__P2201 "game/hitbox.ts(104,5): game.calculateHitBox"
game_calculateHitBox__P2201_pre:
    .section code
    .balign 4
    .section code
game_calculateHitBox__P2201:
game_calculateHitBox__P2201_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
game_calculateHitBox__P2201_locals:
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_26      
.jmpz201:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_26      
.lazySkip_2_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_isValid__P2197
_proccall202:
    add sp, #4*1 ; pop locals 1
.lazy_1_26:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_26      
.jmpz203:
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    b .ret.2201      
.else_0_26:
.afterif_3_26:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; the one arg
    bl Fx8__P149
_proccall204:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; the one arg
    bl Fx8__P149
_proccall205:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.7364:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7364      
.jmpz206:
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@8]
    @stackempty locals
.fortop.7371:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7371      
.jmpz207:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_26      
.jmpz208:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall209:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall210:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall211:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall212:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
.else_4_26:
.afterif_5_26:
.cont.7371:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    ldr r0, [sp, locals@8]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    push {r0}; tmpstore @1
    str r0, [sp, locals@8]
    pop {r0} ; tmpref @1
    @stackempty locals
    b .fortop.7371      
.brk.7371:
.cont.7364:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@6]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    push {r0}; tmpstore @1
    str r0, [sp, locals@6]
    pop {r0} ; tmpref @1
    @stackempty locals
    b .fortop.7364      
.brk.7364:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall213:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall214:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall215:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall216:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #44]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #48]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, _ldlit_61 ; game_Hitbox__C2185_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, _ldlit_62 ; -511      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r1, _ldlit_62 ; -511      
    bl _numops_ands
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; tmpref @1
    push {r0} ; proc-arg
    bl game_Hitbox_constructor__P2192
_proccall217:
    add sp, #4*11 ; pop locals 11
    pop {r0} ; tmpref @1
.ret.2201:
    @stackempty locals
.final_6_26:
    add sp, #4*11 ; pop locals 11
game_calculateHitBox__P2201_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(10,9): game.Hitbox.constructor
    ;
    .object game_Hitbox_constructor__P2192 "game/hitbox.ts(10,9): game.Hitbox.constructor"
game_Hitbox_constructor__P2192_pre:
    .section code
    .balign 4
    .section code
game_Hitbox_constructor__P2192:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_25
    mov lr, r7
game_Hitbox_constructor__P2192_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_constructor__P2192_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_calcDimensionalHash__P2368
_proccall218:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.2192:
    @stackempty locals
.final_0_28:
game_Hitbox_constructor__P2192_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(339,5): Sprite.calcDimensionalHash
    ;
    .object Sprite_calcDimensionalHash__P2368 "game/sprite.ts(339,5): Sprite.calcDimensionalHash"
Sprite_calcDimensionalHash__P2368_pre:
    .section code
    .balign 4
Sprite_calcDimensionalHash__P2368_args:
    cmp r4, #1
    bge Sprite_calcDimensionalHash__P2368_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_calcDimensionalHash__P2368_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_calcDimensionalHash__P2368:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_calcDimensionalHash__P2368_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_calcDimensionalHash__P2368_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::revision
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    movs r0, #17
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall219:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    mov r3, r0
    movs r0, #33
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall220:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2368:
    @stackempty locals
.final_0_29:
Sprite_calcDimensionalHash__P2368_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(18,5): Fx.toIntShifted
    ;
    .object Fx_toIntShifted__P156 "base/fixed.ts(18,5): Fx.toIntShifted"
Fx_toIntShifted__P156_pre:
    .section code
    .balign 4
    .section code
Fx_toIntShifted__P156:
Fx_toIntShifted__P156_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_toIntShifted__P156_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #17
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
.ret.156:
    @stackempty locals
.final_0_30:
Fx_toIntShifted__P156_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(30,5): Fx.mul
    ;
    .object Fx_mul__P160 "base/fixed.ts(30,5): Fx.mul"
Fx_mul__P160_pre:
    .section code
    .balign 4
    .section code
Fx_mul__P160:
Fx_mul__P160_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_mul__P160_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::imul
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.ret.160:
    @stackempty locals
.final_0_32:
Fx_mul__P160_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(57,5): Fx.max
    ;
    .object Fx_max__P167 "base/fixed.ts(57,5): Fx.max"
Fx_max__P167_pre:
    .section code
    .balign 4
    .section code
Fx_max__P167:
Fx_max__P167_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_max__P167_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .else_0_33      
.jmpz221:
    ldr r0, [sp, args@0]
    b .ret.167      
    b .afterif_1_33      
.else_0_33:
    ldr r0, [sp, args@1]
    b .ret.167      
.afterif_1_33:
    movs r0, #0
.ret.167:
    @stackempty locals
.final_2_33:
Fx_max__P167_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(51,5): Fx.min
    ;
    .object Fx_min__P166 "base/fixed.ts(51,5): Fx.min"
Fx_min__P166_pre:
    .section code
    .balign 4
    .section code
Fx_min__P166:
Fx_min__P166_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_min__P166_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_lt
    beq .else_0_34      
.jmpz222:
    ldr r0, [sp, args@0]
    b .ret.166      
    b .afterif_1_34      
.else_0_34:
    ldr r0, [sp, args@1]
    b .ret.166      
.afterif_1_34:
    movs r0, #0
.ret.166:
    @stackempty locals
.final_2_34:
Fx_min__P166_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(323,5): Sprite.image
    ;
    .object Sprite_image__P2366 "game/sprite.ts(323,5): Sprite.image"
Sprite_image__P2366_pre:
    .section code
    .balign 4
Sprite_image__P2366_args:
    cmp r4, #1
    bge Sprite_image__P2366_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_image__P2366_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_image__P2366:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_image__P2366_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_image__P2366_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
.ret.2366:
    @stackempty locals
.final_0_35:
Sprite_image__P2366_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(41,9): game.Hitbox.isValid
    ;
    .object game_Hitbox_isValid__P2197 "game/hitbox.ts(41,9): game.Hitbox.isValid"
game_Hitbox_isValid__P2197_pre:
    .section code
    .balign 4
game_Hitbox_isValid__P2197_args:
    cmp r4, #1
    bge game_Hitbox_isValid__P2197_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_isValid__P2197_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_isValid__P2197:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_25
    mov lr, r7
game_Hitbox_isValid__P2197_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_isValid__P2197_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl Sprite_calcDimensionalHash__P2368
_proccall223:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.2197:
    @stackempty locals
.final_0_36:
game_Hitbox_isValid__P2197_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(49,9): game.Hitbox.updateIfInvalid
    ;
    .object game_Hitbox_updateIfInvalid__P2199 "game/hitbox.ts(49,9): game.Hitbox.updateIfInvalid"
game_Hitbox_updateIfInvalid__P2199_pre:
    .section code
    .balign 4
game_Hitbox_updateIfInvalid__P2199_args:
    cmp r4, #1
    bge game_Hitbox_updateIfInvalid__P2199_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_updateIfInvalid__P2199_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_updateIfInvalid__P2199:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_25
    mov lr, r7
game_Hitbox_updateIfInvalid__P2199_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
game_Hitbox_updateIfInvalid__P2199_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_isValid__P2197_nochk
_proccall225:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_37      
.jmpz224:
    b .ret.2199      
    b .afterif_1_37      
.object PUSH
.balign 4
_ldlit_61:
 .word game_Hitbox__C2185_VT
_ldlit_62:
 .word -511
.object POP
.else_0_37:
.afterif_1_37:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl game_calculateHitBox__P2201
_proccall226:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@2]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #12]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #16]
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@5]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@6]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall227:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@7]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall228:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@6]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall229:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@8]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall230:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@9]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_gt
    beq .else_2_37      
.jmpz231:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@5]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_37:
.afterif_3_37:
    ldr r0, [sp, locals@10]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_gt
    beq .else_4_37      
.jmpz232:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@6]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_37:
.afterif_5_37:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2199:
    @stackempty locals
    movs r0, #0
.final_6_37:
    add sp, #4*11 ; pop locals 11
game_Hitbox_updateIfInvalid__P2199_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(45,5): Fx.abs
    ;
    .object Fx_abs__P165 "base/fixed.ts(45,5): Fx.abs"
Fx_abs__P165_pre:
    .section code
    .balign 4
    .section code
Fx_abs__P165:
Fx_abs__P165_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_abs__P165_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_38      
.jmpz233:
    movs r0, #1
    ldr r1, [sp, args@0]
    bl _numops_subs
    b .ret.165      
    b .afterif_1_38      
.else_0_38:
    ldr r0, [sp, args@0]
    b .ret.165      
.afterif_1_38:
    movs r0, #0
.ret.165:
    @stackempty locals
.final_2_38:
Fx_abs__P165_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(210,5): Sprite.sy
    ;
    .object Sprite_sy__P2348 "game/sprite.ts(210,5): Sprite.sy"
Sprite_sy__P2348_pre:
    .section code
    .balign 4
Sprite_sy__P2348_args:
    cmp r4, #1
    bge Sprite_sy__P2348_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_sy__P2348_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_sy__P2348:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_sy__P2348_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_sy__P2348_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2348:
    @stackempty locals
.final_0_39:
Sprite_sy__P2348_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(197,5): Sprite.sx
    ;
    .object Sprite_sx__P2346 "game/sprite.ts(197,5): Sprite.sx"
Sprite_sx__P2346_pre:
    .section code
    .balign 4
Sprite_sx__P2346_args:
    cmp r4, #1
    bge Sprite_sx__P2346_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_sx__P2346_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_sx__P2346:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_sx__P2346_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_sx__P2346_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2346:
    @stackempty locals
.final_0_40:
Sprite_sx__P2346_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function arcade-text/text.ts(149,5): textsprite.outlineOtherColor
    ;
    .object textsprite_outlineOtherColor__P4342 "arcade-text/text.ts(149,5): textsprite.outlineOtherColor"
textsprite_outlineOtherColor__P4342_pre:
    .section code
    .balign 4
    .section code
textsprite_outlineOtherColor__P4342:
textsprite_outlineOtherColor__P4342_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
textsprite_outlineOtherColor__P4342_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7660:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz234
    b .brk.7660      
.jmpz234:
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.7665:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz235
    b .brk.7665      
.jmpz235:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.7670:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, args@2]
    bl _cmp_le
    bne .jmpz236
    b .brk.7670      
.jmpz236:
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.7674:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, args@2]
    bl _cmp_le
    bne .jmpz237
    b .brk.7674      
.jmpz237:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    movs r1, #1
    bl _cmp_eqq
    beq .else_0_41      
.jmpz238:
    b .cont.7674      
.else_0_41:
.afterif_1_41:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_2_41      
.jmpz239:
    b .cont.7674      
.else_2_41:
.afterif_3_41:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_41      
.jmpz240:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_41      
.lazySkip_6_41:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@4]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_5_41:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_8_41      
.jmpz241:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_41      
.lazySkip_8_41:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_7_41:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_41      
.jmpz242:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_41      
.lazySkip_10_41:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@4]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_9_41:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_41      
.jmpz243:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_41:
.afterif_11_41:
.cont.7674:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    b .fortop.7674      
.brk.7674:
.cont.7670:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    b .fortop.7670      
.brk.7670:
.cont.7665:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.7665      
.brk.7665:
.cont.7660:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.7660      
.brk.7660:
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.7750:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7750      
.jmpz244:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.cont.7750:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    @stackempty locals
    b .fortop.7750      
.brk.7750:
.ret.4342:
    @stackempty locals
    movs r0, #0
.final_12_41:
    add sp, #4*9 ; pop locals 9
textsprite_outlineOtherColor__P4342_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(214,5): helpers.imagePrint
    ;
    .object helpers_imagePrint__P1968 "screen---st7735/text.ts(214,5): helpers.imagePrint"
helpers_imagePrint__P1968_pre:
    .section code
    .balign 4
    .section code
helpers_imagePrint__P1968:
helpers_imagePrint__P1968_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_imagePrint__P1968_locals:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, args@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_42      
.jmpz245:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl image_getFontForText__P1955
_proccall246:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@5]
    @stackempty locals
.else_0_42:
.afterif_1_42:
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_42      
.jmpz247:
    movs r0, #3
    str r0, [sp, args@4]
    @stackempty locals
.else_2_42:
.afterif_3_42:
    ldr r0, [sp, args@2]
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #223
    bl _ifacecall1_get_8
_proccall249:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_42      
.jmpz248:
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #223
    bl _ifacecall1_get_8
_proccall250:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_5_42      
.condexprz_4_42:
    movs r0, #3
.condexprfin_5_42:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #98
    bl _ifacecall1_get_8
_proccall251:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall252:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    movs r1, #15
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #7
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #5
    ldr r1, [sp, locals@6]
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #114
    bl _ifacecall1_get_8
_proccall253:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _cmp_eq
    beq .else_6_42      
.jmpz254:
    movs r0, #17
    ldr r1, [sp, locals@6]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r1, #1
    movs r2, #135
    bl _pxt_buffer_set
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r1, #3
    movs r2, #1
    bl _pxt_buffer_set
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_28
    movs r1, #5
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_28
    movs r1, #9
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_6_42:
.afterif_7_42:
.cont.7853:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz255
    b .brk.7853      
.jmpz255:
    movs r0, #1
    str r0, [sp, locals@11]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, args@6]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_42      
.jmpz256:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_42      
.lazySkip_10_42:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
.lazy_9_42:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_42      
.jmpz257:
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r1, #47
    lsls r1, r1, #3
    bl _ifacecall1_get_8
_proccall258:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r1, #95
    lsls r1, r1, #2
    bl _ifacecall1_get_8
_proccall259:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@12]
    @stackempty locals
.else_8_42:
.afterif_11_42:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, locals@13]
    movs r1, #21
    bl _cmp_eq
    beq .else_12_42      
.jmpz260:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall261:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    str r0, [sp, args@2]
    @stackempty locals
.else_12_42:
.afterif_13_42:
    ldr r0, [sp, locals@13]
    movs r1, #65
    bl _cmp_lt
    beq .else_14_42      
.jmpz262:
    b .cont.7853      
.else_14_42:
.afterif_15_42:
    movs r0, #1
    str r0, [sp, locals@14]
    @stackempty locals
    ldr r0, [sp, locals@9]
    str r0, [sp, locals@15]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, locals@13]
    movs r1, #65
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@17]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    bl _conv_30
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@13]
    bl _cmp_eq
    beq .else_16_42      
.jmpz263:
    ldr r0, [sp, locals@17]
    str r0, [sp, locals@16]
    @stackempty locals
    b .afterif_17_42      
.else_16_42:
.cont.7909:
    ldr r0, [sp, locals@14]
    ldr r1, [sp, locals@15]
    bl _cmp_le
    beq .brk.7909      
.jmpz264:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    ldr r1, [sp, locals@14]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@18]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_30
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@19]
    @stackempty locals
    ldr r0, [sp, locals@19]
    ldr r1, [sp, locals@13]
    bl _cmp_eq
    beq .else_18_42      
.jmpz265:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@16]
    @stackempty locals
    b .brk.7909      
.else_18_42:
.afterif_19_42:
    ldr r0, [sp, locals@19]
    ldr r1, [sp, locals@13]
    bl _cmp_lt
    beq .else_20_42      
.jmpz266:
    ldr r0, [sp, locals@18]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@14]
    @stackempty locals
    b .afterif_21_42      
.else_20_42:
    ldr r0, [sp, locals@18]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@15]
    @stackempty locals
.afterif_21_42:
    b .cont.7909      
.brk.7909:
.afterif_17_42:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _cmp_eq
    beq .else_22_42      
.jmpz267:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_32
    movs r1, #8
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@11]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r1, [sp, locals@12]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imageDrawIcon__P1935
_proccall268:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #98
    bl _ifacecall1_get_8
_proccall269:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_23_42      
.else_22_42:
    ldr r0, [sp, locals@16]
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@16]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@20]
    @stackempty locals
.fortop.7975:
    ldr r0, [sp, locals@20]
    ldr r1, [sp, locals@3]
    bl _cmp_lt
    bne .jmpz270
    b .brk.7975      
.jmpz270:
    movs r0, #1
    str r0, [sp, locals@21]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@22]
    @stackempty locals
    ldr r0, [sp, locals@16]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@16]
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@23]
    @stackempty locals
.cont.7985:
    ldr r0, [sp, locals@21]
    ldr r1, [sp, locals@4]
    bl _cmp_lt
    bne .jmpz271
    b .brk.7985      
.jmpz271:
    ldr r0, [sp, locals@22]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_eq
    beq .else_24_42      
.jmpz272:
    ldr r0, [sp, locals@16]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@16]
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@23]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@22]
    @stackempty locals
.else_24_42:
.afterif_25_42:
    movs r0, #1
    str r0, [sp, locals@24]
    @stackempty locals
.cont.7996:
    ldr r0, [sp, locals@23]
    ldr r1, [sp, locals@22]
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.7996      
.jmpz273:
    ldr r0, [sp, locals@24]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@24]
    @stackempty locals
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@22]
    @stackempty locals
    b .cont.7996      
.brk.7996:
    ldr r0, [sp, locals@24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_26_42      
.jmpz274:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@21]
    ldr r1, [sp, locals@12]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageFillRect__P1936
_proccall275:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
    ldr r0, [sp, locals@21]
    ldr r1, [sp, locals@24]
    bl _numops_adds
    str r0, [sp, locals@21]
    @stackempty locals
    b .afterif_27_42      
.else_26_42:
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@22]
    @stackempty locals
    ldr r0, [sp, locals@21]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@21]
    @stackempty locals
.afterif_27_42:
    b .cont.7985      
.brk.7985:
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.cont.7975:
    ldr r0, [sp, locals@20]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@20]
    @stackempty locals
    b .fortop.7975      
.brk.7975:
.afterif_23_42:
    b .cont.7853      
.brk.7853:
.ret.1968:
    @stackempty locals
    movs r0, #0
.final_28_42:
    add sp, #4*25 ; pop locals 25
helpers_imagePrint__P1968_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(156,5): helpers.imageDrawIcon
    ;
    .object helpers_imageDrawIcon__P1935 "screen---st7735/image.ts(156,5): helpers.imageDrawIcon"
helpers_imageDrawIcon__P1935_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawIcon__P1935:
helpers_imageDrawIcon__P1935_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageDrawIcon__P1935_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_pack__P4621
_proccall276:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_33
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_drawIcon
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.1935:
    @stackempty locals
    movs r0, #0
.final_0_43:
helpers_imageDrawIcon__P1935_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(131,5): helpers.pack
    ;
    .object helpers_pack__P4621 "screen---st7735/image.ts(131,5): helpers.pack"
helpers_pack__P4621_pre:
    .section code
    .balign 4
    .section code
helpers_pack__P4621:
helpers_pack__P4621_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_pack__P4621_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #234
    lsls r0, r0, #8
    adds r0, #97
    push {r0} ; proc-arg
    ldr r0, _ldlit_64 ; -59999      
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall277:
    add sp, #4*3 ; pop locals 3
    ldr r1, _ldlit_65 ; 131071      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #234
    lsls r0, r0, #8
    adds r0, #97
    push {r0} ; proc-arg
    ldr r0, _ldlit_64 ; -59999      
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall278:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    movs r1, #33
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_orrs
    add sp, #4*2 ; pop locals 2
.ret.4621:
    @stackempty locals
.final_0_44:
helpers_pack__P4621_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(529,5): Math.clamp
    ;
    .object Math_clamp__P127 "base/pxt-helpers.ts(529,5): Math.clamp"
Math_clamp__P127_pre:
    .section code
    .balign 4
    .section code
Math_clamp__P127:
Math_clamp__P127_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_clamp__P127_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall279:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall280:
    add sp, #4*2 ; pop locals 2
.ret.127:
    @stackempty locals
.final_0_45:
Math_clamp__P127_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(569,5): Math.min
    ;
    .object Math_min__P131 "base/pxt-helpers.ts(569,5): Math.min"
Math_min__P131_pre:
    .section code
    .balign 4
    .section code
Math_min__P131:
Math_min__P131_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_min__P131_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_le
    beq .else_0_46      
.jmpz281:
    ldr r0, [sp, args@0]
    b .ret.131      
.else_0_46:
.afterif_1_46:
    ldr r0, [sp, args@1]
.ret.131:
    @stackempty locals
.final_2_46:
Math_min__P131_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(137,5): image.getFontForText
    ;
    .object image_getFontForText__P1955 "screen---st7735/text.ts(137,5): image.getFontForText"
image_getFontForText__P1955_pre:
    .section code
    .balign 4
    .section code
image_getFontForText__P1955:
image_getFontForText__P1955_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
image_getFontForText__P1955_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.8095:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.8095      
.jmpz282:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    movs r1, #64
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_gt
    beq .else_0_47      
.jmpz283:
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .ret.1955      
.else_0_47:
.afterif_1_47:
.cont.8095:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.8095      
.brk.8095:
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.1955:
    @stackempty locals
.final_2_47:
    add sp, #4*1 ; pop locals 1
image_getFontForText__P1955_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function arcade-text/text.ts(105,5): textsprite.renderScaledImage
    ;
    .object textsprite_renderScaledImage__P4339 "arcade-text/text.ts(105,5): textsprite.renderScaledImage"
textsprite_renderScaledImage__P4339_pre:
    .section code
    .balign 4
    .section code
textsprite_renderScaledImage__P4339:
textsprite_renderScaledImage__P4339_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
textsprite_renderScaledImage__P4339_locals:
    ldr r0, [sp, args@4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8122:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz284
    b .brk.8122      
.jmpz284:
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.8127:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.8127      
.jmpz285:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_neq
    beq .else_0_48      
.jmpz286:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_0_48:
.afterif_1_48:
.cont.8127:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.8127      
.brk.8127:
.cont.8122:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.8122      
.brk.8122:
.ret.4339:
    @stackempty locals
    movs r0, #0
.final_2_48:
    add sp, #4*4 ; pop locals 4
textsprite_renderScaledImage__P4339_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(159,5): helpers.imageFillRect
    ;
    .object helpers_imageFillRect__P1936 "screen---st7735/image.ts(159,5): helpers.imageFillRect"
helpers_imageFillRect__P1936_pre:
    .section code
    .balign 4
    .section code
helpers_imageFillRect__P1936:
helpers_imageFillRect__P1936_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageFillRect__P1936_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_pack__P4621
_proccall287:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl helpers_pack__P4621
_proccall288:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_fillRect
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.1936:
    @stackempty locals
    movs r0, #0
.final_0_49:
helpers_imageFillRect__P1936_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(559,5): Math.max
    ;
    .object Math_max__P130 "base/pxt-helpers.ts(559,5): Math.max"
Math_max__P130_pre:
    .section code
    .balign 4
    .section code
Math_max__P130:
Math_max__P130_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_max__P130_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_ge
    beq .else_0_50      
.jmpz289:
    ldr r0, [sp, args@0]
    b .ret.130      
.else_0_50:
.afterif_1_50:
    ldr r0, [sp, args@1]
.ret.130:
    @stackempty locals
.final_2_50:
Math_max__P130_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function arcade-text/text.ts(117,5): textsprite.getFontForTextAndHeight
    ;
    .object textsprite_getFontForTextAndHeight__P4340 "arcade-text/text.ts(117,5): textsprite.getFontForTextAndHeight"
textsprite_getFontForTextAndHeight__P4340_pre:
    .section code
    .balign 4
    .section code
textsprite_getFontForTextAndHeight__P4340:
textsprite_getFontForTextAndHeight__P4340_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
textsprite_getFontForTextAndHeight__P4340_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl image_getFontForText__P1955
_proccall290:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall291:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #25
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_51      
.jmpz292:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    b .condexprfin_1_51      
.object PUSH
.balign 4
_ldlit_64:
 .word -59999
_ldlit_65:
 .word 131071
.object POP
.condexprz_0_51:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r7, [r6, #0]
    ldr r0, [r7, #120]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
.condexprfin_1_51:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_67 ; remainders_inline__P8216_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_arrayMap__P106
_proccall293:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_68 ; fontIdx_inline__P8228_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #199
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl helpers_arrayReduce__P112
_proccall294:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall295:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl image_scaledFont__P1957
_proccall296:
    add sp, #4*2 ; pop locals 2
.ret.4340:
    @stackempty locals
.final_2_51:
    add sp, #4*6 ; pop locals 6
textsprite_getFontForTextAndHeight__P4340_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function arcade-text/text.ts(123,47): remainders.inline
    ;
    .object remainders_inline__P8216 "arcade-text/text.ts(123,47): remainders.inline"
remainders_inline__P8216_pre:
    .section code
    .balign 4
remainders_inline__P8216_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word remainders_inline__P8216_args@fn
remainders_inline__P8216_args:
    cmp r4, #1
    bge remainders_inline__P8216_nochk
    push {lr}
    bl _expand_args_1_12
    bl remainders_inline__P8216_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
remainders_inline__P8216:
remainders_inline__P8216_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
remainders_inline__P8216_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall297:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
.ret.8216:
    @stackempty locals
.final_0_52:
remainders_inline__P8216_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function arcade-text/text.ts(124,43): fontIdx.inline
    ;
    .object fontIdx_inline__P8228 "arcade-text/text.ts(124,43): fontIdx.inline"
fontIdx_inline__P8228_pre:
    .section code
    .balign 4
fontIdx_inline__P8228_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word fontIdx_inline__P8228_args@fn
fontIdx_inline__P8228_args:
    cmp r4, #3
    bge fontIdx_inline__P8228_nochk
    push {lr}
    bl _expand_args_3_14
    bl fontIdx_inline__P8228_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
fontIdx_inline__P8228:
fontIdx_inline__P8228_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fontIdx_inline__P8228_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@1]
    bl _cmp_le
    beq .condexprz_0_53      
.jmpz298:
    ldr r0, [sp, args@0]
    b .condexprfin_1_53      
.condexprz_0_53:
    ldr r0, [sp, args@2]
.condexprfin_1_53:
; jmp value (already in r0)
.ret.8228:
    @stackempty locals
.final_2_53:
fontIdx_inline__P8228_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(151,5): image.scaledFont
    ;
    .object image_scaledFont__P1957 "screen---st7735/text.ts(151,5): image.scaledFont"
image_scaledFont__P1957_pre:
    .section code
    .balign 4
    .section code
image_scaledFont__P1957:
image_scaledFont__P1957_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
image_scaledFont__P1957_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #5
    bl _cmp_lt
    beq .else_0_54      
.jmpz299:
    ldr r0, [sp, args@0]
    b .ret.1957      
.else_0_54:
.afterif_1_54:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #98
    bl _ifacecall1_get_8
_proccall300:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #98
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall301:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #97
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #114
    bl _ifacecall1_get_8
_proccall302:
    add sp, #4*1 ; pop locals 1
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #114
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #223
    bl _ifacecall1_get_8
_proccall304:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_54      
.jmpz303:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #223
    bl _ifacecall1_get_8
_proccall305:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    b .condexprfin_3_54      
.condexprz_2_54:
    ldr r0, [sp, args@1]
.condexprfin_3_54:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    movs r1, #223
    pop {r2} ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
.ret.1957:
    @stackempty locals
.final_4_54:
image_scaledFont__P1957_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(281,5): helpers.arrayReduce
    ;
    .object helpers_arrayReduce__P112 "base/pxt-helpers.ts(281,5): helpers.arrayReduce"
helpers_arrayReduce__P112_pre:
    .section code
    .balign 4
    .section code
helpers_arrayReduce__P112:
helpers_arrayReduce__P112_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayReduce__P112_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.8278:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.8278      
.jmpz306:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    ldr r0, [sp, #4*3] ; estack
    bl _lambda_call3_34
    add sp, #4*4 ; pop locals 4
    str r0, [sp, args@2]
    @stackempty locals
.cont.8278:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.8278      
.brk.8278:
    ldr r0, [sp, args@2]
.ret.112:
    @stackempty locals
.final_0_55:
    add sp, #4*2 ; pop locals 2
helpers_arrayReduce__P112_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(230,5): helpers.arrayMap
    ;
    .object helpers_arrayMap__P106 "base/pxt-helpers.ts(230,5): helpers.arrayMap"
helpers_arrayMap__P106_pre:
    .section code
    .balign 4
    .section code
helpers_arrayMap__P106:
helpers_arrayMap__P106_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayMap__P106_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8299:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.8299      
.jmpz308:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_35
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.8299:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.8299      
.brk.8299:
    ldr r0, [sp, locals@0]
.ret.106:
    @stackempty locals
.final_0_56:
    add sp, #4*3 ; pop locals 3
helpers_arrayMap__P106_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(677,5): Sprite.setFlag
    ;
    .object Sprite_setFlag__P2395 "game/sprite.ts(677,5): Sprite.setFlag"
Sprite_setFlag__P2395_pre:
    .section code
    .balign 4
Sprite_setFlag__P2395_args:
    cmp r4, #3
    bge Sprite_setFlag__P2395_nochk
    push {lr}
    bl _expand_args_3_14
    bl Sprite_setFlag__P2395_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
.object PUSH
.balign 4
_ldlit_67:
 .word remainders_inline__P8216_Lit
_ldlit_68:
 .word fontIdx_inline__P8228_Lit
.object POP
    .section code
Sprite_setFlag__P2395:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_setFlag__P2395_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_setFlag__P2395_locals:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_57      
.jmpz310:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #116]
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_1_57      
.else_0_57:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_57:
.ret.2395:
    @stackempty locals
    movs r0, #0
.final_2_57:
Sprite_setFlag__P2395_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(465,5): Sprite.setKind
    ;
    .object Sprite_setKind__P2384 "game/sprite.ts(465,5): Sprite.setKind"
Sprite_setKind__P2384_pre:
    .section code
    .balign 4
Sprite_setKind__P2384_args:
    cmp r4, #2
    bge Sprite_setKind__P2384_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_setKind__P2384_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_setKind__P2384:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_setKind__P2384_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_setKind__P2384_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_58      
.jmpz311:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_58      
.lazySkip_2_58:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_1_58:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_58      
.jmpz312:
    b .ret.2384      
.else_0_58:
.afterif_3_58:
    bl game_currentScene__P2975
_proccall313:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #24]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_58      
.jmpz314:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_58      
.lazySkip_6_58:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_36
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
.lazy_5_58:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_58      
.jmpz315:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_36
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteSet_remove__P2446
_proccall316:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_58:
.afterif_7_58:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_ge
    beq .else_8_58      
.jmpz317:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_36
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_9_58      
.jmpz318:
    ldr r0, _ldlit_70 ; sprites_SpriteSet__C2439_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl sprites_SpriteSet_constructor__P2441
_proccall319:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_37
    bl _pxt_map_set
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_9_58:
.afterif_10_58:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_36
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteSet_add__P2444
_proccall320:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_8_58:
.afterif_11_58:
    bl game_currentScene__P2975
_proccall321:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #52]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_36
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_58      
.jmpz322:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    bl _conv_37
    bl _pxt_map_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_12_58:
.afterif_13_58:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_36
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #112]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #64]
    @stackempty locals
.ret.2384:
    @stackempty locals
    movs r0, #0
.final_14_58:
    add sp, #4*2 ; pop locals 2
Sprite_setKind__P2384_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(42,9): sprites.SpriteSet.add
    ;
    .object sprites_SpriteSet_add__P2444 "game/spriteset.ts(42,9): sprites.SpriteSet.add"
sprites_SpriteSet_add__P2444_pre:
    .section code
    .balign 4
sprites_SpriteSet_add__P2444_args:
    cmp r4, #2
    bge sprites_SpriteSet_add__P2444_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_SpriteSet_add__P2444_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteSet_add__P2444:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2439_validate_38
    mov lr, r7
sprites_SpriteSet_add__P2444_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_add__P2444_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_59      
.jmpz323:
    movs r0, #10
    b .ret.2444      
.else_0_59:
.afterif_1_59:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteSet_contains__P2447_nochk
_proccall325:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_59      
.jmpz324:
    movs r0, #10
    b .ret.2444      
.else_2_59:
.afterif_3_59:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
.ret.2444:
    @stackempty locals
.final_4_59:
sprites_SpriteSet_add__P2444_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(80,9): sprites.SpriteSet.contains
    ;
    .object sprites_SpriteSet_contains__P2447 "game/spriteset.ts(80,9): sprites.SpriteSet.contains"
sprites_SpriteSet_contains__P2447_pre:
    .section code
    .balign 4
sprites_SpriteSet_contains__P2447_args:
    cmp r4, #2
    bge sprites_SpriteSet_contains__P2447_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_SpriteSet_contains__P2447_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteSet_contains__P2447:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2439_validate_38
    mov lr, r7
sprites_SpriteSet_contains__P2447_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_contains__P2447_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.ret.2447:
    @stackempty locals
.final_0_60:
sprites_SpriteSet_contains__P2447_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(20,9): sprites.SpriteSet.constructor
    ;
    .object sprites_SpriteSet_constructor__P2441 "game/spriteset.ts(20,9): sprites.SpriteSet.constructor"
sprites_SpriteSet_constructor__P2441_pre:
    .section code
    .balign 4
    .section code
sprites_SpriteSet_constructor__P2441:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2439_validate_38
    mov lr, r7
sprites_SpriteSet_constructor__P2441_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_constructor__P2441_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2441:
    @stackempty locals
.final_0_61:
sprites_SpriteSet_constructor__P2441_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(67,9): sprites.SpriteSet.remove
    ;
    .object sprites_SpriteSet_remove__P2446 "game/spriteset.ts(67,9): sprites.SpriteSet.remove"
sprites_SpriteSet_remove__P2446_pre:
    .section code
    .balign 4
sprites_SpriteSet_remove__P2446_args:
    cmp r4, #2
    bge sprites_SpriteSet_remove__P2446_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_SpriteSet_remove__P2446_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteSet_remove__P2446:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2439_validate_38
    mov lr, r7
sprites_SpriteSet_remove__P2446_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
sprites_SpriteSet_remove__P2446_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_0_62      
.jmpz326:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySplice__P100
_proccall327:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #66
    b .ret.2446      
.else_0_62:
.afterif_1_62:
    movs r0, #10
.ret.2446:
    @stackempty locals
.final_2_62:
    add sp, #4*1 ; pop locals 1
sprites_SpriteSet_remove__P2446_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(138,5): helpers.arraySplice
    ;
    .object helpers_arraySplice__P100 "base/pxt-helpers.ts(138,5): helpers.arraySplice"
helpers_arraySplice__P100_pre:
    .section code
    .balign 4
    .section code
helpers_arraySplice__P100:
helpers_arraySplice__P100_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_arraySplice__P100_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_63      
.jmpz328:
    b .ret.100      
.else_0_63:
.afterif_1_63:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.8437:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    beq .brk.8437      
.jmpz329:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_39
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.8437:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.8437      
.brk.8437:
.ret.100:
    @stackempty locals
    movs r0, #0
.final_2_63:
    add sp, #4*1 ; pop locals 1
helpers_arraySplice__P100_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_70:
 .word sprites_SpriteSet__C2439_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(279,5): Sprite.constructor
    ;
    .object Sprite_constructor__P2364 "game/sprite.ts(279,5): Sprite.constructor"
Sprite_constructor__P2364_pre:
    .section code
    .balign 4
    .section code
Sprite_constructor__P2364:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_constructor__P2364_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_constructor__P2364_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_constructor__P2073
_proccall330:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall331:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall332:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2335_nochk
_proccall333:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2337_nochk
_proccall334:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ax__P2339_nochk
_proccall335:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ay__P2341_nochk
_proccall336:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_fx__P2343_nochk
_proccall337:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_fy__P2345_nochk
_proccall338:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    str r1, [r0, #48]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #116]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_setImage__P2367_nochk
_proccall339:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_setKind__P2384_nochk
_proccall340:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #68]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #108]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2364:
    @stackempty locals
.final_0_64:
Sprite_constructor__P2364_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(192,5): Sprite.fy
    ;
    .object Sprite_fy__P2345 "game/sprite.ts(192,5): Sprite.fy"
Sprite_fy__P2345_pre:
    .section code
    .balign 4
Sprite_fy__P2345_args:
    cmp r4, #2
    bge Sprite_fy__P2345_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_fy__P2345_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_fy__P2345:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_fy__P2345_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fy__P2345_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall341:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall342:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2345:
    @stackempty locals
    movs r0, #0
.final_0_65:
Sprite_fy__P2345_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(187,5): Sprite.fy
    ;
    .object Sprite_fy__P2344 "game/sprite.ts(187,5): Sprite.fy"
Sprite_fy__P2344_pre:
    .section code
    .balign 4
Sprite_fy__P2344_args:
    cmp r4, #1
    bge Sprite_fy__P2344_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_fy__P2344_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_fy__P2344:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_fy__P2344_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fy__P2344_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2344:
    @stackempty locals
.final_0_66:
Sprite_fy__P2344_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(182,5): Sprite.fx
    ;
    .object Sprite_fx__P2343 "game/sprite.ts(182,5): Sprite.fx"
Sprite_fx__P2343_pre:
    .section code
    .balign 4
Sprite_fx__P2343_args:
    cmp r4, #2
    bge Sprite_fx__P2343_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_fx__P2343_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_fx__P2343:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_fx__P2343_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fx__P2343_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall343:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall344:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2343:
    @stackempty locals
    movs r0, #0
.final_0_67:
Sprite_fx__P2343_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(177,5): Sprite.fx
    ;
    .object Sprite_fx__P2342 "game/sprite.ts(177,5): Sprite.fx"
Sprite_fx__P2342_pre:
    .section code
    .balign 4
Sprite_fx__P2342_args:
    cmp r4, #1
    bge Sprite_fx__P2342_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_fx__P2342_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_fx__P2342:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_fx__P2342_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fx__P2342_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2342:
    @stackempty locals
.final_0_68:
Sprite_fx__P2342_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(171,5): Sprite.ay
    ;
    .object Sprite_ay__P2341 "game/sprite.ts(171,5): Sprite.ay"
Sprite_ay__P2341_pre:
    .section code
    .balign 4
Sprite_ay__P2341_args:
    cmp r4, #2
    bge Sprite_ay__P2341_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_ay__P2341_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_ay__P2341:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_ay__P2341_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ay__P2341_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall345:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2341:
    @stackempty locals
    movs r0, #0
.final_0_69:
Sprite_ay__P2341_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(166,5): Sprite.ay
    ;
    .object Sprite_ay__P2340 "game/sprite.ts(166,5): Sprite.ay"
Sprite_ay__P2340_pre:
    .section code
    .balign 4
Sprite_ay__P2340_args:
    cmp r4, #1
    bge Sprite_ay__P2340_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_ay__P2340_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_ay__P2340:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_ay__P2340_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ay__P2340_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2340:
    @stackempty locals
.final_0_70:
Sprite_ay__P2340_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(160,5): Sprite.ax
    ;
    .object Sprite_ax__P2339 "game/sprite.ts(160,5): Sprite.ax"
Sprite_ax__P2339_pre:
    .section code
    .balign 4
Sprite_ax__P2339_args:
    cmp r4, #2
    bge Sprite_ax__P2339_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_ax__P2339_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_ax__P2339:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_ax__P2339_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ax__P2339_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall346:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2339:
    @stackempty locals
    movs r0, #0
.final_0_71:
Sprite_ax__P2339_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(155,5): Sprite.ax
    ;
    .object Sprite_ax__P2338 "game/sprite.ts(155,5): Sprite.ax"
Sprite_ax__P2338_pre:
    .section code
    .balign 4
Sprite_ax__P2338_args:
    cmp r4, #1
    bge Sprite_ax__P2338_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_ax__P2338_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_ax__P2338:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_ax__P2338_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ax__P2338_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2338:
    @stackempty locals
.final_0_72:
Sprite_ax__P2338_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(149,5): Sprite.vy
    ;
    .object Sprite_vy__P2337 "game/sprite.ts(149,5): Sprite.vy"
Sprite_vy__P2337_pre:
    .section code
    .balign 4
Sprite_vy__P2337_args:
    cmp r4, #2
    bge Sprite_vy__P2337_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_vy__P2337_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_vy__P2337:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_vy__P2337_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vy__P2337_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall347:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2337:
    @stackempty locals
    movs r0, #0
.final_0_73:
Sprite_vy__P2337_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(144,5): Sprite.vy
    ;
    .object Sprite_vy__P2336 "game/sprite.ts(144,5): Sprite.vy"
Sprite_vy__P2336_pre:
    .section code
    .balign 4
Sprite_vy__P2336_args:
    cmp r4, #1
    bge Sprite_vy__P2336_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_vy__P2336_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_vy__P2336:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_vy__P2336_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vy__P2336_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2336:
    @stackempty locals
.final_0_74:
Sprite_vy__P2336_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(138,5): Sprite.vx
    ;
    .object Sprite_vx__P2335 "game/sprite.ts(138,5): Sprite.vx"
Sprite_vx__P2335_pre:
    .section code
    .balign 4
Sprite_vx__P2335_args:
    cmp r4, #2
    bge Sprite_vx__P2335_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_vx__P2335_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_vx__P2335:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_vx__P2335_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vx__P2335_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall348:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2335:
    @stackempty locals
    movs r0, #0
.final_0_75:
Sprite_vx__P2335_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(133,5): Sprite.vx
    ;
    .object Sprite_vx__P2334 "game/sprite.ts(133,5): Sprite.vx"
Sprite_vx__P2334_pre:
    .section code
    .balign 4
Sprite_vx__P2334_args:
    cmp r4, #1
    bge Sprite_vx__P2334_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_vx__P2334_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_vx__P2334:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_vx__P2334_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vx__P2334_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2334:
    @stackempty locals
.final_0_76:
Sprite_vx__P2334_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(16,9): sprites.BaseSprite.constructor
    ;
    .object sprites_BaseSprite_constructor__P2073 "game/basesprite.ts(16,9): sprites.BaseSprite.constructor"
sprites_BaseSprite_constructor__P2073_pre:
    .section code
    .balign 4
    .section code
sprites_BaseSprite_constructor__P2073:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_40
    mov lr, r7
sprites_BaseSprite_constructor__P2073_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite_constructor__P2073_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_z__P2076_nochk
_proccall349:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2975
_proccall350:
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_Scene_addSprite__P2846
_proccall351:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2073:
    @stackempty locals
.final_0_77:
sprites_BaseSprite_constructor__P2073_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(200,9): scene.Scene.addSprite
    ;
    .object scene_Scene_addSprite__P2846 "game/scene.ts(200,9): scene.Scene.addSprite"
scene_Scene_addSprite__P2846_pre:
    .section code
    .balign 4
scene_Scene_addSprite__P2846_args:
    cmp r4, #2
    bge scene_Scene_addSprite__P2846_nochk
    push {lr}
    bl _expand_args_2_19
    bl scene_Scene_addSprite__P2846_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Scene_addSprite__P2846:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2819_validate_10
    mov lr, r7
scene_Scene_addSprite__P2846_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_addSprite__P2846_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #20]
    push {r0}; tmpstore @3
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    pop {r0} ; tmpref @3
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #172
    bl _ifacecall2_set_41
_proccall352:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2846:
    @stackempty locals
    movs r0, #0
.final_0_78:
scene_Scene_addSprite__P2846_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(31,9): sprites.BaseSprite.z
    ;
    .object sprites_BaseSprite_z__P2076 "game/basesprite.ts(31,9): sprites.BaseSprite.z"
sprites_BaseSprite_z__P2076_pre:
    .section code
    .balign 4
sprites_BaseSprite_z__P2076_args:
    cmp r4, #2
    bge sprites_BaseSprite_z__P2076_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_BaseSprite_z__P2076_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_BaseSprite_z__P2076:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_40
    mov lr, r7
sprites_BaseSprite_z__P2076_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite_z__P2076_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_0_79      
.jmpz353:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    bl game_currentScene__P2975
_proccall354:
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #36]
    movs r1, #3
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_scene_Scene__C2819_validate_10
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_79:
.afterif_1_79:
.ret.2076:
    @stackempty locals
    movs r0, #0
.final_2_79:
sprites_BaseSprite_z__P2076_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(27,9): sprites.BaseSprite.z
    ;
    .object sprites_BaseSprite_z__P2075 "game/basesprite.ts(27,9): sprites.BaseSprite.z"
sprites_BaseSprite_z__P2075_pre:
    .section code
    .balign 4
sprites_BaseSprite_z__P2075_args:
    cmp r4, #1
    bge sprites_BaseSprite_z__P2075_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_BaseSprite_z__P2075_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_BaseSprite_z__P2075:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_40
    mov lr, r7
sprites_BaseSprite_z__P2075_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite_z__P2075_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2075:
    @stackempty locals
.final_0_80:
sprites_BaseSprite_z__P2075_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function serial/serial.ts(63,5): serial.readString
    ;
    .object serial_readString__P4359 "serial/serial.ts(63,5): serial.readString"
serial_readString__P4359_pre:
    .section code
    .balign 4
    .section code
serial_readString__P4359:
serial_readString__P4359_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
serial_readString__P4359_locals:
    bl serial_device__P4345
_proccall355:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_81      
.jmpz356:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl serial_Serial_readString__P4354
_proccall357:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_81      
.condexprz_0_81:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_1_81:
; jmp value (already in r0)
.ret.4359:
    @stackempty locals
.final_2_81:
    add sp, #4*1 ; pop locals 1
serial_readString__P4359_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function serial/serial.ts(19,9): serial.Serial.readString
    ;
    .object serial_Serial_readString__P4354 "serial/serial.ts(19,9): serial.Serial.readString"
serial_Serial_readString__P4354_pre:
    .section code
    .balign 4
serial_Serial_readString__P4354_args:
    cmp r4, #1
    bge serial_Serial_readString__P4354_nochk
    push {lr}
    bl _expand_args_1_12
    bl serial_Serial_readString__P4354_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
serial_Serial_readString__P4354:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_serial_Serial__C4350_validate_42
    mov lr, r7
serial_Serial_readString__P4354_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
serial_Serial_readString__P4354_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl SerialDeviceMethods::readBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl UTF8Decoder_add__P418
_proccall358:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl UTF8Decoder_decode__P420
_proccall359:
    add sp, #4*1 ; pop locals 1
.ret.4354:
    @stackempty locals
.final_0_82:
    add sp, #4*1 ; pop locals 1
serial_Serial_readString__P4354_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/utfdecoder.ts(50,5): UTF8Decoder.decode
    ;
    .object UTF8Decoder_decode__P420 "base/utfdecoder.ts(50,5): UTF8Decoder.decode"
UTF8Decoder_decode__P420_pre:
    .section code
    .balign 4
UTF8Decoder_decode__P420_args:
    cmp r4, #1
    bge UTF8Decoder_decode__P420_nochk
    push {lr}
    bl _expand_args_1_12
    bl UTF8Decoder_decode__P420_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
UTF8Decoder_decode__P420:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_UTF8Decoder__C416_validate_43
    mov lr, r7
UTF8Decoder_decode__P420_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
UTF8Decoder_decode__P420_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_83      
.jmpz360:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    b .ret.420      
.else_0_83:
.afterif_1_83:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.8639:
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_ge
    beq .brk.8639      
.jmpz361:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    movs r1, #1
    bl _cmp_eq
    beq .else_2_83      
.jmpz362:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.8639      
    b .afterif_3_83      
.else_2_83:
    ldr r0, [sp, locals@2]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #193
    bl _numops_ands
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #129
    bl _cmp_eq
    beq .else_4_83      
.jmpz363:
    ldr r0, [sp, locals@1]
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.8639      
    b .afterif_5_83      
.else_4_83:
    ldr r0, [sp, locals@2]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #225
    bl _numops_ands
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #193
    bl _cmp_eq
    beq .else_6_83      
.jmpz364:
    ldr r0, [sp, locals@1]
    movs r1, #7
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.8639      
.else_6_83:
.afterif_7_83:
.afterif_5_83:
.afterif_3_83:
.cont.8639:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.8639      
.brk.8639:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .else_8_83      
.jmpz365:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, locals@3]
    b .ret.420      
    b .afterif_9_83      
.else_8_83:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_eq
    beq .else_10_83      
.jmpz366:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    b .ret.420      
    b .afterif_11_83      
.else_10_83:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_30
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_44
    movs r2, #1
    negs r2, r2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@4]
    b .ret.420      
.afterif_11_83:
.afterif_9_83:
    movs r0, #0
.ret.420:
    @stackempty locals
.final_12_83:
    add sp, #4*5 ; pop locals 5
UTF8Decoder_decode__P420_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/utfdecoder.ts(8,5): UTF8Decoder.add
    ;
    .object UTF8Decoder_add__P418 "base/utfdecoder.ts(8,5): UTF8Decoder.add"
UTF8Decoder_add__P418_pre:
    .section code
    .balign 4
UTF8Decoder_add__P418_args:
    cmp r4, #2
    bge UTF8Decoder_add__P418_nochk
    push {lr}
    bl _expand_args_2_19
    bl UTF8Decoder_add__P418_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
UTF8Decoder_add__P418:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_UTF8Decoder__C416_validate_43
    mov lr, r7
UTF8Decoder_add__P418_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
UTF8Decoder_add__P418_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_84      
.jmpz367:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_84      
.lazySkip_2_84:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_84:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_84      
.jmpz368:
    b .ret.418      
.else_0_84:
.afterif_3_84:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_84      
.jmpz369:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    b .afterif_5_84      
.else_4_84:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_32
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #4]
    @stackempty locals
.afterif_5_84:
.ret.418:
    @stackempty locals
    movs r0, #0
.final_6_84:
    add sp, #4*1 ; pop locals 1
UTF8Decoder_add__P418_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function serial/serial-target.ts(16,5): serial.device
    ;
    .object serial_device__P4345 "serial/serial-target.ts(16,5): serial.device"
serial_device__P4345_pre:
    .section code
    .balign 4
    .section code
serial_device__P4345:
serial_device__P4345_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
serial_device__P4345_locals:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_85      
.jmpz370:
    movs r0, #28
    mov r7, sp
    str r7, [r6, #4]
    bl pins::pinByCfg
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #21
    mov r7, sp
    str r7, [r6, #4]
    bl pins::pinByCfg
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_85      
.jmpz371:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_85      
.lazySkip_3_85:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_2_85:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_85      
.jmpz372:
    movs r0, #0
    b .ret.4345      
.else_1_85:
.afterif_4_85:
    movs r0, #25
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl serial_createSerial__P4344
_proccall373:
    add sp, #4*3 ; pop locals 3
    movs r1, #164
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_85:
.afterif_5_85:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.4345:
    @stackempty locals
.final_6_85:
    add sp, #4*2 ; pop locals 2
serial_device__P4345_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function serial/serial-target.ts(10,5): serial.createSerial
    ;
    .object serial_createSerial__P4344 "serial/serial-target.ts(10,5): serial.createSerial"
serial_createSerial__P4344_pre:
    .section code
    .balign 4
    .section code
serial_createSerial__P4344:
serial_createSerial__P4344_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
serial_createSerial__P4344_locals:
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_86      
.jmpz374:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_86      
.lazySkip_1_86:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_86:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_46
    mov r7, sp
    str r7, [r6, #4]
    bl serial::internalCreateSerialDevice
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_72 ; serial_Serial__C4350_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl serial_Serial_constructor__P4353
_proccall375:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
.ret.4344:
    @stackempty locals
.final_2_86:
    add sp, #4*1 ; pop locals 1
serial_createSerial__P4344_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function serial/serial.ts(14,9): serial.Serial.constructor
    ;
    .object serial_Serial_constructor__P4353 "serial/serial.ts(14,9): serial.Serial.constructor"
serial_Serial_constructor__P4353_pre:
    .section code
    .balign 4
    .section code
serial_Serial_constructor__P4353:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_serial_Serial__C4350_validate_42
    mov lr, r7
serial_Serial_constructor__P4353_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
serial_Serial_constructor__P4353_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, _ldlit_73 ; UTF8Decoder__C416_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl UTF8Decoder_constructor__P417
_proccall376:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    movs r0, #0
.ret.4353:
    @stackempty locals
.final_0_87:
serial_Serial_constructor__P4353_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/utfdecoder.ts(4,5): UTF8Decoder.constructor
    ;
    .object UTF8Decoder_constructor__P417 "base/utfdecoder.ts(4,5): UTF8Decoder.constructor"
UTF8Decoder_constructor__P417_pre:
    .section code
    .balign 4
    .section code
UTF8Decoder_constructor__P417:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_UTF8Decoder__C416_validate_43
    mov lr, r7
UTF8Decoder_constructor__P417_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
UTF8Decoder_constructor__P417_locals:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.417:
    @stackempty locals
.final_0_88:
UTF8Decoder_constructor__P417_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function arcade-text/text.ts(67,5): TextSprite.setText
    ;
    .object TextSprite_setText__P4335 "arcade-text/text.ts(67,5): TextSprite.setText"
TextSprite_setText__P4335_pre:
    .section code
    .balign 4
TextSprite_setText__P4335_args:
    cmp r4, #2
    bge TextSprite_setText__P4335_nochk
    push {lr}
    bl _expand_args_2_19
    bl TextSprite_setText__P4335_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
TextSprite_setText__P4335:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_TextSprite__C4330_validate_20
    mov lr, r7
TextSprite_setText__P4335_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
TextSprite_setText__P4335_locals:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_89      
.jmpz377:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_89      
.lazySkip_1_89:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.lazy_0_89:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #124]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl TextSprite_update__P4332_nochk
_proccall378:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4335:
    @stackempty locals
    movs r0, #0
.final_2_89:
TextSprite_setText__P4335_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameoverrides.ts(15,5): basic.forever
    ;
    .object basic_forever__P2062 "game/gameoverrides.ts(15,5): basic.forever"
basic_forever__P2062_pre:
    .section code
    .balign 4
    .section code
basic_forever__P2062:
basic_forever__P2062_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
basic_forever__P2062_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_forever__P2991
_proccall379:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2062:
    @stackempty locals
    movs r0, #0
.final_0_90:
basic_forever__P2062_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(420,5): game.forever
    ;
    .object game_forever__P2991 "game/game.ts(420,5): game.forever"
game_forever__P2991_pre:
    .section code
    .balign 4
    .section code
game_forever__P2991:
game_forever__P2991_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_forever__P2991_locals:
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_91      
.jmpz380:
    movs r0, #66
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_74 ; game_forever_inline__P8803_Lit      
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_91:
.afterif_1_91:
    ldr r0, _ldlit_75 ; scene_GameForeverHandler__C2796_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_GameForeverHandler_constructor__P2798
_proccall381:
    add sp, #4*2 ; pop locals 2
    bl game_currentScene__P2975
_proccall382:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #68]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2991:
    @stackempty locals
    movs r0, #0
.final_2_91:
game_forever__P2991_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(423,35): game.forever.inline
    ;
    .object game_forever_inline__P8803 "game/game.ts(423,35): game.forever.inline"
game_forever_inline__P8803_pre:
    .section code
    .balign 4
game_forever_inline__P8803_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_forever_inline__P8803_args@fn
game_forever_inline__P8803_args:
    .section code
game_forever_inline__P8803:
game_forever_inline__P8803_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_forever_inline__P8803_locals:
.cont.8804:
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.8804      
.jmpz383:
    bl game_currentScene__P2975
_proccall384:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #68]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_76 ; game_forever_inline__P8811_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall385:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #41
    push {r0} ; proc-arg
    bl pause__P413
_proccall386:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.8804      
.brk.8804:
.ret.8803:
    @stackempty locals
    movs r0, #0
.final_0_92:
    add sp, #4*1 ; pop locals 1
game_forever_inline__P8803_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(426,38): game.forever.inline
    ;
    .object game_forever_inline__P8811 "game/game.ts(426,38): game.forever.inline"
game_forever_inline__P8811_pre:
    .section code
    .balign 4
game_forever_inline__P8811_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_forever_inline__P8811_args@fn
game_forever_inline__P8811_args:
    cmp r4, #1
    bge game_forever_inline__P8811_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_forever_inline__P8811_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_forever_inline__P8811:
game_forever_inline__P8811_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_forever_inline__P8811_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_GameForeverHandler__C2796_validate_47
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_93      
.jmpz387:
    ldr r0, [sp, args@0]
    movs r1, #66
    bl _inst_scene_GameForeverHandler__C2796_validate_47
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_77 ; game_forever_inline__P8820_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_93:
.afterif_1_93:
.ret.8811:
    @stackempty locals
    movs r0, #0
.final_2_93:
game_forever_inline__P8811_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(429,51): game.forever.inline
    ;
    .object game_forever_inline__P8820 "game/game.ts(429,51): game.forever.inline"
game_forever_inline__P8820_pre:
    .section code
    .balign 4
game_forever_inline__P8820_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_forever_inline__P8820_args@fn
game_forever_inline__P8820_args:
    .section code
game_forever_inline__P8820:
game_forever_inline__P8820_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_forever_inline__P8820_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall1__48
_proccall388:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #10
    bl _inst_scene_GameForeverHandler__C2796_validate_47
    str r1, [r0, #4]
    @stackempty locals
.ret.8820:
    @stackempty locals
    movs r0, #0
.final_0_94:
game_forever_inline__P8820_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(48,9): scene.GameForeverHandler.constructor
    ;
    .object scene_GameForeverHandler_constructor__P2798 "game/scene.ts(48,9): scene.GameForeverHandler.constructor"
scene_GameForeverHandler_constructor__P2798_pre:
    .section code
    .balign 4
    .section code
scene_GameForeverHandler_constructor__P2798:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_GameForeverHandler__C2796_validate_47
    mov lr, r7
scene_GameForeverHandler_constructor__P2798_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_GameForeverHandler_constructor__P2798_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    movs r0, #0
.ret.2798:
    @stackempty locals
.final_0_95:
scene_GameForeverHandler_constructor__P2798_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(255,5): helpers.arrayForEach
    ;
    .object helpers_arrayForEach__P109 "base/pxt-helpers.ts(255,5): helpers.arrayForEach"
helpers_arrayForEach__P109_pre:
    .section code
    .balign 4
    .section code
helpers_arrayForEach__P109:
helpers_arrayForEach__P109_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayForEach__P109_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.8842:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.8842      
.jmpz389:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_35
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.8842:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.8842      
.brk.8842:
.ret.109:
    @stackempty locals
    movs r0, #0
.final_0_96:
    add sp, #4*2 ; pop locals 2
helpers_arrayForEach__P109_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function serial/serial.ts(113,5): serial.writeLine
    ;
    .object serial_writeLine__P4363 "serial/serial.ts(113,5): serial.writeLine"
serial_writeLine__P4363_pre:
    .section code
    .balign 4
    .section code
serial_writeLine__P4363:
serial_writeLine__P4363_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
serial_writeLine__P4363_locals:
    bl serial_device__P4345
_proccall391:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_97      
.jmpz392:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl serial_Serial_writeLine__P4358
_proccall393:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_97:
.afterif_1_97:
.ret.4363:
    @stackempty locals
    movs r0, #0
.final_2_97:
    add sp, #4*1 ; pop locals 1
serial_writeLine__P4363_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_72:
 .word serial_Serial__C4350_VT
_ldlit_73:
 .word UTF8Decoder__C416_VT
_ldlit_74:
 .word game_forever_inline__P8803_Lit
_ldlit_75:
 .word scene_GameForeverHandler__C2796_VT
_ldlit_76:
 .word game_forever_inline__P8811_Lit
_ldlit_77:
 .word game_forever_inline__P8820_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function serial/serial.ts(50,9): serial.Serial.writeLine
    ;
    .object serial_Serial_writeLine__P4358 "serial/serial.ts(50,9): serial.Serial.writeLine"
serial_Serial_writeLine__P4358_pre:
    .section code
    .balign 4
serial_Serial_writeLine__P4358_args:
    cmp r4, #2
    bge serial_Serial_writeLine__P4358_nochk
    push {lr}
    bl _expand_args_2_19
    bl serial_Serial_writeLine__P4358_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
serial_Serial_writeLine__P4358:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_serial_Serial__C4350_validate_42
    mov lr, r7
serial_Serial_writeLine__P4358_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
serial_Serial_writeLine__P4358_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl serial_Serial_writeString__P4357_nochk
_proccall394:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl serial_Serial_writeString__P4357_nochk
_proccall395:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4358:
    @stackempty locals
    movs r0, #0
.final_0_98:
serial_Serial_writeLine__P4358_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function serial/serial.ts(44,9): serial.Serial.writeString
    ;
    .object serial_Serial_writeString__P4357 "serial/serial.ts(44,9): serial.Serial.writeString"
serial_Serial_writeString__P4357_pre:
    .section code
    .balign 4
serial_Serial_writeString__P4357_args:
    cmp r4, #2
    bge serial_Serial_writeString__P4357_nochk
    push {lr}
    bl _expand_args_2_19
    bl serial_Serial_writeString__P4357_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
serial_Serial_writeString__P4357:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_serial_Serial__C4350_validate_42
    mov lr, r7
serial_Serial_writeString__P4357_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
serial_Serial_writeString__P4357_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_99      
.jmpz396:
    b .ret.4357      
.else_0_99:
.afterif_1_99:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_49
    mov r7, sp
    str r7, [r6, #4]
    bl SerialDeviceMethods::writeBuffer
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4357:
    @stackempty locals
    movs r0, #0
.final_2_99:
    add sp, #4*1 ; pop locals 1
serial_Serial_writeString__P4357_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(124,9): controller.Button.onEvent
    ;
    .object controller_Button_onEvent__P2173 "game/controllerbutton.ts(124,9): controller.Button.onEvent"
controller_Button_onEvent__P2173_pre:
    .section code
    .balign 4
controller_Button_onEvent__P2173_args:
    cmp r4, #3
    bge controller_Button_onEvent__P2173_nochk
    push {lr}
    bl _expand_args_3_14
    bl controller_Button_onEvent__P2173_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
controller_Button_onEvent__P2173:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_onEvent__P2173_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
controller_Button_onEvent__P2173_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_getOrCreateHandlerForEvent__P4761_nochk
_proccall397:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _inst_controller_ButtonHandler__C2160_validate_51
    str r1, [r0, #8]
    @stackempty locals
.ret.2173:
    @stackempty locals
    movs r0, #0
.final_0_100:
    add sp, #4*1 ; pop locals 1
controller_Button_onEvent__P2173_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(251,9): controller.Button.getOrCreateHandlerForEvent
    ;
    .object controller_Button_getOrCreateHandlerForEvent__P4761 "game/controllerbutton.ts(251,9): controller.Button.getOrCreateHandlerForEvent"
controller_Button_getOrCreateHandlerForEvent__P4761_pre:
    .section code
    .balign 4
controller_Button_getOrCreateHandlerForEvent__P4761_args:
    cmp r4, #2
    bge controller_Button_getOrCreateHandlerForEvent__P4761_nochk
    push {lr}
    bl _expand_args_2_19
    bl controller_Button_getOrCreateHandlerForEvent__P4761_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button_getOrCreateHandlerForEvent__P4761:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_getOrCreateHandlerForEvent__P4761_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button_getOrCreateHandlerForEvent__P4761_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_handlerState__P4756_nochk
_proccall399:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_101      
.jmpz398:
    ldr r0, _ldlit_79 ; controller_ButtonEventHandlerState__C2162_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_ButtonEventHandlerState_constructor__P2163
_proccall400:
    add sp, #4*2 ; pop locals 2
    bl game_currentScene__P2975
_proccall401:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_101:
.afterif_1_101:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_handlerState__P4756_nochk
_proccall402:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_52
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_101      
.jmpz403:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_52
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_101:
.afterif_3_101:
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_52
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.8921:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8921      
.jmpz404:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    bl _inst_controller_ButtonHandler__C2160_validate_51
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_4_101      
.jmpz405:
    ldr r0, [sp, locals@1]
    b .ret.4761      
.else_4_101:
.afterif_5_101:
.cont.8921:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.8921      
.brk.8921:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #2
    ldr r1, _ldlit_80 ; controller_Button_getOrCreateHandlerForEvent_inline__P8931_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl control_onEvent__P391
_proccall406:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, _ldlit_81 ; controller_ButtonHandler__C2160_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_ButtonHandler_constructor__P2161
_proccall407:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_52
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@4]
.ret.4761:
    @stackempty locals
.final_6_101:
    add sp, #4*5 ; pop locals 5
controller_Button_getOrCreateHandlerForEvent__P4761_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(266,45): controller.Button.getOrCreateHandlerForEvent.inline
    ;
    .object controller_Button_getOrCreateHandlerForEvent_inline__P8931 "game/controllerbutton.ts(266,45): controller.Button.getOrCreateHandlerForEvent.inline"
controller_Button_getOrCreateHandlerForEvent_inline__P8931_pre:
    .section code
    .balign 4
controller_Button_getOrCreateHandlerForEvent_inline__P8931_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Button_getOrCreateHandlerForEvent_inline__P8931_args@fn
controller_Button_getOrCreateHandlerForEvent_inline__P8931_args:
    .section code
controller_Button_getOrCreateHandlerForEvent_inline__P8931:
controller_Button_getOrCreateHandlerForEvent_inline__P8931_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_getOrCreateHandlerForEvent_inline__P8931_locals:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl controller_Button_runButtonEvents__P4760_nochk
_proccall408:
    add sp, #4*2 ; pop locals 2
.ret.8931:
    @stackempty locals
    movs r0, #0
.final_0_102:
controller_Button_getOrCreateHandlerForEvent_inline__P8931_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(45,9): controller.ButtonHandler.constructor
    ;
    .object controller_ButtonHandler_constructor__P2161 "game/controllerbutton.ts(45,9): controller.ButtonHandler.constructor"
controller_ButtonHandler_constructor__P2161_pre:
    .section code
    .balign 4
    .section code
controller_ButtonHandler_constructor__P2161:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_ButtonHandler__C2160_validate_51
    mov lr, r7
controller_ButtonHandler_constructor__P2161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_ButtonHandler_constructor__P2161_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    movs r0, #0
.ret.2161:
    @stackempty locals
.final_0_103:
controller_ButtonHandler_constructor__P2161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(237,9): controller.Button.runButtonEvents
    ;
    .object controller_Button_runButtonEvents__P4760 "game/controllerbutton.ts(237,9): controller.Button.runButtonEvents"
controller_Button_runButtonEvents__P4760_pre:
    .section code
    .balign 4
controller_Button_runButtonEvents__P4760_args:
    cmp r4, #2
    bge controller_Button_runButtonEvents__P4760_nochk
    push {lr}
    bl _expand_args_2_19
    bl controller_Button_runButtonEvents__P4760_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button_runButtonEvents__P4760:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_runButtonEvents__P4760_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button_runButtonEvents__P4760_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_handlerState__P4756_nochk
_proccall409:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_104      
.jmpz410:
    b .ret.4760      
.else_0_104:
.afterif_1_104:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_getOrCreateHandlerForEvent__P4761_nochk
_proccall411:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_controller_ButtonHandler__C2160_validate_51
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_104      
.jmpz412:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #86
    bl _ifacecall1__48
_proccall413:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_104:
.afterif_3_104:
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_52
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_104      
.jmpz414:
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_52
    ldr r0, [r0, #12]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.8965:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8965      
.jmpz415:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_controller_ButtonHandler__C2160_validate_51
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_7_104      
.jmpz416:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_104      
.lazySkip_7_104:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_controller_ButtonHandler__C2160_validate_51
    ldr r0, [r0, #8]
.lazy_6_104:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_104      
.jmpz417:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #86
    bl _ifacecall1__48
_proccall418:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_8_104      
.object PUSH
.balign 4
_ldlit_79:
 .word controller_ButtonEventHandlerState__C2162_VT
_ldlit_80:
 .word controller_Button_getOrCreateHandlerForEvent_inline__P8931_Lit
_ldlit_81:
 .word controller_ButtonHandler__C2160_VT
.object POP
.else_5_104:
.afterif_8_104:
.cont.8965:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.8965      
.brk.8965:
    movs r0, #0
    str r0, [sp, locals@3]
.else_4_104:
.afterif_9_104:
.ret.4760:
    @stackempty locals
    movs r0, #0
.final_10_104:
    add sp, #4*5 ; pop locals 5
controller_Button_runButtonEvents__P4760_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(10,5): control.onEvent
    ;
    .object control_onEvent__P391 "base/eventcontext.ts(10,5): control.onEvent"
control_onEvent__P391_pre:
    .section code
    .balign 4
    .section code
control_onEvent__P391:
control_onEvent__P391_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control_onEvent__P391_locals:
    bl control_eventContext__P408
_proccall419:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_105      
.jmpz420:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_53
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_1_105      
.else_0_105:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventContext_registerHandler__P405
_proccall421:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.afterif_1_105:
.ret.391:
    @stackempty locals
    movs r0, #0
.final_2_105:
    add sp, #4*1 ; pop locals 1
control_onEvent__P391_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(174,9): control.EventContext.registerHandler
    ;
    .object control_EventContext_registerHandler__P405 "base/eventcontext.ts(174,9): control.EventContext.registerHandler"
control_EventContext_registerHandler__P405_pre:
    .section code
    .balign 4
control_EventContext_registerHandler__P405_args:
    cmp r4, #5
    bge control_EventContext_registerHandler__P405_nochk
    push {lr}
    bl _expand_args_5_54
    bl control_EventContext_registerHandler__P405_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
control_EventContext_registerHandler__P405:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_55
    mov lr, r7
control_EventContext_registerHandler__P405_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerHandler__P405_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9005:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.9005      
.jmpz422:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_control_EventHandler__C4497_validate_56
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_106      
.jmpz423:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_106      
.lazySkip_2_106:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_control_EventHandler__C4497_validate_56
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_106:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_106      
.jmpz424:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@4]
    bl _inst_control_EventHandler__C4497_validate_56
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@3]
    bl _inst_control_EventHandler__C4497_validate_56
    str r1, [r0, #12]
    @stackempty locals
    b .ret.405      
.else_0_106:
.afterif_3_106:
.cont.9005:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.9005      
.brk.9005:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, _ldlit_83 ; control_EventHandler__C4497_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*4] ; tmpref @1
    push {r0} ; proc-arg
    bl control_EventHandler_constructor__P4500
_proccall425:
    add sp, #4*5 ; pop locals 5
    pop {r0} ; tmpref @1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl control_EventHandler_register__P4498
_proccall426:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.405:
    @stackempty locals
    movs r0, #0
.final_4_106:
    add sp, #4*4 ; pop locals 4
control_EventContext_registerHandler__P405_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(31,9): control.EventHandler.register
    ;
    .object control_EventHandler_register__P4498 "base/eventcontext.ts(31,9): control.EventHandler.register"
control_EventHandler_register__P4498_pre:
    .section code
    .balign 4
control_EventHandler_register__P4498_args:
    cmp r4, #1
    bge control_EventHandler_register__P4498_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventHandler_register__P4498_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventHandler_register__P4498:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventHandler__C4497_validate_56
    mov lr, r7
control_EventHandler_register__P4498_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_register__P4498_locals:
    movs r0, #1
    ldr r1, _ldlit_84 ; control_EventHandler_register_inline__P9044_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_53
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.4498:
    @stackempty locals
    movs r0, #0
.final_0_107:
control_EventHandler_register__P4498_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(32,59): control.EventHandler.register.inline
    ;
    .object control_EventHandler_register_inline__P9044 "base/eventcontext.ts(32,59): control.EventHandler.register.inline"
control_EventHandler_register_inline__P9044_pre:
    .section code
    .balign 4
control_EventHandler_register_inline__P9044_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_EventHandler_register_inline__P9044_args@fn
control_EventHandler_register_inline__P9044_args:
    .section code
control_EventHandler_register_inline__P9044:
control_EventHandler_register_inline__P9044_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_register_inline__P9044_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_108      
.jmpz427:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall1__48
_proccall428:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_108:
.afterif_1_108:
.ret.9044:
    @stackempty locals
    movs r0, #0
.final_2_108:
control_EventHandler_register_inline__P9044_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(24,9): control.EventHandler.constructor
    ;
    .object control_EventHandler_constructor__P4500 "base/eventcontext.ts(24,9): control.EventHandler.constructor"
control_EventHandler_constructor__P4500_pre:
    .section code
    .balign 4
    .section code
control_EventHandler_constructor__P4500:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventHandler__C4497_validate_56
    mov lr, r7
control_EventHandler_constructor__P4500_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_constructor__P4500_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    movs r0, #0
.ret.4500:
    @stackempty locals
.final_0_109:
control_EventHandler_constructor__P4500_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(214,5): control.eventContext
    ;
    .object control_eventContext__P408 "base/eventcontext.ts(214,5): control.eventContext"
control_eventContext__P408_pre:
    .section code
    .balign 4
    .section code
control_eventContext__P408:
control_eventContext__P408_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_eventContext__P408_locals:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_110      
.jmpz429:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_110      
.condexprz_0_110:
    movs r0, #0
.condexprfin_1_110:
; jmp value (already in r0)
.ret.408:
    @stackempty locals
.final_2_110:
control_eventContext__P408_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(49,9): controller.ButtonEventHandlerState.constructor
    ;
    .object controller_ButtonEventHandlerState_constructor__P2163 "game/controllerbutton.ts(49,9): controller.ButtonEventHandlerState.constructor"
controller_ButtonEventHandlerState_constructor__P2163_pre:
    .section code
    .balign 4
    .section code
controller_ButtonEventHandlerState_constructor__P2163:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_52
    mov lr, r7
controller_ButtonEventHandlerState_constructor__P2163_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_ButtonEventHandlerState_constructor__P2163_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    movs r0, #0
.ret.2163:
    @stackempty locals
.final_0_111:
controller_ButtonEventHandlerState_constructor__P2163_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(67,9): controller.Button.handlerState
    ;
    .object controller_Button_handlerState__P4756 "game/controllerbutton.ts(67,9): controller.Button.handlerState"
controller_Button_handlerState__P4756_pre:
    .section code
    .balign 4
controller_Button_handlerState__P4756_args:
    cmp r4, #1
    bge controller_Button_handlerState__P4756_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_handlerState__P4756_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_handlerState__P4756:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_handlerState__P4756_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button_handlerState__P4756_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    bl game_currentScene__P2975
_proccall430:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #88]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9070:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.9070      
.jmpz431:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_52
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_112      
.jmpz432:
    ldr r0, [sp, locals@0]
    b .ret.4756      
.else_0_112:
.afterif_1_112:
.cont.9070:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.9070      
.brk.9070:
    movs r0, #0
    str r0, [sp, locals@1]
    movs r0, #0
.ret.4756:
    @stackempty locals
.final_2_112:
    add sp, #4*3 ; pop locals 3
controller_Button_handlerState__P4756_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(137,5): game.eventContext
    ;
    .object game_eventContext__P2978 "game/game.ts(137,5): game.eventContext"
game_eventContext__P2978_pre:
    .section code
    .balign 4
    .section code
game_eventContext__P2978:
game_eventContext__P2978_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_eventContext__P2978_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl game_init__P4980
_proccall433:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #4]
.ret.2978:
    @stackempty locals
.final_0_113:
game_eventContext__P2978_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(142,5): game.init
    ;
    .object game_init__P4980 "game/game.ts(142,5): game.init"
game_init__P4980_pre:
    .section code
    .balign 4
    .section code
game_init__P4980:
game_init__P4980_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_init__P4980_locals:
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_114      
.jmpz434:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_114      
.lazySkip_2_114:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
.lazy_1_114:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_114      
.jmpz435:
    ldr r0, _ldlit_85 ; scene_Scene__C2819_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    bl control_pushEventContext__P409
_proccall436:
    mov r3, r0
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_Scene_constructor__P2842
_proccall437:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #180
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_114:
.afterif_3_114:
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl scene_Scene_init__P2843
_proccall438:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4980:
    @stackempty locals
    movs r0, #0
.final_4_114:
game_init__P4980_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(128,9): scene.Scene.init
    ;
    .object scene_Scene_init__P2843 "game/scene.ts(128,9): scene.Scene.init"
scene_Scene_init__P2843_pre:
    .section code
    .balign 4
scene_Scene_init__P2843_args:
    cmp r4, #1
    bge scene_Scene_init__P2843_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_init__P2843_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_init__P2843:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2819_validate_10
    mov lr, r7
scene_Scene_init__P2843_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init__P2843_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_115      
.jmpz439:
    b .ret.2843      
    b .afterif_1_115      
.object PUSH
.balign 4
_ldlit_83:
 .word control_EventHandler__C4497_VT
_ldlit_84:
 .word control_EventHandler_register_inline__P9044_Lit
_ldlit_85:
 .word scene_Scene__C2819_VT
.object POP
.else_0_115:
.afterif_1_115:
    bl power_poke__P1911
_proccall440:
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_87 ; scene_Scene_init_inline__P9106_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #17
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall441:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_88 ; controller__moveSprites__P2110_Lit      
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall442:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_89 ; scene_Scene_init_inline__P9130_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #31
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall443:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_90 ; scene_Scene_init_inline__P9143_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #111
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall444:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_91 ; scene_Scene_init_inline__P9164_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #181
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall445:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_92 ; scene_Scene_init_inline__P9172_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall446:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_93 ; control___screen_update__P1971_Lit      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall447:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    bl multiplayer_initServer__P3364
_proccall448:
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_94 ; scene_Scene_init_inline__P9202_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall449:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2843:
    @stackempty locals
    movs r0, #0
.final_2_115:
scene_Scene_init__P2843_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(135,73): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P9106 "game/scene.ts(135,73): scene.Scene.init.inline"
scene_Scene_init_inline__P9106_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P9106_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P9106_args@fn
scene_Scene_init_inline__P9106_args:
    .section code
scene_Scene_init_inline__P9106:
scene_Scene_init_inline__P9106_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P9106_locals:
    ldr r0, [r5, #4*3]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #92]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    bl _inst_control_EventContext__C395_validate_55
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller___update__P2142
_proccall450:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.9106:
    @stackempty locals
    movs r0, #0
.final_0_116:
scene_Scene_init_inline__P9106_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(144,70): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P9130 "game/scene.ts(144,70): scene.Scene.init.inline"
scene_Scene_init_inline__P9130_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P9130_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P9130_args@fn
scene_Scene_init_inline__P9130_args:
    .section code
scene_Scene_init_inline__P9130:
scene_Scene_init_inline__P9130_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P9130_locals:
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #52
    bl _classCall_PhysicsEngine__C2487_16
_proccall451:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.9130:
    @stackempty locals
    movs r0, #0
.final_0_117:
scene_Scene_init_inline__P9130_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(153,80): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P9143 "game/scene.ts(153,80): scene.Scene.init.inline"
scene_Scene_init_inline__P9143_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P9143_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P9143_args@fn
scene_Scene_init_inline__P9143_args:
    .section code
scene_Scene_init_inline__P9143:
scene_Scene_init_inline__P9143_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Scene_init_inline__P9143_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    bl scene_Camera_update__P2774
_proccall452:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #16]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.9154:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.9154      
.jmpz453:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r1, #4
    bl _ifacecall3__57
_proccall454:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.9154:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.9154      
.brk.9154:
    movs r0, #0
    str r0, [sp, locals@2]
.ret.9143:
    @stackempty locals
    movs r0, #0
.final_0_118:
    add sp, #4*4 ; pop locals 4
scene_Scene_init_inline__P9143_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(164,77): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P9164 "game/scene.ts(164,77): scene.Scene.init.inline"
scene_Scene_init_inline__P9164_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P9164_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P9164_args@fn
scene_Scene_init_inline__P9164_args:
    .section code
scene_Scene_init_inline__P9164:
scene_Scene_init_inline__P9164_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P9164_locals:
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl scene_Scene_render__P2848_nochk
_proccall455:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.9164:
    @stackempty locals
    movs r0, #0
.final_0_119:
scene_Scene_init_inline__P9164_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(169,81): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P9172 "game/scene.ts(169,81): scene.Scene.init.inline"
scene_Scene_init_inline__P9172_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P9172_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P9172_args@fn
scene_Scene_init_inline__P9172_args:
    .section code
scene_Scene_init_inline__P9172:
scene_Scene_init_inline__P9172_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P9172_locals:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_120      
.jmpz456:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_120      
.lazySkip_2_120:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #188
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_1_120:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz457
    b .else_0_120      
.object PUSH
.balign 4
_ldlit_87:
 .word scene_Scene_init_inline__P9106_Lit
_ldlit_88:
 .word controller__moveSprites__P2110_Lit
_ldlit_89:
 .word scene_Scene_init_inline__P9130_Lit
_ldlit_90:
 .word scene_Scene_init_inline__P9143_Lit
_ldlit_91:
 .word scene_Scene_init_inline__P9164_Lit
_ldlit_92:
 .word scene_Scene_init_inline__P9172_Lit
_ldlit_93:
 .word control___screen_update__P1971_Lit
_ldlit_94:
 .word scene_Scene_init_inline__P9202_Lit
.object POP
.jmpz457:
    movs r0, #188
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_96 ; _str43      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    push {r1}
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_60
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_120:
.afterif_3_120:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_120      
.jmpz459:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #28]
    push {r0} ; the one arg
    movs r1, #48
    bl _classCall_PhysicsEngine__C2487_16
_proccall460:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_120:
.afterif_5_120:
    bl game_consoleOverlay_draw__P3103
_proccall461:
    @stackempty locals
    bl power_checkDeepSleep__P1912
_proccall462:
    @stackempty locals
.ret.9172:
    @stackempty locals
    movs r0, #0
.final_6_120:
scene_Scene_init_inline__P9172_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(186,40): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P9202 "game/scene.ts(186,40): scene.Scene.init.inline"
scene_Scene_init_inline__P9202_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P9202_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P9202_args@fn
scene_Scene_init_inline__P9202_args:
    cmp r4, #1
    bge scene_Scene_init_inline__P9202_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_init_inline__P9202_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_init_inline__P9202:
scene_Scene_init_inline__P9202_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P9202_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_60
    add sp, #4*2 ; pop locals 2
.ret.9202:
    @stackempty locals
    movs r0, #0
.final_0_121:
scene_Scene_init_inline__P9202_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(30,5): multiplayer.initServer
    ;
    .object multiplayer_initServer__P3364 "game/multiplayer.ts(30,5): multiplayer.initServer"
multiplayer_initServer__P3364_pre:
    .section code
    .balign 4
    .section code
multiplayer_initServer__P3364:
multiplayer_initServer__P3364_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
multiplayer_initServer__P3364_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl multiplayer::getOrigin
    ldr r1, _ldlit_97 ; _str85      
    bl _cmp_eqq
    beq .else_0_122      
.jmpz464:
    bl game_eventContext__P2978
_proccall465:
    mov r3, r0
    ldr r0, _ldlit_98 ; multiplayer_initServer_inline__P9210_Lit      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall466:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.9217:
    ldr r0, [sp, locals@0]
    movs r1, #9
    bl _cmp_le
    beq .brk.9217      
.jmpz467:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl multiplayer_registerPlayerConnectionListeners__P5428
_proccall468:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.9217:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.9217      
.brk.9217:
.else_0_122:
.afterif_1_122:
.ret.3364:
    @stackempty locals
    movs r0, #0
.final_2_122:
    add sp, #4*1 ; pop locals 1
multiplayer_initServer__P3364_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(32,94): multiplayer.initServer.inline
    ;
    .object multiplayer_initServer_inline__P9210 "game/multiplayer.ts(32,94): multiplayer.initServer.inline"
multiplayer_initServer_inline__P9210_pre:
    .section code
    .balign 4
multiplayer_initServer_inline__P9210_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word multiplayer_initServer_inline__P9210_args@fn
multiplayer_initServer_inline__P9210_args:
    .section code
multiplayer_initServer_inline__P9210:
multiplayer_initServer_inline__P9210_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_initServer_inline__P9210_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl multiplayer::getOrigin
    ldr r1, _ldlit_97 ; _str85      
    bl _cmp_eqq
    beq .else_0_123      
.jmpz469:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl multiplayer::postImage
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_123:
.afterif_1_123:
.ret.9210:
    @stackempty locals
    movs r0, #0
.final_2_123:
multiplayer_initServer_inline__P9210_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(44,5): multiplayer.registerPlayerConnectionListeners
    ;
    .object multiplayer_registerPlayerConnectionListeners__P5428 "game/multiplayer.ts(44,5): multiplayer.registerPlayerConnectionListeners"
multiplayer_registerPlayerConnectionListeners__P5428_pre:
    .section code
    .balign 4
    .section code
multiplayer_registerPlayerConnectionListeners__P5428:
multiplayer_registerPlayerConnectionListeners__P5428_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_registerPlayerConnectionListeners__P5428_locals:
    movs r0, #1
    ldr r1, _ldlit_99 ; multiplayer_registerPlayerConnectionListeners_inline__P9227_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #25
    lsls r0, r0, #8
    adds r0, #83
    push {r0} ; proc-arg
    bl control_onEvent__P391
_proccall470:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_100 ; multiplayer_registerPlayerConnectionListeners_inline__P9233_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #25
    lsls r0, r0, #8
    adds r0, #85
    push {r0} ; proc-arg
    bl control_onEvent__P391
_proccall471:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.5428:
    @stackempty locals
    movs r0, #0
.final_0_124:
multiplayer_registerPlayerConnectionListeners__P5428_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(48,13): multiplayer.registerPlayerConnectionListeners.inline
    ;
    .object multiplayer_registerPlayerConnectionListeners_inline__P9227 "game/multiplayer.ts(48,13): multiplayer.registerPlayerConnectionListeners.inline"
multiplayer_registerPlayerConnectionListeners_inline__P9227_pre:
    .section code
    .balign 4
multiplayer_registerPlayerConnectionListeners_inline__P9227_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word multiplayer_registerPlayerConnectionListeners_inline__P9227_args@fn
multiplayer_registerPlayerConnectionListeners_inline__P9227_args:
    .section code
multiplayer_registerPlayerConnectionListeners_inline__P9227:
multiplayer_registerPlayerConnectionListeners_inline__P9227_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_registerPlayerConnectionListeners_inline__P9227_locals:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl multiplayer_receiveConnectionChangedEvent__P5429
_proccall472:
    add sp, #4*2 ; pop locals 2
.ret.9227:
    @stackempty locals
    movs r0, #0
.final_0_125:
multiplayer_registerPlayerConnectionListeners_inline__P9227_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(53,13): multiplayer.registerPlayerConnectionListeners.inline
    ;
    .object multiplayer_registerPlayerConnectionListeners_inline__P9233 "game/multiplayer.ts(53,13): multiplayer.registerPlayerConnectionListeners.inline"
multiplayer_registerPlayerConnectionListeners_inline__P9233_pre:
    .section code
    .balign 4
multiplayer_registerPlayerConnectionListeners_inline__P9233_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word multiplayer_registerPlayerConnectionListeners_inline__P9233_args@fn
multiplayer_registerPlayerConnectionListeners_inline__P9233_args:
    .section code
multiplayer_registerPlayerConnectionListeners_inline__P9233:
multiplayer_registerPlayerConnectionListeners_inline__P9233_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_registerPlayerConnectionListeners_inline__P9233_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl multiplayer_receiveConnectionChangedEvent__P5429
_proccall473:
    add sp, #4*2 ; pop locals 2
.ret.9233:
    @stackempty locals
    movs r0, #0
.final_0_126:
multiplayer_registerPlayerConnectionListeners_inline__P9233_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(57,5): multiplayer.receiveConnectionChangedEvent
    ;
    .object multiplayer_receiveConnectionChangedEvent__P5429 "game/multiplayer.ts(57,5): multiplayer.receiveConnectionChangedEvent"
multiplayer_receiveConnectionChangedEvent__P5429_pre:
    .section code
    .balign 4
    .section code
multiplayer_receiveConnectionChangedEvent__P5429:
multiplayer_receiveConnectionChangedEvent__P5429_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
multiplayer_receiveConnectionChangedEvent__P5429_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz474
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_127      
.jmpz474:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz475
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_127      
.jmpz475:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz476
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_127      
.jmpz476:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz477
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_127      
.jmpz477:
    pop {r0} ; tmpref @1
    b .brk.9239      
.switch_0_127:
    movs r0, #200
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.9239      
.switch_1_127:
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.9239      
.switch_2_127:
    movs r0, #208
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.9239      
.switch_3_127:
    movs r0, #212
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@0]
    @stackempty locals
.brk.9239:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_127      
.jmpz478:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl controller_Controller_connected__P2133
_proccall479:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_127:
.afterif_5_127:
.ret.5429:
    @stackempty locals
    movs r0, #0
.final_6_127:
    add sp, #4*1 ; pop locals 1
multiplayer_receiveConnectionChangedEvent__P5429_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(255,9): controller.Controller.connected
    ;
    .object controller_Controller_connected__P2133 "game/controller.ts(255,9): controller.Controller.connected"
controller_Controller_connected__P2133_pre:
    .section code
    .balign 4
controller_Controller_connected__P2133_args:
    cmp r4, #2
    bge controller_Controller_connected__P2133_nochk
    push {lr}
    bl _expand_args_2_19
    bl controller_Controller_connected__P2133_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller_connected__P2133:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller_connected__P2133_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_connected__P2133_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_128      
.jmpz480:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_128      
.jmpz481:
    movs r0, #3
    b .condexprfin_2_128      
.condexprz_1_128:
    movs r0, #5
.condexprfin_2_128:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_128:
.afterif_3_128:
.ret.2133:
    @stackempty locals
    movs r0, #0
.final_4_128:
controller_Controller_connected__P2133_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_96:
 .word _str43
_ldlit_97:
 .word _str85
_ldlit_98:
 .word multiplayer_initServer_inline__P9210_Lit
_ldlit_99:
 .word multiplayer_registerPlayerConnectionListeners_inline__P9227_Lit
_ldlit_100:
 .word multiplayer_registerPlayerConnectionListeners_inline__P9233_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(83,9): controller.Controller.constructor
    ;
    .object controller_Controller_constructor__P2115 "game/controller.ts(83,9): controller.Controller.constructor"
controller_Controller_constructor__P2115_pre:
    .section code
    .balign 4
    .section code
controller_Controller_constructor__P2115:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller_constructor__P2115_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Controller_constructor__P2115_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_129      
.jmpz482:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    b .afterif_1_129      
.else_0_129:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #15
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9303:
    ldr r0, [sp, locals@1]
    movs r1, #15
    bl _cmp_lt
    beq .brk.9303      
.jmpz483:
    ldr r0, _ldlit_102 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall484:
    add sp, #4*3 ; pop locals 3
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.9303:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9303      
.brk.9303:
.afterif_1_129:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9320:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9320      
.jmpz485:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@0]
    bl _inst_controller_Button__C2166_validate_50
    str r1, [r0, #4]
    @stackempty locals
.cont.9320:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9320      
.brk.9320:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_addController__P4752
_proccall486:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.2115:
    @stackempty locals
.final_2_129:
    add sp, #4*3 ; pop locals 3
controller_Controller_constructor__P2115_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(41,5): controller.addController
    ;
    .object controller_addController__P4752 "game/controller.ts(41,5): controller.addController"
controller_addController__P4752_pre:
    .section code
    .balign 4
    .section code
controller_addController__P4752:
controller_addController__P4752_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_addController__P4752_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_130      
.jmpz487:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #16]
    @stackempty locals
.else_0_130:
.afterif_1_130:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_controller_Controller__C2111_validate_61
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4752:
    @stackempty locals
    movs r0, #0
.final_2_130:
controller_addController__P4752_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(48,5): controller._player1
    ;
    .object controller__player1__P2105 "game/controller.ts(48,5): controller._player1"
controller__player1__P2105_pre:
    .section code
    .balign 4
    .section code
controller__player1__P2105:
controller__player1__P2105_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__player1__P2105_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_131      
.jmpz488:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_131      
.lazySkip_2_131:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_131:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_131      
.jmpz489:
    ldr r0, _ldlit_103 ; controller_Controller__C2111_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #224
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #228
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #232
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Controller_constructor__P2115
_proccall490:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_0_131:
.afterif_3_131:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.2105:
    @stackempty locals
.final_4_131:
controller__player1__P2105_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function power/power.ts(37,5): power.checkDeepSleep
    ;
    .object power_checkDeepSleep__P1912 "power/power.ts(37,5): power.checkDeepSleep"
power_checkDeepSleep__P1912_pre:
    .section code
    .balign 4
    .section code
power_checkDeepSleep__P1912:
power_checkDeepSleep__P1912_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
power_checkDeepSleep__P1912_locals:
    bl power_init__P4611
_proccall491:
    @stackempty locals
    movs r0, #236
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_132      
.jmpz492:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_132      
.lazySkip_1_132:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_132:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_132      
.jmpz493:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_132      
.lazySkip_3_132:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_2_132:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_132      
.jmpz494:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_132      
.lazySkip_6_132:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_5_132:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_132      
.jmpz495:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_132      
.object PUSH
.balign 4
_ldlit_102:
 .word controller_Button__C2166_VT
_ldlit_103:
 .word controller_Controller__C2111_VT
.object POP
.lazySkip_8_132:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl control::isUSBInitialized
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_7_132:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_132      
.jmpz496:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::deepSleep
    @stackempty locals
.else_4_132:
.afterif_9_132:
.ret.1912:
    @stackempty locals
    movs r0, #0
.final_10_132:
    add sp, #4*2 ; pop locals 2
power_checkDeepSleep__P1912_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function power/power.ts(58,5): power.init
    ;
    .object power_init__P4611 "power/power.ts(58,5): power.init"
power_init__P4611_pre:
    .section code
    .balign 4
    .section code
power_init__P4611:
power_init__P4611_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
power_init__P4611_locals:
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_133      
.jmpz497:
    b .ret.4611      
.else_0_133:
.afterif_1_133:
    movs r0, #212
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getConfig
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #240
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_133      
.jmpz498:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_133      
.lazySkip_4_133:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, _ldlit_105 ; 600001      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_3_133:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_133      
.jmpz499:
    ldr r0, _ldlit_105 ; 600001      
    movs r1, #240
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_2_133:
.afterif_5_133:
.ret.4611:
    @stackempty locals
    movs r0, #0
.final_6_133:
power_init__P4611_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(45,5): game.consoleOverlay.draw
    ;
    .object game_consoleOverlay_draw__P3103 "game/console.ts(45,5): game.consoleOverlay.draw"
game_consoleOverlay_draw__P3103_pre:
    .section code
    .balign 4
    .section code
game_consoleOverlay_draw__P3103:
game_consoleOverlay_draw__P3103_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
game_consoleOverlay_draw__P3103_locals:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_134      
.jmpz500:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_134      
.lazySkip_2_134:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    bl scene_systemMenu_isVisible__P3084
_proccall501:
.lazy_1_134:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_134      
.jmpz502:
    b .ret.3103      
.else_0_134:
.afterif_3_134:
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall503:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_134      
.jmpz504:
    ldr r0, [sp, locals@0]
    b .condexprfin_5_134      
.condexprz_4_134:
    movs r0, #1
.condexprfin_5_134:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #5
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9441:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz505
    b .brk.9441      
.jmpz505:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_106 ; _str76      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_ge
    bne .jmpz506
    b .else_6_134      
.jmpz506:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_106 ; _str76      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_stringSplit__P122
_proccall507:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.9462:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz508
    b .brk.9462      
.jmpz508:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    movs r0, #248
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r0, #248
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r1, #98
    bl _ifacecall1_get_8
_proccall509:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    mov r1, r0
    movs r0, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imagePrint__P1968
_proccall510:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@8]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
.cont.9462:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.9462      
.brk.9462:
    movs r0, #0
    str r0, [sp, locals@6]
    b .afterif_7_134      
.else_6_134:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r1}
    movs r0, #9
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl helpers_imagePrint__P1968
_proccall511:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.afterif_7_134:
.cont.9441:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9441      
.brk.9441:
.ret.3103:
    @stackempty locals
    movs r0, #0
.final_8_134:
    add sp, #4*9 ; pop locals 9
game_consoleOverlay_draw__P3103_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_105:
 .word 600001
_ldlit_106:
 .word _str76
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(435,5): helpers.stringSplit
    ;
    .object helpers_stringSplit__P122 "base/pxt-helpers.ts(435,5): helpers.stringSplit"
helpers_stringSplit__P122_pre:
    .section code
    .balign 4
    .section code
helpers_stringSplit__P122:
helpers_stringSplit__P122_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_stringSplit__P122_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_135      
.jmpz512:
    ldr r0, _ldlit_108 ; 1073741825      
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_1_135      
.else_0_135:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_135      
.jmpz513:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_3_135      
.else_2_135:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_3_135:
.afterif_1_135:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_eq
    beq .else_4_135      
.jmpz514:
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_4_135:
.afterif_5_135:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_135      
.jmpz515:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_6_135:
.afterif_7_135:
    ldr r0, [sp, locals@2]
    movs r1, #1
    bl _cmp_eq
    beq .else_8_135      
.jmpz516:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P4428
_proccall517:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_9_135      
.jmpz518:
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_9_135:
.afterif_10_135:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_8_135:
.afterif_11_135:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.cont.9563:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@2]
    bl _cmp_neq
    beq .brk.9563      
.jmpz519:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P4428
_proccall520:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    movs r1, #1
    bl _cmp_lt
    beq .else_12_135      
.jmpz521:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_13_135      
.else_12_135:
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@3]
    bl _cmp_eq
    beq .else_14_135      
.jmpz522:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_15_135      
.else_14_135:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P119
_proccall523:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@1]
    bl _cmp_eq
    beq .else_16_135      
.jmpz524:
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_16_135:
.afterif_17_135:
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.afterif_15_135:
.afterif_13_135:
    b .cont.9563      
.brk.9563:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P119
_proccall525:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.122:
    @stackempty locals
.final_18_135:
    add sp, #4*9 ; pop locals 9
helpers_stringSplit__P122_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(385,5): helpers.stringSlice
    ;
    .object helpers_stringSlice__P119 "base/pxt-helpers.ts(385,5): helpers.stringSlice"
helpers_stringSlice__P119_pre:
    .section code
    .balign 4
    .section code
helpers_stringSlice__P119:
helpers_stringSlice__P119_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_stringSlice__P119_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_136      
.jmpz526:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall527:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_0_136:
.afterif_1_136:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_2_136      
.jmpz528:
    ldr r0, [sp, locals@0]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_3_136      
.else_2_136:
    ldr r0, [sp, args@2]
    movs r1, #6
    bl _cmp_eqq
    beq .else_4_136      
.jmpz529:
    movs r0, #1
    str r0, [sp, args@2]
    @stackempty locals
.else_4_136:
.afterif_5_136:
.afterif_3_136:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_6_136      
.jmpz530:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_6_136:
.afterif_7_136:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_62
    mov r7, sp
    str r7, [r6, #4]
    bl String_::substr
    add sp, #4*3 ; pop locals 3
.ret.119:
    @stackempty locals
.final_8_136:
    add sp, #4*1 ; pop locals 1
helpers_stringSlice__P119_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(481,5): helpers.splitMatch
    ;
    .object helpers_splitMatch__P4428 "base/pxt-helpers.ts(481,5): helpers.splitMatch"
helpers_splitMatch__P4428_pre:
    .section code
    .balign 4
    .section code
helpers_splitMatch__P4428:
helpers_splitMatch__P4428_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_splitMatch__P4428_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_0_137      
.jmpz531:
    movs r0, #1
    negs r0, r0
    b .ret.4428      
.else_0_137:
.afterif_1_137:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9655:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9655      
.jmpz532:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_2_137      
.jmpz533:
    movs r0, #1
    negs r0, r0
    b .ret.4428      
.else_2_137:
.afterif_3_137:
.cont.9655:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9655      
.brk.9655:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
.ret.4428:
    @stackempty locals
.final_4_137:
    add sp, #4*3 ; pop locals 3
helpers_splitMatch__P4428_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_108:
 .word 1073741825
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(396,5): scene.systemMenu.isVisible
    ;
    .object scene_systemMenu_isVisible__P3084 "game/systemmenu.ts(396,5): scene.systemMenu.isVisible"
scene_systemMenu_isVisible__P3084_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_isVisible__P3084:
scene_systemMenu_isVisible__P3084_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_isVisible__P3084_locals:
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3084:
    @stackempty locals
.final_0_138:
scene_systemMenu_isVisible__P3084_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(16,5): PhysicsEngine.draw
    ;
    .object PhysicsEngine_draw__P2492 "game/physics.ts(16,5): PhysicsEngine.draw"
PhysicsEngine_draw__P2492_pre:
    .section code
    .balign 4
PhysicsEngine_draw__P2492_args:
    cmp r4, #1
    bge PhysicsEngine_draw__P2492_nochk
    push {lr}
    bl _expand_args_1_12
    bl PhysicsEngine_draw__P2492_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
PhysicsEngine_draw__P2492:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2487_validate_18
    mov lr, r7
PhysicsEngine_draw__P2492_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_draw__P2492_locals:
.ret.2492:
    @stackempty locals
    movs r0, #0
.final_0_139:
PhysicsEngine_draw__P2492_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(228,9): scene.Scene.render
    ;
    .object scene_Scene_render__P2848 "game/scene.ts(228,9): scene.Scene.render"
scene_Scene_render__P2848_pre:
    .section code
    .balign 4
scene_Scene_render__P2848_args:
    cmp r4, #1
    bge scene_Scene_render__P2848_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_render__P2848_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_render__P2848:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2819_validate_10
    mov lr, r7
scene_Scene_render__P2848_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Scene_render__P2848_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_140      
.jmpz534:
    b .ret.2848      
.else_0_140:
.afterif_1_140:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #5
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_140      
.jmpz535:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_140      
.lazySkip_4_140:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
.lazy_3_140:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_140      
.jmpz536:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    push {r0} ; the one arg
    bl scene_Scene_render__P2848
_proccall537:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_5_140      
.else_2_140:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl scene_Background_draw__P2654
_proccall538:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_5_140:
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_140      
.jmpz539:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r3, r0
    ldr r0, _ldlit_110 ; scene_Scene_render_inline__P9712_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySort__P105
_proccall540:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    movs r1, #3
    negs r1, r1
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_6_140:
.afterif_7_140:
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9737:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.9737      
.jmpz541:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #1
    bl _ifacecall2__63
_proccall542:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.9737:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.9737      
.brk.9737:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    movs r1, #9
    negs r1, r1
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2848:
    @stackempty locals
    movs r0, #0
.final_8_140:
    add sp, #4*3 ; pop locals 3
scene_Scene_render__P2848_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(242,38): scene.Scene.render.inline
    ;
    .object scene_Scene_render_inline__P9712 "game/scene.ts(242,38): scene.Scene.render.inline"
scene_Scene_render_inline__P9712_pre:
    .section code
    .balign 4
scene_Scene_render_inline__P9712_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_render_inline__P9712_args@fn
scene_Scene_render_inline__P9712_args:
    cmp r4, #2
    bge scene_Scene_render_inline__P9712_nochk
    push {lr}
    bl _expand_args_2_19
    bl scene_Scene_render_inline__P9712_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Scene_render_inline__P9712:
scene_Scene_render_inline__P9712_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_render_inline__P9712_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #127
    bl _ifacecall1_get_8
_proccall544:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #127
    bl _ifacecall1_get_8
_proccall545:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_141      
.jmpz543:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_141      
.lazySkip_1_141:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #172
    bl _ifacecall1_get_8
_proccall546:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #172
    bl _ifacecall1_get_8
_proccall547:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.lazy_0_141:
; jmp value (already in r0)
.ret.9712:
    @stackempty locals
.final_2_141:
scene_Scene_render_inline__P9712_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(208,5): helpers.arraySort
    ;
    .object helpers_arraySort__P105 "base/pxt-helpers.ts(208,5): helpers.arraySort"
helpers_arraySort__P105_pre:
    .section code
    .balign 4
    .section code
helpers_arraySort__P105:
helpers_arraySort__P105_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arraySort__P105_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_142      
.jmpz548:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_142      
.lazySkip_2_142:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_142:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_142      
.jmpz549:
    ldr r0, _ldlit_111 ; helpers_arraySort_inline__P9757_Lit      
    str r0, [sp, args@1]
    @stackempty locals
.else_0_142:
.afterif_3_142:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_sortHelper__P4426
_proccall550:
    add sp, #4*2 ; pop locals 2
.ret.105:
    @stackempty locals
.final_4_142:
helpers_arraySort__P105_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(210,26): helpers.arraySort.inline
    ;
    .object helpers_arraySort_inline__P9757 "base/pxt-helpers.ts(210,26): helpers.arraySort.inline"
helpers_arraySort_inline__P9757_pre:
    .section code
    .balign 4
helpers_arraySort_inline__P9757_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word helpers_arraySort_inline__P9757_args@fn
helpers_arraySort_inline__P9757_args:
    cmp r4, #2
    bge helpers_arraySort_inline__P9757_nochk
    push {lr}
    bl _expand_args_2_19
    bl helpers_arraySort_inline__P9757_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
helpers_arraySort_inline__P9757:
helpers_arraySort_inline__P9757_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySort_inline__P9757_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_143      
.jmpz551:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_143      
.lazySkip_2_143:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
.lazy_1_143:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_143      
.jmpz552:
    movs r0, #1
    b .ret.9757      
    b .afterif_3_143      
.else_0_143:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_143      
.jmpz553:
    movs r0, #3
    b .ret.9757      
    b .afterif_5_143      
.else_4_143:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_143      
.jmpz554:
    movs r0, #1
    negs r0, r0
    b .ret.9757      
.else_6_143:
.afterif_7_143:
.afterif_5_143:
.afterif_3_143:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_143      
.jmpz555:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_143      
.lazySkip_10_143:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
.lazy_9_143:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_143      
.jmpz556:
    movs r0, #1
    b .ret.9757      
    b .afterif_11_143      
.else_8_143:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_143      
.jmpz557:
    movs r0, #3
    b .ret.9757      
    b .afterif_13_143      
.else_12_143:
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz558
    b .else_14_143      
.object PUSH
.balign 4
_ldlit_110:
 .word scene_Scene_render_inline__P9712_Lit
_ldlit_111:
 .word helpers_arraySort_inline__P9757_Lit
.object POP
.jmpz558:
    movs r0, #1
    negs r0, r0
    b .ret.9757      
.else_14_143:
.afterif_15_143:
.afterif_13_143:
.afterif_11_143:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_64
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_64
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.9757:
    @stackempty locals
.final_16_143:
    add sp, #4*4 ; pop locals 4
helpers_arraySort_inline__P9757_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(192,5): helpers.sortHelper
    ;
    .object helpers_sortHelper__P4426 "base/pxt-helpers.ts(192,5): helpers.sortHelper"
helpers_sortHelper__P4426_pre:
    .section code
    .balign 4
    .section code
helpers_sortHelper__P4426:
helpers_sortHelper__P4426_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_sortHelper__P4426_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_144      
.jmpz559:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_144      
.lazySkip_2_144:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_144:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_144      
.jmpz560:
    ldr r0, [sp, args@0]
    b .ret.4426      
.else_0_144:
.afterif_3_144:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9819:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9819      
.jmpz561:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9827:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9827      
.jmpz562:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_35
    add sp, #4*3 ; pop locals 3
    movs r1, #1
    bl _cmp_gt
    beq .else_4_144      
.jmpz563:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_swap__P4425
_proccall565:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_144:
.afterif_5_144:
.cont.9827:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9827      
.brk.9827:
.cont.9819:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9819      
.brk.9819:
    ldr r0, [sp, args@0]
.ret.4426:
    @stackempty locals
.final_6_144:
    add sp, #4*3 ; pop locals 3
helpers_sortHelper__P4426_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(186,5): helpers.swap
    ;
    .object helpers_swap__P4425 "base/pxt-helpers.ts(186,5): helpers.swap"
helpers_swap__P4425_pre:
    .section code
    .balign 4
    .section code
helpers_swap__P4425:
helpers_swap__P4425_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_swap__P4425_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4425:
    @stackempty locals
    movs r0, #0
.final_0_145:
    add sp, #4*1 ; pop locals 1
helpers_swap__P4425_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(49,9): scene.Background.draw
    ;
    .object scene_Background_draw__P2654 "game/background.ts(49,9): scene.Background.draw"
scene_Background_draw__P2654_pre:
    .section code
    .balign 4
scene_Background_draw__P2654_args:
    cmp r4, #1
    bge scene_Background_draw__P2654_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Background_draw__P2654_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Background_draw__P2654:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Background__C2645_validate_65
    mov lr, r7
scene_Background_draw__P2654_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Background_draw__P2654_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::fill
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_146      
.jmpz566:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_66
    movs r2, #0
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_146:
.afterif_1_146:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_146      
.jmpz567:
    movs r0, #1
    ldr r1, _ldlit_113 ; scene_Background_draw_inline__P9881_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall568:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_146:
.afterif_3_146:
.ret.2654:
    @stackempty locals
    movs r0, #0
.final_4_146:
scene_Background_draw__P2654_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(54,38): scene.Background.draw.inline
    ;
    .object scene_Background_draw_inline__P9881 "game/background.ts(54,38): scene.Background.draw.inline"
scene_Background_draw_inline__P9881_pre:
    .section code
    .balign 4
scene_Background_draw_inline__P9881_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Background_draw_inline__P9881_args@fn
scene_Background_draw_inline__P9881_args:
    cmp r4, #1
    bge scene_Background_draw_inline__P9881_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Background_draw_inline__P9881_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Background_draw_inline__P9881:
scene_Background_draw_inline__P9881_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Background_draw_inline__P9881_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_scene_BackgroundLayer__C2655_validate_68
    ldr r0, [r0, #4]
    mov r1, r0
    movs r0, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_scene_BackgroundLayer__C2655_validate_68
    ldr r0, [r0, #4]
    mov r1, r0
    movs r0, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_BackgroundLayer_draw__P2663
_proccall569:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.9881:
    @stackempty locals
    movs r0, #0
.final_0_147:
    add sp, #4*2 ; pop locals 2
scene_Background_draw_inline__P9881_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(100,9): scene.BackgroundLayer.draw
    ;
    .object scene_BackgroundLayer_draw__P2663 "game/background.ts(100,9): scene.BackgroundLayer.draw"
scene_BackgroundLayer_draw__P2663_pre:
    .section code
    .balign 4
scene_BackgroundLayer_draw__P2663_args:
    cmp r4, #3
    bge scene_BackgroundLayer_draw__P2663_nochk
    push {lr}
    bl _expand_args_3_14
    bl scene_BackgroundLayer_draw__P2663_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
scene_BackgroundLayer_draw__P2663:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_BackgroundLayer__C2655_validate_68
    mov lr, r7
scene_BackgroundLayer_draw__P2663_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_BackgroundLayer_draw__P2663_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_148      
.jmpz570:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_148      
.lazySkip_2_148:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_148:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_148      
.jmpz571:
    b .ret.2663      
.else_0_148:
.afterif_3_148:
    movs r0, #1
    ldr r1, [sp, args@1]
    bl _numops_subs
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    ldr r1, [sp, args@2]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz572
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_148      
.jmpz572:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz573
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_148      
.jmpz573:
    pop {r0} ; tmpref @1
    b .brk.9937      
.switch_4_148:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    b .brk.9937      
.switch_5_148:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
.brk.9937:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #9
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz574
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_148      
.jmpz574:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz575
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_148      
.jmpz575:
    pop {r0} ; tmpref @1
    b .brk.9956      
.switch_6_148:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    b .brk.9956      
.switch_7_148:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
.brk.9956:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _cmp_lt
    beq .else_8_148      
.jmpz576:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
.else_8_148:
.afterif_9_148:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_lt
    bne .jmpz577
    b .else_10_148      
.object PUSH
.balign 4
_ldlit_113:
 .word scene_Background_draw_inline__P9881_Lit
.object POP
.jmpz577:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
.else_10_148:
.afterif_11_148:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.cont.10003:
    ldr r0, [sp, locals@6]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    bne .jmpz578
    b .brk.10003      
.jmpz578:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@7]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall579:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@4]
    str r0, [sp, locals@10]
    @stackempty locals
.cont.10021:
    ldr r0, [sp, locals@9]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.10021      
.jmpz580:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@11]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@10]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall581:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_69
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, locals@10]
    ldr r1, [sp, locals@12]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_12_148      
.jmpz582:
    ldr r0, [sp, locals@12]
    b .condexprfin_13_148      
.condexprz_12_148:
    ldr r0, [sp, locals@0]
.condexprfin_13_148:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@9]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    b .cont.10021      
.brk.10021:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@8]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_14_148      
.jmpz583:
    ldr r0, [sp, locals@8]
    b .condexprfin_15_148      
.condexprz_14_148:
    ldr r0, [sp, locals@1]
.condexprfin_15_148:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@6]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@6]
    @stackempty locals
    b .cont.10003      
.brk.10003:
.ret.2663:
    @stackempty locals
    movs r0, #0
.final_16_148:
    add sp, #4*13 ; pop locals 13
scene_BackgroundLayer_draw__P2663_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(84,9): scene.Camera.update
    ;
    .object scene_Camera_update__P2774 "game/camera.ts(84,9): scene.Camera.update"
scene_Camera_update__P2774_pre:
    .section code
    .balign 4
scene_Camera_update__P2774_args:
    cmp r4, #1
    bge scene_Camera_update__P2774_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_update__P2774_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_update__P2774:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_update__P2774_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Camera_update__P2774_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_149      
.jmpz584:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_x__P2330
_proccall585:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_y__P2332
_proccall586:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_x__P2330
_proccall587:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_Camera_offsetX__P2763_nochk
_proccall588:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_y__P2332
_proccall589:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_Camera_offsetY__P2765_nochk
_proccall590:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_149:
.afterif_1_149:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    movs r1, #0
    bl _cmp_neqq
    bne .jmpz591
    b .else_2_149      
.jmpz591:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_ge
    add sp, #4*2 ; pop locals 2
    beq .else_3_149      
.jmpz592:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #32]
    @stackempty locals
    b .afterif_4_149      
.else_3_149:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, _ldlit_115 ; _dbl42      
    bl _cmp_ge
    beq .else_5_149      
.jmpz593:
    movs r0, #3
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall594:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
.else_5_149:
.afterif_6_149:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::random
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::random
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #12]
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_4_149:
.else_2_149:
.afterif_7_149:
.ret.2774:
    @stackempty locals
    movs r0, #0
.final_8_149:
    add sp, #4*6 ; pop locals 6
scene_Camera_update__P2774_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(40,9): scene.Camera.offsetY
    ;
    .object scene_Camera_offsetY__P2765 "game/camera.ts(40,9): scene.Camera.offsetY"
scene_Camera_offsetY__P2765_pre:
    .section code
    .balign 4
scene_Camera_offsetY__P2765_args:
    cmp r4, #2
    bge scene_Camera_offsetY__P2765_nochk
    push {lr}
    bl _expand_args_2_19
    bl scene_Camera_offsetY__P2765_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Camera_offsetY__P2765:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_offsetY__P2765_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_Camera_offsetY__P2765_locals:
    bl game_currentScene__P2975
_proccall595:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_150      
.jmpz596:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_150      
.lazySkip_2_150:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl tiles_TileMap_enabled__P2723
_proccall597:
    add sp, #4*1 ; pop locals 1
.lazy_1_150:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_150      
.jmpz598:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMap_offsetY__P2718
_proccall599:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_150      
.else_0_150:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_150:
.ret.2765:
    @stackempty locals
    movs r0, #0
.final_4_150:
    add sp, #4*1 ; pop locals 1
scene_Camera_offsetY__P2765_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(330,9): tiles.TileMap.offsetY
    ;
    .object tiles_TileMap_offsetY__P2718 "game/tilemap.ts(330,9): tiles.TileMap.offsetY"
tiles_TileMap_offsetY__P2718_pre:
    .section code
    .balign 4
tiles_TileMap_offsetY__P2718_args:
    cmp r4, #2
    bge tiles_TileMap_offsetY__P2718_nochk
    push {lr}
    bl _expand_args_2_19
    bl tiles_TileMap_offsetY__P2718_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_offsetY__P2718:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_offsetY__P2718_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_offsetY__P2718_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaHeight__P2720_nochk
_proccall600:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall601:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall602:
    add sp, #4*3 ; pop locals 3
.ret.2718:
    @stackempty locals
.final_0_151:
tiles_TileMap_offsetY__P2718_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(338,9): tiles.TileMap.areaHeight
    ;
    .object tiles_TileMap_areaHeight__P2720 "game/tilemap.ts(338,9): tiles.TileMap.areaHeight"
tiles_TileMap_areaHeight__P2720_pre:
    .section code
    .balign 4
tiles_TileMap_areaHeight__P2720_args:
    cmp r4, #1
    bge tiles_TileMap_areaHeight__P2720_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_areaHeight__P2720_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_areaHeight__P2720:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_areaHeight__P2720_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_areaHeight__P2720_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_152      
.jmpz603:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_152      
.condexprz_0_152:
    movs r0, #1
.condexprfin_1_152:
; jmp value (already in r0)
.ret.2720:
    @stackempty locals
.final_2_152:
tiles_TileMap_areaHeight__P2720_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(311,9): tiles.TileMap.scale
    ;
    .object tiles_TileMap_scale__P2714 "game/tilemap.ts(311,9): tiles.TileMap.scale"
tiles_TileMap_scale__P2714_pre:
    .section code
    .balign 4
tiles_TileMap_scale__P2714_args:
    cmp r4, #1
    bge tiles_TileMap_scale__P2714_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_scale__P2714_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_scale__P2714:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_scale__P2714_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_scale__P2714_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2714:
    @stackempty locals
.final_0_153:
tiles_TileMap_scale__P2714_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(219,9): tiles.TileMapData.height
    ;
    .object tiles_TileMapData_height__P2696 "game/tilemap.ts(219,9): tiles.TileMapData.height"
tiles_TileMapData_height__P2696_pre:
    .section code
    .balign 4
tiles_TileMapData_height__P2696_args:
    cmp r4, #1
    bge tiles_TileMapData_height__P2696_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMapData_height__P2696_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMapData_height__P2696:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2693_validate_71
    mov lr, r7
tiles_TileMapData_height__P2696_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_height__P2696_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
.ret.2696:
    @stackempty locals
.final_0_154:
tiles_TileMapData_height__P2696_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(352,9): tiles.TileMap.enabled
    ;
    .object tiles_TileMap_enabled__P2723 "game/tilemap.ts(352,9): tiles.TileMap.enabled"
tiles_TileMap_enabled__P2723_pre:
    .section code
    .balign 4
tiles_TileMap_enabled__P2723_args:
    cmp r4, #1
    bge tiles_TileMap_enabled__P2723_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_enabled__P2723_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_enabled__P2723:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_enabled__P2723_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_enabled__P2723_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2723:
    @stackempty locals
.final_0_155:
tiles_TileMap_enabled__P2723_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(37,9): scene.Camera.offsetY
    ;
    .object scene_Camera_offsetY__P2764 "game/camera.ts(37,9): scene.Camera.offsetY"
scene_Camera_offsetY__P2764_pre:
    .section code
    .balign 4
scene_Camera_offsetY__P2764_args:
    cmp r4, #1
    bge scene_Camera_offsetY__P2764_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_offsetY__P2764_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_offsetY__P2764:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_offsetY__P2764_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_offsetY__P2764_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2764:
    @stackempty locals
.final_0_156:
scene_Camera_offsetY__P2764_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(29,9): scene.Camera.offsetX
    ;
    .object scene_Camera_offsetX__P2763 "game/camera.ts(29,9): scene.Camera.offsetX"
scene_Camera_offsetX__P2763_pre:
    .section code
    .balign 4
scene_Camera_offsetX__P2763_args:
    cmp r4, #2
    bge scene_Camera_offsetX__P2763_nochk
    push {lr}
    bl _expand_args_2_19
    bl scene_Camera_offsetX__P2763_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_115:
 .word _dbl42
.object POP
    .section code
scene_Camera_offsetX__P2763:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_offsetX__P2763_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_Camera_offsetX__P2763_locals:
    bl game_currentScene__P2975
_proccall604:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_157      
.jmpz605:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_157      
.lazySkip_2_157:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl tiles_TileMap_enabled__P2723
_proccall606:
    add sp, #4*1 ; pop locals 1
.lazy_1_157:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_157      
.jmpz607:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMap_offsetX__P2717
_proccall608:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_157      
.else_0_157:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_157:
.ret.2763:
    @stackempty locals
    movs r0, #0
.final_4_157:
    add sp, #4*1 ; pop locals 1
scene_Camera_offsetX__P2763_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(326,9): tiles.TileMap.offsetX
    ;
    .object tiles_TileMap_offsetX__P2717 "game/tilemap.ts(326,9): tiles.TileMap.offsetX"
tiles_TileMap_offsetX__P2717_pre:
    .section code
    .balign 4
tiles_TileMap_offsetX__P2717_args:
    cmp r4, #2
    bge tiles_TileMap_offsetX__P2717_nochk
    push {lr}
    bl _expand_args_2_19
    bl tiles_TileMap_offsetX__P2717_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_offsetX__P2717:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_offsetX__P2717_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_offsetX__P2717_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaWidth__P2719_nochk
_proccall609:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall610:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall611:
    add sp, #4*3 ; pop locals 3
.ret.2717:
    @stackempty locals
.final_0_158:
tiles_TileMap_offsetX__P2717_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(334,9): tiles.TileMap.areaWidth
    ;
    .object tiles_TileMap_areaWidth__P2719 "game/tilemap.ts(334,9): tiles.TileMap.areaWidth"
tiles_TileMap_areaWidth__P2719_pre:
    .section code
    .balign 4
tiles_TileMap_areaWidth__P2719_args:
    cmp r4, #1
    bge tiles_TileMap_areaWidth__P2719_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_areaWidth__P2719_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_areaWidth__P2719:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_areaWidth__P2719_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_areaWidth__P2719_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_159      
.jmpz612:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_159      
.condexprz_0_159:
    movs r0, #1
.condexprfin_1_159:
; jmp value (already in r0)
.ret.2719:
    @stackempty locals
.final_2_159:
tiles_TileMap_areaWidth__P2719_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(215,9): tiles.TileMapData.width
    ;
    .object tiles_TileMapData_width__P2695 "game/tilemap.ts(215,9): tiles.TileMapData.width"
tiles_TileMapData_width__P2695_pre:
    .section code
    .balign 4
tiles_TileMapData_width__P2695_args:
    cmp r4, #1
    bge tiles_TileMapData_width__P2695_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMapData_width__P2695_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMapData_width__P2695:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2693_validate_71
    mov lr, r7
tiles_TileMapData_width__P2695_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_width__P2695_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
.ret.2695:
    @stackempty locals
.final_0_160:
tiles_TileMapData_width__P2695_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(26,9): scene.Camera.offsetX
    ;
    .object scene_Camera_offsetX__P2762 "game/camera.ts(26,9): scene.Camera.offsetX"
scene_Camera_offsetX__P2762_pre:
    .section code
    .balign 4
scene_Camera_offsetX__P2762_args:
    cmp r4, #1
    bge scene_Camera_offsetX__P2762_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_offsetX__P2762_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_offsetX__P2762:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_offsetX__P2762_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_offsetX__P2762_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2762:
    @stackempty locals
.final_0_161:
scene_Camera_offsetX__P2762_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(19,5): PhysicsEngine.move
    ;
    .object PhysicsEngine_move__P2493 "game/physics.ts(19,5): PhysicsEngine.move"
PhysicsEngine_move__P2493_pre:
    .section code
    .balign 4
PhysicsEngine_move__P2493_args:
    cmp r4, #2
    bge PhysicsEngine_move__P2493_nochk
    push {lr}
    bl _expand_args_2_19
    bl PhysicsEngine_move__P2493_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
PhysicsEngine_move__P2493:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2487_validate_18
    mov lr, r7
PhysicsEngine_move__P2493_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_move__P2493_locals:
.ret.2493:
    @stackempty locals
    movs r0, #0
.final_0_162:
PhysicsEngine_move__P2493_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(68,5): controller._moveSprites
    ;
    .object controller__moveSprites__P2110 "game/controller.ts(68,5): controller._moveSprites"
controller__moveSprites__P2110_pre:
    .section code
    .balign 4
controller__moveSprites__P2110_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller__moveSprites__P2110_args@fn
controller__moveSprites__P2110_args:
    .section code
controller__moveSprites__P2110:
controller__moveSprites__P2110_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__moveSprites__P2110_locals:
    @stackempty locals
    bl controller_players__P2106
_proccall613:
    mov r3, r0
    ldr r0, _ldlit_117 ; controller__moveSprites_inline__P10291_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall614:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2110:
    @stackempty locals
    movs r0, #0
.final_0_163:
controller__moveSprites__P2110_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(71,27): controller._moveSprites.inline
    ;
    .object controller__moveSprites_inline__P10291 "game/controller.ts(71,27): controller._moveSprites.inline"
controller__moveSprites_inline__P10291_pre:
    .section code
    .balign 4
controller__moveSprites_inline__P10291_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller__moveSprites_inline__P10291_args@fn
controller__moveSprites_inline__P10291_args:
    cmp r4, #1
    bge controller__moveSprites_inline__P10291_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller__moveSprites_inline__P10291_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller__moveSprites_inline__P10291:
controller__moveSprites_inline__P10291_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__moveSprites_inline__P10291_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller___preUpdate__P2139
_proccall615:
    add sp, #4*1 ; pop locals 1
.ret.10291:
    @stackempty locals
    movs r0, #0
.final_0_164:
controller__moveSprites_inline__P10291_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(331,9): controller.Controller.__preUpdate
    ;
    .object controller_Controller___preUpdate__P2139 "game/controller.ts(331,9): controller.Controller.__preUpdate"
controller_Controller___preUpdate__P2139_pre:
    .section code
    .balign 4
controller_Controller___preUpdate__P2139_args:
    cmp r4, #1
    bge controller_Controller___preUpdate__P2139_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller___preUpdate__P2139_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___preUpdate__P2139:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller___preUpdate__P2139_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Controller___preUpdate__P2139_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller__controlledSprites__P2116_nochk
_proccall617:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_165      
.jmpz616:
    b .ret.2139      
.else_0_165:
.afterif_1_165:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    movs r1, #10
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_165      
.jmpz618:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_right__P2121_nochk
_proccall619:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2178
_proccall620:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_left__P2120_nochk
_proccall621:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2178
_proccall622:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_down__P2123_nochk
_proccall623:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2178
_proccall624:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_up__P2122_nochk
_proccall625:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2178
_proccall626:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_165      
.else_2_165:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_right__P2121_nochk
_proccall628:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_72
_proccall629:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_165      
.jmpz627:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_5_165      
.condexprz_4_165:
    movs r0, #1
.condexprfin_5_165:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_left__P2120_nochk
_proccall631:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_72
_proccall632:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_6_165      
.jmpz630:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_7_165      
.condexprz_6_165:
    movs r0, #1
.condexprfin_7_165:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    ldr r1, [sp, #4*1] ; tmpref @2
    bl _numops_subs
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_down__P2123_nochk
_proccall634:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_72
_proccall635:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_165      
.jmpz633:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_9_165      
.condexprz_8_165:
    movs r0, #1
.condexprfin_9_165:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_up__P2122_nochk
_proccall637:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_72
_proccall638:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_10_165      
.jmpz636:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_11_165      
.condexprz_10_165:
    movs r0, #1
.condexprfin_11_165:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    ldr r1, [sp, #4*1] ; tmpref @2
    bl _numops_subs
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.afterif_3_165:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    ldr r1, _ldlit_118 ; 131073      
    bl _cmp_gt
    bne .jmpz639
    b .else_12_165      
.object PUSH
.balign 4
_ldlit_117:
 .word controller__moveSprites_inline__P10291_Lit
_ldlit_118:
 .word 131073
.object POP
.jmpz639:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_120 ; 131073      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::sqrt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_12_165:
.afterif_13_165:
    movs r0, #5
    ldr r1, _ldlit_121 ; controller_Controller___preUpdate_inline__P10371_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller__controlledSprites__P2116_nochk
_proccall640:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall641:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_165      
.jmpz642:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller__controlledSprites__P2116_nochk
_proccall643:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, _ldlit_122 ; controller_Controller___preUpdate_inline__P10428_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall644:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl controller_Controller__controlledSprites__P2117_nochk
_proccall645:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_14_165:
.afterif_15_165:
.ret.2139:
    @stackempty locals
    movs r0, #0
.final_16_165:
    add sp, #4*7 ; pop locals 7
controller_Controller___preUpdate__P2139_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(362,45): controller.Controller.__preUpdate.inline
    ;
    .object controller_Controller___preUpdate_inline__P10371 "game/controller.ts(362,45): controller.Controller.__preUpdate.inline"
controller_Controller___preUpdate_inline__P10371_pre:
    .section code
    .balign 4
controller_Controller___preUpdate_inline__P10371_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Controller___preUpdate_inline__P10371_args@fn
controller_Controller___preUpdate_inline__P10371_args:
    cmp r4, #1
    bge controller_Controller___preUpdate_inline__P10371_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller___preUpdate_inline__P10371_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___preUpdate_inline__P10371:
controller_Controller___preUpdate_inline__P10371_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Controller___preUpdate_inline__P10371_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; the one arg
    movs r1, #141
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall646:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    ldr r0, [sp, #4*0] ; tmpref @1
    push {r0} ; proc-arg
    movs r1, #91
    lsls r1, r1, #2
    bl _ifacecall1_get_8
_proccall647:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    ldr r0, [sp, #0]      
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #109
    bl _ifacecall1_get_8
_proccall648:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_166      
.jmpz649:
    ldr r0, [r5, #4*3]
    movs r1, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    b .ret.10371      
.else_0_166:
.afterif_1_166:
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_166      
.jmpz650:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_166      
.jmpz651:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    @stackempty locals
.else_3_166:
.afterif_4_166:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_166      
.jmpz652:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    @stackempty locals
.else_5_166:
.afterif_6_166:
.else_2_166:
.afterif_7_166:
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_166      
.jmpz653:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_166      
.lazySkip_10_166:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
.lazy_9_166:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz654
    b .else_8_166      
.jmpz654:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_13_166      
.jmpz655:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_12_166      
.lazySkip_13_166:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
.lazy_12_166:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_166      
.jmpz656:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall657:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall658:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_14_166      
.else_11_166:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_166      
.jmpz659:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall660:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_16_166      
.else_15_166:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz661
    b .else_17_166      
.object PUSH
.balign 4
_ldlit_120:
 .word 131073
_ldlit_121:
 .word controller_Controller___preUpdate_inline__P10371_Lit
_ldlit_122:
 .word controller_Controller___preUpdate_inline__P10428_Lit
.object POP
.jmpz661:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall662:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_17_166:
.afterif_18_166:
.afterif_16_166:
.afterif_14_166:
    ldr r0, [sp, args@0]
    movs r1, #66
    bl _inst_controller_ControlledSprite__C2107_validate_73
    str r1, [r0, #4]
    @stackempty locals
    b .afterif_19_166      
.else_8_166:
    ldr r0, [sp, args@0]
    movs r1, #10
    bl _inst_controller_ControlledSprite__C2107_validate_73
    str r1, [r0, #4]
    @stackempty locals
.afterif_19_166:
.ret.10371:
    @stackempty locals
    movs r0, #0
.final_20_166:
    add sp, #4*3 ; pop locals 3
controller_Controller___preUpdate_inline__P10371_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(394,29): controller.Controller.__preUpdate.inline
    ;
    .object controller_Controller___preUpdate_inline__P10428 "game/controller.ts(394,29): controller.Controller.__preUpdate.inline"
controller_Controller___preUpdate_inline__P10428_pre:
    .section code
    .balign 4
controller_Controller___preUpdate_inline__P10428_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Controller___preUpdate_inline__P10428_args@fn
controller_Controller___preUpdate_inline__P10428_args:
    cmp r4, #1
    bge controller_Controller___preUpdate_inline__P10428_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller___preUpdate_inline__P10428_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___preUpdate_inline__P10428:
controller_Controller___preUpdate_inline__P10428_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller___preUpdate_inline__P10428_locals:
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #8]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.10428:
    @stackempty locals
.final_0_167:
controller_Controller___preUpdate_inline__P10428_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(262,5): helpers.arrayFilter
    ;
    .object helpers_arrayFilter__P110 "base/pxt-helpers.ts(262,5): helpers.arrayFilter"
helpers_arrayFilter__P110_pre:
    .section code
    .balign 4
    .section code
helpers_arrayFilter__P110:
helpers_arrayFilter__P110_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayFilter__P110_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.10446:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.10446      
.jmpz663:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_35
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_168      
.jmpz664:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_168:
.afterif_1_168:
.cont.10446:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.10446      
.brk.10446:
    ldr r0, [sp, locals@0]
.ret.110:
    @stackempty locals
.final_2_168:
    add sp, #4*4 ; pop locals 4
helpers_arrayFilter__P110_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(106,9): controller.Controller._controlledSprites
    ;
    .object controller_Controller__controlledSprites__P2117 "game/controller.ts(106,9): controller.Controller._controlledSprites"
controller_Controller__controlledSprites__P2117_pre:
    .section code
    .balign 4
controller_Controller__controlledSprites__P2117_args:
    cmp r4, #2
    bge controller_Controller__controlledSprites__P2117_nochk
    push {lr}
    bl _expand_args_2_19
    bl controller_Controller__controlledSprites__P2117_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller__controlledSprites__P2117:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller__controlledSprites__P2117_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller__controlledSprites__P2117_locals:
    bl game_currentScene__P2975
_proccall666:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2117:
    @stackempty locals
    movs r0, #0
.final_0_169:
controller_Controller__controlledSprites__P2117_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(33,5): Fx.imul
    ;
    .object Fx_imul__P161 "base/fixed.ts(33,5): Fx.imul"
Fx_imul__P161_pre:
    .section code
    .balign 4
    .section code
Fx_imul__P161:
Fx_imul__P161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_imul__P161_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::imul
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.161:
    @stackempty locals
.final_0_170:
Fx_imul__P161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(186,9): controller.Button.isPressed
    ;
    .object controller_Button_isPressed__P2177 "game/controllerbutton.ts(186,9): controller.Button.isPressed"
controller_Button_isPressed__P2177_pre:
    .section code
    .balign 4
controller_Button_isPressed__P2177_args:
    cmp r4, #1
    bge controller_Button_isPressed__P2177_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_isPressed__P2177_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_isPressed__P2177:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_isPressed__P2177_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_isPressed__P2177_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.2177:
    @stackempty locals
.final_0_171:
controller_Button_isPressed__P2177_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(138,9): controller.Controller.up
    ;
    .object controller_Controller_up__P2122 "game/controller.ts(138,9): controller.Controller.up"
controller_Controller_up__P2122_pre:
    .section code
    .balign 4
controller_Controller_up__P2122_args:
    cmp r4, #1
    bge controller_Controller_up__P2122_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_up__P2122_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_up__P2122:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller_up__P2122_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_up__P2122_locals:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4753_nochk
_proccall667:
    add sp, #4*2 ; pop locals 2
.ret.2122:
    @stackempty locals
.final_0_172:
controller_Controller_up__P2122_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(221,9): controller.Controller.button
    ;
    .object controller_Controller_button__P4753 "game/controller.ts(221,9): controller.Controller.button"
controller_Controller_button__P4753_pre:
    .section code
    .balign 4
controller_Controller_button__P4753_args:
    cmp r4, #2
    bge controller_Controller_button__P4753_nochk
    push {lr}
    bl _expand_args_2_19
    bl controller_Controller_button__P4753_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller_button__P4753:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller_button__P4753_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_button__P4753_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.ret.4753:
    @stackempty locals
.final_0_173:
controller_Controller_button__P4753_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(146,9): controller.Controller.down
    ;
    .object controller_Controller_down__P2123 "game/controller.ts(146,9): controller.Controller.down"
controller_Controller_down__P2123_pre:
    .section code
    .balign 4
controller_Controller_down__P2123_args:
    cmp r4, #1
    bge controller_Controller_down__P2123_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_down__P2123_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_down__P2123:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller_down__P2123_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_down__P2123_locals:
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4753_nochk
_proccall668:
    add sp, #4*2 ; pop locals 2
.ret.2123:
    @stackempty locals
.final_0_174:
controller_Controller_down__P2123_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(122,9): controller.Controller.left
    ;
    .object controller_Controller_left__P2120 "game/controller.ts(122,9): controller.Controller.left"
controller_Controller_left__P2120_pre:
    .section code
    .balign 4
controller_Controller_left__P2120_args:
    cmp r4, #1
    bge controller_Controller_left__P2120_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_left__P2120_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_left__P2120:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller_left__P2120_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_left__P2120_locals:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4753_nochk
_proccall669:
    add sp, #4*2 ; pop locals 2
.ret.2120:
    @stackempty locals
.final_0_175:
controller_Controller_left__P2120_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(130,9): controller.Controller.right
    ;
    .object controller_Controller_right__P2121 "game/controller.ts(130,9): controller.Controller.right"
controller_Controller_right__P2121_pre:
    .section code
    .balign 4
controller_Controller_right__P2121_args:
    cmp r4, #1
    bge controller_Controller_right__P2121_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_right__P2121_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_right__P2121:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller_right__P2121_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_right__P2121_locals:
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4753_nochk
_proccall670:
    add sp, #4*2 ; pop locals 2
.ret.2121:
    @stackempty locals
.final_0_176:
controller_Controller_right__P2121_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(193,9): controller.Button.pressureLevel
    ;
    .object controller_Button_pressureLevel__P2178 "game/controllerbutton.ts(193,9): controller.Button.pressureLevel"
controller_Button_pressureLevel__P2178_pre:
    .section code
    .balign 4
controller_Button_pressureLevel__P2178_args:
    cmp r4, #1
    bge controller_Button_pressureLevel__P2178_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_pressureLevel__P2178_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_pressureLevel__P2178:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_pressureLevel__P2178_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_pressureLevel__P2178_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceDalVersion
    ldr r1, _ldlit_124 ; _str31      
    bl _cmp_eq
    beq .else_0_177      
.jmpz671:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_Sprite__C2317_this_23
_proccall673:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_177      
.jmpz672:
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_2_177      
.condexprz_1_177:
    movs r0, #1
.condexprfin_2_177:
; jmp value (already in r0)
    b .ret.2178      
    b .afterif_3_177      
.else_0_177:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_27
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::pressureLevelByButtonId
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    b .ret.2178      
.afterif_3_177:
    movs r0, #0
.ret.2178:
    @stackempty locals
.final_4_177:
controller_Button_pressureLevel__P2178_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(102,9): controller.Controller._controlledSprites
    ;
    .object controller_Controller__controlledSprites__P2116 "game/controller.ts(102,9): controller.Controller._controlledSprites"
controller_Controller__controlledSprites__P2116_pre:
    .section code
    .balign 4
controller_Controller__controlledSprites__P2116_args:
    cmp r4, #1
    bge controller_Controller__controlledSprites__P2116_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller__controlledSprites__P2116_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller__controlledSprites__P2116:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller__controlledSprites__P2116_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller__controlledSprites__P2116_locals:
    bl game_currentScene__P2975
_proccall674:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.ret.2116:
    @stackempty locals
.final_0_178:
controller_Controller__controlledSprites__P2116_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(54,5): controller.players
    ;
    .object controller_players__P2106 "game/controller.ts(54,5): controller.players"
controller_players__P2106_pre:
    .section code
    .balign 4
    .section code
controller_players__P2106:
controller_players__P2106_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_players__P2106_locals:
    bl controller__player1__P2105
_proccall675:
    @stackempty locals
    ldr r0, _ldlit_125 ; controller_players_inline__P10524_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall676:
    add sp, #4*2 ; pop locals 2
.ret.2106:
    @stackempty locals
.final_0_179:
controller_players__P2106_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(56,32): controller.players.inline
    ;
    .object controller_players_inline__P10524 "game/controller.ts(56,32): controller.players.inline"
controller_players_inline__P10524_pre:
    .section code
    .balign 4
controller_players_inline__P10524_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_players_inline__P10524_args@fn
controller_players_inline__P10524_args:
    cmp r4, #1
    bge controller_players_inline__P10524_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_players_inline__P10524_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_players_inline__P10524:
controller_players_inline__P10524_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_players_inline__P10524_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.10524:
    @stackempty locals
.final_0_180:
controller_players_inline__P10524_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(72,9): control.EventContext.deltaTime
    ;
    .object control_EventContext_deltaTime__P400 "base/eventcontext.ts(72,9): control.EventContext.deltaTime"
control_EventContext_deltaTime__P400_pre:
    .section code
    .balign 4
control_EventContext_deltaTime__P400_args:
    cmp r4, #1
    bge control_EventContext_deltaTime__P400_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_deltaTime__P400_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_deltaTime__P400:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_55
    mov lr, r7
control_EventContext_deltaTime__P400_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventContext_deltaTime__P400_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.400:
    @stackempty locals
.final_0_181:
control_EventContext_deltaTime__P400_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(415,5): controller.__update
    ;
    .object controller___update__P2142 "game/controller.ts(415,5): controller.__update"
controller___update__P2142_pre:
    .section code
    .balign 4
    .section code
controller___update__P2142:
controller___update__P2142_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
controller___update__P2142_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_126 ; controller___update_inline__P10541_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    bl controller_players__P2106
_proccall677:
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall678:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2142:
    @stackempty locals
    movs r0, #0
.final_0_182:
    add sp, #4*1 ; pop locals 1
controller___update__P2142_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(417,27): controller.__update.inline
    ;
    .object controller___update_inline__P10541 "game/controller.ts(417,27): controller.__update.inline"
controller___update_inline__P10541_pre:
    .section code
    .balign 4
controller___update_inline__P10541_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller___update_inline__P10541_args@fn
controller___update_inline__P10541_args:
    cmp r4, #1
    bge controller___update_inline__P10541_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller___update_inline__P10541_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller___update_inline__P10541:
controller___update_inline__P10541_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller___update_inline__P10541_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller___update__P2140
_proccall679:
    add sp, #4*2 ; pop locals 2
.ret.10541:
    @stackempty locals
    movs r0, #0
.final_0_183:
controller___update_inline__P10541_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(397,9): controller.Controller.__update
    ;
    .object controller_Controller___update__P2140 "game/controller.ts(397,9): controller.Controller.__update"
controller_Controller___update__P2140_pre:
    .section code
    .balign 4
controller_Controller___update__P2140_args:
    cmp r4, #2
    bge controller_Controller___update__P2140_nochk
    push {lr}
    bl _expand_args_2_19
    bl controller_Controller___update__P2140_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller___update__P2140:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller___update__P2140_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller___update__P2140_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r1, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, args@1]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_127 ; controller_Controller___update_inline__P10554_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall680:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2140:
    @stackempty locals
    movs r0, #0
.final_0_184:
controller_Controller___update__P2140_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(399,34): controller.Controller.__update.inline
    ;
    .object controller_Controller___update_inline__P10554 "game/controller.ts(399,34): controller.Controller.__update.inline"
controller_Controller___update_inline__P10554_pre:
    .section code
    .balign 4
controller_Controller___update_inline__P10554_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Controller___update_inline__P10554_args@fn
controller_Controller___update_inline__P10554_args:
    cmp r4, #1
    bge controller_Controller___update_inline__P10554_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller___update_inline__P10554_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___update_inline__P10554:
controller_Controller___update_inline__P10554_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller___update_inline__P10554_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl controller_Button___update__P2180
_proccall681:
    add sp, #4*2 ; pop locals 2
.ret.10554:
    @stackempty locals
    movs r0, #0
.final_0_185:
controller_Controller___update_inline__P10554_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(218,9): controller.Button.__update
    ;
    .object controller_Button___update__P2180 "game/controllerbutton.ts(218,9): controller.Button.__update"
controller_Button___update__P2180_pre:
    .section code
    .balign 4
controller_Button___update__P2180_args:
    cmp r4, #2
    bge controller_Button___update__P2180_nochk
    push {lr}
    bl _expand_args_2_19
    bl controller_Button___update__P2180_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button___update__P2180:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button___update__P2180_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button___update__P2180_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_186      
.jmpz682:
    b .ret.2180      
.else_0_186:
.afterif_1_186:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    movs r1, #0
    bl _cmp_eqq
    beq .condexprz_2_186      
.jmpz683:
    movs r0, #65
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .condexprfin_3_186      
.condexprz_2_186:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    b .condexprfin_3_186      
.object PUSH
.balign 4
_ldlit_124:
 .word _str31
_ldlit_125:
 .word controller_players_inline__P10524_Lit
_ldlit_126:
 .word controller___update_inline__P10541_Lit
_ldlit_127:
 .word controller_Controller___update_inline__P10554_Lit
.object POP
.condexprfin_3_186:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    movs r1, #0
    bl _cmp_eqq
    beq .condexprz_4_186      
.jmpz684:
    movs r0, #33
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .condexprfin_5_186      
.condexprz_4_186:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
.condexprfin_5_186:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .else_6_186      
.jmpz685:
    b .ret.2180      
.else_6_186:
.afterif_7_186:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_8_186      
.jmpz686:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_raiseButtonRepeat__P4759_nochk
_proccall687:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@2]
    str r1, [r0, #28]
    @stackempty locals
.else_8_186:
.afterif_9_186:
.ret.2180:
    @stackempty locals
    movs r0, #0
.final_10_186:
    add sp, #4*3 ; pop locals 3
controller_Button___update__P2180_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(111,9): controller.Button.raiseButtonRepeat
    ;
    .object controller_Button_raiseButtonRepeat__P4759 "game/controllerbutton.ts(111,9): controller.Button.raiseButtonRepeat"
controller_Button_raiseButtonRepeat__P4759_pre:
    .section code
    .balign 4
controller_Button_raiseButtonRepeat__P4759_args:
    cmp r4, #1
    bge controller_Button_raiseButtonRepeat__P4759_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_raiseButtonRepeat__P4759_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_raiseButtonRepeat__P4759:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_raiseButtonRepeat__P4759_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_raiseButtonRepeat__P4759_locals:
    movs r0, #67
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_187      
.jmpz688:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_74
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #6
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_187      
.else_0_187:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_74
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #7
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_187:
.ret.4759:
    @stackempty locals
    movs r0, #0
.final_2_187:
controller_Button_raiseButtonRepeat__P4759_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(148,9): control.EventContext.registerFrameHandler
    ;
    .object control_EventContext_registerFrameHandler__P403 "base/eventcontext.ts(148,9): control.EventContext.registerFrameHandler"
control_EventContext_registerFrameHandler__P403_pre:
    .section code
    .balign 4
control_EventContext_registerFrameHandler__P403_args:
    cmp r4, #3
    bge control_EventContext_registerFrameHandler__P403_nochk
    push {lr}
    bl _expand_args_3_14
    bl control_EventContext_registerFrameHandler__P403_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
control_EventContext_registerFrameHandler__P403:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_55
    mov lr, r7
control_EventContext_registerFrameHandler__P403_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerFrameHandler__P403_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_188      
.jmpz689:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl control_EventContext_registerFrameCallbacks__P4503_nochk
_proccall690:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_188:
.afterif_1_188:
    ldr r0, _ldlit_129 ; control_FrameCallback__C392_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@1]
    bl _inst_control_FrameCallback__C392_validate_75
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _inst_control_FrameCallback__C392_validate_75
    str r1, [r0, #8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10643:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10643      
.jmpz691:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_control_FrameCallback__C392_validate_75
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .else_2_188      
.jmpz692:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_76
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::insertAt
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.403      
.else_2_188:
.afterif_3_188:
.cont.10643:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10643      
.brk.10643:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.403:
    @stackempty locals
.final_4_188:
    add sp, #4*2 ; pop locals 2
control_EventContext_registerFrameHandler__P403_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(110,9): control.EventContext.registerFrameCallbacks
    ;
    .object control_EventContext_registerFrameCallbacks__P4503 "base/eventcontext.ts(110,9): control.EventContext.registerFrameCallbacks"
control_EventContext_registerFrameCallbacks__P4503_pre:
    .section code
    .balign 4
control_EventContext_registerFrameCallbacks__P4503_args:
    cmp r4, #1
    bge control_EventContext_registerFrameCallbacks__P4503_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_registerFrameCallbacks__P4503_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_registerFrameCallbacks__P4503:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_55
    mov lr, r7
control_EventContext_registerFrameCallbacks__P4503_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerFrameCallbacks__P4503_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_189      
.jmpz693:
    b .ret.4503      
.else_0_189:
.afterif_1_189:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_130 ; control_EventContext_registerFrameCallbacks_inline__P10680_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4503:
    @stackempty locals
    movs r0, #0
.final_2_189:
    add sp, #4*1 ; pop locals 1
control_EventContext_registerFrameCallbacks__P4503_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(114,35): control.EventContext.registerFrameCallbacks.inline
    ;
    .object control_EventContext_registerFrameCallbacks_inline__P10680 "base/eventcontext.ts(114,35): control.EventContext.registerFrameCallbacks.inline"
control_EventContext_registerFrameCallbacks_inline__P10680_pre:
    .section code
    .balign 4
control_EventContext_registerFrameCallbacks_inline__P10680_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_EventContext_registerFrameCallbacks_inline__P10680_args@fn
control_EventContext_registerFrameCallbacks_inline__P10680_args:
    .section code
control_EventContext_registerFrameCallbacks_inline__P10680:
control_EventContext_registerFrameCallbacks_inline__P10680_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerFrameCallbacks_inline__P10680_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_190      
.jmpz694:
    movs r0, #1
    ldr r1, _ldlit_131 ; control_EventContext_registerFrameCallbacks_inline__P10686_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl pauseUntil__P367
_proccall695:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_190:
.afterif_1_190:
    ldr r0, [r5, #4*3]
    movs r1, #66
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.10705:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .brk.10705      
.jmpz696:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl control_EventContext_runCallbacks__P4502_nochk
_proccall697:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl pause__P413
_proccall698:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.10705      
.brk.10705:
    ldr r0, [r5, #4*3]
    movs r1, #10
    str r1, [r0, #40]
    @stackempty locals
.ret.10680:
    @stackempty locals
    movs r0, #0
.final_2_190:
    add sp, #4*1 ; pop locals 1
control_EventContext_registerFrameCallbacks_inline__P10680_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(118,32): control.EventContext.registerFrameCallbacks.inline
    ;
    .object control_EventContext_registerFrameCallbacks_inline__P10686 "base/eventcontext.ts(118,32): control.EventContext.registerFrameCallbacks.inline"
control_EventContext_registerFrameCallbacks_inline__P10686_pre:
    .section code
    .balign 4
control_EventContext_registerFrameCallbacks_inline__P10686_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_EventContext_registerFrameCallbacks_inline__P10686_args@fn
control_EventContext_registerFrameCallbacks_inline__P10686_args:
    .section code
control_EventContext_registerFrameCallbacks_inline__P10686:
control_EventContext_registerFrameCallbacks_inline__P10686_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventContext_registerFrameCallbacks_inline__P10686_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.10686:
    @stackempty locals
.final_0_191:
control_EventContext_registerFrameCallbacks_inline__P10686_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(76,9): control.EventContext.runCallbacks
    ;
    .object control_EventContext_runCallbacks__P4502 "base/eventcontext.ts(76,9): control.EventContext.runCallbacks"
control_EventContext_runCallbacks__P4502_pre:
    .section code
    .balign 4
control_EventContext_runCallbacks__P4502_args:
    cmp r4, #1
    bge control_EventContext_runCallbacks__P4502_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_runCallbacks__P4502_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_runCallbacks__P4502:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_55
    mov lr, r7
control_EventContext_runCallbacks__P4502_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_runCallbacks__P4502_locals:
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #32]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.10733:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.10733      
.jmpz699:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall1__48
_proccall700:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.10733:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.10733      
.object PUSH
.balign 4
_ldlit_129:
 .word control_FrameCallback__C392_VT
_ldlit_130:
 .word control_EventContext_registerFrameCallbacks_inline__P10680_Lit
_ldlit_131:
 .word control_EventContext_registerFrameCallbacks_inline__P10686_Lit
.object POP
.brk.10733:
    movs r0, #0
    str r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_192      
.jmpz701:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_192      
.lazySkip_2_192:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #61
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_192:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz702
    b .else_0_192      
.jmpz702:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@4]
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_133 ; _str12      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    movs r1, #192
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, locals@7]
    movs r1, #199
    bl _cmp_lt
    beq .else_3_192      
.jmpz703:
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_134 ; _str13      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    movs r1, #192
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_3_192:
.afterif_4_192:
    mov r7, sp
    str r7, [r6, #4]
    bl control::profilingEnabled
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_192      
.jmpz704:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_135 ; _str14      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_136 ; _str15      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_137 ; _str16      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_138 ; _str17      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::gc
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::dumpPerfCounters
    @stackempty locals
.else_5_192:
.afterif_6_192:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
.else_0_192:
.afterif_7_192:
    movs r0, #41
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #3
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall705:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
.ret.4502:
    @stackempty locals
.final_8_192:
    add sp, #4*9 ; pop locals 9
control_EventContext_runCallbacks__P4502_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(74,1): pauseUntil
    ;
    .object pauseUntil__P367 "base/poll.ts(74,1): pauseUntil"
pauseUntil__P367_pre:
    .section code
    .balign 4
    .section code
pauseUntil__P367:
pauseUntil__P367_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pauseUntil__P367_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_193      
.jmpz706:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_193      
.lazySkip_2_193:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
.lazy_1_193:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_193      
.jmpz708:
    b .ret.367      
.else_0_193:
.afterif_3_193:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_193      
.jmpz709:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
.else_4_193:
.afterif_5_193:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl control___queuePollEvent__P366
_proccall710:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.367:
    @stackempty locals
    movs r0, #0
.final_6_193:
pauseUntil__P367_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(40,5): control.__queuePollEvent
    ;
    .object control___queuePollEvent__P366 "base/poll.ts(40,5): control.__queuePollEvent"
control___queuePollEvent__P366_pre:
    .section code
    .balign 4
    .section code
control___queuePollEvent__P366:
control___queuePollEvent__P366_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control___queuePollEvent__P366_locals:
    ldr r0, _ldlit_139 ; control_PollEvent__C4476_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    ldr r0, [sp, #4*11] ; tmpref @1
    push {r0} ; proc-arg
    bl control_PollEvent_constructor__P4477
_proccall711:
    add sp, #4*12 ; pop locals 12
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_194      
.jmpz712:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    ldr r0, _ldlit_140 ; control_pollEvents__P4480_Lit      
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_194      
.else_0_194:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_194:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz713
    b .else_2_194      
.object PUSH
.balign 4
_ldlit_133:
 .word _str12
_ldlit_134:
 .word _str13
_ldlit_135:
 .word _str14
_ldlit_136:
 .word _str15
_ldlit_137:
 .word _str16
_ldlit_138:
 .word _str17
_ldlit_139:
 .word control_PollEvent__C4476_VT
_ldlit_140:
 .word control_pollEvents__P4480_Lit
.object POP
.jmpz713:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl control_onEvent__P391
_proccall714:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_3_194      
.else_2_194:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_194:
.ret.366:
    @stackempty locals
    movs r0, #0
.final_4_194:
    add sp, #4*1 ; pop locals 1
control___queuePollEvent__P366_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(21,5): control.pollEvents
    ;
    .object control_pollEvents__P4480 "base/poll.ts(21,5): control.pollEvents"
control_pollEvents__P4480_pre:
    .section code
    .balign 4
control_pollEvents__P4480_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_pollEvents__P4480_args@fn
control_pollEvents__P4480_args:
    .section code
control_pollEvents__P4480:
control_pollEvents__P4480_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_pollEvents__P4480_locals:
.cont.10900:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_gt
    bne .jmpz715
    b .brk.10900      
.jmpz715:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10907:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz716
    b .brk.10907      
.jmpz716:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #105
    bl _ifacecall1__48
_proccall718:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_195      
.jmpz717:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_195      
.lazySkip_2_195:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_195      
.jmpz719:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_195      
.lazySkip_4_195:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_3_195:
; jmp value (already in r0)
.lazy_1_195:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_195      
.jmpz720:
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4476_validate_77
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_195      
.jmpz721:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl helpers_arraySplice__P100
_proccall722:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
.else_5_195:
.afterif_6_195:
.else_0_195:
.afterif_7_195:
.cont.10907:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10907      
.brk.10907:
    movs r0, #101
    push {r0} ; proc-arg
    bl pause__P413
_proccall723:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.10900      
.brk.10900:
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
.ret.4480:
    @stackempty locals
    movs r0, #0
.final_8_195:
    add sp, #4*3 ; pop locals 3
control_pollEvents__P4480_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(9,9): control.PollEvent.constructor
    ;
    .object control_PollEvent_constructor__P4477 "base/poll.ts(9,9): control.PollEvent.constructor"
control_PollEvent_constructor__P4477_pre:
    .section code
    .balign 4
    .section code
control_PollEvent_constructor__P4477:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_PollEvent__C4476_validate_77
    mov lr, r7
control_PollEvent_constructor__P4477_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_PollEvent_constructor__P4477_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@6]
    str r1, [r0, #24]
    @stackempty locals
    movs r0, #0
.ret.4477:
    @stackempty locals
.final_0_196:
control_PollEvent_constructor__P4477_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function power/power.ts(27,5): power.poke
    ;
    .object power_poke__P1911 "power/power.ts(27,5): power.poke"
power_poke__P1911_pre:
    .section code
    .balign 4
    .section code
power_poke__P1911:
power_poke__P1911_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
power_poke__P1911_locals:
    bl power_init__P4611
_proccall724:
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    movs r1, #236
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.1911:
    @stackempty locals
    movs r0, #0
.final_0_197:
power_poke__P1911_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(221,5): control.pushEventContext
    ;
    .object control_pushEventContext__P409 "base/eventcontext.ts(221,5): control.pushEventContext"
control_pushEventContext__P409_pre:
    .section code
    .balign 4
    .section code
control_pushEventContext__P409:
control_pushEventContext__P409_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_pushEventContext__P409_locals:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_198      
.jmpz725:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #176
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_198:
.afterif_1_198:
    bl control_eventContext__P408
_proccall726:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_198      
.jmpz727:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventContext_unregister__P402
_proccall728:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_198:
.afterif_3_198:
    ldr r0, _ldlit_142 ; control_EventContext__C395_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl control_EventContext_constructor__P399
_proccall729:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
.ret.409:
    @stackempty locals
.final_4_198:
    add sp, #4*2 ; pop locals 2
control_pushEventContext__P409_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(60,9): control.EventContext.constructor
    ;
    .object control_EventContext_constructor__P399 "base/eventcontext.ts(60,9): control.EventContext.constructor"
control_EventContext_constructor__P399_pre:
    .section code
    .balign 4
    .section code
control_EventContext_constructor__P399:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_55
    mov lr, r7
control_EventContext_constructor__P399_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventContext_constructor__P399_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #36]
    @stackempty locals
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_199      
.jmpz730:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    movs r1, #192
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_199:
.afterif_1_199:
    movs r0, #0
.ret.399:
    @stackempty locals
.final_2_199:
control_EventContext_constructor__P399_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(142,9): control.EventContext.unregister
    ;
    .object control_EventContext_unregister__P402 "base/eventcontext.ts(142,9): control.EventContext.unregister"
control_EventContext_unregister__P402_pre:
    .section code
    .balign 4
control_EventContext_unregister__P402_args:
    cmp r4, #1
    bge control_EventContext_unregister__P402_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_unregister__P402_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_unregister__P402:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_55
    mov lr, r7
control_EventContext_unregister__P402_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_unregister__P402_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.11024:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.11024      
.jmpz731:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventHandler_unregister__P4499
_proccall732:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.11024:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.11024      
.brk.11024:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #12]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.402:
    @stackempty locals
    movs r0, #0
.final_0_200:
    add sp, #4*3 ; pop locals 3
control_EventContext_unregister__P402_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(37,9): control.EventHandler.unregister
    ;
    .object control_EventHandler_unregister__P4499 "base/eventcontext.ts(37,9): control.EventHandler.unregister"
control_EventHandler_unregister__P4499_pre:
    .section code
    .balign 4
control_EventHandler_unregister__P4499_args:
    cmp r4, #1
    bge control_EventHandler_unregister__P4499_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventHandler_unregister__P4499_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventHandler_unregister__P4499:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventHandler__C4497_validate_56
    mov lr, r7
control_EventHandler_unregister__P4499_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_unregister__P4499_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, _ldlit_143 ; control_doNothing__P4501_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_53
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.4499:
    @stackempty locals
    movs r0, #0
.final_0_201:
control_EventHandler_unregister__P4499_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(42,5): control.doNothing
    ;
    .object control_doNothing__P4501 "base/eventcontext.ts(42,5): control.doNothing"
control_doNothing__P4501_pre:
    .section code
    .balign 4
control_doNothing__P4501_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_doNothing__P4501_args@fn
control_doNothing__P4501_args:
    .section code
control_doNothing__P4501:
control_doNothing__P4501_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_doNothing__P4501_locals:
.ret.4501:
    @stackempty locals
    movs r0, #0
.final_0_202:
control_doNothing__P4501_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_142:
 .word control_EventContext__C395_VT
_ldlit_143:
 .word control_doNothing__P4501_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(107,9): scene.Scene.constructor
    ;
    .object scene_Scene_constructor__P2842 "game/scene.ts(107,9): scene.Scene.constructor"
scene_Scene_constructor__P2842_pre:
    .section code
    .balign 4
    .section code
scene_Scene_constructor__P2842:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2819_validate_10
    mov lr, r7
scene_Scene_constructor__P2842_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_constructor__P2842_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #100]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, _ldlit_145 ; ArcadePhysicsEngine__C2503_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_constructor__P2504
_proccall733:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, _ldlit_146 ; scene_Camera__C2757_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl scene_Camera_constructor__P2761
_proccall734:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #32]
    @stackempty locals
    ldr r0, _ldlit_147 ; scene_Background__C2645_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_Background_constructor__P2649
_proccall735:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #52]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #56]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #64]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #68]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #88]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #92]
    @stackempty locals
    movs r0, #0
.ret.2842:
    @stackempty locals
.final_0_203:
scene_Scene_constructor__P2842_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(21,9): scene.Background.constructor
    ;
    .object scene_Background_constructor__P2649 "game/background.ts(21,9): scene.Background.constructor"
scene_Background_constructor__P2649_pre:
    .section code
    .balign 4
    .section code
scene_Background_constructor__P2649:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Background__C2645_validate_65
    mov lr, r7
scene_Background_constructor__P2649_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Background_constructor__P2649_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2649:
    @stackempty locals
.final_0_204:
scene_Background_constructor__P2649_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(18,9): scene.Camera.constructor
    ;
    .object scene_Camera_constructor__P2761 "game/camera.ts(18,9): scene.Camera.constructor"
scene_Camera_constructor__P2761_pre:
    .section code
    .balign 4
    .section code
scene_Camera_constructor__P2761:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_constructor__P2761_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_constructor__P2761_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.2761:
    @stackempty locals
.final_0_205:
scene_Camera_constructor__P2761_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(59,5): ArcadePhysicsEngine.constructor
    ;
    .object ArcadePhysicsEngine_constructor__P2504 "game/physics.ts(59,5): ArcadePhysicsEngine.constructor"
ArcadePhysicsEngine_constructor__P2504_pre:
    .section code
    .balign 4
    .section code
ArcadePhysicsEngine_constructor__P2504:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_constructor__P2504_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_constructor__P2504_locals:
    movs r0, #0
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_148 ; sprites_SpriteMap__C2422_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl sprites_SpriteMap_constructor__P2423
_proccall736:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_maxSpeed__P2506_nochk
_proccall737:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_maxStep__P2510_nochk
_proccall738:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_minStep__P2508_nochk
_proccall739:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2504:
    @stackempty locals
.final_0_206:
ArcadePhysicsEngine_constructor__P2504_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(81,5): ArcadePhysicsEngine.minStep
    ;
    .object ArcadePhysicsEngine_minStep__P2508 "game/physics.ts(81,5): ArcadePhysicsEngine.minStep"
ArcadePhysicsEngine_minStep__P2508_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_minStep__P2508_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_minStep__P2508_nochk
    push {lr}
    bl _expand_args_2_19
    bl ArcadePhysicsEngine_minStep__P2508_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_minStep__P2508:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_minStep__P2508_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_minStep__P2508_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall740:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2508:
    @stackempty locals
    movs r0, #0
.final_0_207:
ArcadePhysicsEngine_minStep__P2508_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(77,5): ArcadePhysicsEngine.minStep
    ;
    .object ArcadePhysicsEngine_minStep__P2507 "game/physics.ts(77,5): ArcadePhysicsEngine.minStep"
ArcadePhysicsEngine_minStep__P2507_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_minStep__P2507_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_minStep__P2507_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_minStep__P2507_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_minStep__P2507:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_minStep__P2507_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_minStep__P2507_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall741:
    add sp, #4*1 ; pop locals 1
.ret.2507:
    @stackempty locals
.final_0_208:
ArcadePhysicsEngine_minStep__P2507_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(75,5): Fx.toInt
    ;
    .object Fx_toInt__P172 "base/fixed.ts(75,5): Fx.toInt"
Fx_toInt__P172_pre:
    .section code
    .balign 4
    .section code
Fx_toInt__P172:
Fx_toInt__P172_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_toInt__P172_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.ret.172:
    @stackempty locals
.final_0_209:
Fx_toInt__P172_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(89,5): ArcadePhysicsEngine.maxStep
    ;
    .object ArcadePhysicsEngine_maxStep__P2510 "game/physics.ts(89,5): ArcadePhysicsEngine.maxStep"
ArcadePhysicsEngine_maxStep__P2510_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxStep__P2510_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_maxStep__P2510_nochk
    push {lr}
    bl _expand_args_2_19
    bl ArcadePhysicsEngine_maxStep__P2510_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_maxStep__P2510:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_maxStep__P2510_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxStep__P2510_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall742:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2510:
    @stackempty locals
    movs r0, #0
.final_0_210:
ArcadePhysicsEngine_maxStep__P2510_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(85,5): ArcadePhysicsEngine.maxStep
    ;
    .object ArcadePhysicsEngine_maxStep__P2509 "game/physics.ts(85,5): ArcadePhysicsEngine.maxStep"
ArcadePhysicsEngine_maxStep__P2509_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxStep__P2509_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_maxStep__P2509_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_maxStep__P2509_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_maxStep__P2509:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_maxStep__P2509_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxStep__P2509_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall743:
    add sp, #4*1 ; pop locals 1
.ret.2509:
    @stackempty locals
.final_0_211:
ArcadePhysicsEngine_maxStep__P2509_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_145:
 .word ArcadePhysicsEngine__C2503_VT
_ldlit_146:
 .word scene_Camera__C2757_VT
_ldlit_147:
 .word scene_Background__C2645_VT
_ldlit_148:
 .word sprites_SpriteMap__C2422_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(72,5): ArcadePhysicsEngine.maxSpeed
    ;
    .object ArcadePhysicsEngine_maxSpeed__P2506 "game/physics.ts(72,5): ArcadePhysicsEngine.maxSpeed"
ArcadePhysicsEngine_maxSpeed__P2506_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxSpeed__P2506_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_maxSpeed__P2506_nochk
    push {lr}
    bl _expand_args_2_19
    bl ArcadePhysicsEngine_maxSpeed__P2506_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_maxSpeed__P2506:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_maxSpeed__P2506_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxSpeed__P2506_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall744:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2506:
    @stackempty locals
    movs r0, #0
.final_0_212:
ArcadePhysicsEngine_maxSpeed__P2506_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(68,5): ArcadePhysicsEngine.maxSpeed
    ;
    .object ArcadePhysicsEngine_maxSpeed__P2505 "game/physics.ts(68,5): ArcadePhysicsEngine.maxSpeed"
ArcadePhysicsEngine_maxSpeed__P2505_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxSpeed__P2505_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_maxSpeed__P2505_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_maxSpeed__P2505_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_maxSpeed__P2505:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_maxSpeed__P2505_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxSpeed__P2505_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall745:
    add sp, #4*1 ; pop locals 1
.ret.2505:
    @stackempty locals
.final_0_214:
ArcadePhysicsEngine_maxSpeed__P2505_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(9,9): sprites.SpriteMap.constructor
    ;
    .object sprites_SpriteMap_constructor__P2423 "game/spritemap.ts(9,9): sprites.SpriteMap.constructor"
sprites_SpriteMap_constructor__P2423_pre:
    .section code
    .balign 4
    .section code
sprites_SpriteMap_constructor__P2423:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_constructor__P2423_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteMap_constructor__P2423_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2423:
    @stackempty locals
.final_0_215:
sprites_SpriteMap_constructor__P2423_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(288,5): controller.pauseUntilAnyButtonIsPressed
    ;
    .object controller_pauseUntilAnyButtonIsPressed__P2182 "game/controllerbutton.ts(288,5): controller.pauseUntilAnyButtonIsPressed"
controller_pauseUntilAnyButtonIsPressed__P2182_pre:
    .section code
    .balign 4
controller_pauseUntilAnyButtonIsPressed__P2182_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_pauseUntilAnyButtonIsPressed__P2182_args@fn
controller_pauseUntilAnyButtonIsPressed__P2182_args:
    .section code
controller_pauseUntilAnyButtonIsPressed__P2182:
controller_pauseUntilAnyButtonIsPressed__P2182_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_pauseUntilAnyButtonIsPressed__P2182_locals:
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #1
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    @stackempty locals
.ret.2182:
    @stackempty locals
    movs r0, #0
.final_0_217:
controller_pauseUntilAnyButtonIsPressed__P2182_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(128,5): game.setWaitAnyButton
    ;
    .object game_setWaitAnyButton__P2976 "game/game.ts(128,5): game.setWaitAnyButton"
game_setWaitAnyButton__P2976_pre:
    .section code
    .balign 4
    .section code
game_setWaitAnyButton__P2976:
game_setWaitAnyButton__P2976_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_setWaitAnyButton__P2976_locals:
    ldr r0, [sp, args@0]
    movs r1, #17
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.2976:
    @stackempty locals
    movs r0, #0
.final_0_218:
game_setWaitAnyButton__P2976_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(45,9): Math.FastRandom.constructor
    ;
    .object Math_FastRandom_constructor__P3037 "game/mathUtil.ts(45,9): Math.FastRandom.constructor"
Math_FastRandom_constructor__P3037_pre:
    .section code
    .balign 4
    .section code
Math_FastRandom_constructor__P3037:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3035_validate_80
    mov lr, r7
Math_FastRandom_constructor__P3037_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_constructor__P3037_locals:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_219      
.jmpz746:
    movs r0, #3
    ldr r1, _ldlit_150 ; 131071      
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    str r0, [sp, args@1]
    @stackempty locals
.else_0_219:
.afterif_1_219:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.3037:
    @stackempty locals
.final_2_219:
Math_FastRandom_constructor__P3037_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(27,5): game.consoleOverlay.listener
    ;
    .object game_consoleOverlay_listener__P5306 "game/console.ts(27,5): game.consoleOverlay.listener"
game_consoleOverlay_listener__P5306_pre:
    .section code
    .balign 4
game_consoleOverlay_listener__P5306_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_consoleOverlay_listener__P5306_args@fn
game_consoleOverlay_listener__P5306_args:
    cmp r4, #2
    bge game_consoleOverlay_listener__P5306_nochk
    push {lr}
    bl _expand_args_2_19
    bl game_consoleOverlay_listener__P5306_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
game_consoleOverlay_listener__P5306:
game_consoleOverlay_listener__P5306_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_consoleOverlay_listener__P5306_locals:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_220      
.jmpz747:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_220      
.lazySkip_2_220:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_220:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_220      
.jmpz748:
    b .ret.5306      
.else_0_220:
.afterif_3_220:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_151 ; _str1      
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_stringSplit__P122
_proccall749:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_152 ; forEach_inline__P11226_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall750:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, _ldlit_153 ; game_consoleOverlay_listener_inline__P11231_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall751:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r7, [r6, #0]
    ldr r1, [r7, #124]
    bl _cmp_gt
    beq .else_4_220      
.jmpz752:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r7, [r6, #0]
    ldr r1, [r7, #124]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arraySplice__P100
_proccall753:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_220:
.afterif_5_220:
.ret.5306:
    @stackempty locals
    movs r0, #0
.final_6_220:
game_consoleOverlay_listener__P5306_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(33,21): forEach.inline
    ;
    .object forEach_inline__P11226 "game/console.ts(33,21): forEach.inline"
forEach_inline__P11226_pre:
    .section code
    .balign 4
forEach_inline__P11226_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P11226_args@fn
forEach_inline__P11226_args:
    cmp r4, #1
    bge forEach_inline__P11226_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P11226_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P11226:
forEach_inline__P11226_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P11226_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.11226:
    @stackempty locals
.final_0_221:
forEach_inline__P11226_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(34,22): game.consoleOverlay.listener.inline
    ;
    .object game_consoleOverlay_listener_inline__P11231 "game/console.ts(34,22): game.consoleOverlay.listener.inline"
game_consoleOverlay_listener_inline__P11231_pre:
    .section code
    .balign 4
game_consoleOverlay_listener_inline__P11231_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_consoleOverlay_listener_inline__P11231_args@fn
game_consoleOverlay_listener_inline__P11231_args:
    cmp r4, #1
    bge game_consoleOverlay_listener_inline__P11231_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_consoleOverlay_listener_inline__P11231_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_consoleOverlay_listener_inline__P11231:
game_consoleOverlay_listener_inline__P11231_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_consoleOverlay_listener_inline__P11231_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.11234:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.11234      
.jmpz754:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #132
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSlice__P119
_proccall755:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.11234:
    ldr r0, [sp, locals@0]
    movs r1, #132
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.11234      
.brk.11234:
.ret.11231:
    @stackempty locals
    movs r0, #0
.final_0_222:
    add sp, #4*1 ; pop locals 1
game_consoleOverlay_listener_inline__P11231_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(122,5): console.addListener
    ;
    .object console_addListener__P383 "base/console.ts(122,5): console.addListener"
console_addListener__P383_pre:
    .section code
    .balign 4
    .section code
console_addListener__P383:
console_addListener__P383_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_addListener__P383_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_223      
.jmpz756:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_223      
.lazySkip_2_223:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #69
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_223:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_223      
.jmpz757:
    b .ret.383      
.else_0_223:
.afterif_3_223:
    movs r0, #69
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.383:
    @stackempty locals
    movs r0, #0
.final_4_223:
console_addListener__P383_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(26,9): listeners.inline
    ;
    .object listeners_inline__P4482 "base/console.ts(26,9): listeners.inline"
listeners_inline__P4482_pre:
    .section code
    .balign 4
listeners_inline__P4482_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word listeners_inline__P4482_args@fn
listeners_inline__P4482_args:
    cmp r4, #2
    bge listeners_inline__P4482_nochk
    push {lr}
    bl _expand_args_2_19
    bl listeners_inline__P4482_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
listeners_inline__P4482:
listeners_inline__P4482_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
listeners_inline__P4482_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_81
    mov r7, sp
    str r7, [r6, #4]
    bl control::__log
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4482:
    @stackempty locals
    movs r0, #0
.final_0_224:
listeners_inline__P4482_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_150:
 .word 131071
_ldlit_151:
 .word _str1
_ldlit_152:
 .word forEach_inline__P11226_Lit
_ldlit_153:
 .word game_consoleOverlay_listener_inline__P11231_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/targetoverrides.ts(39,5): _screen_internal.createScreen
    ;
    .object _screen_internal_createScreen__P2014 "screen---st7735/targetoverrides.ts(39,5): _screen_internal.createScreen"
_screen_internal_createScreen__P2014_pre:
    .section code
    .balign 4
    .section code
_screen_internal_createScreen__P2014:
_screen_internal_createScreen__P2014_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
_screen_internal_createScreen__P2014_locals:
    movs r0, #160
    movs r1, #120
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #8
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setupScreenStatusBar
    @stackempty locals
    movs r0, #160
    movs r1, #8
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateScreenStatusBar
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_155 ; _screen_internal_createScreen_inline__P11303_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control___screen_setupUpdate__P1972
_proccall758:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_156 ; _screen_internal_createScreen_inline__P11308_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    pop {r0} ; tmpref @1
    movs r1, #188
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2014:
    @stackempty locals
.final_0_225:
    add sp, #4*2 ; pop locals 2
_screen_internal_createScreen__P2014_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/targetoverrides.ts(46,38): _screen_internal.createScreen.inline
    ;
    .object _screen_internal_createScreen_inline__P11303 "screen---st7735/targetoverrides.ts(46,38): _screen_internal.createScreen.inline"
_screen_internal_createScreen_inline__P11303_pre:
    .section code
    .balign 4
_screen_internal_createScreen_inline__P11303_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _screen_internal_createScreen_inline__P11303_args@fn
_screen_internal_createScreen_inline__P11303_args:
    .section code
_screen_internal_createScreen_inline__P11303:
_screen_internal_createScreen_inline__P11303_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_screen_internal_createScreen_inline__P11303_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateScreen
    add sp, #4*1 ; pop locals 1
.ret.11303:
    @stackempty locals
    movs r0, #0
.final_0_226:
_screen_internal_createScreen_inline__P11303_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/targetoverrides.ts(47,40): _screen_internal.createScreen.inline
    ;
    .object _screen_internal_createScreen_inline__P11308 "screen---st7735/targetoverrides.ts(47,40): _screen_internal.createScreen.inline"
_screen_internal_createScreen_inline__P11308_pre:
    .section code
    .balign 4
_screen_internal_createScreen_inline__P11308_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _screen_internal_createScreen_inline__P11308_args@fn
_screen_internal_createScreen_inline__P11308_args:
    cmp r4, #1
    bge _screen_internal_createScreen_inline__P11308_nochk
    push {lr}
    bl _expand_args_1_12
    bl _screen_internal_createScreen_inline__P11308_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
_screen_internal_createScreen_inline__P11308:
_screen_internal_createScreen_inline__P11308_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_screen_internal_createScreen_inline__P11308_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_7
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::fill
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #120]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl helpers_imagePrint__P1968
_proccall759:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateScreenStatusBar
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateStats
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.11308:
    @stackempty locals
    movs r0, #0
.final_0_227:
_screen_internal_createScreen_inline__P11308_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/frame.ts(11,5): control.__screen.setupUpdate
    ;
    .object control___screen_setupUpdate__P1972 "screen---st7735/frame.ts(11,5): control.__screen.setupUpdate"
control___screen_setupUpdate__P1972_pre:
    .section code
    .balign 4
    .section code
control___screen_setupUpdate__P1972:
control___screen_setupUpdate__P1972_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control___screen_setupUpdate__P1972_locals:
    movs r0, #66
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #35
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.1972:
    @stackempty locals
    movs r0, #0
.final_0_228:
control___screen_setupUpdate__P1972_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(383,5): scene.systemMenu.register
    ;
    .object scene_systemMenu_register__P3082 "game/systemmenu.ts(383,5): scene.systemMenu.register"
scene_systemMenu_register__P3082_pre:
    .section code
    .balign 4
scene_systemMenu_register__P3082_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_register__P3082_args@fn
scene_systemMenu_register__P3082_args:
    .section code
scene_systemMenu_register__P3082:
scene_systemMenu_register__P3082_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_register__P3082_locals:
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_229      
.jmpz761:
    b .ret.3082      
.else_0_229:
.afterif_1_229:
    ldr r0, _ldlit_157 ; scene_systemMenu_showSystemMenu__P3083_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #232
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall762:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3082:
    @stackempty locals
    movs r0, #0
.final_2_229:
scene_systemMenu_register__P3082_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(389,5): scene.systemMenu.showSystemMenu
    ;
    .object scene_systemMenu_showSystemMenu__P3083 "game/systemmenu.ts(389,5): scene.systemMenu.showSystemMenu"
scene_systemMenu_showSystemMenu__P3083_pre:
    .section code
    .balign 4
scene_systemMenu_showSystemMenu__P3083_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_showSystemMenu__P3083_args@fn
scene_systemMenu_showSystemMenu__P3083_args:
    .section code
scene_systemMenu_showSystemMenu__P3083:
scene_systemMenu_showSystemMenu__P3083_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_showSystemMenu__P3083_locals:
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_230      
.jmpz763:
    b .ret.3083      
.else_0_230:
.afterif_1_230:
    bl game_pushScene__P2979
_proccall764:
    @stackempty locals
    ldr r0, _ldlit_158 ; scene_systemMenu_PauseMenu__C3071_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_159 ; scene_systemMenu_buildOptionList__P3079_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_constructor__P3072
_proccall765:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #1
    lsls r1, r1, #8
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_show__P3073
_proccall766:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3083:
    @stackempty locals
    movs r0, #0
.final_2_230:
scene_systemMenu_showSystemMenu__P3083_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(124,9): scene.systemMenu.PauseMenu.show
    ;
    .object scene_systemMenu_PauseMenu_show__P3073 "game/systemmenu.ts(124,9): scene.systemMenu.PauseMenu.show"
scene_systemMenu_PauseMenu_show__P3073_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show__P3073_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_show__P3073_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_show__P3073_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_show__P3073:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3071_validate_82
    mov lr, r7
scene_systemMenu_PauseMenu_show__P3073_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_PauseMenu_show__P3073_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall1__48
_proccall767:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.11364:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz768
    b .brk.11364      
.object PUSH
.balign 4
_ldlit_155:
 .word _screen_internal_createScreen_inline__P11303_Lit
_ldlit_156:
 .word _screen_internal_createScreen_inline__P11308_Lit
_ldlit_157:
 .word scene_systemMenu_showSystemMenu__P3083_Lit
_ldlit_158:
 .word scene_systemMenu_PauseMenu__C3071_VT
_ldlit_159:
 .word scene_systemMenu_buildOptionList__P3079_Lit
.object POP
.jmpz768:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_show__P3065
_proccall769:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_MenuOption_setTheme__P3068
_proccall770:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #242
    bl _ifacecall1_get_8
_proccall771:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #92
    bl _ifacecall1_get_8
_proccall772:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #91
    bl _ifacecall1_get_8
_proccall773:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #90
    bl _ifacecall1_get_8
_proccall774:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall775:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #92
    bl _ifacecall1_get_8
_proccall776:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #91
    bl _ifacecall1_get_8
_proccall777:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #90
    bl _ifacecall1_get_8
_proccall778:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl scene_systemMenu_MenuOption_position__P3066
_proccall779:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.11364:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.11364      
.brk.11364:
    movs r0, #10
    push {r0} ; proc-arg
    bl controller__setUserEventsEnabled__P2183
_proccall780:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_161 ; scene_systemMenu_PauseMenu_show_inline__P11425_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall781:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_162 ; scene_systemMenu_PauseMenu_show_inline__P11445_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall782:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_163 ; scene_systemMenu_PauseMenu_show_inline__P11474_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall783:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_164 ; scene_systemMenu_PauseMenu_show_inline__P11479_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #232
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall784:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_165 ; scene_systemMenu_PauseMenu_show_inline__P11484_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall785:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_166 ; scene_systemMenu_PauseMenu_show_inline__P11496_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall786:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_167 ; scene_systemMenu_PauseMenu_show_inline__P11505_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #228
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall787:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_168 ; scene_systemMenu_PauseMenu_show_inline__P11521_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #224
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall788:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_169 ; scene_systemMenu_PauseMenu_show_inline__P11533_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl game_onShade__P2993
_proccall789:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_setSelection__P3075_nochk
_proccall790:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3073:
    @stackempty locals
    movs r0, #0
.final_0_231:
    add sp, #4*2 ; pop locals 2
scene_systemMenu_PauseMenu_show__P3073_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(141,51): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P11425 "game/systemmenu.ts(141,51): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P11425_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P11425_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P11425_args@fn
scene_systemMenu_PauseMenu_show_inline__P11425_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P11425:
scene_systemMenu_PauseMenu_show_inline__P11425_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P11425_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_232      
.jmpz791:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_232      
.lazySkip_2_232:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_232:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_232      
.jmpz792:
    b .ret.11425      
.else_0_232:
.afterif_3_232:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3069
_proccall793:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.11425:
    @stackempty locals
    movs r0, #0
.final_4_232:
scene_systemMenu_PauseMenu_show_inline__P11425_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(146,49): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P11445 "game/systemmenu.ts(146,49): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P11445_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P11445_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P11445_args@fn
scene_systemMenu_PauseMenu_show_inline__P11445_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P11445:
scene_systemMenu_PauseMenu_show_inline__P11445_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P11445_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_233      
.jmpz794:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_233      
.lazySkip_2_233:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_233:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_233      
.jmpz795:
    b .ret.11445      
.else_0_233:
.afterif_3_233:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3069
_proccall796:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_scene_systemMenu_MenuOption__C3063_validate_83
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.11445:
    @stackempty locals
    movs r0, #0
.final_4_233:
scene_systemMenu_PauseMenu_show_inline__P11445_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(152,51): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P11474 "game/systemmenu.ts(152,51): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P11474_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P11474_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P11474_args@fn
scene_systemMenu_PauseMenu_show_inline__P11474_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P11474:
scene_systemMenu_PauseMenu_show_inline__P11474_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P11474_locals:
    bl scene_systemMenu_closeMenu__P3078
_proccall797:
    @stackempty locals
.ret.11474:
    @stackempty locals
    movs r0, #0
.final_0_234:
scene_systemMenu_PauseMenu_show_inline__P11474_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_161:
 .word scene_systemMenu_PauseMenu_show_inline__P11425_Lit
_ldlit_162:
 .word scene_systemMenu_PauseMenu_show_inline__P11445_Lit
_ldlit_163:
 .word scene_systemMenu_PauseMenu_show_inline__P11474_Lit
_ldlit_164:
 .word scene_systemMenu_PauseMenu_show_inline__P11479_Lit
_ldlit_165:
 .word scene_systemMenu_PauseMenu_show_inline__P11484_Lit
_ldlit_166:
 .word scene_systemMenu_PauseMenu_show_inline__P11496_Lit
_ldlit_167:
 .word scene_systemMenu_PauseMenu_show_inline__P11505_Lit
_ldlit_168:
 .word scene_systemMenu_PauseMenu_show_inline__P11521_Lit
_ldlit_169:
 .word scene_systemMenu_PauseMenu_show_inline__P11533_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(156,54): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P11479 "game/systemmenu.ts(156,54): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P11479_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P11479_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P11479_args@fn
scene_systemMenu_PauseMenu_show_inline__P11479_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P11479:
scene_systemMenu_PauseMenu_show_inline__P11479_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P11479_locals:
    bl scene_systemMenu_closeMenu__P3078
_proccall798:
    @stackempty locals
.ret.11479:
    @stackempty locals
    movs r0, #0
.final_0_235:
scene_systemMenu_PauseMenu_show_inline__P11479_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(160,52): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P11484 "game/systemmenu.ts(160,52): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P11484_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P11484_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P11484_args@fn
scene_systemMenu_PauseMenu_show_inline__P11484_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P11484:
scene_systemMenu_PauseMenu_show_inline__P11484_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P11484_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #92
    bl _ifacecall1_get_8
_proccall799:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall800:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3075_nochk
_proccall801:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.11484:
    @stackempty locals
    movs r0, #0
.final_0_236:
scene_systemMenu_PauseMenu_show_inline__P11484_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(164,54): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P11496 "game/systemmenu.ts(164,54): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P11496_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P11496_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P11496_args@fn
scene_systemMenu_PauseMenu_show_inline__P11496_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P11496:
scene_systemMenu_PauseMenu_show_inline__P11496_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P11496_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    movs r1, #3
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall802:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3075_nochk
_proccall803:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.11496:
    @stackempty locals
    movs r0, #0
.final_0_237:
scene_systemMenu_PauseMenu_show_inline__P11496_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(168,54): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P11505 "game/systemmenu.ts(168,54): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P11505_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P11505_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P11505_args@fn
scene_systemMenu_PauseMenu_show_inline__P11505_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P11505:
scene_systemMenu_PauseMenu_show_inline__P11505_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P11505_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #92
    bl _ifacecall1_get_8
_proccall804:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall805:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3075_nochk
_proccall806:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.11505:
    @stackempty locals
    movs r0, #0
.final_0_238:
scene_systemMenu_PauseMenu_show_inline__P11505_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(172,55): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P11521 "game/systemmenu.ts(172,55): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P11521_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P11521_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P11521_args@fn
scene_systemMenu_PauseMenu_show_inline__P11521_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P11521:
scene_systemMenu_PauseMenu_show_inline__P11521_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P11521_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall807:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3075_nochk
_proccall808:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.11521:
    @stackempty locals
    movs r0, #0
.final_0_239:
scene_systemMenu_PauseMenu_show_inline__P11521_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(176,26): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P11533 "game/systemmenu.ts(176,26): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P11533_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P11533_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P11533_args@fn
scene_systemMenu_PauseMenu_show_inline__P11533_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P11533:
scene_systemMenu_PauseMenu_show_inline__P11533_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P11533_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_onUpdate__P3074_nochk
_proccall809:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_drawText__P3076_nochk
_proccall810:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.11533:
    @stackempty locals
    movs r0, #0
.final_0_240:
scene_systemMenu_PauseMenu_show_inline__P11533_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(225,9): scene.systemMenu.PauseMenu.drawText
    ;
    .object scene_systemMenu_PauseMenu_drawText__P3076 "game/systemmenu.ts(225,9): scene.systemMenu.PauseMenu.drawText"
scene_systemMenu_PauseMenu_drawText__P3076_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_drawText__P3076_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_drawText__P3076_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_drawText__P3076_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_drawText__P3076:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3071_validate_82
    mov lr, r7
scene_systemMenu_PauseMenu_drawText__P3076_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_drawText__P3076_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_241      
.jmpz811:
    b .ret.3076      
.else_0_241:
.afterif_1_241:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall812:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #31
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    bl helpers_imageFillRect__P1936
_proccall813:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #168
    bl _ifacecall1_get_8
_proccall814:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #167
    bl _ifacecall1_get_8
_proccall815:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl helpers_imagePrintCenter__P1967
_proccall816:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #177
    bl _ifacecall1_get_8
_proccall817:
    add sp, #4*1 ; pop locals 1
    movs r1, #7
    bl _numops_subs
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #177
    bl _ifacecall1_get_8
_proccall818:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #13
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    movs r0, #31
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    movs r0, #1
    push {r0} ; proc-arg
    push {r4}
    bl helpers_imageFillRect__P1936
_proccall819:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #242
    bl _ifacecall1_get_8
_proccall820:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #177
    bl _ifacecall1_get_8
_proccall821:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #242
    bl _ifacecall1_get_8
_proccall822:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #176
    bl _ifacecall1_get_8
_proccall823:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall824:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageFillRect__P1936
_proccall825:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r1, #158
    bl _ifacecall1__48
_proccall826:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #177
    bl _ifacecall1_get_8
_proccall827:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #176
    bl _ifacecall1_get_8
_proccall828:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    movs r0, #31
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imagePrintCenter__P1967
_proccall829:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.3076:
    @stackempty locals
    movs r0, #0
.final_2_241:
scene_systemMenu_PauseMenu_drawText__P3076_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(207,5): helpers.imagePrintCenter
    ;
    .object helpers_imagePrintCenter__P1967 "screen---st7735/text.ts(207,5): helpers.imagePrintCenter"
helpers_imagePrintCenter__P1967_pre:
    .section code
    .balign 4
    .section code
helpers_imagePrintCenter__P1967:
helpers_imagePrintCenter__P1967_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_imagePrintCenter__P1967_locals:
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_242      
.jmpz830:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl image_getFontForText__P1955
_proccall831:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@4]
    @stackempty locals
.else_0_242:
.afterif_1_242:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #98
    bl _ifacecall1_get_8
_proccall832:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_imagePrint__P1968
_proccall833:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.ret.1967:
    @stackempty locals
    movs r0, #0
.final_2_242:
    add sp, #4*2 ; pop locals 2
helpers_imagePrintCenter__P1967_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(184,9): scene.systemMenu.PauseMenu.onUpdate
    ;
    .object scene_systemMenu_PauseMenu_onUpdate__P3074 "game/systemmenu.ts(184,9): scene.systemMenu.PauseMenu.onUpdate"
scene_systemMenu_PauseMenu_onUpdate__P3074_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_onUpdate__P3074_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_onUpdate__P3074_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_onUpdate__P3074_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_onUpdate__P3074:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3071_validate_82
    mov lr, r7
scene_systemMenu_PauseMenu_onUpdate__P3074_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_PauseMenu_onUpdate__P3074_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #245
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.11647:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.11647      
.jmpz834:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #92
    bl _ifacecall1_get_8
_proccall835:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, _ldlit_171 ; _dbl50      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::sin
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_MenuOption_setOffset__P3067
_proccall836:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.11647:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.11647      
.brk.11647:
    bl game_currentScene__P2975
_proccall837:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .else_0_243      
.jmpz838:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_1_243      
.else_0_243:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_2_243      
.jmpz839:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_3_243      
.else_2_243:
    b .ret.3074      
.afterif_3_243:
.afterif_1_243:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Math_abs__P128
_proccall841:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _cmp_lt
    beq .else_4_243      
.jmpz840:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_243:
.afterif_5_243:
    bl game_currentScene__P2975
_proccall842:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_Camera_offsetY__P2765
_proccall843:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3074:
    @stackempty locals
    movs r0, #0
.final_6_243:
    add sp, #4*3 ; pop locals 3
scene_systemMenu_PauseMenu_onUpdate__P3074_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(540,5): Math.abs
    ;
    .object Math_abs__P128 "base/pxt-helpers.ts(540,5): Math.abs"
Math_abs__P128_pre:
    .section code
    .balign 4
    .section code
Math_abs__P128:
Math_abs__P128_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_abs__P128_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_0_244      
.jmpz844:
    movs r0, #1
    ldr r1, [sp, args@0]
    bl _numops_subs
    b .condexprfin_1_244      
.condexprz_0_244:
    ldr r0, [sp, args@0]
.condexprfin_1_244:
; jmp value (already in r0)
.ret.128:
    @stackempty locals
.final_2_244:
Math_abs__P128_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(62,9): scene.systemMenu.MenuOption.setOffset
    ;
    .object scene_systemMenu_MenuOption_setOffset__P3067 "game/systemmenu.ts(62,9): scene.systemMenu.MenuOption.setOffset"
scene_systemMenu_MenuOption_setOffset__P3067_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_setOffset__P3067_args:
    cmp r4, #2
    bge scene_systemMenu_MenuOption_setOffset__P3067_nochk
    push {lr}
    bl _expand_args_2_19
    bl scene_systemMenu_MenuOption_setOffset__P3067_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_MenuOption_setOffset__P3067:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3063_validate_83
    mov lr, r7
scene_systemMenu_MenuOption_setOffset__P3067_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_setOffset__P3067_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2380
_proccall845:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_y__P2332
_proccall846:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_y__P2333
_proccall847:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3067:
    @stackempty locals
    movs r0, #0
.final_0_245:
scene_systemMenu_MenuOption_setOffset__P3067_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(127,5): Sprite.y
    ;
    .object Sprite_y__P2333 "game/sprite.ts(127,5): Sprite.y"
Sprite_y__P2333_pre:
    .section code
    .balign 4
Sprite_y__P2333_args:
    cmp r4, #2
    bge Sprite_y__P2333_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_y__P2333_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_y__P2333:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_y__P2333_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_y__P2333_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2374_nochk
_proccall848:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2380_nochk
_proccall849:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2333:
    @stackempty locals
    movs r0, #0
.final_0_246:
Sprite_y__P2333_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(381,5): Sprite.height
    ;
    .object Sprite_height__P2374 "game/sprite.ts(381,5): Sprite.height"
Sprite_height__P2374_pre:
    .section code
    .balign 4
Sprite_height__P2374_args:
    cmp r4, #1
    bge Sprite_height__P2374_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_height__P2374_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_height__P2374:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_height__P2374_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_height__P2374_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2374:
    @stackempty locals
.final_0_247:
Sprite_height__P2374_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(422,5): Sprite.top
    ;
    .object Sprite_top__P2380 "game/sprite.ts(422,5): Sprite.top"
Sprite_top__P2380_pre:
    .section code
    .balign 4
Sprite_top__P2380_args:
    cmp r4, #2
    bge Sprite_top__P2380_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_top__P2380_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_top__P2380:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_top__P2380_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite_top__P2380_locals:
    bl game_currentScene__P2975
_proccall850:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #28]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall851:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @4
    ldr r0, [sp, #4*1] ; tmpref @3
    pop {r1} ; tmpref @4
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    movs r1, #44
    bl _classCall_PhysicsEngine__C2487_16
_proccall852:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.2380:
    @stackempty locals
    movs r0, #0
.final_0_248:
    add sp, #4*1 ; pop locals 1
Sprite_top__P2380_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(417,5): Sprite.top
    ;
    .object Sprite_top__P2379 "game/sprite.ts(417,5): Sprite.top"
Sprite_top__P2379_pre:
    .section code
    .balign 4
Sprite_top__P2379_args:
    cmp r4, #1
    bge Sprite_top__P2379_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_top__P2379_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_top__P2379:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_top__P2379_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_top__P2379_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2379:
    @stackempty locals
    b .final_0_249      
.object PUSH
.balign 4
_ldlit_171:
 .word _dbl50
.object POP
.final_0_249:
Sprite_top__P2379_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(463,5): game.onShade
    ;
    .object game_onShade__P2993 "game/game.ts(463,5): game.onShade"
game_onShade__P2993_pre:
    .section code
    .balign 4
    .section code
game_onShade__P2993:
game_onShade__P2993_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_onShade__P2993_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl game_init__P4980
_proccall853:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_250      
.jmpz854:
    b .ret.2993      
.else_0_250:
.afterif_1_250:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #161
    push {r0} ; proc-arg
    bl scene_createRenderable__P2781
_proccall855:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2993:
    @stackempty locals
    movs r0, #0
.final_2_250:
game_onShade__P2993_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(25,5): scene.createRenderable
    ;
    .object scene_createRenderable__P2781 "game/renderable.ts(25,5): scene.createRenderable"
scene_createRenderable__P2781_pre:
    .section code
    .balign 4
    .section code
scene_createRenderable__P2781:
scene_createRenderable__P2781_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_createRenderable__P2781_locals:
    ldr r0, _ldlit_173 ; scene_Renderable__C2776_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_251      
.jmpz856:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_251      
.lazySkip_1_251:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_174 ; renderable_inline__P11788_Lit      
.lazy_0_251:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*4] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_Renderable_constructor__P2777
_proccall857:
    add sp, #4*5 ; pop locals 5
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2781:
    @stackempty locals
.final_2_251:
    add sp, #4*1 ; pop locals 1
scene_createRenderable__P2781_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(32,33): renderable.inline
    ;
    .object renderable_inline__P11788 "game/renderable.ts(32,33): renderable.inline"
renderable_inline__P11788_pre:
    .section code
    .balign 4
renderable_inline__P11788_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word renderable_inline__P11788_args@fn
renderable_inline__P11788_args:
    .section code
renderable_inline__P11788:
renderable_inline__P11788_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
renderable_inline__P11788_locals:
    movs r0, #66
.ret.11788:
    @stackempty locals
.final_0_252:
renderable_inline__P11788_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(3,9): scene.Renderable.constructor
    ;
    .object scene_Renderable_constructor__P2777 "game/renderable.ts(3,9): scene.Renderable.constructor"
scene_Renderable_constructor__P2777_pre:
    .section code
    .balign 4
    .section code
scene_Renderable_constructor__P2777:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Renderable__C2776_validate_84
    mov lr, r7
scene_Renderable_constructor__P2777_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Renderable_constructor__P2777_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #16]
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_constructor__P2073
_proccall858:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2777:
    @stackempty locals
.final_0_253:
scene_Renderable_constructor__P2777_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(209,9): scene.systemMenu.PauseMenu.setSelection
    ;
    .object scene_systemMenu_PauseMenu_setSelection__P3075 "game/systemmenu.ts(209,9): scene.systemMenu.PauseMenu.setSelection"
scene_systemMenu_PauseMenu_setSelection__P3075_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_setSelection__P3075_args:
    cmp r4, #2
    bge scene_systemMenu_PauseMenu_setSelection__P3075_nochk
    push {lr}
    bl _expand_args_2_19
    bl scene_systemMenu_PauseMenu_setSelection__P3075_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_setSelection__P3075:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3071_validate_82
    mov lr, r7
scene_systemMenu_PauseMenu_setSelection__P3075_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_setSelection__P3075_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_254      
.jmpz859:
    b .ret.3075      
.else_0_254:
.afterif_1_254:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_254      
.jmpz860:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #5
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3069
_proccall861:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_254:
.afterif_3_254:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_254      
.jmpz862:
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_72
_proccall864:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_5_254      
.jmpz863:
    movs r0, #3
    b .condexprfin_6_254      
.condexprz_5_254:
    movs r0, #1
.condexprfin_6_254:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3069
_proccall865:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_254:
.afterif_7_254:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_updateScrollTarget__P5228_nochk
_proccall866:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3075:
    @stackempty locals
    movs r0, #0
.final_8_254:
scene_systemMenu_PauseMenu_setSelection__P3075_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(251,9): scene.systemMenu.PauseMenu.updateScrollTarget
    ;
    .object scene_systemMenu_PauseMenu_updateScrollTarget__P5228 "game/systemmenu.ts(251,9): scene.systemMenu.PauseMenu.updateScrollTarget"
scene_systemMenu_PauseMenu_updateScrollTarget__P5228_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_updateScrollTarget__P5228_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_updateScrollTarget__P5228_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_updateScrollTarget__P5228_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_updateScrollTarget__P5228:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3071_validate_82
    mov lr, r7
scene_systemMenu_PauseMenu_updateScrollTarget__P5228_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_PauseMenu_updateScrollTarget__P5228_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #92
    bl _ifacecall1_get_8
_proccall867:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_255      
.jmpz868:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_255      
.lazySkip_2_255:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_1_255:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_255      
.jmpz869:
    b .ret.5228      
.else_0_255:
.afterif_3_255:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_4_255      
.jmpz870:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_5_255      
.else_4_255:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_5_255:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #90
    bl _ifacecall1_get_8
_proccall871:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #91
    bl _ifacecall1_get_8
_proccall872:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5228:
    @stackempty locals
    movs r0, #0
.final_6_255:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_PauseMenu_updateScrollTarget__P5228_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(321,5): scene.systemMenu.closeMenu
    ;
    .object scene_systemMenu_closeMenu__P3078 "game/systemmenu.ts(321,5): scene.systemMenu.closeMenu"
scene_systemMenu_closeMenu__P3078_pre:
    .section code
    .balign 4
scene_systemMenu_closeMenu__P3078_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_closeMenu__P3078_args@fn
scene_systemMenu_closeMenu__P3078_args:
    .section code
scene_systemMenu_closeMenu__P3078:
scene_systemMenu_closeMenu__P3078_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_closeMenu__P3078_locals:
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz873
    b .else_0_256      
.object PUSH
.balign 4
_ldlit_173:
 .word scene_Renderable__C2776_VT
_ldlit_174:
 .word renderable_inline__P11788_Lit
.object POP
.jmpz873:
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_dispose__P3077
_proccall874:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    movs r1, #1
    lsls r1, r1, #8
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    bl controller__setUserEventsEnabled__P2183
_proccall875:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl game_popScene__P2980
_proccall876:
    @stackempty locals
.else_0_256:
.afterif_1_256:
.ret.3078:
    @stackempty locals
    movs r0, #0
.final_2_256:
scene_systemMenu_closeMenu__P3078_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(162,5): game.popScene
    ;
    .object game_popScene__P2980 "game/game.ts(162,5): game.popScene"
game_popScene__P2980_pre:
    .section code
    .balign 4
    .section code
game_popScene__P2980:
game_popScene__P2980_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_popScene__P2980_locals:
    bl game_currentScene__P2975
_proccall877:
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_257      
.jmpz878:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_257      
.lazySkip_2_257:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_1_257:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_257      
.jmpz879:
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    movs r1, #180
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl control_popEventContext__P410
_proccall880:
    @stackempty locals
    b .afterif_3_257      
.else_0_257:
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_257      
.jmpz881:
    bl control_popEventContext__P410
_proccall882:
    @stackempty locals
    movs r0, #0
    movs r1, #180
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_4_257:
.afterif_5_257:
.afterif_3_257:
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_257      
.jmpz883:
    bl particles_enableAll__P3159
_proccall884:
    @stackempty locals
.else_6_257:
.afterif_7_257:
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_257      
.jmpz885:
    movs r0, #1
    ldr r1, _ldlit_176 ; game_popScene_inline__P11898_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall886:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_8_257:
.afterif_9_257:
.ret.2980:
    @stackempty locals
    movs r0, #0
.final_10_257:
    add sp, #4*1 ; pop locals 1
game_popScene__P2980_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(178,39): game.popScene.inline
    ;
    .object game_popScene_inline__P11898 "game/game.ts(178,39): game.popScene.inline"
game_popScene_inline__P11898_pre:
    .section code
    .balign 4
game_popScene_inline__P11898_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_popScene_inline__P11898_args@fn
game_popScene_inline__P11898_args:
    cmp r4, #1
    bge game_popScene_inline__P11898_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_popScene_inline__P11898_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_popScene_inline__P11898:
game_popScene_inline__P11898_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_popScene_inline__P11898_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_60
    add sp, #4*2 ; pop locals 2
.ret.11898:
    @stackempty locals
    movs r0, #0
.final_0_258:
game_popScene_inline__P11898_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(414,5): particles.enableAll
    ;
    .object particles_enableAll__P3159 "game/particles.ts(414,5): particles.enableAll"
particles_enableAll__P3159_pre:
    .section code
    .balign 4
    .section code
particles_enableAll__P3159:
particles_enableAll__P3159_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_enableAll__P3159_locals:
    bl particles_particleSources__P5322
_proccall888:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_259      
.jmpz889:
    ldr r0, _ldlit_177 ; particles_enableAll_inline__P11908_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall890:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_pruneParticles__P5318
_proccall891:
    @stackempty locals
.else_0_259:
.afterif_1_259:
.ret.3159:
    @stackempty locals
    movs r0, #0
.final_2_259:
    add sp, #4*1 ; pop locals 1
particles_enableAll__P3159_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(417,29): particles.enableAll.inline
    ;
    .object particles_enableAll_inline__P11908 "game/particles.ts(417,29): particles.enableAll.inline"
particles_enableAll_inline__P11908_pre:
    .section code
    .balign 4
particles_enableAll_inline__P11908_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_enableAll_inline__P11908_args@fn
particles_enableAll_inline__P11908_args:
    cmp r4, #1
    bge particles_enableAll_inline__P11908_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_enableAll_inline__P11908_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_enableAll_inline__P11908:
particles_enableAll_inline__P11908_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_enableAll_inline__P11908_locals:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3140
_proccall892:
    add sp, #4*2 ; pop locals 2
    movs r0, #66
.ret.11908:
    @stackempty locals
.final_0_260:
particles_enableAll_inline__P11908_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(328,5): particles.pruneParticles
    ;
    .object particles_pruneParticles__P5318 "game/particles.ts(328,5): particles.pruneParticles"
particles_pruneParticles__P5318_pre:
    .section code
    .balign 4
particles_pruneParticles__P5318_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_pruneParticles__P5318_args@fn
particles_pruneParticles__P5318_args:
    .section code
particles_pruneParticles__P5318:
particles_pruneParticles__P5318_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_pruneParticles__P5318_locals:
    bl particles_particleSources__P5322
_proccall893:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_261      
.jmpz894:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arraySlice__P115
_proccall895:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_178 ; particles_pruneParticles_inline__P11922_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall896:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_261:
.afterif_1_261:
.ret.5318:
    @stackempty locals
    movs r0, #0
.final_2_261:
    add sp, #4*1 ; pop locals 1
particles_pruneParticles__P5318_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(330,63): particles.pruneParticles.inline
    ;
    .object particles_pruneParticles_inline__P11922 "game/particles.ts(330,63): particles.pruneParticles.inline"
particles_pruneParticles_inline__P11922_pre:
    .section code
    .balign 4
particles_pruneParticles_inline__P11922_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_pruneParticles_inline__P11922_args@fn
particles_pruneParticles_inline__P11922_args:
    cmp r4, #1
    bge particles_pruneParticles_inline__P11922_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_pruneParticles_inline__P11922_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_pruneParticles_inline__P11922:
particles_pruneParticles_inline__P11922_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_pruneParticles_inline__P11922_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource__prune__P3135
_proccall897:
    add sp, #4*1 ; pop locals 1
.ret.11922:
    @stackempty locals
    movs r0, #0
.final_0_262:
particles_pruneParticles_inline__P11922_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(167,9): particles.ParticleSource._prune
    ;
    .object particles_ParticleSource__prune__P3135 "game/particles.ts(167,9): particles.ParticleSource._prune"
particles_ParticleSource__prune__P3135_pre:
    .section code
    .balign 4
particles_ParticleSource__prune__P3135_args:
    cmp r4, #1
    bge particles_ParticleSource__prune__P3135_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_ParticleSource__prune__P3135_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource__prune__P3135:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource__prune__P3135_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource__prune__P3135_locals:
.cont.11927:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_263      
.jmpz898:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_263      
.lazySkip_1_263:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_0_263:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.11927      
.jmpz899:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .cont.11927      
.brk.11927:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #5
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_263      
.jmpz900:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_263      
.lazySkip_4_263:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_3_263:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_263      
.jmpz901:
    bl game_currentScene__P2975
_proccall902:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_263      
.jmpz903:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.else_5_263:
.afterif_6_263:
    bl particles_particleSources__P5322
_proccall904:
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_263      
.jmpz905:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_263      
.lazySkip_9_263:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_8_263:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_263      
.jmpz906:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.else_7_263:
.afterif_10_263:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_263:
.afterif_11_263:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    str r0, [sp, locals@2]
    @stackempty locals
.cont.11979:
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .jmpz907
    b .lazySkip_13_263      
.object PUSH
.balign 4
_ldlit_176:
 .word game_popScene_inline__P11898_Lit
_ldlit_177:
 .word particles_enableAll_inline__P11908_Lit
_ldlit_178:
 .word particles_pruneParticles_inline__P11922_Lit
.object POP
.jmpz907:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_12_263      
.lazySkip_13_263:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #24]
.lazy_12_263:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.11979      
.jmpz908:
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #24]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_le
    beq .else_14_263      
.jmpz909:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #24]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_15_263      
.else_14_263:
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #24]
    str r0, [sp, locals@2]
    @stackempty locals
.afterif_15_263:
    b .cont.11979      
.brk.11979:
.ret.3135:
    @stackempty locals
    movs r0, #0
.final_16_263:
    add sp, #4*3 ; pop locals 3
particles_ParticleSource__prune__P3135_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(304,5): helpers.arraySlice
    ;
    .object helpers_arraySlice__P115 "base/pxt-helpers.ts(304,5): helpers.arraySlice"
helpers_arraySlice__P115_pre:
    .section code
    .balign 4
    .section code
helpers_arraySlice__P115:
helpers_arraySlice__P115_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySlice__P115_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_264      
.jmpz910:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
    b .afterif_1_264      
.else_0_264:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_264      
.jmpz911:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall912:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_2_264:
.afterif_3_264:
.afterif_1_264:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_4_264      
.jmpz913:
    ldr r0, [sp, locals@0]
    b .ret.115      
.else_4_264:
.afterif_5_264:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_264      
.jmpz914:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_7_264      
.else_6_264:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_8_264      
.jmpz915:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_8_264:
.afterif_9_264:
.afterif_7_264:
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_10_264      
.jmpz916:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
.else_10_264:
.afterif_11_264:
    ldr r0, [sp, args@1]
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.12030:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    beq .brk.12030      
.jmpz917:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.12030:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.12030      
.brk.12030:
    ldr r0, [sp, locals@0]
.ret.115:
    @stackempty locals
.final_12_264:
    add sp, #4*3 ; pop locals 3
helpers_arraySlice__P115_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(224,9): particles.ParticleSource.enabled
    ;
    .object particles_ParticleSource_enabled__P3140 "game/particles.ts(224,9): particles.ParticleSource.enabled"
particles_ParticleSource_enabled__P3140_pre:
    .section code
    .balign 4
particles_ParticleSource_enabled__P3140_args:
    cmp r4, #2
    bge particles_ParticleSource_enabled__P3140_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ParticleSource_enabled__P3140_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_enabled__P3140:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_enabled__P3140_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_enabled__P3140_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3139_nochk
_proccall919:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_265      
.jmpz918:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_265      
.jmpz920:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_orrs
    b .condexprfin_2_265      
.condexprz_1_265:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_eors
.condexprfin_2_265:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #36]
    @stackempty locals
.else_0_265:
.afterif_3_265:
.ret.3140:
    @stackempty locals
    movs r0, #0
.final_4_265:
particles_ParticleSource_enabled__P3140_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(217,9): particles.ParticleSource.enabled
    ;
    .object particles_ParticleSource_enabled__P3139 "game/particles.ts(217,9): particles.ParticleSource.enabled"
particles_ParticleSource_enabled__P3139_pre:
    .section code
    .balign 4
particles_ParticleSource_enabled__P3139_args:
    cmp r4, #1
    bge particles_ParticleSource_enabled__P3139_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_ParticleSource_enabled__P3139_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource_enabled__P3139:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_enabled__P3139_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_enabled__P3139_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3139:
    @stackempty locals
.final_0_266:
particles_ParticleSource_enabled__P3139_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(422,5): particles.particleSources
    ;
    .object particles_particleSources__P5322 "game/particles.ts(422,5): particles.particleSources"
particles_particleSources__P5322_pre:
    .section code
    .balign 4
    .section code
particles_particleSources__P5322:
particles_particleSources__P5322_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_particleSources__P5322_locals:
    bl game_currentScene__P2975
_proccall921:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #72]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5322:
    @stackempty locals
.final_0_267:
    add sp, #4*1 ; pop locals 1
particles_particleSources__P5322_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(237,5): control.popEventContext
    ;
    .object control_popEventContext__P410 "base/eventcontext.ts(237,5): control.popEventContext"
control_popEventContext__P410_pre:
    .section code
    .balign 4
    .section code
control_popEventContext__P410:
control_popEventContext__P410_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_popEventContext__P410_locals:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_268      
.jmpz922:
    b .ret.410      
.else_0_268:
.afterif_1_268:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_268      
.jmpz923:
    b .ret.410      
.else_2_268:
.afterif_3_268:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventContext_unregister__P402
_proccall924:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_268      
.jmpz925:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl control_EventContext_register__P401
_proccall926:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_5_268      
.else_4_268:
    movs r0, #0
    movs r1, #176
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.afterif_5_268:
.ret.410:
    @stackempty locals
    movs r0, #0
.final_6_268:
    add sp, #4*2 ; pop locals 2
control_popEventContext__P410_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(136,9): control.EventContext.register
    ;
    .object control_EventContext_register__P401 "base/eventcontext.ts(136,9): control.EventContext.register"
control_EventContext_register__P401_pre:
    .section code
    .balign 4
control_EventContext_register__P401_args:
    cmp r4, #1
    bge control_EventContext_register__P401_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_register__P401_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_register__P401:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_55
    mov lr, r7
control_EventContext_register__P401_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_register__P401_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.12100:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12100      
.jmpz927:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventHandler_register__P4498
_proccall928:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.12100:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.12100      
.brk.12100:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl control_EventContext_registerFrameCallbacks__P4503_nochk
_proccall929:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.401:
    @stackempty locals
    movs r0, #0
.final_0_269:
    add sp, #4*3 ; pop locals 3
control_EventContext_register__P401_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(244,9): scene.systemMenu.PauseMenu.dispose
    ;
    .object scene_systemMenu_PauseMenu_dispose__P3077 "game/systemmenu.ts(244,9): scene.systemMenu.PauseMenu.dispose"
scene_systemMenu_PauseMenu_dispose__P3077_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_dispose__P3077_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_dispose__P3077_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_dispose__P3077_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_dispose__P3077:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3071_validate_82
    mov lr, r7
scene_systemMenu_PauseMenu_dispose__P3077_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_dispose__P3077_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_270      
.jmpz930:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_180 ; scene_systemMenu_PauseMenu_dispose_inline__P12110_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall931:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #4]
    @stackempty locals
.else_0_270:
.afterif_1_270:
.ret.3077:
    @stackempty locals
    movs r0, #0
.final_2_270:
scene_systemMenu_PauseMenu_dispose__P3077_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(246,38): scene.systemMenu.PauseMenu.dispose.inline
    ;
    .object scene_systemMenu_PauseMenu_dispose_inline__P12110 "game/systemmenu.ts(246,38): scene.systemMenu.PauseMenu.dispose.inline"
scene_systemMenu_PauseMenu_dispose_inline__P12110_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_dispose_inline__P12110_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_dispose_inline__P12110_args@fn
scene_systemMenu_PauseMenu_dispose_inline__P12110_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_dispose_inline__P12110_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_dispose_inline__P12110_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_dispose_inline__P12110:
scene_systemMenu_PauseMenu_dispose_inline__P12110_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_dispose_inline__P12110_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_dispose__P3070
_proccall932:
    add sp, #4*1 ; pop locals 1
.ret.12110:
    @stackempty locals
    movs r0, #0
.final_0_271:
scene_systemMenu_PauseMenu_dispose_inline__P12110_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(78,9): scene.systemMenu.MenuOption.dispose
    ;
    .object scene_systemMenu_MenuOption_dispose__P3070 "game/systemmenu.ts(78,9): scene.systemMenu.MenuOption.dispose"
scene_systemMenu_MenuOption_dispose__P3070_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_dispose__P3070_args:
    cmp r4, #1
    bge scene_systemMenu_MenuOption_dispose__P3070_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_MenuOption_dispose__P3070_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_MenuOption_dispose__P3070:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3063_validate_83
    mov lr, r7
scene_systemMenu_MenuOption_dispose__P3070_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_dispose__P3070_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_272      
.jmpz933:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_destroy__P2404
_proccall934:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_destroy__P2404
_proccall935:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #8]
    @stackempty locals
.else_0_272:
.afterif_1_272:
.ret.3070:
    @stackempty locals
    movs r0, #0
.final_2_272:
scene_systemMenu_MenuOption_dispose__P3070_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(858,5): Sprite.destroy
    ;
    .object Sprite_destroy__P2404 "game/sprite.ts(858,5): Sprite.destroy"
Sprite_destroy__P2404_pre:
    .section code
    .balign 4
Sprite_destroy__P2404_args:
    cmp r4, #3
    bge Sprite_destroy__P2404_nochk
    push {lr}
    bl _expand_args_3_14
    bl Sprite_destroy__P2404_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite_destroy__P2404:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_destroy__P2404_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_destroy__P2404_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_273      
.jmpz936:
    b .ret.2404      
.else_0_273:
.afterif_1_273:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_273      
.jmpz937:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl effects_ParticleEffect_destroy__P3241
_proccall938:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_3_273      
.else_2_273:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite__destroyCore__P2405_nochk
_proccall939:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_273:
.ret.2404:
    @stackempty locals
    movs r0, #0
.final_4_273:
Sprite_destroy__P2404_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(869,5): Sprite._destroyCore
    ;
    .object Sprite__destroyCore__P2405 "game/sprite.ts(869,5): Sprite._destroyCore"
Sprite__destroyCore__P2405_pre:
    .section code
    .balign 4
Sprite__destroyCore__P2405_args:
    cmp r4, #1
    bge Sprite__destroyCore__P2405_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite__destroyCore__P2405_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite__destroyCore__P2405:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite__destroyCore__P2405_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite__destroyCore__P2405_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    bl game_currentScene__P2975
_proccall940:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_274      
.jmpz941:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_274      
.lazySkip_2_274:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_36
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
.lazy_1_274:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_274      
.jmpz942:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_36
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteSet_remove__P2446
_proccall943:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_274:
.afterif_3_274:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #40
    bl _classCall_PhysicsEngine__C2487_16
_proccall944:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #120]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_274      
.jmpz945:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #122
    bl _ifacecall1__48
_proccall946:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_274:
.afterif_5_274:
    movs r0, #1
    ldr r1, _ldlit_181 ; forEach_inline__P12192_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #1
    ldr r1, _ldlit_182 ; Sprite__destroyCore_inline__P12199_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #40]
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall947:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall948:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2405:
    @stackempty locals
    movs r0, #0
.final_6_274:
    add sp, #4*1 ; pop locals 1
Sprite__destroyCore__P2405_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(879,21): forEach.inline
    ;
    .object forEach_inline__P12192 "game/sprite.ts(879,21): forEach.inline"
forEach_inline__P12192_pre:
    .section code
    .balign 4
forEach_inline__P12192_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P12192_args@fn
forEach_inline__P12192_args:
    cmp r4, #1
    bge forEach_inline__P12192_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P12192_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P12192:
forEach_inline__P12192_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P12192_locals:
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.12192:
    @stackempty locals
.final_0_275:
forEach_inline__P12192_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(880,22): Sprite._destroyCore.inline
    ;
    .object Sprite__destroyCore_inline__P12199 "game/sprite.ts(880,22): Sprite._destroyCore.inline"
Sprite__destroyCore_inline__P12199_pre:
    .section code
    .balign 4
Sprite__destroyCore_inline__P12199_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word Sprite__destroyCore_inline__P12199_args@fn
Sprite__destroyCore_inline__P12199_args:
    cmp r4, #1
    bge Sprite__destroyCore_inline__P12199_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite__destroyCore_inline__P12199_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite__destroyCore_inline__P12199:
Sprite__destroyCore_inline__P12199_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite__destroyCore_inline__P12199_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall2__63
_proccall949:
    add sp, #4*2 ; pop locals 2
    b .ret.12199      
.object PUSH
.balign 4
_ldlit_180:
 .word scene_systemMenu_PauseMenu_dispose_inline__P12110_Lit
_ldlit_181:
 .word forEach_inline__P12192_Lit
_ldlit_182:
 .word Sprite__destroyCore_inline__P12199_Lit
.object POP
.ret.12199:
    @stackempty locals
    movs r0, #0
.final_0_276:
Sprite__destroyCore_inline__P12199_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(11,5): PhysicsEngine.removeSprite
    ;
    .object PhysicsEngine_removeSprite__P2490 "game/physics.ts(11,5): PhysicsEngine.removeSprite"
PhysicsEngine_removeSprite__P2490_pre:
    .section code
    .balign 4
PhysicsEngine_removeSprite__P2490_args:
    cmp r4, #2
    bge PhysicsEngine_removeSprite__P2490_nochk
    push {lr}
    bl _expand_args_2_19
    bl PhysicsEngine_removeSprite__P2490_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
PhysicsEngine_removeSprite__P2490:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2487_validate_18
    mov lr, r7
PhysicsEngine_removeSprite__P2490_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_removeSprite__P2490_locals:
.ret.2490:
    @stackempty locals
    movs r0, #0
.final_0_277:
PhysicsEngine_removeSprite__P2490_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(454,5): Sprite.kind
    ;
    .object Sprite_kind__P2383 "game/sprite.ts(454,5): Sprite.kind"
Sprite_kind__P2383_pre:
    .section code
    .balign 4
Sprite_kind__P2383_args:
    cmp r4, #1
    bge Sprite_kind__P2383_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_kind__P2383_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_kind__P2383:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_kind__P2383_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_kind__P2383_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
.ret.2383:
    @stackempty locals
.final_0_278:
Sprite_kind__P2383_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(42,9): effects.ParticleEffect.destroy
    ;
    .object effects_ParticleEffect_destroy__P3241 "game/particleeffects.ts(42,9): effects.ParticleEffect.destroy"
effects_ParticleEffect_destroy__P3241_pre:
    .section code
    .balign 4
effects_ParticleEffect_destroy__P3241_args:
    cmp r4, #4
    bge effects_ParticleEffect_destroy__P3241_nochk
    push {lr}
    bl _expand_args_4_17
    bl effects_ParticleEffect_destroy__P3241_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
effects_ParticleEffect_destroy__P3241:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ParticleEffect__C3238_validate_87
    mov lr, r7
effects_ParticleEffect_destroy__P3241_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ParticleEffect_destroy__P3241_locals:
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #56
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_setFlag__P2395
_proccall950:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    movs r0, #6
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    push {r4}
    bl effects_ParticleEffect_start__P3240_nochk
_proccall951:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_279      
.jmpz952:
    ldr r0, [sp, args@2]
    b .condexprfin_1_279      
.condexprz_0_279:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.condexprfin_1_279:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    pop {r1} ; tmpref @1
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #73
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl effects_ImageEffect_applyTo__P3268
_proccall953:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3241:
    @stackempty locals
    movs r0, #0
.final_2_279:
effects_ParticleEffect_destroy__P3241_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(61,50): dissolve.inline
    ;
    .object dissolve_inline__P12239 "game/effects.ts(61,50): dissolve.inline"
dissolve_inline__P12239_pre:
    .section code
    .balign 4
dissolve_inline__P12239_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word dissolve_inline__P12239_args@fn
dissolve_inline__P12239_args:
    cmp r4, #2
    bge dissolve_inline__P12239_nochk
    push {lr}
    bl _expand_args_2_19
    bl dissolve_inline__P12239_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
dissolve_inline__P12239:
dissolve_inline__P12239_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
dissolve_inline__P12239_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #11
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.12250:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_gt
    beq .brk.12250      
.jmpz954:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3039
_proccall955:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3039
_proccall956:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Math_FastRandom_randomRange__P3039
_proccall957:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Math_FastRandom_randomRange__P3039
_proccall958:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_imageDrawRect__P1939
_proccall959:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.cont.12250:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.12250      
.brk.12250:
.ret.12239:
    @stackempty locals
    movs r0, #0
.final_0_280:
    add sp, #4*5 ; pop locals 5
dissolve_inline__P12239_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(168,5): helpers.imageDrawRect
    ;
    .object helpers_imageDrawRect__P1939 "screen---st7735/image.ts(168,5): helpers.imageDrawRect"
helpers_imageDrawRect__P1939_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawRect__P1939:
helpers_imageDrawRect__P1939_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageDrawRect__P1939_locals:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_281      
.jmpz960:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_281      
.lazySkip_2_281:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_281:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_281      
.jmpz961:
    b .ret.1939      
.else_0_281:
.afterif_3_281:
    ldr r0, [sp, args@3]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, args@4]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, args@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imageDrawLine__P1938
_proccall962:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawLine__P1938
_proccall963:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imageDrawLine__P1938
_proccall964:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawLine__P1938
_proccall965:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
.ret.1939:
    @stackempty locals
    movs r0, #0
.final_4_281:
helpers_imageDrawRect__P1939_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(165,5): helpers.imageDrawLine
    ;
    .object helpers_imageDrawLine__P1938 "screen---st7735/image.ts(165,5): helpers.imageDrawLine"
helpers_imageDrawLine__P1938_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawLine__P1938:
helpers_imageDrawLine__P1938_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageDrawLine__P1938_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_pack__P4621
_proccall966:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl helpers_pack__P4621
_proccall967:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_drawLine
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.1938:
    @stackempty locals
    movs r0, #0
.final_0_282:
helpers_imageDrawLine__P1938_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(63,9): Math.FastRandom.randomRange
    ;
    .object Math_FastRandom_randomRange__P3039 "game/mathUtil.ts(63,9): Math.FastRandom.randomRange"
Math_FastRandom_randomRange__P3039_pre:
    .section code
    .balign 4
Math_FastRandom_randomRange__P3039_args:
    cmp r4, #3
    bge Math_FastRandom_randomRange__P3039_nochk
    push {lr}
    bl _expand_args_3_14
    bl Math_FastRandom_randomRange__P3039_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Math_FastRandom_randomRange__P3039:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3035_validate_80
    mov lr, r7
Math_FastRandom_randomRange__P3039_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_randomRange__P3039_locals:
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .condexprz_0_283      
.jmpz968:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_FastRandom_next__P3038_nochk
_proccall969:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_283      
.condexprz_0_283:
    movs r0, #1
.condexprfin_1_283:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    pop {r1} ; tmpref @1
    bl _numops_adds
.ret.3039:
    @stackempty locals
.final_2_283:
Math_FastRandom_randomRange__P3039_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(54,9): Math.FastRandom.next
    ;
    .object Math_FastRandom_next__P3038 "game/mathUtil.ts(54,9): Math.FastRandom.next"
Math_FastRandom_next__P3038_pre:
    .section code
    .balign 4
Math_FastRandom_next__P3038_args:
    cmp r4, #1
    bge Math_FastRandom_next__P3038_nochk
    push {lr}
    bl _expand_args_1_12
    bl Math_FastRandom_next__P3038_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Math_FastRandom_next__P3038:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3035_validate_80
    mov lr, r7
Math_FastRandom_next__P3038_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_next__P3038_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_ands
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    ldr r1, _ldlit_184 ; 92161      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_eors
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
.ret.3038:
    @stackempty locals
.final_0_284:
Math_FastRandom_next__P3038_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(11,9): effects.ImageEffect.constructor
    ;
    .object effects_ImageEffect_constructor__P3267 "game/effects.ts(11,9): effects.ImageEffect.constructor"
effects_ImageEffect_constructor__P3267_pre:
    .section code
    .balign 4
    .section code
effects_ImageEffect_constructor__P3267:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ImageEffect__C3266_validate_88
    mov lr, r7
effects_ImageEffect_constructor__P3267_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ImageEffect_constructor__P3267_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, _ldlit_185 ; Math_FastRandom__C3035_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Math_FastRandom_constructor__P3037
_proccall970:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.3267:
    @stackempty locals
.final_0_285:
effects_ImageEffect_constructor__P3267_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(22,9): effects.ImageEffect.applyTo
    ;
    .object effects_ImageEffect_applyTo__P3268 "game/effects.ts(22,9): effects.ImageEffect.applyTo"
effects_ImageEffect_applyTo__P3268_pre:
    .section code
    .balign 4
effects_ImageEffect_applyTo__P3268_args:
    cmp r4, #2
    bge effects_ImageEffect_applyTo__P3268_nochk
    push {lr}
    bl _expand_args_2_19
    bl effects_ImageEffect_applyTo__P3268_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
effects_ImageEffect_applyTo__P3268:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ImageEffect__C3266_validate_88
    mov lr, r7
effects_ImageEffect_applyTo__P3268_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
effects_ImageEffect_applyTo__P3268_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_286      
.jmpz971:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_286      
.lazySkip_2_286:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    ldr r0, [r0, #88]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_286:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_286      
.jmpz972:
    b .ret.3268      
.else_0_286:
.afterif_3_286:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::clone
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl effects_ImageEffect_change__P3269_nochk
_proccall973:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_setImage__P2367
_proccall974:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3268:
    @stackempty locals
    movs r0, #0
.final_4_286:
    add sp, #4*1 ; pop locals 1
effects_ImageEffect_applyTo__P3268_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(33,9): effects.ImageEffect.change
    ;
    .object effects_ImageEffect_change__P3269 "game/effects.ts(33,9): effects.ImageEffect.change"
effects_ImageEffect_change__P3269_pre:
    .section code
    .balign 4
effects_ImageEffect_change__P3269_args:
    cmp r4, #2
    bge effects_ImageEffect_change__P3269_nochk
    push {lr}
    bl _expand_args_2_19
    bl effects_ImageEffect_change__P3269_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
effects_ImageEffect_change__P3269:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ImageEffect__C3266_validate_88
    mov lr, r7
effects_ImageEffect_change__P3269_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ImageEffect_change__P3269_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    movs r1, #137
    bl _ifacecall3__57
_proccall975:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3269:
    @stackempty locals
    movs r0, #0
.final_0_287:
effects_ImageEffect_change__P3269_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(27,9): effects.ParticleEffect.start
    ;
    .object effects_ParticleEffect_start__P3240 "game/particleeffects.ts(27,9): effects.ParticleEffect.start"
effects_ParticleEffect_start__P3240_pre:
    .section code
    .balign 4
effects_ParticleEffect_start__P3240_args:
    cmp r4, #5
    bge effects_ParticleEffect_start__P3240_nochk
    push {lr}
    bl _expand_args_5_54
    bl effects_ParticleEffect_start__P3240_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
effects_ParticleEffect_start__P3240:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ParticleEffect__C3238_validate_87
    mov lr, r7
effects_ParticleEffect_start__P3240_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
effects_ParticleEffect_start__P3240_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_288      
.jmpz976:
    b .ret.3240      
.else_0_288:
.afterif_1_288:
    ldr r0, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_288      
.jmpz977:
    ldr r0, [sp, args@3]
    b .condexprfin_3_288      
.condexprz_2_288:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.condexprfin_3_288:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #67
    bl _ifacecall3__57
_proccall978:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl particles_ParticleSource_setRelativeToCamera__P3138
_proccall979:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_288      
.jmpz980:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    beq .condexprz_5_288      
.jmpz981:
    ldr r0, [sp, args@2]
    b .condexprfin_6_288      
.condexprz_5_288:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
.condexprfin_6_288:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    pop {r1} ; tmpref @1
    bl _inst_particles_ParticleSource__C3127_validate_85
    str r1, [r0, #24]
    @stackempty locals
.else_4_288:
.afterif_7_288:
.ret.3240:
    @stackempty locals
    movs r0, #0
.final_8_288:
    add sp, #4*1 ; pop locals 1
effects_ParticleEffect_start__P3240_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(212,9): particles.ParticleSource.setRelativeToCamera
    ;
    .object particles_ParticleSource_setRelativeToCamera__P3138 "game/particles.ts(212,9): particles.ParticleSource.setRelativeToCamera"
particles_ParticleSource_setRelativeToCamera__P3138_pre:
    .section code
    .balign 4
particles_ParticleSource_setRelativeToCamera__P3138_args:
    cmp r4, #2
    bge particles_ParticleSource_setRelativeToCamera__P3138_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ParticleSource_setRelativeToCamera__P3138_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setRelativeToCamera__P3138:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_setRelativeToCamera__P3138_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setRelativeToCamera__P3138_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_289      
.jmpz982:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #28]
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_1_289      
.else_0_289:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_289:
.ret.3138:
    @stackempty locals
    movs r0, #0
.final_2_289:
particles_ParticleSource_setRelativeToCamera__P3138_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(72,9): scene.systemMenu.MenuOption.setState
    ;
    .object scene_systemMenu_MenuOption_setState__P3069 "game/systemmenu.ts(72,9): scene.systemMenu.MenuOption.setState"
scene_systemMenu_MenuOption_setState__P3069_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_setState__P3069_args:
    cmp r4, #2
    bge scene_systemMenu_MenuOption_setState__P3069_nochk
    push {lr}
    bl _expand_args_2_19
    bl scene_systemMenu_MenuOption_setState__P3069_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_MenuOption_setState__P3069:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3063_validate_83
    mov lr, r7
scene_systemMenu_MenuOption_setState__P3069_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_setState__P3069_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_0_290      
.jmpz983:
    b .ret.3069      
    b .afterif_1_290      
.object PUSH
.balign 4
_ldlit_184:
 .word 92161
_ldlit_185:
 .word Math_FastRandom__C3035_VT
.object POP
.else_0_290:
.afterif_1_290:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_updateCard__P5227_nochk
_proccall984:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3069:
    @stackempty locals
    movs r0, #0
.final_2_290:
scene_systemMenu_MenuOption_setState__P3069_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(87,9): scene.systemMenu.MenuOption.updateCard
    ;
    .object scene_systemMenu_MenuOption_updateCard__P5227 "game/systemmenu.ts(87,9): scene.systemMenu.MenuOption.updateCard"
scene_systemMenu_MenuOption_updateCard__P5227_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_updateCard__P5227_args:
    cmp r4, #1
    bge scene_systemMenu_MenuOption_updateCard__P5227_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_MenuOption_updateCard__P5227_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_MenuOption_updateCard__P5227:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3063_validate_83
    mov lr, r7
scene_systemMenu_MenuOption_updateCard__P5227_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_updateCard__P5227_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_291      
.jmpz985:
    b .ret.5227      
.else_0_291:
.afterif_1_291:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz986
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_291      
.jmpz986:
    movs r0, #1
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz987
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_291      
.jmpz987:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz988
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_291      
.jmpz988:
    pop {r0} ; tmpref @1
    b .brk.12501      
.switch_2_291:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #71
    bl _ifacecall1_get_8
_proccall989:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_setImage__P2367
_proccall990:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.12501      
.switch_3_291:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #39
    bl _ifacecall1_get_8
_proccall991:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_setImage__P2367
_proccall992:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.12501      
.switch_4_291:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #56
    bl _ifacecall1_get_8
_proccall993:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_setImage__P2367
_proccall994:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.brk.12501:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_x__P2330
_proccall995:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_x__P2331
_proccall996:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_y__P2332
_proccall997:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_y__P2333
_proccall998:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5227:
    @stackempty locals
    movs r0, #0
.final_5_291:
scene_systemMenu_MenuOption_updateCard__P5227_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(116,5): Sprite.x
    ;
    .object Sprite_x__P2331 "game/sprite.ts(116,5): Sprite.x"
Sprite_x__P2331_pre:
    .section code
    .balign 4
Sprite_x__P2331_args:
    cmp r4, #2
    bge Sprite_x__P2331_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_x__P2331_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_x__P2331:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_x__P2331_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_x__P2331_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2373_nochk
_proccall999:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_left__P2376_nochk
_proccall1000:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2331:
    @stackempty locals
    movs r0, #0
.final_0_292:
Sprite_x__P2331_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(376,5): Sprite.width
    ;
    .object Sprite_width__P2373 "game/sprite.ts(376,5): Sprite.width"
Sprite_width__P2373_pre:
    .section code
    .balign 4
Sprite_width__P2373_args:
    cmp r4, #1
    bge Sprite_width__P2373_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_width__P2373_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_width__P2373:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_width__P2373_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_width__P2373_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2373:
    @stackempty locals
.final_0_293:
Sprite_width__P2373_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(392,5): Sprite.left
    ;
    .object Sprite_left__P2376 "game/sprite.ts(392,5): Sprite.left"
Sprite_left__P2376_pre:
    .section code
    .balign 4
Sprite_left__P2376_args:
    cmp r4, #2
    bge Sprite_left__P2376_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_left__P2376_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_left__P2376:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_left__P2376_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite_left__P2376_locals:
    bl game_currentScene__P2975
_proccall1001:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #28]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1002:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @4
    ldr r0, [sp, #4*1] ; tmpref @3
    pop {r1} ; tmpref @4
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #1
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    movs r1, #44
    bl _classCall_PhysicsEngine__C2487_16
_proccall1003:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.2376:
    @stackempty locals
    movs r0, #0
.final_0_294:
    add sp, #4*1 ; pop locals 1
Sprite_left__P2376_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(387,5): Sprite.left
    ;
    .object Sprite_left__P2375 "game/sprite.ts(387,5): Sprite.left"
Sprite_left__P2375_pre:
    .section code
    .balign 4
Sprite_left__P2375_args:
    cmp r4, #1
    bge Sprite_left__P2375_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_left__P2375_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_left__P2375:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_left__P2375_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_left__P2375_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2375:
    @stackempty locals
.final_0_295:
Sprite_left__P2375_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(292,5): controller._setUserEventsEnabled
    ;
    .object controller__setUserEventsEnabled__P2183 "game/controllerbutton.ts(292,5): controller._setUserEventsEnabled"
controller__setUserEventsEnabled__P2183_pre:
    .section code
    .balign 4
    .section code
controller__setUserEventsEnabled__P2183:
controller__setUserEventsEnabled__P2183_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__setUserEventsEnabled__P2183_locals:
    ldr r0, [sp, args@0]
    movs r1, #67
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.2183:
    @stackempty locals
    movs r0, #0
.final_0_296:
controller__setUserEventsEnabled__P2183_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(52,9): scene.systemMenu.MenuOption.position
    ;
    .object scene_systemMenu_MenuOption_position__P3066 "game/systemmenu.ts(52,9): scene.systemMenu.MenuOption.position"
scene_systemMenu_MenuOption_position__P3066_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_position__P3066_args:
    cmp r4, #3
    bge scene_systemMenu_MenuOption_position__P3066_nochk
    push {lr}
    bl _expand_args_3_14
    bl scene_systemMenu_MenuOption_position__P3066_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
scene_systemMenu_MenuOption_position__P3066:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3063_validate_83
    mov lr, r7
scene_systemMenu_MenuOption_position__P3066_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_position__P3066_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_left__P2376
_proccall1004:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_top__P2380
_proccall1005:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_x__P2330
_proccall1006:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_x__P2331
_proccall1007:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_y__P2332
_proccall1008:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_y__P2333
_proccall1009:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3066:
    @stackempty locals
    movs r0, #0
.final_0_297:
scene_systemMenu_MenuOption_position__P3066_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(67,9): scene.systemMenu.MenuOption.setTheme
    ;
    .object scene_systemMenu_MenuOption_setTheme__P3068 "game/systemmenu.ts(67,9): scene.systemMenu.MenuOption.setTheme"
scene_systemMenu_MenuOption_setTheme__P3068_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_setTheme__P3068_args:
    cmp r4, #2
    bge scene_systemMenu_MenuOption_setTheme__P3068_nochk
    push {lr}
    bl _expand_args_2_19
    bl scene_systemMenu_MenuOption_setTheme__P3068_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_MenuOption_setTheme__P3068:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3063_validate_83
    mov lr, r7
scene_systemMenu_MenuOption_setTheme__P3068_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_setTheme__P3068_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_updateCard__P5227_nochk
_proccall1010:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3068:
    @stackempty locals
    movs r0, #0
.final_0_298:
scene_systemMenu_MenuOption_setTheme__P3068_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(42,9): scene.systemMenu.MenuOption.show
    ;
    .object scene_systemMenu_MenuOption_show__P3065 "game/systemmenu.ts(42,9): scene.systemMenu.MenuOption.show"
scene_systemMenu_MenuOption_show__P3065_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_show__P3065_args:
    cmp r4, #1
    bge scene_systemMenu_MenuOption_show__P3065_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_MenuOption_show__P3065_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_MenuOption_show__P3065:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3063_validate_83
    mov lr, r7
scene_systemMenu_MenuOption_show__P3065_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_show__P3065_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_299      
.jmpz1011:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #71
    bl _ifacecall1_get_8
_proccall1012:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_299      
.condexprz_0_299:
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
.condexprfin_1_299:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl sprites_create__P2252
_proccall1013:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #127
    bl _ifacecall2_set_41
_proccall1014:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_create__P2252
_proccall1015:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    movs r0, #5
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #127
    bl _ifacecall2_set_41
_proccall1016:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #5
    str r1, [r0, #16]
    @stackempty locals
.ret.3065:
    @stackempty locals
    movs r0, #0
.final_2_299:
scene_systemMenu_MenuOption_show__P3065_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprites.ts(36,5): sprites.create
    ;
    .object sprites_create__P2252 "game/sprites.ts(36,5): sprites.create"
sprites_create__P2252_pre:
    .section code
    .balign 4
    .section code
sprites_create__P2252:
sprites_create__P2252_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_create__P2252_locals:
    bl game_currentScene__P2975
_proccall1017:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_187 ; Sprite__C2317_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_constructor__P2364
_proccall1018:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_setKind__P2384
_proccall1019:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_PhysicsEngine__C2487_16
_proccall1020:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_188 ; forEach_inline__P12648_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #1
    ldr r1, _ldlit_189 ; sprites_create_inline__P12654_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #44]
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall1021:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1022:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
.ret.2252:
    @stackempty locals
.final_0_300:
    add sp, #4*2 ; pop locals 2
sprites_create__P2252_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprites.ts(44,21): forEach.inline
    ;
    .object forEach_inline__P12648 "game/sprites.ts(44,21): forEach.inline"
forEach_inline__P12648_pre:
    .section code
    .balign 4
forEach_inline__P12648_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P12648_args@fn
forEach_inline__P12648_args:
    cmp r4, #1
    bge forEach_inline__P12648_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P12648_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P12648:
forEach_inline__P12648_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P12648_locals:
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.12648:
    @stackempty locals
.final_0_301:
forEach_inline__P12648_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprites.ts(45,22): sprites.create.inline
    ;
    .object sprites_create_inline__P12654 "game/sprites.ts(45,22): sprites.create.inline"
sprites_create_inline__P12654_pre:
    .section code
    .balign 4
sprites_create_inline__P12654_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word sprites_create_inline__P12654_args@fn
sprites_create_inline__P12654_args:
    cmp r4, #1
    bge sprites_create_inline__P12654_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_create_inline__P12654_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_create_inline__P12654:
sprites_create_inline__P12654_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_create_inline__P12654_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall2__63
_proccall1023:
    add sp, #4*2 ; pop locals 2
.ret.12654:
    @stackempty locals
    movs r0, #0
.final_0_302:
sprites_create_inline__P12654_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(335,5): scene.systemMenu.buildOptionList
    ;
    .object scene_systemMenu_buildOptionList__P3079 "game/systemmenu.ts(335,5): scene.systemMenu.buildOptionList"
scene_systemMenu_buildOptionList__P3079_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList__P3079_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList__P3079_args@fn
scene_systemMenu_buildOptionList__P3079_args:
    .section code
scene_systemMenu_buildOptionList__P3079:
scene_systemMenu_buildOptionList__P3079_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_buildOptionList__P3079_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_190 ; scene_systemMenu_MenuOption__C3063_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_191 ; scene_systemMenu_volumeDown__P5231_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_192 ; scene_systemMenu_buildOptionList_inline__P12668_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #96]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3064
_proccall1024:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_190 ; scene_systemMenu_MenuOption__C3063_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_193 ; scene_systemMenu_volumeUp__P5230_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_194 ; scene_systemMenu_buildOptionList_inline__P12682_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3064
_proccall1025:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setScreenBrightnessSupported
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_303      
.jmpz1026:
    ldr r0, _ldlit_190 ; scene_systemMenu_MenuOption__C3063_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_195 ; scene_systemMenu_brightnessDown__P5233_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_196 ; scene_systemMenu_buildOptionList_inline__P12698_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3064
_proccall1027:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_190 ; scene_systemMenu_MenuOption__C3063_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_197 ; scene_systemMenu_brightnessUp__P5232_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_198 ; scene_systemMenu_buildOptionList_inline__P12713_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3064
_proccall1028:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_303:
.afterif_1_303:
    ldr r0, _ldlit_190 ; scene_systemMenu_MenuOption__C3063_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_199 ; scene_systemMenu_toggleStats__P5235_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_200 ; scene_systemMenu_buildOptionList_inline__P12728_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3064
_proccall1029:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_190 ; scene_systemMenu_MenuOption__C3063_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_201 ; scene_systemMenu_toggleConsole__P5236_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_202 ; scene_systemMenu_buildOptionList_inline__P12737_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #104]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3064
_proccall1030:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_190 ; scene_systemMenu_MenuOption__C3063_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_203 ; scene_systemMenu_sleep__P5237_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_204 ; scene_systemMenu_buildOptionList_inline__P12746_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3064
_proccall1031:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #37
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_303      
.jmpz1032:
    movs r0, #37
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayConcat__P113
_proccall1033:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_2_303:
.afterif_3_303:
    ldr r0, _ldlit_190 ; scene_systemMenu_MenuOption__C3063_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_205 ; scene_systemMenu_closeMenu__P3078_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_206 ; scene_systemMenu_buildOptionList_inline__P12759_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #92]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3064
_proccall1034:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3079:
    @stackempty locals
.final_4_303:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_buildOptionList__P3079_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_187:
 .word Sprite__C2317_VT
_ldlit_188:
 .word forEach_inline__P12648_Lit
_ldlit_189:
 .word sprites_create_inline__P12654_Lit
_ldlit_190:
 .word scene_systemMenu_MenuOption__C3063_VT
_ldlit_191:
 .word scene_systemMenu_volumeDown__P5231_Lit
_ldlit_192:
 .word scene_systemMenu_buildOptionList_inline__P12668_Lit
_ldlit_193:
 .word scene_systemMenu_volumeUp__P5230_Lit
_ldlit_194:
 .word scene_systemMenu_buildOptionList_inline__P12682_Lit
_ldlit_195:
 .word scene_systemMenu_brightnessDown__P5233_Lit
_ldlit_196:
 .word scene_systemMenu_buildOptionList_inline__P12698_Lit
_ldlit_197:
 .word scene_systemMenu_brightnessUp__P5232_Lit
_ldlit_198:
 .word scene_systemMenu_buildOptionList_inline__P12713_Lit
_ldlit_199:
 .word scene_systemMenu_toggleStats__P5235_Lit
_ldlit_200:
 .word scene_systemMenu_buildOptionList_inline__P12728_Lit
_ldlit_201:
 .word scene_systemMenu_toggleConsole__P5236_Lit
_ldlit_202:
 .word scene_systemMenu_buildOptionList_inline__P12737_Lit
_ldlit_203:
 .word scene_systemMenu_sleep__P5237_Lit
_ldlit_204:
 .word scene_systemMenu_buildOptionList_inline__P12746_Lit
_ldlit_205:
 .word scene_systemMenu_closeMenu__P3078_Lit
_ldlit_206:
 .word scene_systemMenu_buildOptionList_inline__P12759_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(338,55): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12668 "game/systemmenu.ts(338,55): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12668_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12668_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12668_args@fn
scene_systemMenu_buildOptionList_inline__P12668_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12668:
scene_systemMenu_buildOptionList_inline__P12668_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12668_locals:
    bl music_volume__P1618
_proccall1035:
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_208 ; _str54      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_209 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.12668:
    @stackempty locals
.final_0_304:
scene_systemMenu_buildOptionList_inline__P12668_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(339,53): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12682 "game/systemmenu.ts(339,53): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12682_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12682_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12682_args@fn
scene_systemMenu_buildOptionList_inline__P12682_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12682:
scene_systemMenu_buildOptionList_inline__P12682_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12682_locals:
    bl music_volume__P1618
_proccall1036:
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_210 ; _str55      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_209 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.12682:
    @stackempty locals
.final_0_305:
scene_systemMenu_buildOptionList_inline__P12682_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(341,63): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12698 "game/systemmenu.ts(341,63): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12698_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12698_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12698_args@fn
scene_systemMenu_buildOptionList_inline__P12698_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12698:
scene_systemMenu_buildOptionList_inline__P12698_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12698_locals:
    movs r0, #19
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_211 ; _str56      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_209 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.12698:
    @stackempty locals
.final_0_306:
scene_systemMenu_buildOptionList_inline__P12698_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(342,61): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12713 "game/systemmenu.ts(342,61): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12713_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12713_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12713_args@fn
scene_systemMenu_buildOptionList_inline__P12713_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12713:
scene_systemMenu_buildOptionList_inline__P12713_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12713_locals:
    movs r0, #19
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_212 ; _str57      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_209 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.12713:
    @stackempty locals
.final_0_307:
scene_systemMenu_buildOptionList_inline__P12713_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(344,49): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12728 "game/systemmenu.ts(344,49): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12728_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12728_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12728_args@fn
scene_systemMenu_buildOptionList_inline__P12728_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12728:
scene_systemMenu_buildOptionList_inline__P12728_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12728_locals:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_308      
.jmpz1037:
    ldr r0, _ldlit_213 ; _str58      
    b .condexprfin_1_308      
.condexprz_0_308:
    ldr r0, _ldlit_214 ; _str59      
.condexprfin_1_308:
; jmp value (already in r0)
.ret.12728:
    @stackempty locals
.final_2_308:
scene_systemMenu_buildOptionList_inline__P12728_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(345,51): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12737 "game/systemmenu.ts(345,51): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12737_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12737_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12737_args@fn
scene_systemMenu_buildOptionList_inline__P12737_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12737:
scene_systemMenu_buildOptionList_inline__P12737_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12737_locals:
    bl game_consoleOverlay_isVisible__P3100
_proccall1039:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_309      
.jmpz1038:
    ldr r0, _ldlit_215 ; _str60      
    b .condexprfin_1_309      
.condexprz_0_309:
    ldr r0, _ldlit_216 ; _str61      
.condexprfin_1_309:
; jmp value (already in r0)
.ret.12737:
    @stackempty locals
.final_2_309:
scene_systemMenu_buildOptionList_inline__P12737_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(346,49): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12746 "game/systemmenu.ts(346,49): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12746_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12746_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12746_args@fn
scene_systemMenu_buildOptionList_inline__P12746_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12746:
scene_systemMenu_buildOptionList_inline__P12746_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12746_locals:
    ldr r0, _ldlit_217 ; _str62      
.ret.12746:
    @stackempty locals
.final_0_310:
scene_systemMenu_buildOptionList_inline__P12746_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(352,54): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12759 "game/systemmenu.ts(352,54): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12759_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12759_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12759_args@fn
scene_systemMenu_buildOptionList_inline__P12759_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12759:
scene_systemMenu_buildOptionList_inline__P12759_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12759_locals:
    ldr r0, _ldlit_218 ; _str63      
.ret.12759:
    @stackempty locals
.final_0_311:
scene_systemMenu_buildOptionList_inline__P12759_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(289,5): helpers.arrayConcat
    ;
    .object helpers_arrayConcat__P113 "base/pxt-helpers.ts(289,5): helpers.arrayConcat"
helpers_arrayConcat__P113_pre:
    .section code
    .balign 4
    .section code
helpers_arrayConcat__P113:
helpers_arrayConcat__P113_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayConcat__P113_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.12768:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12768      
.jmpz1040:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.12768:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.12768      
.brk.12768:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #0
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@5]
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.12775:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12775      
.jmpz1041:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.12775:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    b .fortop.12775      
.brk.12775:
    movs r0, #0
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@0]
.ret.113:
    @stackempty locals
.final_0_312:
    add sp, #4*7 ; pop locals 7
helpers_arrayConcat__P113_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(317,5): scene.systemMenu.sleep
    ;
    .object scene_systemMenu_sleep__P5237 "game/systemmenu.ts(317,5): scene.systemMenu.sleep"
scene_systemMenu_sleep__P5237_pre:
    .section code
    .balign 4
scene_systemMenu_sleep__P5237_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_sleep__P5237_args@fn
scene_systemMenu_sleep__P5237_args:
    .section code
scene_systemMenu_sleep__P5237:
scene_systemMenu_sleep__P5237_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_sleep__P5237_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::deepSleep
    @stackempty locals
.ret.5237:
    @stackempty locals
    movs r0, #0
.final_0_313:
scene_systemMenu_sleep__P5237_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(308,5): scene.systemMenu.toggleConsole
    ;
    .object scene_systemMenu_toggleConsole__P5236 "game/systemmenu.ts(308,5): scene.systemMenu.toggleConsole"
scene_systemMenu_toggleConsole__P5236_pre:
    .section code
    .balign 4
scene_systemMenu_toggleConsole__P5236_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_toggleConsole__P5236_args@fn
scene_systemMenu_toggleConsole__P5236_args:
    .section code
scene_systemMenu_toggleConsole__P5236:
scene_systemMenu_toggleConsole__P5236_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_toggleConsole__P5236_locals:
    bl game_consoleOverlay_isVisible__P3100
_proccall1043:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_314      
.jmpz1042:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #10
    push {r0} ; proc-arg
    bl game_consoleOverlay_setVisible__P3102
_proccall1044:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_314      
.else_0_314:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    bl game_consoleOverlay_setVisible__P3102
_proccall1045:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_219 ; _str53      
    push {r0} ; proc-arg
    bl console_log__P380
_proccall1046:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_314:
.ret.5236:
    @stackempty locals
    movs r0, #0
.final_2_314:
scene_systemMenu_toggleConsole__P5236_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(59,5): console.log
    ;
    .object console_log__P380 "base/console.ts(59,5): console.log"
console_log__P380_pre:
    .section code
    .balign 4
    .section code
console_log__P380:
console_log__P380_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_log__P380_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    bl console_add__P376
_proccall1047:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.380:
    @stackempty locals
    movs r0, #0
.final_0_315:
console_log__P380_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(29,5): console.add
    ;
    .object console_add__P376 "base/console.ts(29,5): console.add"
console_add__P376_pre:
    .section code
    .balign 4
    .section code
console_add__P376:
console_add__P376_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_add__P376_locals:
    ldr r0, [sp, args@0]
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _cmp_lt
    beq .else_0_316      
.jmpz1048:
    b .ret.376      
    b .afterif_1_316      
.object PUSH
.balign 4
_ldlit_208:
 .word _str54
_ldlit_209:
 .word _str34
_ldlit_210:
 .word _str55
_ldlit_211:
 .word _str56
_ldlit_212:
 .word _str57
_ldlit_213:
 .word _str58
_ldlit_214:
 .word _str59
_ldlit_215:
 .word _str60
_ldlit_216:
 .word _str61
_ldlit_217:
 .word _str62
_ldlit_218:
 .word _str63
_ldlit_219:
 .word _str53
.object POP
.else_0_316:
.afterif_1_316:
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl console_inspect__P382
_proccall1049:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_221 ; _str1      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.12807:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r0, #69
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.12807      
.jmpz1050:
    movs r0, #69
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    push {r3} ; the one arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_35
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.12807:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.12807      
.brk.12807:
.ret.376:
    @stackempty locals
    movs r0, #0
.final_2_316:
    add sp, #4*2 ; pop locals 2
console_add__P376_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(82,5): console.inspect
    ;
    .object console_inspect__P382 "base/console.ts(82,5): console.inspect"
console_inspect__P382_pre:
    .section code
    .balign 4
    .section code
console_inspect__P382:
console_inspect__P382_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_inspect__P382_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_222 ; _str2      
    bl _cmp_eq
    beq .else_0_317      
.jmpz1052:
    ldr r0, [sp, args@0]
    b .ret.382      
    b .afterif_1_317      
.else_0_317:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_223 ; _str3      
    bl _cmp_eq
    beq .else_2_317      
.jmpz1053:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    b .ret.382      
    b .afterif_3_317      
.else_2_317:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::isArray
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_317      
.jmpz1054:
    ldr r0, [sp, args@0]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, args@1]
    bl _cmp_le
    beq .else_5_317      
.jmpz1055:
    ldr r0, _ldlit_224 ; _str0      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayJoin__P103
_proccall1056:
    add sp, #4*2 ; pop locals 2
    b .ret.382      
    b .afterif_6_317      
.else_5_317:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P115
_proccall1057:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_224 ; _str0      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayJoin__P103
_proccall1058:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_225 ; _str4      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.382      
.afterif_6_317:
    b .afterif_7_317      
.else_4_317:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_64
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_226 ; _str5      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_317      
.jmpz1059:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_317      
.lazySkip_10_317:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_227 ; _str6      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_9_317:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_317      
.jmpz1060:
    ldr r0, [sp, locals@1]
    b .ret.382      
.else_8_317:
.afterif_11_317:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::keysOf
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_317      
.jmpz1061:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P115
_proccall1062:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
.else_12_317:
.afterif_13_317:
    movs r0, #1
    ldr r1, _ldlit_228 ; console_inspect_inline__P12882_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_14_317      
.jmpz1063:
    ldr r0, _ldlit_229 ; _str10      
    b .condexprfin_15_317      
.condexprz_14_317:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_15_317:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arrayReduce__P112
_proccall1064:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*4 ; pop locals 4
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_230 ; _str7      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_231 ; _str11      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.382      
.afterif_7_317:
.afterif_3_317:
.afterif_1_317:
    movs r0, #0
.ret.382:
    @stackempty locals
.final_16_317:
    add sp, #4*4 ; pop locals 4
console_inspect__P382_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(109,21): console.inspect.inline
    ;
    .object console_inspect_inline__P12882 "base/console.ts(109,21): console.inspect.inline"
console_inspect_inline__P12882_pre:
    .section code
    .balign 4
console_inspect_inline__P12882_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word console_inspect_inline__P12882_args@fn
console_inspect_inline__P12882_args:
    cmp r4, #2
    bge console_inspect_inline__P12882_nochk
    push {lr}
    bl _expand_args_2_19
    bl console_inspect_inline__P12882_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_221:
 .word _str1
_ldlit_222:
 .word _str2
_ldlit_223:
 .word _str3
_ldlit_224:
 .word _str0
_ldlit_225:
 .word _str4
_ldlit_226:
 .word _str5
_ldlit_227:
 .word _str6
_ldlit_228:
 .word console_inspect_inline__P12882_Lit
_ldlit_229:
 .word _str10
_ldlit_230:
 .word _str7
_ldlit_231:
 .word _str11
.object POP
    .section code
console_inspect_inline__P12882:
console_inspect_inline__P12882_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_inspect_inline__P12882_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_233 ; _str8      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_234 ; _str9      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_36
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.12882:
    @stackempty locals
.final_0_318:
console_inspect_inline__P12882_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(158,5): helpers.arrayJoin
    ;
    .object helpers_arrayJoin__P103 "base/pxt-helpers.ts(158,5): helpers.arrayJoin"
helpers_arrayJoin__P103_pre:
    .section code
    .balign 4
    .section code
helpers_arrayJoin__P103:
helpers_arrayJoin__P103_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayJoin__P103_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_319      
.jmpz1065:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_319      
.lazySkip_2_319:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_1_319:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_319      
.jmpz1066:
    ldr r0, _ldlit_235 ; _str0      
    str r0, [sp, args@1]
    @stackempty locals
.else_0_319:
.afterif_3_319:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.12922:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.12922      
.jmpz1067:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_319      
.jmpz1068:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_319      
.lazySkip_6_319:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
.lazy_5_319:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_319      
.jmpz1069:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_4_319:
.afterif_7_319:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_11_319      
.jmpz1070:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_319      
.lazySkip_11_319:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_10_319:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_319      
.jmpz1071:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    b .condexprfin_9_319      
.condexprz_8_319:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.condexprfin_9_319:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12922:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.12922      
.brk.12922:
    ldr r0, [sp, locals@0]
.ret.103:
    @stackempty locals
.final_12_319:
    add sp, #4*3 ; pop locals 3
helpers_arrayJoin__P103_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(20,5): game.consoleOverlay.setVisible
    ;
    .object game_consoleOverlay_setVisible__P3102 "game/console.ts(20,5): game.consoleOverlay.setVisible"
game_consoleOverlay_setVisible__P3102_pre:
    .section code
    .balign 4
    .section code
game_consoleOverlay_setVisible__P3102:
game_consoleOverlay_setVisible__P3102_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_consoleOverlay_setVisible__P3102_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_320      
.jmpz1072:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_320      
.jmpz1073:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .condexprfin_2_320      
.condexprz_1_320:
    movs r0, #0
.condexprfin_2_320:
; jmp value (already in r0)
    movs r1, #244
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_320:
.afterif_3_320:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_neqq
    beq .else_4_320      
.jmpz1074:
    ldr r0, [sp, args@1]
    movs r1, #252
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_4_320:
.afterif_5_320:
.ret.3102:
    @stackempty locals
    movs r0, #0
.final_6_320:
game_consoleOverlay_setVisible__P3102_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(12,5): game.consoleOverlay.isVisible
    ;
    .object game_consoleOverlay_isVisible__P3100 "game/console.ts(12,5): game.consoleOverlay.isVisible"
game_consoleOverlay_isVisible__P3100_pre:
    .section code
    .balign 4
    .section code
game_consoleOverlay_isVisible__P3100:
game_consoleOverlay_isVisible__P3100_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_consoleOverlay_isVisible__P3100_locals:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3100:
    @stackempty locals
.final_0_321:
game_consoleOverlay_isVisible__P3100_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_233:
 .word _str8
_ldlit_234:
 .word _str9
_ldlit_235:
 .word _str0
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(301,5): scene.systemMenu.toggleStats
    ;
    .object scene_systemMenu_toggleStats__P5235 "game/systemmenu.ts(301,5): scene.systemMenu.toggleStats"
scene_systemMenu_toggleStats__P5235_pre:
    .section code
    .balign 4
scene_systemMenu_toggleStats__P5235_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_toggleStats__P5235_args@fn
scene_systemMenu_toggleStats__P5235_args:
    .section code
scene_systemMenu_toggleStats__P5235:
scene_systemMenu_toggleStats__P5235_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_toggleStats__P5235_locals:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    movs r1, #184
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_322      
.jmpz1075:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_322      
.lazySkip_2_322:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #188
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_1_322:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_322      
.jmpz1076:
    movs r0, #188
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    push {r1}
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_60
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_322:
.afterif_3_322:
.ret.5235:
    @stackempty locals
    movs r0, #0
.final_4_322:
scene_systemMenu_toggleStats__P5235_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(286,5): scene.systemMenu.brightnessUp
    ;
    .object scene_systemMenu_brightnessUp__P5232 "game/systemmenu.ts(286,5): scene.systemMenu.brightnessUp"
scene_systemMenu_brightnessUp__P5232_pre:
    .section code
    .balign 4
scene_systemMenu_brightnessUp__P5232_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_brightnessUp__P5232_args@fn
scene_systemMenu_brightnessUp__P5232_args:
    .section code
scene_systemMenu_brightnessUp__P5232:
scene_systemMenu_brightnessUp__P5232_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_brightnessUp__P5232_locals:
    movs r0, #19
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #11
    bl _numops_adds
    push {r0} ; the one arg
    bl scene_systemMenu_setScreenBrightness__P5234
_proccall1078:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5232:
    @stackempty locals
    movs r0, #0
.final_0_323:
scene_systemMenu_brightnessUp__P5232_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(294,5): scene.systemMenu.setScreenBrightness
    ;
    .object scene_systemMenu_setScreenBrightness__P5234 "game/systemmenu.ts(294,5): scene.systemMenu.setScreenBrightness"
scene_systemMenu_setScreenBrightness__P5234_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_setScreenBrightness__P5234:
scene_systemMenu_setScreenBrightness__P5234_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_setScreenBrightness__P5234_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_setScreenBrightness__P1943
_proccall1079:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #19
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; the one arg
    ldr r0, _ldlit_237 ; _str52      
    push {r0} ; proc-arg
    bl settings_writeNumber__P2040
_proccall1080:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5234:
    @stackempty locals
    movs r0, #0
.final_0_324:
scene_systemMenu_setScreenBrightness__P5234_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(90,5): settings.writeNumber
    ;
    .object settings_writeNumber__P2040 "settings/settings.ts(90,5): settings.writeNumber"
settings_writeNumber__P2040_pre:
    .section code
    .balign 4
    .section code
settings_writeNumber__P2040:
settings_writeNumber__P2040_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeNumber__P2040_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl msgpack_packNumberArray__P184
_proccall1081:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2037
_proccall1082:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2040:
    @stackempty locals
    movs r0, #0
.final_0_325:
settings_writeNumber__P2040_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(118,5): msgpack.packNumberArray
    ;
    .object msgpack_packNumberArray__P184 "base/buffer.ts(118,5): msgpack.packNumberArray"
msgpack_packNumberArray__P184_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberArray__P184:
msgpack_packNumberArray__P184_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberArray__P184_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.13008:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.13008      
.jmpz1083:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #6
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4442
_proccall1084:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.13008:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.13008      
.brk.13008:
    movs r0, #0
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.13024:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.13024      
.jmpz1085:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4442
_proccall1086:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.13024:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.13024      
.brk.13024:
    movs r0, #0
    str r0, [sp, locals@6]
    ldr r0, [sp, locals@4]
.ret.184:
    @stackempty locals
.final_0_326:
    add sp, #4*8 ; pop locals 8
msgpack_packNumberArray__P184_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(57,5): msgpack.packNumberCore
    ;
    .object msgpack_packNumberCore__P4442 "base/buffer.ts(57,5): msgpack.packNumberCore"
msgpack_packNumberCore__P4442_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberCore__P4442:
msgpack_packNumberCore__P4442_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberCore__P4442_locals:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_327      
.jmpz1087:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_327      
.lazySkip_2_327:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_327:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_327      
.jmpz1088:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_327      
.jmpz1089:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_327      
.lazySkip_5_327:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_4_327:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_327      
.jmpz1090:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_327      
.jmpz1091:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_46
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_6_327:
.afterif_7_327:
    movs r0, #3
    b .ret.4442      
    b .afterif_8_327      
.else_3_327:
    movs r0, #1
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_9_327      
.jmpz1092:
    ldr r0, [sp, args@2]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _cmp_le
    beq .else_10_327      
.jmpz1093:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_11_327      
.else_10_327:
    ldr r0, [sp, args@2]
    ldr r1, _ldlit_238 ; 131071      
    bl _cmp_le
    beq .else_12_327      
.jmpz1094:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_13_327      
.else_12_327:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_13_327:
.afterif_11_327:
    b .afterif_14_327      
.else_9_327:
    movs r0, #253
    negs r0, r0
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_15_327      
.jmpz1095:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_16_327      
.else_15_327:
    ldr r0, _ldlit_239 ; -65533      
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_17_327      
.jmpz1096:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_18_327      
.else_17_327:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_18_327:
.afterif_16_327:
.afterif_14_327:
.afterif_8_327:
.else_0_327:
.afterif_19_327:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_tagFormat__P4441
_proccall1097:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1098
    b .else_20_327      
.object PUSH
.balign 4
_ldlit_237:
 .word _str52
_ldlit_238:
 .word 131071
_ldlit_239:
 .word -65533
.object POP
.jmpz1098:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_46
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_89
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_20_327:
.afterif_21_327:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P175
_proccall1099:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
.ret.4442:
    @stackempty locals
.final_22_327:
    add sp, #4*2 ; pop locals 2
msgpack_packNumberCore__P4442_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(3,5): pins.sizeOf
    ;
    .object pins_sizeOf__P175 "base/buffer.ts(3,5): pins.sizeOf"
pins_sizeOf__P175_pre:
    .section code
    .balign 4
    .section code
pins_sizeOf__P175:
pins_sizeOf__P175_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pins_sizeOf__P175_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Buffer_sizeOfNumberFormat__P215
_proccall1100:
    add sp, #4*1 ; pop locals 1
.ret.175:
    @stackempty locals
.final_0_328:
pins_sizeOf__P175_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(509,5): Buffer.sizeOfNumberFormat
    ;
    .object Buffer_sizeOfNumberFormat__P215 "base/buffer.ts(509,5): Buffer.sizeOfNumberFormat"
Buffer_sizeOfNumberFormat__P215_pre:
    .section code
    .balign 4
    .section code
Buffer_sizeOfNumberFormat__P215:
Buffer_sizeOfNumberFormat__P215_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Buffer_sizeOfNumberFormat__P215_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1101
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_329      
.jmpz1101:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1102
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_329      
.jmpz1102:
    movs r0, #13
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1103
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_329      
.jmpz1103:
    movs r0, #15
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1104
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_329      
.jmpz1104:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1105
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_329      
.jmpz1105:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1106
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_329      
.jmpz1106:
    movs r0, #17
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1107
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_329      
.jmpz1107:
    movs r0, #19
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1108
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_329      
.jmpz1108:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1109
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_8_329      
.jmpz1109:
    movs r0, #21
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1110
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_9_329      
.jmpz1110:
    movs r0, #25
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1111
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_10_329      
.jmpz1111:
    movs r0, #23
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1112
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_11_329      
.jmpz1112:
    movs r0, #31
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1113
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_12_329      
.jmpz1113:
    movs r0, #27
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1114
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_329      
.jmpz1114:
    movs r0, #33
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1115
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_329      
.jmpz1115:
    movs r0, #29
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1116
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_329      
.jmpz1116:
    pop {r0} ; tmpref @1
    b .brk.13100      
.switch_0_329:
.switch_1_329:
.switch_2_329:
.switch_3_329:
    movs r0, #3
    b .ret.215      
.switch_4_329:
.switch_5_329:
.switch_6_329:
.switch_7_329:
    movs r0, #5
    b .ret.215      
.switch_8_329:
.switch_9_329:
.switch_10_329:
.switch_11_329:
.switch_12_329:
.switch_13_329:
    movs r0, #9
    b .ret.215      
.switch_14_329:
.switch_15_329:
    movs r0, #17
    b .ret.215      
.brk.13100:
    movs r0, #1
.ret.215:
    @stackempty locals
.final_16_329:
Buffer_sizeOfNumberFormat__P215_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(43,5): msgpack.tagFormat
    ;
    .object msgpack_tagFormat__P4441 "base/buffer.ts(43,5): msgpack.tagFormat"
msgpack_tagFormat__P4441_pre:
    .section code
    .balign 4
    .section code
msgpack_tagFormat__P4441:
msgpack_tagFormat__P4441_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
msgpack_tagFormat__P4441_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1117
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_330      
.jmpz1117:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1118
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_330      
.jmpz1118:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1119
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_330      
.jmpz1119:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1120
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_330      
.jmpz1120:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1121
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_330      
.jmpz1121:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1122
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_330      
.jmpz1122:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1123
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_330      
.jmpz1123:
    pop {r0} ; tmpref @1
    b .switch_7_330      
.switch_0_330:
    movs r0, #33
    b .ret.4441      
.switch_1_330:
    movs r0, #15
    b .ret.4441      
.switch_2_330:
    movs r0, #19
    b .ret.4441      
.switch_3_330:
    movs r0, #25
    b .ret.4441      
.switch_4_330:
    movs r0, #13
    b .ret.4441      
.switch_5_330:
    movs r0, #17
    b .ret.4441      
.switch_6_330:
    movs r0, #21
    b .ret.4441      
.switch_7_330:
    movs r0, #6
    b .ret.4441      
.brk.13119:
    movs r0, #0
.ret.4441:
    @stackempty locals
.final_8_330:
msgpack_tagFormat__P4441_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(64,5): settings.writeBuffer
    ;
    .object settings_writeBuffer__P2037 "settings/settings.ts(64,5): settings.writeBuffer"
settings_writeBuffer__P2037_pre:
    .section code
    .balign 4
    .section code
settings_writeBuffer__P2037:
settings_writeBuffer__P2037_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeBuffer__P2037_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_90
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_set
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_331      
.jmpz1124:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    movs r0, #115
    lsls r0, r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_331:
.afterif_1_331:
.ret.2037:
    @stackempty locals
    movs r0, #0
.final_2_331:
settings_writeBuffer__P2037_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(239,5): helpers.setScreenBrightness
    ;
    .object helpers_setScreenBrightness__P1943 "screen---st7735/image.ts(239,5): helpers.setScreenBrightness"
helpers_setScreenBrightness__P1943_pre:
    .section code
    .balign 4
    .section code
helpers_setScreenBrightness__P1943:
helpers_setScreenBrightness__P1943_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_setScreenBrightness__P1943_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1125:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #19
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #19
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setScreenBrightness
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.1943:
    @stackempty locals
    movs r0, #0
.final_0_332:
helpers_setScreenBrightness__P1943_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(290,5): scene.systemMenu.brightnessDown
    ;
    .object scene_systemMenu_brightnessDown__P5233 "game/systemmenu.ts(290,5): scene.systemMenu.brightnessDown"
scene_systemMenu_brightnessDown__P5233_pre:
    .section code
    .balign 4
scene_systemMenu_brightnessDown__P5233_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_brightnessDown__P5233_args@fn
scene_systemMenu_brightnessDown__P5233_args:
    .section code
scene_systemMenu_brightnessDown__P5233:
scene_systemMenu_brightnessDown__P5233_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_brightnessDown__P5233_locals:
    movs r0, #19
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #11
    bl _numops_subs
    push {r0} ; the one arg
    bl scene_systemMenu_setScreenBrightness__P5234
_proccall1126:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5233:
    @stackempty locals
    movs r0, #0
.final_0_333:
scene_systemMenu_brightnessDown__P5233_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(272,5): scene.systemMenu.volumeUp
    ;
    .object scene_systemMenu_volumeUp__P5230 "game/systemmenu.ts(272,5): scene.systemMenu.volumeUp"
scene_systemMenu_volumeUp__P5230_pre:
    .section code
    .balign 4
scene_systemMenu_volumeUp__P5230_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_volumeUp__P5230_args@fn
scene_systemMenu_volumeUp__P5230_args:
    .section code
scene_systemMenu_volumeUp__P5230:
scene_systemMenu_volumeUp__P5230_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_volumeUp__P5230_locals:
    bl music_volume__P1618
_proccall1127:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #65
    bl _numops_adds
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl scene_systemMenu_setVolume__P5229
_proccall1128:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5230:
    @stackempty locals
    movs r0, #0
.final_0_335:
    add sp, #4*3 ; pop locals 3
scene_systemMenu_volumeUp__P5230_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(266,5): scene.systemMenu.setVolume
    ;
    .object scene_systemMenu_setVolume__P5229 "game/systemmenu.ts(266,5): scene.systemMenu.setVolume"
scene_systemMenu_setVolume__P5229_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_setVolume__P5229:
scene_systemMenu_setVolume__P5229_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_setVolume__P5229_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl music_setVolume__P1617
_proccall1129:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #113
    push {r0} ; proc-arg
    bl music_playTone__P1619
_proccall1130:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, _ldlit_241 ; _str51      
    push {r0} ; proc-arg
    bl settings_writeNumber__P2040
_proccall1131:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5229:
    @stackempty locals
    movs r0, #0
.final_0_336:
scene_systemMenu_setVolume__P5229_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(85,5): music.playTone
    ;
    .object music_playTone__P1619 "mixer---nrf52/melody.ts(85,5): music.playTone"
music_playTone__P1619_pre:
    .section code
    .balign 4
    .section code
music_playTone__P1619:
music_playTone__P1619_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_playTone__P1619_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r1, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, args@1]
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _cmp_eq
    beq .else_0_337      
.jmpz1132:
    ldr r0, [sp, args@1]
    ldr r1, _ldlit_242 ; 172800001      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
.else_0_337:
.afterif_1_337:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #15
    lsls r1, r1, #8
    adds r1, #161
    bl _cmp_le
    beq .else_2_337      
.jmpz1133:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    bl music_playNoteCore__P4541
_proccall1134:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; the one arg
    bl pause__P413
_proccall1135:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_3_337      
.else_2_337:
    movs r0, #77
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #3
    bl _numops_adds
    push {r0}; tmpstore @1
    movs r1, #77
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_243 ; music_playTone_inline__P13197_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_337:
.ret.1619:
    @stackempty locals
    movs r0, #0
.final_4_337:
    add sp, #4*1 ; pop locals 1
music_playTone__P1619_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(94,35): music.playTone.inline
    ;
    .object music_playTone_inline__P13197 "mixer---nrf52/melody.ts(94,35): music.playTone.inline"
music_playTone_inline__P13197_pre:
    .section code
    .balign 4
music_playTone_inline__P13197_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word music_playTone_inline__P13197_args@fn
music_playTone_inline__P13197_args:
    .section code
music_playTone_inline__P13197:
music_playTone_inline__P13197_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
music_playTone_inline__P13197_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
.cont.13201:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    movs r0, #77
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_338      
.jmpz1136:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_338      
.lazySkip_1_338:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_0_338:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.13201      
.jmpz1137:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_min__P131
_proccall1138:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    ldr r1, [sp, locals@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_subs
    mov r3, r0
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl music_playNoteCore__P4541
_proccall1139:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _cmp_eq
    beq .else_2_338      
.jmpz1140:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    push {r0} ; the one arg
    bl pause__P413
_proccall1141:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_3_338      
.else_2_338:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    movs r1, #201
    bl _numops_subs
    push {r0} ; the one arg
    bl pause__P413
_proccall1142:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_338:
    b .cont.13201      
.brk.13201:
.ret.13197:
    @stackempty locals
    movs r0, #0
.final_4_338:
    add sp, #4*4 ; pop locals 4
music_playTone_inline__P13197_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(67,5): music.playNoteCore
    ;
    .object music_playNoteCore__P4541 "mixer---nrf52/melody.ts(67,5): music.playNoteCore"
music_playNoteCore__P4541_pre:
    .section code
    .balign 4
    .section code
music_playNoteCore__P4541:
music_playNoteCore__P4541_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_playNoteCore__P4541_locals:
    movs r0, #12
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl music_volume__P1618
_proccall1143:
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    push {r3}
    movs r0, #1
    push {r0} ; proc-arg
    push {r4}
    bl music_addNote__P1633
_proccall1144:
    add sp, #4*9 ; pop locals 9
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_91
    mov r7, sp
    str r7, [r6, #4]
    bl music::queuePlayInstructions
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4541:
    @stackempty locals
    movs r0, #0
.final_0_339:
    add sp, #4*1 ; pop locals 1
music_playNoteCore__P4541_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(324,5): music.addNote
    ;
    .object music_addNote__P1633 "mixer---nrf52/melody.ts(324,5): music.addNote"
music_addNote__P1633_pre:
    .section code
    .balign 4
    .section code
music_addNote__P1633:
music_addNote__P1633_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_addNote__P1633_locals:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    bne .jmpz1145
    b .else_0_340      
.object PUSH
.balign 4
_ldlit_241:
 .word _str51
_ldlit_242:
 .word 172800001
_ldlit_243:
 .word music_playTone_inline__P13197_Lit
.object POP
.jmpz1145:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl _conv_92
    movs r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_30
    movs r1, #2
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    bl _conv_92
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_92
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #13
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #13
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_92
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #17
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #13
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_92
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #21
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@8]
    push {r0} ; proc-arg
    bl _conv_92
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #25
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
.else_0_340:
.afterif_1_340:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_30
    movs r1, #2
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
.ret.1633:
    @stackempty locals
.final_2_340:
music_addNote__P1633_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(52,5): music.setVolume
    ;
    .object music_setVolume__P1617 "mixer---nrf52/melody.ts(52,5): music.setVolume"
music_setVolume__P1617_pre:
    .section code
    .balign 4
    .section code
music_setVolume__P1617:
music_setVolume__P1617_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_setVolume__P1617_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1146:
    add sp, #4*3 ; pop locals 3
    movs r1, #39
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #39
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #1
    bl _cmp_gt
    beq .condexprz_0_341      
.jmpz1147:
    movs r0, #3
    b .condexprfin_1_341      
.condexprz_0_341:
    movs r0, #1
.condexprfin_1_341:
; jmp value (already in r0)
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl music::enableAmp
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.1617:
    @stackempty locals
    movs r0, #0
.final_2_341:
music_setVolume__P1617_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(279,5): scene.systemMenu.volumeDown
    ;
    .object scene_systemMenu_volumeDown__P5231 "game/systemmenu.ts(279,5): scene.systemMenu.volumeDown"
scene_systemMenu_volumeDown__P5231_pre:
    .section code
    .balign 4
scene_systemMenu_volumeDown__P5231_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_volumeDown__P5231_args@fn
scene_systemMenu_volumeDown__P5231_args:
    .section code
scene_systemMenu_volumeDown__P5231:
scene_systemMenu_volumeDown__P5231_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_volumeDown__P5231_locals:
    bl music_volume__P1618
_proccall1148:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_342      
.jmpz1149:
    ldr r0, [sp, locals@1]
    b .condexprfin_1_342      
.condexprz_0_342:
    movs r0, #65
.condexprfin_1_342:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    pop {r1} ; tmpref @1
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl scene_systemMenu_setVolume__P5229
_proccall1150:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5231:
    @stackempty locals
    movs r0, #0
.final_2_342:
    add sp, #4*3 ; pop locals 3
scene_systemMenu_volumeDown__P5231_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(62,5): music.volume
    ;
    .object music_volume__P1618 "mixer---nrf52/melody.ts(62,5): music.volume"
music_volume__P1618_pre:
    .section code
    .balign 4
    .section code
music_volume__P1618:
music_volume__P1618_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_volume__P1618_locals:
    bl music_initVolume__P4540
_proccall1151:
    @stackempty locals
    movs r0, #39
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.1618:
    @stackempty locals
.final_0_343:
music_volume__P1618_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(34,5): music.initVolume
    ;
    .object music_initVolume__P4540 "mixer---nrf52/melody.ts(34,5): music.initVolume"
music_initVolume__P4540_pre:
    .section code
    .balign 4
    .section code
music_initVolume__P4540:
music_initVolume__P4540_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_initVolume__P4540_locals:
    movs r0, #39
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #6
    bl _cmp_eqq
    beq .else_0_344      
.jmpz1152:
    movs r0, #1
    movs r1, #39
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #59
    movs r1, #128
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getConfig
    bl _numops_fromInt
    push {r0} ; the one arg
    bl music_setVolume__P1617
_proccall1153:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_344:
.afterif_1_344:
.ret.4540:
    @stackempty locals
    movs r0, #0
.final_2_344:
music_initVolume__P4540_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(39,9): scene.systemMenu.MenuOption.constructor
    ;
    .object scene_systemMenu_MenuOption_constructor__P3064 "game/systemmenu.ts(39,9): scene.systemMenu.MenuOption.constructor"
scene_systemMenu_MenuOption_constructor__P3064_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_MenuOption_constructor__P3064:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3063_validate_83
    mov lr, r7
scene_systemMenu_MenuOption_constructor__P3064_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_constructor__P3064_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #28]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #32]
    movs r0, #0
.ret.3064:
    @stackempty locals
.final_0_345:
scene_systemMenu_MenuOption_constructor__P3064_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(117,9): scene.systemMenu.PauseMenu.constructor
    ;
    .object scene_systemMenu_PauseMenu_constructor__P3072 "game/systemmenu.ts(117,9): scene.systemMenu.PauseMenu.constructor"
scene_systemMenu_PauseMenu_constructor__P3072_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_PauseMenu_constructor__P3072:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3071_validate_82
    mov lr, r7
scene_systemMenu_PauseMenu_constructor__P3072_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_constructor__P3072_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #28]
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_346      
.jmpz1154:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_346      
.lazySkip_1_346:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_buildMenuTheme__P3080
_proccall1155:
    add sp, #4*4 ; pop locals 4
.lazy_0_346:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #0
.ret.3072:
    @stackempty locals
.final_2_346:
scene_systemMenu_PauseMenu_constructor__P3072_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(357,5): scene.systemMenu.buildMenuTheme
    ;
    .object scene_systemMenu_buildMenuTheme__P3080 "game/systemmenu.ts(357,5): scene.systemMenu.buildMenuTheme"
scene_systemMenu_buildMenuTheme__P3080_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_buildMenuTheme__P3080:
scene_systemMenu_buildMenuTheme__P3080_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_buildMenuTheme__P3080_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_347      
.jmpz1156:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_347      
.lazySkip_1_347:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_0_347:
; jmp value (already in r0)
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_347      
.jmpz1157:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_347      
.lazySkip_3_347:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl image_doubledFont__P1956
_proccall1158:
    add sp, #4*1 ; pop locals 1
.lazy_2_347:
; jmp value (already in r0)
    str r0, [sp, args@3]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #90
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #91
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #92
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #242
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #176
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #167
    ldr r2, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall1159:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #93
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall1160:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #5
    bl _numops_subs
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #177
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #168
    ldr r2, _ldlit_245 ; _str64      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #39
    ldr r7, [r6, #0]
    ldr r2, [r7, #76]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #56
    ldr r7, [r6, #0]
    ldr r2, [r7, #80]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #71
    ldr r7, [r6, #0]
    ldr r2, [r7, #72]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
.ret.3080:
    @stackempty locals
.final_4_347:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_buildMenuTheme__P3080_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(147,5): image.doubledFont
    ;
    .object image_doubledFont__P1956 "screen---st7735/text.ts(147,5): image.doubledFont"
image_doubledFont__P1956_pre:
    .section code
    .balign 4
    .section code
image_doubledFont__P1956:
image_doubledFont__P1956_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
image_doubledFont__P1956_locals:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl image_scaledFont__P1957
_proccall1161:
    add sp, #4*2 ; pop locals 2
.ret.1956:
    @stackempty locals
.final_0_348:
image_doubledFont__P1956_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(149,5): game.pushScene
    ;
    .object game_pushScene__P2979 "game/game.ts(149,5): game.pushScene"
game_pushScene__P2979_pre:
    .section code
    .balign 4
    .section code
game_pushScene__P2979:
game_pushScene__P2979_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_pushScene__P2979_locals:
    bl game_currentScene__P2975
_proccall1162:
    str r0, [sp, locals@0]
    @stackempty locals
    bl particles_clearAll__P3157
_proccall1163:
    @stackempty locals
    bl particles_disableAll__P3158
_proccall1164:
    @stackempty locals
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_349      
.jmpz1165:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #71
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_349:
.afterif_1_349:
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    bl game_init__P4980
_proccall1166:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #79
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_349      
.jmpz1167:
    movs r0, #1
    ldr r1, _ldlit_246 ; game_pushScene_inline__P13466_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #79
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1168:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_349:
.afterif_3_349:
.ret.2979:
    @stackempty locals
    movs r0, #0
.final_4_349:
    add sp, #4*1 ; pop locals 1
game_pushScene__P2979_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(158,40): game.pushScene.inline
    ;
    .object game_pushScene_inline__P13466 "game/game.ts(158,40): game.pushScene.inline"
game_pushScene_inline__P13466_pre:
    .section code
    .balign 4
game_pushScene_inline__P13466_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_pushScene_inline__P13466_args@fn
game_pushScene_inline__P13466_args:
    cmp r4, #1
    bge game_pushScene_inline__P13466_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_pushScene_inline__P13466_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_pushScene_inline__P13466:
game_pushScene_inline__P13466_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_pushScene_inline__P13466_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_60
    add sp, #4*2 ; pop locals 2
.ret.13466:
    @stackempty locals
    movs r0, #0
.final_0_350:
game_pushScene_inline__P13466_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(403,5): particles.disableAll
    ;
    .object particles_disableAll__P3158 "game/particles.ts(403,5): particles.disableAll"
particles_disableAll__P3158_pre:
    .section code
    .balign 4
    .section code
particles_disableAll__P3158:
particles_disableAll__P3158_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_disableAll__P3158_locals:
    bl particles_particleSources__P5322
_proccall1170:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_351      
.jmpz1171:
    ldr r0, _ldlit_247 ; particles_disableAll_inline__P13476_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1172:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_pruneParticles__P5318
_proccall1173:
    @stackempty locals
.else_0_351:
.afterif_1_351:
.ret.3158:
    @stackempty locals
    movs r0, #0
.final_2_351:
    add sp, #4*1 ; pop locals 1
particles_disableAll__P3158_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(406,29): particles.disableAll.inline
    ;
    .object particles_disableAll_inline__P13476 "game/particles.ts(406,29): particles.disableAll.inline"
particles_disableAll_inline__P13476_pre:
    .section code
    .balign 4
particles_disableAll_inline__P13476_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_disableAll_inline__P13476_args@fn
particles_disableAll_inline__P13476_args:
    cmp r4, #1
    bge particles_disableAll_inline__P13476_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_disableAll_inline__P13476_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_disableAll_inline__P13476:
particles_disableAll_inline__P13476_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_disableAll_inline__P13476_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3140
_proccall1174:
    add sp, #4*2 ; pop locals 2
    movs r0, #10
.ret.13476:
    @stackempty locals
.final_0_352:
particles_disableAll_inline__P13476_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(392,5): particles.clearAll
    ;
    .object particles_clearAll__P3157 "game/particles.ts(392,5): particles.clearAll"
particles_clearAll__P3157_pre:
    .section code
    .balign 4
    .section code
particles_clearAll__P3157:
particles_clearAll__P3157_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_clearAll__P3157_locals:
    bl particles_particleSources__P5322
_proccall1175:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_353      
.jmpz1176:
    ldr r0, _ldlit_248 ; particles_clearAll_inline__P13487_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1177:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_pruneParticles__P5318
_proccall1178:
    @stackempty locals
.else_0_353:
.afterif_1_353:
.ret.3157:
    @stackempty locals
    movs r0, #0
.final_2_353:
    add sp, #4*1 ; pop locals 1
particles_clearAll__P3157_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(395,29): particles.clearAll.inline
    ;
    .object particles_clearAll_inline__P13487 "game/particles.ts(395,29): particles.clearAll.inline"
particles_clearAll_inline__P13487_pre:
    .section code
    .balign 4
particles_clearAll_inline__P13487_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_clearAll_inline__P13487_args@fn
particles_clearAll_inline__P13487_args:
    cmp r4, #1
    bge particles_clearAll_inline__P13487_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_clearAll_inline__P13487_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_clearAll_inline__P13487:
particles_clearAll_inline__P13487_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_clearAll_inline__P13487_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_clear__P3142
_proccall1179:
    add sp, #4*1 ; pop locals 1
.ret.13487:
    @stackempty locals
    movs r0, #0
.final_0_354:
particles_clearAll_inline__P13487_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(244,9): particles.ParticleSource.clear
    ;
    .object particles_ParticleSource_clear__P3142 "game/particles.ts(244,9): particles.ParticleSource.clear"
particles_ParticleSource_clear__P3142_pre:
    .section code
    .balign 4
particles_ParticleSource_clear__P3142_args:
    cmp r4, #1
    bge particles_ParticleSource_clear__P3142_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_ParticleSource_clear__P3142_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource_clear__P3142:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_clear__P3142_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_clear__P3142_locals:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #32]
    @stackempty locals
.ret.3142:
    @stackempty locals
    movs r0, #0
.final_0_355:
particles_ParticleSource_clear__P3142_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(406,5): scene.systemMenu.initScreen
    ;
    .object scene_systemMenu_initScreen__P5240 "game/systemmenu.ts(406,5): scene.systemMenu.initScreen"
scene_systemMenu_initScreen__P5240_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_initScreen__P5240:
scene_systemMenu_initScreen__P5240_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_initScreen__P5240_locals:
    ldr r0, _ldlit_249 ; _str52      
    push {r0} ; proc-arg
    bl settings_readNumber__P2045
_proccall1180:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_356      
.jmpz1181:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_setScreenBrightness__P1943
_proccall1182:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_356:
.afterif_1_356:
.ret.5240:
    @stackempty locals
    movs r0, #0
.final_2_356:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_initScreen__P5240_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(132,5): settings.readNumber
    ;
    .object settings_readNumber__P2045 "settings/settings.ts(132,5): settings.readNumber"
settings_readNumber__P2045_pre:
    .section code
    .balign 4
    .section code
settings_readNumber__P2045:
settings_readNumber__P2045_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
settings_readNumber__P2045_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_357      
.jmpz1183:
    movs r0, #0
    b .ret.2045      
    b .afterif_1_357      
.else_0_357:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_unpackNumberArray__P183
_proccall1184:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_357      
.jmpz1185:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_357      
.object PUSH
.balign 4
_ldlit_245:
 .word _str64
_ldlit_246:
 .word game_pushScene_inline__P13466_Lit
_ldlit_247:
 .word particles_disableAll_inline__P13476_Lit
_ldlit_248:
 .word particles_clearAll_inline__P13487_Lit
_ldlit_249:
 .word _str52
.object POP
.lazySkip_4_357:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
.lazy_3_357:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_357      
.jmpz1186:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    b .ret.2045      
.else_2_357:
.afterif_5_357:
    movs r0, #0
    b .ret.2045      
.afterif_1_357:
    movs r0, #0
.ret.2045:
    @stackempty locals
.final_6_357:
    add sp, #4*2 ; pop locals 2
settings_readNumber__P2045_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(92,5): msgpack.unpackNumberArray
    ;
    .object msgpack_unpackNumberArray__P183 "base/buffer.ts(92,5): msgpack.unpackNumberArray"
msgpack_unpackNumberArray__P183_pre:
    .section code
    .balign 4
    .section code
msgpack_unpackNumberArray__P183:
msgpack_unpackNumberArray__P183_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_unpackNumberArray__P183_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
.cont.13529:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1187
    b .brk.13529      
.jmpz1187:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    push {r0} ; the one arg
    bl msgpack_tagFormat__P4441
_proccall1188:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #6
    bl _cmp_eqq
    beq .else_0_358      
.jmpz1189:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_30
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_358      
.jmpz1190:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_358      
.lazySkip_3_358:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_2_358:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_358      
.jmpz1191:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_4_358      
.else_1_358:
    movs r0, #6
    b .ret.183      
.afterif_4_358:
    b .afterif_5_358      
.else_0_358:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P175
_proccall1192:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.afterif_5_358:
.cont.13574:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #131
    bl _cmp_eqq
    beq .brk.13574      
.jmpz1193:
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
    b .cont.13574      
.brk.13574:
    b .cont.13529      
.brk.13529:
    ldr r0, [sp, locals@0]
.ret.183:
    @stackempty locals
.final_6_358:
    add sp, #4*3 ; pop locals 3
msgpack_unpackNumberArray__P183_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(400,5): scene.systemMenu.initVolume
    ;
    .object scene_systemMenu_initVolume__P5239 "game/systemmenu.ts(400,5): scene.systemMenu.initVolume"
scene_systemMenu_initVolume__P5239_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_initVolume__P5239:
scene_systemMenu_initVolume__P5239_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_initVolume__P5239_locals:
    ldr r0, _ldlit_251 ; _str51      
    push {r0} ; proc-arg
    bl settings_readNumber__P2045
_proccall1194:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_360      
.jmpz1195:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setVolume__P1617
_proccall1196:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_360:
.afterif_1_360:
.ret.5239:
    @stackempty locals
    movs r0, #0
.final_2_360:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_initVolume__P5239_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(36,9): game.GameOverConfig.constructor
    ;
    .object game_GameOverConfig_constructor__P2964 "game/game.ts(36,9): game.GameOverConfig.constructor"
game_GameOverConfig_constructor__P2964_pre:
    .section code
    .balign 4
    .section code
game_GameOverConfig_constructor__P2964:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_GameOverConfig__C2949_validate_93
    mov lr, r7
game_GameOverConfig_constructor__P2964_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_GameOverConfig_constructor__P2964_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_GameOverConfig_init__P2965_nochk
_proccall1197:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.2964:
    @stackempty locals
.final_0_361:
game_GameOverConfig_constructor__P2964_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(40,9): game.GameOverConfig.init
    ;
    .object game_GameOverConfig_init__P2965 "game/game.ts(40,9): game.GameOverConfig.init"
game_GameOverConfig_init__P2965_pre:
    .section code
    .balign 4
game_GameOverConfig_init__P2965_args:
    cmp r4, #1
    bge game_GameOverConfig_init__P2965_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_GameOverConfig_init__P2965_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_GameOverConfig_init__P2965:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_GameOverConfig__C2949_validate_93
    mov lr, r7
game_GameOverConfig_init__P2965_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_GameOverConfig_init__P2965_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #5
    lsls r1, r1, #6
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #81
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #41
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl music_melodyPlayable__P1905
_proccall1198:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #83
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl music_melodyPlayable__P1905
_proccall1199:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_252 ; _str47      
    str r1, [r0, #32]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_253 ; _str48      
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_254 ; _str49      
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #48]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #52]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #56]
    @stackempty locals
.ret.2965:
    @stackempty locals
    movs r0, #0
.final_0_362:
game_GameOverConfig_init__P2965_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(204,9): music.Melody.constructor
    ;
    .object music_Melody_constructor__P1626 "mixer---nrf52/melody.ts(204,9): music.Melody.constructor"
music_Melody_constructor__P1626_pre:
    .section code
    .balign 4
    .section code
music_Melody_constructor__P1626:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_Melody__C1623_validate_94
    mov lr, r7
music_Melody_constructor__P1626_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_Melody_constructor__P1626_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.1626:
    @stackempty locals
.final_0_363:
music_Melody_constructor__P1626_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/playable.ts(122,5): music.melodyPlayable
    ;
    .object music_melodyPlayable__P1905 "mixer---nrf52/playable.ts(122,5): music.melodyPlayable"
music_melodyPlayable__P1905_pre:
    .section code
    .balign 4
    .section code
music_melodyPlayable__P1905:
music_melodyPlayable__P1905_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_melodyPlayable__P1905_locals:
    ldr r0, _ldlit_255 ; music_MelodyPlayable__C1898_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl music_MelodyPlayable_constructor__P1899
_proccall1200:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
.ret.1905:
    @stackempty locals
.final_0_364:
music_melodyPlayable__P1905_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/playable.ts(69,9): music.MelodyPlayable.constructor
    ;
    .object music_MelodyPlayable_constructor__P1899 "mixer---nrf52/playable.ts(69,9): music.MelodyPlayable.constructor"
music_MelodyPlayable_constructor__P1899_pre:
    .section code
    .balign 4
    .section code
music_MelodyPlayable_constructor__P1899:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_MelodyPlayable__C1898_validate_95
    mov lr, r7
music_MelodyPlayable_constructor__P1899_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_MelodyPlayable_constructor__P1899_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    movs r0, #0
    @stackempty locals
    movs r0, #0
.ret.1899:
    @stackempty locals
.final_0_365:
music_MelodyPlayable_constructor__P1899_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(73,46): melt.inline
    ;
    .object melt_inline__P13647 "game/effects.ts(73,46): melt.inline"
melt_inline__P13647_pre:
    .section code
    .balign 4
melt_inline__P13647_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word melt_inline__P13647_args@fn
melt_inline__P13647_args:
    cmp r4, #2
    bge melt_inline__P13647_nochk
    push {lr}
    bl _expand_args_2_19
    bl melt_inline__P13647_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
melt_inline__P13647:
melt_inline__P13647_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
melt_inline__P13647_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #11
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.13659:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.13659      
.jmpz1201:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3039
_proccall1202:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #7
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3039
_proccall1203:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.cont.13659:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.13659      
.brk.13659:
.ret.13647:
    @stackempty locals
    movs r0, #0
.final_0_367:
    add sp, #4*5 ; pop locals 5
melt_inline__P13647_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(192,60): confetti.inline
    ;
    .object confetti_inline__P13700 "game/particleeffects.ts(192,60): confetti.inline"
confetti_inline__P13700_pre:
    .section code
    .balign 4
confetti_inline__P13700_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word confetti_inline__P13700_args@fn
confetti_inline__P13700_args:
    cmp r4, #2
    bge confetti_inline__P13700_nochk
    push {lr}
    bl _expand_args_2_19
    bl confetti_inline__P13700_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
confetti_inline__P13700:
confetti_inline__P13700_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
confetti_inline__P13700_locals:
    ldr r0, _ldlit_256 ; particles_ConfettiFactory__C3194_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #111
    bl _ifacecall1_get_8
_proccall1205:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_368      
.jmpz1204:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #111
    bl _ifacecall1_get_8
_proccall1206:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_368      
.condexprz_0_368:
    movs r0, #33
    b .condexprfin_1_368      
.object PUSH
.balign 4
_ldlit_251:
 .word _str51
_ldlit_252:
 .word _str47
_ldlit_253:
 .word _str48
_ldlit_254:
 .word _str49
_ldlit_255:
 .word music_MelodyPlayable__C1898_VT
_ldlit_256:
 .word particles_ConfettiFactory__C3194_VT
.object POP
.condexprfin_1_368:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl particles_ConfettiFactory_constructor__P3195
_proccall1207:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #61
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_setSpeed__P3171
_proccall1208:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_258 ; particles_ParticleSource__C3127_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl particles_ParticleSource_constructor__P3132
_proccall1209:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
.ret.13700:
    @stackempty locals
.final_2_368:
    add sp, #4*1 ; pop locals 1
confetti_inline__P13700_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(88,9): particles.ParticleSource.constructor
    ;
    .object particles_ParticleSource_constructor__P3132 "game/particles.ts(88,9): particles.ParticleSource.constructor"
particles_ParticleSource_constructor__P3132_pre:
    .section code
    .balign 4
    .section code
particles_ParticleSource_constructor__P3132:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_constructor__P3132_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource_constructor__P3132_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_constructor__P2073
_proccall1210:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_init__P5316
_proccall1211:
    @stackempty locals
    bl particles_particleSources__P5322
_proccall1212:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #21
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _cmp_ge
    beq .else_0_369      
.jmpz1213:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl particles_sortSources__P5319
_proccall1214:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayShift__P102
_proccall1215:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl particles_ParticleSource_clear__P3142
_proccall1216:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl particles_ParticleSource_destroy__P3141
_proccall1217:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_369:
.afterif_1_369:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setRate__P3144_nochk
_proccall1218:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setAcceleration__P3136_nochk
_proccall1219:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setAnchor__P3143_nochk
_proccall1220:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_369      
.jmpz1221:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_369      
.lazySkip_3_369:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_2_369:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setFactory__P3146_nochk
_proccall1222:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3140_nochk
_proccall1223:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3132:
    @stackempty locals
.final_4_369:
    add sp, #4*2 ; pop locals 2
particles_ParticleSource_constructor__P3132_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(99,9): particles.SprayFactory.constructor
    ;
    .object particles_SprayFactory_constructor__P3168 "game/particlefactories.ts(99,9): particles.SprayFactory.constructor"
particles_SprayFactory_constructor__P3168_pre:
    .section code
    .balign 4
    .section code
particles_SprayFactory_constructor__P3168:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3167_validate_96
    mov lr, r7
particles_SprayFactory_constructor__P3168_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_constructor__P3168_locals:
    movs r0, #0
    @stackempty locals
    bl particles_initTrig__P5337
_proccall1224:
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_setSpeed__P3171_nochk
_proccall1225:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_setDirection__P3172_nochk
_proccall1226:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3168:
    @stackempty locals
.final_0_370:
particles_SprayFactory_constructor__P3168_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(124,9): particles.SprayFactory.setDirection
    ;
    .object particles_SprayFactory_setDirection__P3172 "game/particlefactories.ts(124,9): particles.SprayFactory.setDirection"
particles_SprayFactory_setDirection__P3172_pre:
    .section code
    .balign 4
particles_SprayFactory_setDirection__P3172_args:
    cmp r4, #3
    bge particles_SprayFactory_setDirection__P3172_nochk
    push {lr}
    bl _expand_args_3_14
    bl particles_SprayFactory_setDirection__P3172_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
particles_SprayFactory_setDirection__P3172:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3167_validate_96
    mov lr, r7
particles_SprayFactory_setDirection__P3172_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_setDirection__P3172_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl particles_toRadians__P5342
_proccall1227:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #43
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl particles_toRadians__P5342
_proccall1228:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #43
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3172:
    @stackempty locals
    movs r0, #0
.final_0_371:
particles_SprayFactory_setDirection__P3172_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(46,5): particles.toRadians
    ;
    .object particles_toRadians__P5342 "game/particlefactories.ts(46,5): particles.toRadians"
particles_toRadians__P5342_pre:
    .section code
    .balign 4
    .section code
particles_toRadians__P5342:
particles_toRadians__P5342_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_toRadians__P5342_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_372      
.jmpz1229:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_abs__P128
_proccall1230:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #209
    bl _numops_subs
    str r0, [sp, args@0]
    @stackempty locals
    b .afterif_1_372      
.else_0_372:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@0]
    @stackempty locals
.afterif_1_372:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r1, _ldlit_259 ; _dbl79      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
.ret.5342:
    @stackempty locals
.final_2_372:
particles_toRadians__P5342_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(12,5): particles.initTrig
    ;
    .object particles_initTrig__P5337 "game/particlefactories.ts(12,5): particles.initTrig"
particles_initTrig__P5337_pre:
    .section code
    .balign 4
    .section code
particles_initTrig__P5337:
particles_initTrig__P5337_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_initTrig__P5337_locals:
    movs r0, #87
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_373      
.jmpz1231:
    movs r0, #201
    push {r0} ; proc-arg
    bl particles_cacheSin__P3161
_proccall1232:
    add sp, #4*1 ; pop locals 1
    movs r1, #87
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #201
    push {r0} ; proc-arg
    bl particles_cacheCos__P3162
_proccall1233:
    add sp, #4*1 ; pop locals 1
    movs r1, #11
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_373:
.afterif_1_373:
.ret.5337:
    @stackempty locals
    movs r0, #0
.final_2_373:
particles_initTrig__P5337_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(36,5): particles.cacheCos
    ;
    .object particles_cacheCos__P3162 "game/particlefactories.ts(36,5): particles.cacheCos"
particles_cacheCos__P3162_pre:
    .section code
    .balign 4
    .section code
particles_cacheCos__P3162:
particles_cacheCos__P3162_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_cacheCos__P3162_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_260 ; _dbl78      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.13835:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@0]
    bl _cmp_lt
    bne .jmpz1234
    b .brk.13835      
.object PUSH
.balign 4
_ldlit_258:
 .word particles_ParticleSource__C3127_VT
_ldlit_259:
 .word _dbl79
_ldlit_260:
 .word _dbl78
.object POP
.jmpz1234:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::cos
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1235:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13835:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.13835      
.brk.13835:
    ldr r0, [sp, locals@0]
.ret.3162:
    @stackempty locals
.final_0_374:
    add sp, #4*3 ; pop locals 3
particles_cacheCos__P3162_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(23,5): particles.cacheSin
    ;
    .object particles_cacheSin__P3161 "game/particlefactories.ts(23,5): particles.cacheSin"
particles_cacheSin__P3161_pre:
    .section code
    .balign 4
    .section code
particles_cacheSin__P3161:
particles_cacheSin__P3161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_cacheSin__P3161_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_262 ; _dbl78      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.13862:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@0]
    bl _cmp_lt
    beq .brk.13862      
.jmpz1236:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::sin
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1237:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13862:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.13862      
.brk.13862:
    ldr r0, [sp, locals@0]
.ret.3161:
    @stackempty locals
.final_0_375:
    add sp, #4*3 ; pop locals 3
particles_cacheSin__P3161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(273,9): particles.ParticleSource.setFactory
    ;
    .object particles_ParticleSource_setFactory__P3146 "game/particles.ts(273,9): particles.ParticleSource.setFactory"
particles_ParticleSource_setFactory__P3146_pre:
    .section code
    .balign 4
particles_ParticleSource_setFactory__P3146_args:
    cmp r4, #2
    bge particles_ParticleSource_setFactory__P3146_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ParticleSource_setFactory__P3146_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setFactory__P3146:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_setFactory__P3146_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setFactory__P3146_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_377      
.jmpz1238:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #44]
    @stackempty locals
.else_0_377:
.afterif_1_377:
.ret.3146:
    @stackempty locals
    movs r0, #0
.final_2_377:
particles_ParticleSource_setFactory__P3146_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(252,9): particles.ParticleSource.setAnchor
    ;
    .object particles_ParticleSource_setAnchor__P3143 "game/particles.ts(252,9): particles.ParticleSource.setAnchor"
particles_ParticleSource_setAnchor__P3143_pre:
    .section code
    .balign 4
particles_ParticleSource_setAnchor__P3143_args:
    cmp r4, #2
    bge particles_ParticleSource_setAnchor__P3143_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ParticleSource_setAnchor__P3143_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setAnchor__P3143:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_setAnchor__P3143_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setAnchor__P3143_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
.ret.3143:
    @stackempty locals
    movs r0, #0
.final_0_378:
particles_ParticleSource_setAnchor__P3143_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(195,9): particles.ParticleSource.setAcceleration
    ;
    .object particles_ParticleSource_setAcceleration__P3136 "game/particles.ts(195,9): particles.ParticleSource.setAcceleration"
particles_ParticleSource_setAcceleration__P3136_pre:
    .section code
    .balign 4
particles_ParticleSource_setAcceleration__P3136_args:
    cmp r4, #3
    bge particles_ParticleSource_setAcceleration__P3136_nochk
    push {lr}
    bl _expand_args_3_14
    bl particles_ParticleSource_setAcceleration__P3136_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
particles_ParticleSource_setAcceleration__P3136:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_setAcceleration__P3136_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setAcceleration__P3136_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1239:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1240:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #52]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3136:
    @stackempty locals
    movs r0, #0
.final_0_379:
particles_ParticleSource_setAcceleration__P3136_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(260,9): particles.ParticleSource.setRate
    ;
    .object particles_ParticleSource_setRate__P3144 "game/particles.ts(260,9): particles.ParticleSource.setRate"
particles_ParticleSource_setRate__P3144_pre:
    .section code
    .balign 4
particles_ParticleSource_setRate__P3144_args:
    cmp r4, #2
    bge particles_ParticleSource_setRate__P3144_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ParticleSource_setRate__P3144_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setRate__P3144:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_setRate__P3144_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setRate__P3144_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::ceil
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #36]
    @stackempty locals
.ret.3144:
    @stackempty locals
    movs r0, #0
.final_0_380:
particles_ParticleSource_setRate__P3144_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(234,9): particles.ParticleSource.destroy
    ;
    .object particles_ParticleSource_destroy__P3141 "game/particles.ts(234,9): particles.ParticleSource.destroy"
particles_ParticleSource_destroy__P3141_pre:
    .section code
    .balign 4
particles_ParticleSource_destroy__P3141_args:
    cmp r4, #1
    bge particles_ParticleSource_destroy__P3141_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_ParticleSource_destroy__P3141_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource_destroy__P3141:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_destroy__P3141_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_destroy__P3141_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3140_nochk
_proccall1241:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #28]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource__prune__P3135_nochk
_proccall1242:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3141:
    @stackempty locals
    movs r0, #0
.final_0_381:
particles_ParticleSource_destroy__P3141_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(154,5): helpers.arrayShift
    ;
    .object helpers_arrayShift__P102 "base/pxt-helpers.ts(154,5): helpers.arrayShift"
helpers_arrayShift__P102_pre:
    .section code
    .balign 4
    .section code
helpers_arrayShift__P102:
helpers_arrayShift__P102_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arrayShift__P102_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*1 ; pop locals 1
.ret.102:
    @stackempty locals
.final_0_382:
helpers_arrayShift__P102_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(333,5): particles.sortSources
    ;
    .object particles_sortSources__P5319 "game/particles.ts(333,5): particles.sortSources"
particles_sortSources__P5319_pre:
    .section code
    .balign 4
    .section code
particles_sortSources__P5319:
particles_sortSources__P5319_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_sortSources__P5319_locals:
    ldr r0, _ldlit_263 ; particles_sortSources_inline__P13932_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_arraySort__P105
_proccall1243:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5319:
    @stackempty locals
    movs r0, #0
.final_0_383:
particles_sortSources__P5319_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(334,22): particles.sortSources.inline
    ;
    .object particles_sortSources_inline__P13932 "game/particles.ts(334,22): particles.sortSources.inline"
particles_sortSources_inline__P13932_pre:
    .section code
    .balign 4
particles_sortSources_inline__P13932_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_sortSources_inline__P13932_args@fn
particles_sortSources_inline__P13932_args:
    cmp r4, #2
    bge particles_sortSources_inline__P13932_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_sortSources_inline__P13932_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_sortSources_inline__P13932:
particles_sortSources_inline__P13932_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_sortSources_inline__P13932_locals:
    ldr r0, [sp, args@0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_ParticleSource__C3127_validate_85
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_384      
.jmpz1244:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_384      
.lazySkip_1_384:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_ParticleSource__C3127_validate_85
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.lazy_0_384:
; jmp value (already in r0)
.ret.13932:
    @stackempty locals
.final_2_384:
particles_sortSources_inline__P13932_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(10,26): MAX_SOURCES.inline
    ;
    .object MAX_SOURCES_inline__P13947 "game/particles.ts(10,26): MAX_SOURCES.inline"
MAX_SOURCES_inline__P13947_pre:
    .section code
    .balign 4
MAX_SOURCES_inline__P13947_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word MAX_SOURCES_inline__P13947_args@fn
MAX_SOURCES_inline__P13947_args:
    .section code
MAX_SOURCES_inline__P13947:
MAX_SOURCES_inline__P13947_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
MAX_SOURCES_inline__P13947_locals:
    bl control_ramSize__P346
_proccall1245:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, _ldlit_264 ; 204801      
    bl _cmp_le
    beq .else_0_385      
.jmpz1246:
    movs r0, #17
    b .ret.13947      
    b .afterif_1_385      
.else_0_385:
    ldr r0, [sp, locals@0]
    ldr r1, _ldlit_265 ; 409601      
    bl _cmp_le
    beq .else_2_385      
.jmpz1247:
    movs r0, #33
    b .ret.13947      
    b .afterif_3_385      
.else_2_385:
    movs r0, #101
    b .ret.13947      
.afterif_3_385:
.afterif_1_385:
    movs r0, #0
.ret.13947:
    @stackempty locals
.final_4_385:
    add sp, #4*1 ; pop locals 1
MAX_SOURCES_inline__P13947_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/control.ts(166,5): control.ramSize
    ;
    .object control_ramSize__P346 "base/control.ts(166,5): control.ramSize"
control_ramSize__P346_pre:
    .section code
    .balign 4
    .section code
control_ramSize__P346:
control_ramSize__P346_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_ramSize__P346_locals:
    movs r0, #205
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getConfig
    bl _numops_fromInt
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_386      
.jmpz1248:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_386      
.lazySkip_1_386:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl control::_ramSize
    bl _numops_fromInt
.lazy_0_386:
; jmp value (already in r0)
.ret.346:
    @stackempty locals
.final_2_386:
control_ramSize__P346_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_262:
 .word _dbl78
_ldlit_263:
 .word particles_sortSources_inline__P13932_Lit
_ldlit_264:
 .word 204801
_ldlit_265:
 .word 409601
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(305,5): particles.init
    ;
    .object particles_init__P5316 "game/particles.ts(305,5): particles.init"
particles_init__P5316_pre:
    .section code
    .balign 4
    .section code
particles_init__P5316:
particles_init__P5316_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_init__P5316_locals:
    bl game_currentScene__P2975
_proccall1249:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #72]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_387      
.jmpz1250:
    b .ret.5316      
.else_0_387:
.afterif_1_387:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_scene_Scene__C2819_validate_10
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    movs r1, #89
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_267 ; particles_updateParticles__P5317_Lit      
    push {r0} ; proc-arg
    bl game_onUpdate__P2999
_proccall1251:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_268 ; particles_pruneParticles__P5318_Lit      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #245
    push {r0} ; proc-arg
    bl game_onUpdateInterval__P3000
_proccall1252:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5316:
    @stackempty locals
    movs r0, #0
.final_2_387:
    add sp, #4*1 ; pop locals 1
particles_init__P5316_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameutil.ts(27,5): game.onUpdateInterval
    ;
    .object game_onUpdateInterval__P3000 "game/gameutil.ts(27,5): game.onUpdateInterval"
game_onUpdateInterval__P3000_pre:
    .section code
    .balign 4
    .section code
game_onUpdateInterval__P3000:
game_onUpdateInterval__P3000_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_onUpdateInterval__P3000_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_388      
.jmpz1253:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_388      
.lazySkip_2_388:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_1_388:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_388      
.jmpz1254:
    b .ret.3000      
.else_0_388:
.afterif_3_388:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_269 ; game_onUpdateInterval_inline__P13991_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    bl game_eventContext__P2978
_proccall1255:
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #39
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall1256:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3000:
    @stackempty locals
    movs r0, #0
.final_4_388:
    add sp, #4*1 ; pop locals 1
game_onUpdateInterval__P3000_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameutil.ts(30,82): game.onUpdateInterval.inline
    ;
    .object game_onUpdateInterval_inline__P13991 "game/gameutil.ts(30,82): game.onUpdateInterval.inline"
game_onUpdateInterval_inline__P13991_pre:
    .section code
    .balign 4
game_onUpdateInterval_inline__P13991_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_onUpdateInterval_inline__P13991_args@fn
game_onUpdateInterval_inline__P13991_args:
    .section code
game_onUpdateInterval_inline__P13991:
game_onUpdateInterval_inline__P13991_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_onUpdateInterval_inline__P13991_locals:
    bl game_currentScene__P2975
_proccall1257:
    ldr r0, [r0, #92]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    ldr r1, [sp, locals@0]
    bl _cmp_le
    beq .else_0_389      
.jmpz1258:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [r5, #4*4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_389:
.afterif_1_389:
.ret.13991:
    @stackempty locals
    movs r0, #0
.final_2_389:
    add sp, #4*1 ; pop locals 1
game_onUpdateInterval_inline__P13991_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(196,9): scene.Scene.millis
    ;
    .object scene_Scene_millis__P2845 "game/scene.ts(196,9): scene.Scene.millis"
scene_Scene_millis__P2845_pre:
    .section code
    .balign 4
scene_Scene_millis__P2845_args:
    cmp r4, #1
    bge scene_Scene_millis__P2845_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_millis__P2845_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_millis__P2845:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2819_validate_10
    mov lr, r7
scene_Scene_millis__P2845_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_millis__P2845_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
.ret.2845:
    @stackempty locals
.final_0_390:
scene_Scene_millis__P2845_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(314,5): particles.updateParticles
    ;
    .object particles_updateParticles__P5317 "game/particles.ts(314,5): particles.updateParticles"
particles_updateParticles__P5317_pre:
    .section code
    .balign 4
particles_updateParticles__P5317_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_updateParticles__P5317_args@fn
particles_updateParticles__P5317_args:
    .section code
particles_updateParticles__P5317:
particles_updateParticles__P5317_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_updateParticles__P5317_locals:
    bl particles_particleSources__P5322
_proccall1260:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_391      
.jmpz1261:
    b .ret.5317      
.else_0_391:
.afterif_1_391:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl particles_sortSources__P5319
_proccall1262:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #89
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #89
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.14023:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.14023      
.jmpz1263:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl particles_ParticleSource__update__P3134
_proccall1264:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.14023:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.14023      
.brk.14023:
.ret.5317:
    @stackempty locals
    movs r0, #0
.final_2_391:
    add sp, #4*4 ; pop locals 4
particles_updateParticles__P5317_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(125,9): particles.ParticleSource._update
    ;
    .object particles_ParticleSource__update__P3134 "game/particles.ts(125,9): particles.ParticleSource._update"
particles_ParticleSource__update__P3134_pre:
    .section code
    .balign 4
particles_ParticleSource__update__P3134_args:
    cmp r4, #2
    bge particles_ParticleSource__update__P3134_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ParticleSource__update__P3134_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource__update__P3134:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource__update__P3134_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource__update__P3134_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_392      
.jmpz1265:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    movs r1, #1
    bl _cmp_le
    beq .else_1_392      
.jmpz1266:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_destroy__P3141_nochk
_proccall1267:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_1_392:
.afterif_2_392:
    b .afterif_3_392      
.else_0_392:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_392      
.jmpz1268:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_392      
.lazySkip_6_392:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #146
    bl _ifacecall1_get_8
_proccall1269:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.lazy_5_392:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_392      
.jmpz1270:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_392      
.object PUSH
.balign 4
_ldlit_267:
 .word particles_updateParticles__P5317_Lit
_ldlit_268:
 .word particles_pruneParticles__P5318_Lit
_ldlit_269:
 .word game_onUpdateInterval_inline__P13991_Lit
.object POP
.lazySkip_8_392:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #146
    bl _ifacecall1_get_8
_proccall1271:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_ands
.lazy_7_392:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_392      
.jmpz1272:
    ldr r0, [sp, args@0]
    movs r1, #5
    lsls r1, r1, #8
    adds r1, #221
    str r1, [r0, #24]
    @stackempty locals
.else_4_392:
.afterif_9_392:
.afterif_3_392:
.cont.14070:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_11_392      
.jmpz1273:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_392      
.lazySkip_11_392:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3139_nochk
_proccall1274:
    add sp, #4*1 ; pop locals 1
.lazy_10_392:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.14070      
.jmpz1275:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #36
    bl _classCall_particles_ParticleFactory__C3163_97
_proccall1276:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_392      
.jmpz1277:
    b .cont.14070      
.else_12_392:
.afterif_13_392:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #32]
    @stackempty locals
    b .cont.14070      
.brk.14070:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_392      
.jmpz1278:
    b .ret.3134      
.else_14_392:
.afterif_15_392:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1279:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_16_392      
.jmpz1280:
.cont.14114:
    ldr r0, [sp, locals@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_gt
    beq .else_17_392      
.jmpz1281:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #20]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2317_this_23
_proccall1282:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_17_392:
.afterif_18_392:
    ldr r0, [sp, locals@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.14114      
.jmpz1283:
    b .cont.14114      
.brk.14114:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    b .afterif_19_392      
.else_16_392:
.cont.14130:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #20]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.14130      
.jmpz1284:
    b .cont.14130      
.brk.14130:
.afterif_19_392:
.ret.3134:
    @stackempty locals
    movs r0, #0
.final_20_392:
    add sp, #4*3 ; pop locals 3
particles_ParticleSource__update__P3134_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(278,9): particles.ParticleSource.updateParticle
    ;
    .object particles_ParticleSource_updateParticle__P5313 "game/particles.ts(278,9): particles.ParticleSource.updateParticle"
particles_ParticleSource_updateParticle__P5313_pre:
    .section code
    .balign 4
particles_ParticleSource_updateParticle__P5313_args:
    cmp r4, #3
    bge particles_ParticleSource_updateParticle__P5313_nochk
    push {lr}
    bl _expand_args_3_14
    bl particles_ParticleSource_updateParticle__P5313_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
particles_ParticleSource_updateParticle__P5313:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_updateParticle__P5313_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_updateParticle__P5313_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #21
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1285:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1286:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #4]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1287:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #8]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #16]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1288:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5313:
    @stackempty locals
    movs r0, #0
.final_0_393:
particles_ParticleSource_updateParticle__P5313_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(68,9): particles.ParticleFactory.createParticle
    ;
    .object particles_ParticleFactory_createParticle__P3165 "game/particlefactories.ts(68,9): particles.ParticleFactory.createParticle"
particles_ParticleFactory_createParticle__P3165_pre:
    .section code
    .balign 4
particles_ParticleFactory_createParticle__P3165_args:
    cmp r4, #2
    bge particles_ParticleFactory_createParticle__P3165_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ParticleFactory_createParticle__P3165_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleFactory_createParticle__P3165:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleFactory__C3163_validate_98
    mov lr, r7
particles_ParticleFactory_createParticle__P3165_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_ParticleFactory_createParticle__P3165_locals:
    ldr r0, _ldlit_271 ; particles_Particle__C3108_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #119
    bl _ifacecall1_get_8
_proccall1289:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1290:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #123
    bl _ifacecall1_get_8
_proccall1291:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1292:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #233
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3165:
    @stackempty locals
.final_0_395:
    add sp, #4*1 ; pop locals 1
particles_ParticleFactory_createParticle__P3165_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameutil.ts(14,5): game.onUpdate
    ;
    .object game_onUpdate__P2999 "game/gameutil.ts(14,5): game.onUpdate"
game_onUpdate__P2999_pre:
    .section code
    .balign 4
    .section code
game_onUpdate__P2999:
game_onUpdate__P2999_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_onUpdate__P2999_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_396      
.jmpz1293:
    b .ret.2999      
.else_0_396:
.afterif_1_396:
    bl game_eventContext__P2978
_proccall1294:
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall1295:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2999:
    @stackempty locals
    movs r0, #0
.final_2_396:
game_onUpdate__P2999_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(120,9): particles.SprayFactory.setSpeed
    ;
    .object particles_SprayFactory_setSpeed__P3171 "game/particlefactories.ts(120,9): particles.SprayFactory.setSpeed"
particles_SprayFactory_setSpeed__P3171_pre:
    .section code
    .balign 4
particles_SprayFactory_setSpeed__P3171_args:
    cmp r4, #2
    bge particles_SprayFactory_setSpeed__P3171_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_SprayFactory_setSpeed__P3171_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_SprayFactory_setSpeed__P3171:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3167_validate_96
    mov lr, r7
particles_SprayFactory_setSpeed__P3171_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_setSpeed__P3171_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1296:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3171:
    @stackempty locals
    movs r0, #0
.final_0_397:
particles_SprayFactory_setSpeed__P3171_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(248,9): particles.ConfettiFactory.constructor
    ;
    .object particles_ConfettiFactory_constructor__P3195 "game/particlefactories.ts(248,9): particles.ConfettiFactory.constructor"
particles_ConfettiFactory_constructor__P3195_pre:
    .section code
    .balign 4
    .section code
particles_ConfettiFactory_constructor__P3195:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ConfettiFactory__C3194_validate_99
    mov lr, r7
particles_ConfettiFactory_constructor__P3195_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ConfettiFactory_constructor__P3195_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, _ldlit_272 ; _hexlit80      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, _ldlit_273 ; _hexlit81      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_274 ; _hexlit82      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_275 ; _hexlit83      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_276 ; _hexlit84      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl particles_ShapeFactory_constructor__P3190
_proccall1297:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.14247:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.14247      
.jmpz1298:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl particles_ShapeFactory_addShape__P3191_nochk
_proccall1299:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.14247:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.14247      
.brk.14247:
    ldr r0, [sp, args@0]
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #35
    lsls r1, r1, #8
    adds r1, #41
    str r1, [r0, #28]
    @stackempty locals
    movs r0, #0
.ret.3195:
    @stackempty locals
.final_0_398:
    add sp, #4*2 ; pop locals 2
particles_ConfettiFactory_constructor__P3195_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(226,9): particles.ShapeFactory.addShape
    ;
    .object particles_ShapeFactory_addShape__P3191 "game/particlefactories.ts(226,9): particles.ShapeFactory.addShape"
particles_ShapeFactory_addShape__P3191_pre:
    .section code
    .balign 4
particles_ShapeFactory_addShape__P3191_args:
    cmp r4, #2
    bge particles_ShapeFactory_addShape__P3191_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ShapeFactory_addShape__P3191_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ShapeFactory_addShape__P3191:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3189_validate_100
    mov lr, r7
particles_ShapeFactory_addShape__P3191_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ShapeFactory_addShape__P3191_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_399      
.jmpz1300:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_399:
.afterif_1_399:
.ret.3191:
    @stackempty locals
    movs r0, #0
.final_2_399:
particles_ShapeFactory_addShape__P3191_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_271:
 .word particles_Particle__C3108_VT
_ldlit_272:
 .word _hexlit80
_ldlit_273:
 .word _hexlit81
_ldlit_274:
 .word _hexlit82
_ldlit_275:
 .word _hexlit83
_ldlit_276:
 .word _hexlit84
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(213,9): particles.ShapeFactory.constructor
    ;
    .object particles_ShapeFactory_constructor__P3190 "game/particlefactories.ts(213,9): particles.ShapeFactory.constructor"
particles_ShapeFactory_constructor__P3190_pre:
    .section code
    .balign 4
    .section code
particles_ShapeFactory_constructor__P3190:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3189_validate_100
    mov lr, r7
particles_ShapeFactory_constructor__P3190_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ShapeFactory_constructor__P3190_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_AreaFactory_constructor__P3178
_proccall1301:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1302:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1303:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3190:
    @stackempty locals
.final_0_400:
particles_ShapeFactory_constructor__P3190_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(140,9): particles.AreaFactory.constructor
    ;
    .object particles_AreaFactory_constructor__P3178 "game/particlefactories.ts(140,9): particles.AreaFactory.constructor"
particles_AreaFactory_constructor__P3178_pre:
    .section code
    .balign 4
    .section code
particles_AreaFactory_constructor__P3178:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_AreaFactory__C3173_validate_101
    mov lr, r7
particles_AreaFactory_constructor__P3178_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_AreaFactory_constructor__P3178_locals:
    movs r0, #181
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_constructor__P3168
_proccall1304:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_401      
.jmpz1305:
    ldr r0, [sp, args@3]
    b .condexprfin_1_401      
.condexprz_0_401:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
.condexprfin_1_401:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_401      
.jmpz1306:
    ldr r0, [sp, args@4]
    b .condexprfin_3_401      
.condexprz_2_401:
    movs r0, #6
    lsls r0, r0, #8
    adds r0, #165
.condexprfin_3_401:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, _ldlit_278 ; Math_FastRandom__C3035_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Math_FastRandom_constructor__P3037
_proccall1307:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #32]
    @stackempty locals
    movs r0, #0
.ret.3178:
    @stackempty locals
.final_4_401:
particles_AreaFactory_constructor__P3178_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(82,9): effects.ScreenEffect.constructor
    ;
    .object effects_ScreenEffect_constructor__P3243 "game/particleeffects.ts(82,9): effects.ScreenEffect.constructor"
effects_ScreenEffect_constructor__P3243_pre:
    .section code
    .balign 4
    .section code
effects_ScreenEffect_constructor__P3243:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ScreenEffect__C3242_validate_102
    mov lr, r7
effects_ScreenEffect_constructor__P3243_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ScreenEffect_constructor__P3243_locals:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl effects_ParticleEffect_constructor__P3239
_proccall1308:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #0
.ret.3243:
    @stackempty locals
.final_0_402:
effects_ScreenEffect_constructor__P3243_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(14,9): effects.ParticleEffect.constructor
    ;
    .object effects_ParticleEffect_constructor__P3239 "game/particleeffects.ts(14,9): effects.ParticleEffect.constructor"
effects_ParticleEffect_constructor__P3239_pre:
    .section code
    .balign 4
    .section code
effects_ParticleEffect_constructor__P3239:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ParticleEffect__C3238_validate_87
    mov lr, r7
effects_ParticleEffect_constructor__P3239_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ParticleEffect_constructor__P3239_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #0
.ret.3239:
    @stackempty locals
.final_0_403:
effects_ParticleEffect_constructor__P3239_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(5,1): Fx8
    ;
    .object Fx8__P149 "base/fixed.ts(5,1): Fx8"
Fx8__P149_pre:
    .section code
    .balign 4
    .section code
Fx8__P149:
Fx8__P149_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx8__P149_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
.ret.149:
    @stackempty locals
.final_0_404:
Fx8__P149_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritekind.ts(27,5): SpriteKind.create
    ;
    .object SpriteKind_create__P2455 "game/spritekind.ts(27,5): SpriteKind.create"
SpriteKind_create__P2455_pre:
    .section code
    .balign 4
    .section code
SpriteKind_create__P2455:
SpriteKind_create__P2455_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
SpriteKind_create__P2455_locals:
    movs r0, #45
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_405      
.jmpz1309:
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    movs r1, #45
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_405:
.afterif_1_405:
    movs r0, #45
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    movs r1, #45
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    pop {r0} ; tmpref @1
.ret.2455:
    @stackempty locals
.final_2_405:
SpriteKind_create__P2455_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(78,9): controller.Button.constructor
    ;
    .object controller_Button_constructor__P2172 "game/controllerbutton.ts(78,9): controller.Button.constructor"
controller_Button_constructor__P2172_pre:
    .section code
    .balign 4
    .section code
controller_Button_constructor__P2172:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_constructor__P2172_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_constructor__P2172_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_gt
    beq .else_0_406      
.jmpz1310:
    movs r0, #1
    ldr r1, _ldlit_279 ; controller_Button_inline__P14379_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_103
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #2
    movs r3, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_280 ; controller_Button_inline__P14386_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_103
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #3
    movs r3, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    beq .else_1_406      
.jmpz1311:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setupButton
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_406:
.afterif_2_406:
.else_0_406:
.afterif_3_406:
    movs r0, #0
.ret.2172:
    @stackempty locals
.final_4_406:
controller_Button_constructor__P2172_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(89,67): controller.Button.inline
    ;
    .object controller_Button_inline__P14379 "game/controllerbutton.ts(89,67): controller.Button.inline"
controller_Button_inline__P14379_pre:
    .section code
    .balign 4
controller_Button_inline__P14379_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Button_inline__P14379_args@fn
controller_Button_inline__P14379_args:
    .section code
controller_Button_inline__P14379:
controller_Button_inline__P14379_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_inline__P14379_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl controller_Button_setPressed__P2179_nochk
_proccall1312:
    add sp, #4*2 ; pop locals 2
.ret.14379:
    @stackempty locals
    movs r0, #0
.final_0_407:
controller_Button_inline__P14379_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(90,69): controller.Button.inline
    ;
    .object controller_Button_inline__P14386 "game/controllerbutton.ts(90,69): controller.Button.inline"
controller_Button_inline__P14386_pre:
    .section code
    .balign 4
controller_Button_inline__P14386_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Button_inline__P14386_args@fn
controller_Button_inline__P14386_args:
    .section code
controller_Button_inline__P14386:
controller_Button_inline__P14386_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_inline__P14386_locals:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl controller_Button_setPressed__P2179_nochk
_proccall1313:
    add sp, #4*2 ; pop locals 2
.ret.14386:
    @stackempty locals
    movs r0, #0
.final_0_408:
controller_Button_inline__P14386_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(202,9): controller.Button.setPressed
    ;
    .object controller_Button_setPressed__P2179 "game/controllerbutton.ts(202,9): controller.Button.setPressed"
controller_Button_setPressed__P2179_pre:
    .section code
    .balign 4
controller_Button_setPressed__P2179_args:
    cmp r4, #2
    bge controller_Button_setPressed__P2179_nochk
    push {lr}
    bl _expand_args_2_19
    bl controller_Button_setPressed__P2179_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button_setPressed__P2179:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_setPressed__P2179_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_setPressed__P2179_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    ldr r1, [sp, args@1]
    bl _cmp_neq
    beq .else_0_409      
.jmpz1314:
    bl power_poke__P1911
_proccall1315:
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_409      
.jmpz1316:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #66
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl controller_Controller_connected__P2133
_proccall1317:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_409:
.afterif_2_409:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_409      
.jmpz1318:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_raiseButtonDown__P4758_nochk
_proccall1319:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_4_409      
.else_3_409:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_raiseButtonUp__P4757_nochk
_proccall1320:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_4_409:
.else_0_409:
.afterif_5_409:
.ret.2179:
    @stackempty locals
    movs r0, #0
.final_6_409:
controller_Button_setPressed__P2179_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(97,9): controller.Button.raiseButtonUp
    ;
    .object controller_Button_raiseButtonUp__P4757 "game/controllerbutton.ts(97,9): controller.Button.raiseButtonUp"
controller_Button_raiseButtonUp__P4757_pre:
    .section code
    .balign 4
controller_Button_raiseButtonUp__P4757_args:
    cmp r4, #1
    bge controller_Button_raiseButtonUp__P4757_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_raiseButtonUp__P4757_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_raiseButtonUp__P4757:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_raiseButtonUp__P4757_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_raiseButtonUp__P4757_locals:
    movs r0, #67
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_410      
.jmpz1321:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_74
    movs r0, #1
    lsls r0, r0, #11
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_410      
.else_0_410:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_74
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #4
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_410:
.ret.4757:
    @stackempty locals
    movs r0, #0
.final_2_410:
controller_Button_raiseButtonUp__P4757_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(104,9): controller.Button.raiseButtonDown
    ;
    .object controller_Button_raiseButtonDown__P4758 "game/controllerbutton.ts(104,9): controller.Button.raiseButtonDown"
controller_Button_raiseButtonDown__P4758_pre:
    .section code
    .balign 4
controller_Button_raiseButtonDown__P4758_args:
    cmp r4, #1
    bge controller_Button_raiseButtonDown__P4758_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_raiseButtonDown__P4758_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_raiseButtonDown__P4758:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_raiseButtonDown__P4758_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_raiseButtonDown__P4758_locals:
    movs r0, #67
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1322
    b .else_0_411      
.object PUSH
.balign 4
_ldlit_278:
 .word Math_FastRandom__C3035_VT
_ldlit_279:
 .word controller_Button_inline__P14379_Lit
_ldlit_280:
 .word controller_Button_inline__P14386_Lit
.object POP
.jmpz1322:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_74
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_411      
.else_0_411:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_74
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_411:
.ret.4758:
    @stackempty locals
    movs r0, #0
.final_2_411:
controller_Button_raiseButtonDown__P4758_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(478,5): game.addScenePushHandler
    ;
    .object game_addScenePushHandler__P2994 "game/game.ts(478,5): game.addScenePushHandler"
game_addScenePushHandler__P2994_pre:
    .section code
    .balign 4
    .section code
game_addScenePushHandler__P2994:
game_addScenePushHandler__P2994_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_addScenePushHandler__P2994_locals:
    movs r0, #79
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_412      
.jmpz1323:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #79
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_412:
.afterif_1_412:
    movs r0, #79
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_412      
.jmpz1324:
    movs r0, #79
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_412:
.afterif_3_412:
.ret.2994:
    @stackempty locals
    movs r0, #0
.final_4_412:
game_addScenePushHandler__P2994_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(110,9): controller.Controller.id
    ;
    .object controller_Controller_id__P2118 "game/controller.ts(110,9): controller.Controller.id"
controller_Controller_id__P2118_pre:
    .section code
    .balign 4
controller_Controller_id__P2118_args:
    cmp r4, #1
    bge controller_Controller_id__P2118_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_id__P2118_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_id__P2118:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller_id__P2118_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_id__P2118_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
.ret.2118:
    @stackempty locals
.final_0_413:
controller_Controller_id__P2118_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(251,9): controller.Controller.connected
    ;
    .object controller_Controller_connected__P2132 "game/controller.ts(251,9): controller.Controller.connected"
controller_Controller_connected__P2132_pre:
    .section code
    .balign 4
controller_Controller_connected__P2132_args:
    cmp r4, #1
    bge controller_Controller_connected__P2132_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_connected__P2132_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_connected__P2132:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_61
    mov lr, r7
controller_Controller_connected__P2132_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_connected__P2132_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.2132:
    @stackempty locals
.final_0_414:
controller_Controller_connected__P2132_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(119,5): game.currentScene
    ;
    .object game_currentScene__P2975 "game/game.ts(119,5): game.currentScene"
game_currentScene__P2975_pre:
    .section code
    .balign 4
    .section code
game_currentScene__P2975:
game_currentScene__P2975_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_currentScene__P2975_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl game_init__P4980
_proccall1325:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.2975:
    @stackempty locals
.final_0_415:
game_currentScene__P2975_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(502,5): game.addScenePopHandler
    ;
    .object game_addScenePopHandler__P2996 "game/game.ts(502,5): game.addScenePopHandler"
game_addScenePopHandler__P2996_pre:
    .section code
    .balign 4
    .section code
game_addScenePopHandler__P2996:
game_addScenePopHandler__P2996_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_addScenePopHandler__P2996_locals:
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_416      
.jmpz1326:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #9
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_416:
.afterif_1_416:
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_416      
.jmpz1327:
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_416:
.afterif_3_416:
.ret.2996:
    @stackempty locals
    movs r0, #0
.final_4_416:
game_addScenePopHandler__P2996_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(42,5): settings.initScopes
    ;
    .object settings_initScopes__P4663 "settings/settings.ts(42,5): settings.initScopes"
settings_initScopes__P4663_pre:
    .section code
    .balign 4
    .section code
settings_initScopes__P4663:
settings_initScopes__P4663_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_initScopes__P4663_locals:
    bl settings_runNumber__P2035
_proccall1328:
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #91
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeNumber__P2040
_proccall1329:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceSerialNumber
    bl _numops_fromInt
    ldr r1, _ldlit_282 ; _dbl26      
    bl _numops_ands
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::programName
    push {r0} ; the one arg
    bl settings_setScope__P4662
_proccall1330:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4663:
    @stackempty locals
    movs r0, #0
.final_0_417:
    add sp, #4*1 ; pop locals 1
settings_initScopes__P4663_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(32,5): settings.setScope
    ;
    .object settings_setScope__P4662 "settings/settings.ts(32,5): settings.setScope"
settings_setScope__P4662_pre:
    .section code
    .balign 4
    .section code
settings_setScope__P4662:
settings_setScope__P4662_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_setScope__P4662_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_418      
.jmpz1331:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_418      
.lazySkip_2_418:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_418:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_418      
.jmpz1332:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #154
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_418:
.afterif_3_418:
    movs r0, #23
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readString__P2043
_proccall1333:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@0]
    bl _cmp_neq
    beq .else_4_418      
.jmpz1334:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #23
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeString__P2038
_proccall1335:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_418:
.afterif_5_418:
.ret.4662:
    @stackempty locals
    movs r0, #0
.final_6_418:
    add sp, #4*1 ; pop locals 1
settings_setScope__P4662_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(76,5): settings.writeString
    ;
    .object settings_writeString__P2038 "settings/settings.ts(76,5): settings.writeString"
settings_writeString__P2038_pre:
    .section code
    .balign 4
    .section code
settings_writeString__P2038:
settings_writeString__P2038_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeString__P2038_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2037
_proccall1336:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2038:
    @stackempty locals
    movs r0, #0
.final_0_419:
settings_writeString__P2038_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(111,5): settings.readString
    ;
    .object settings_readString__P2043 "settings/settings.ts(111,5): settings.readString"
settings_readString__P2043_pre:
    .section code
    .balign 4
    .section code
settings_readString__P2043:
settings_readString__P2043_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_readString__P2043_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_420      
.jmpz1337:
    movs r0, #0
    b .ret.2043      
    b .afterif_1_420      
.else_0_420:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    b .ret.2043      
.afterif_1_420:
    movs r0, #0
.ret.2043:
    @stackempty locals
.final_2_420:
    add sp, #4*1 ; pop locals 1
settings_readString__P2043_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(28,5): settings.runNumber
    ;
    .object settings_runNumber__P2035 "settings/settings.ts(28,5): settings.runNumber"
settings_runNumber__P2035_pre:
    .section code
    .balign 4
    .section code
settings_runNumber__P2035:
settings_runNumber__P2035_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_runNumber__P2035_locals:
    movs r0, #91
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readNumber__P2045
_proccall1339:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_421      
.jmpz1338:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_421      
.lazySkip_1_421:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_421:
; jmp value (already in r0)
.ret.2035:
    @stackempty locals
.final_2_421:
settings_runNumber__P2035_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/frame.ts(5,5): control.__screen.update
    ;
    .object control___screen_update__P1971 "screen---st7735/frame.ts(5,5): control.__screen.update"
control___screen_update__P1971_pre:
    .section code
    .balign 4
control___screen_update__P1971_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control___screen_update__P1971_args@fn
control___screen_update__P1971_args:
    .section code
control___screen_update__P1971:
control___screen_update__P1971_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control___screen_update__P1971_locals:
    movs r0, #35
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_422      
.jmpz1340:
    movs r0, #35
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_422:
.afterif_1_422:
    movs r0, #66
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
.ret.1971:
    @stackempty locals
    movs r0, #0
.final_2_422:
control___screen_update__P1971_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pause.ts(8,1): pause
    ;
    .object pause__P413 "base/pause.ts(8,1): pause"
pause__P413_pre:
    .section code
    .balign 4
    .section code
pause__P413:
pause__P413_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pause__P413_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl loops::pause
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.413:
    @stackempty locals
    movs r0, #0
.final_0_423:
pause__P413_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(240,9): particles.ShapeFactory.createParticle
    ;
    .object particles_ShapeFactory_createParticle__P3193 "game/particlefactories.ts(240,9): particles.ShapeFactory.createParticle"
particles_ShapeFactory_createParticle__P3193_pre:
    .section code
    .balign 4
particles_ShapeFactory_createParticle__P3193_args:
    cmp r4, #2
    bge particles_ShapeFactory_createParticle__P3193_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ShapeFactory_createParticle__P3193_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ShapeFactory_createParticle__P3193:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3189_validate_100
    mov lr, r7
particles_ShapeFactory_createParticle__P3193_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_ShapeFactory_createParticle__P3193_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_AreaFactory_createParticle__P3179
_proccall1342:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r3, r0
    movs r0, #29
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_FastRandom_randomRange__P3039
_proccall1343:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3193:
    @stackempty locals
.final_0_424:
    add sp, #4*1 ; pop locals 1
particles_ShapeFactory_createParticle__P3193_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(149,9): particles.AreaFactory.createParticle
    ;
    .object particles_AreaFactory_createParticle__P3179 "game/particlefactories.ts(149,9): particles.AreaFactory.createParticle"
particles_AreaFactory_createParticle__P3179_pre:
    .section code
    .balign 4
particles_AreaFactory_createParticle__P3179_args:
    cmp r4, #2
    bge particles_AreaFactory_createParticle__P3179_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_AreaFactory_createParticle__P3179_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_282:
 .word _dbl26
.object POP
    .section code
particles_AreaFactory_createParticle__P3179:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_AreaFactory__C3173_validate_101
    mov lr, r7
particles_AreaFactory_createParticle__P3179_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_AreaFactory_createParticle__P3179_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_createParticle__P3169
_proccall1344:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl Math_FastRandom_randomRange__P3039
_proccall1345:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3039
_proccall1346:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1347:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #169
    bl _ifacecall1_get_8
_proccall1349:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_425      
.jmpz1348:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #169
    bl _ifacecall1_get_8
_proccall1350:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_425      
.condexprz_0_425:
    movs r0, #1
.condexprfin_1_425:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3039
_proccall1351:
    add sp, #4*3 ; pop locals 3
    ldr r1, [sp, #4*1] ; tmpref @1
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1352:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #8]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3179:
    @stackempty locals
.final_2_425:
    add sp, #4*1 ; pop locals 1
particles_AreaFactory_createParticle__P3179_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(24,5): Fx.iadd
    ;
    .object Fx_iadd__P158 "base/fixed.ts(24,5): Fx.iadd"
Fx_iadd__P158_pre:
    .section code
    .balign 4
    .section code
Fx_iadd__P158:
Fx_iadd__P158_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_iadd__P158_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@1]
    bl _numops_adds
.ret.158:
    @stackempty locals
.final_0_426:
Fx_iadd__P158_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(106,9): particles.SprayFactory.createParticle
    ;
    .object particles_SprayFactory_createParticle__P3169 "game/particlefactories.ts(106,9): particles.SprayFactory.createParticle"
particles_SprayFactory_createParticle__P3169_pre:
    .section code
    .balign 4
particles_SprayFactory_createParticle__P3169_args:
    cmp r4, #2
    bge particles_SprayFactory_createParticle__P3169_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_SprayFactory_createParticle__P3169_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_SprayFactory_createParticle__P3169:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3167_validate_96
    mov lr, r7
particles_SprayFactory_createParticle__P3169_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_SprayFactory_createParticle__P3169_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleFactory_createParticle__P3165
_proccall1353:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3039
_proccall1354:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #87
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall1355:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #11
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall1356:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3108_validate_86
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3169:
    @stackempty locals
.final_0_427:
    add sp, #4*2 ; pop locals 2
particles_SprayFactory_createParticle__P3169_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(319,9): music.Melody.toString
    ;
    .object music_Melody_toString__P1632 "mixer---nrf52/melody.ts(319,9): music.Melody.toString"
music_Melody_toString__P1632_pre:
    .section code
    .balign 4
music_Melody_toString__P1632_args:
    cmp r4, #1
    bge music_Melody_toString__P1632_nochk
    push {lr}
    bl _expand_args_1_12
    bl music_Melody_toString__P1632_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
music_Melody_toString__P1632:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_Melody__C1623_validate_94
    mov lr, r7
music_Melody_toString__P1632_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_Melody_toString__P1632_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.1632:
    @stackempty locals
.final_0_428:
music_Melody_toString__P1632_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(113,9): particles.ParticleSource.__draw
    ;
    .object particles_ParticleSource___draw__P3133 "game/particles.ts(113,9): particles.ParticleSource.__draw"
particles_ParticleSource___draw__P3133_pre:
    .section code
    .balign 4
particles_ParticleSource___draw__P3133_args:
    cmp r4, #2
    bge particles_ParticleSource___draw__P3133_nochk
    push {lr}
    bl _expand_args_2_19
    bl particles_ParticleSource___draw__P3133_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource___draw__P3133:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource___draw__P3133_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource___draw__P3133_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_429      
.jmpz1357:
    movs r0, #1
    b .condexprfin_1_429      
.condexprz_0_429:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1358:
    add sp, #4*1 ; pop locals 1
.condexprfin_1_429:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_429      
.jmpz1359:
    movs r0, #1
    b .condexprfin_3_429      
.condexprz_2_429:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1360:
    add sp, #4*1 ; pop locals 1
.condexprfin_3_429:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
.cont.14684:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.14684      
.jmpz1361:
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_gt
    beq .else_4_429      
.jmpz1362:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_drawParticle__P5314_nochk
_proccall1363:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_4_429:
.afterif_5_429:
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #24]
    str r0, [sp, locals@0]
    @stackempty locals
    b .cont.14684      
.brk.14684:
.ret.3133:
    @stackempty locals
    movs r0, #0
.final_6_429:
    add sp, #4*3 ; pop locals 3
particles_ParticleSource___draw__P3133_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(288,9): particles.ParticleSource.drawParticle
    ;
    .object particles_ParticleSource_drawParticle__P5314 "game/particles.ts(288,9): particles.ParticleSource.drawParticle"
particles_ParticleSource_drawParticle__P5314_pre:
    .section code
    .balign 4
particles_ParticleSource_drawParticle__P5314_args:
    cmp r4, #4
    bge particles_ParticleSource_drawParticle__P5314_nochk
    push {lr}
    bl _expand_args_4_17
    bl particles_ParticleSource_drawParticle__P5314_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_ParticleSource_drawParticle__P5314:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3127_validate_85
    mov lr, r7
particles_ParticleSource_drawParticle__P5314_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_drawParticle__P5314_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #4]
    ldr r1, [sp, args@2]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #8]
    ldr r1, [sp, args@3]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    movs r1, #40
    bl _classCall_particles_ParticleFactory__C3163_97
_proccall1364:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.5314:
    @stackempty locals
    movs r0, #0
.final_0_430:
particles_ParticleSource_drawParticle__P5314_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(86,9): particles.ParticleFactory.drawParticle
    ;
    .object particles_ParticleFactory_drawParticle__P3166 "game/particlefactories.ts(86,9): particles.ParticleFactory.drawParticle"
particles_ParticleFactory_drawParticle__P3166_pre:
    .section code
    .balign 4
particles_ParticleFactory_drawParticle__P3166_args:
    cmp r4, #4
    bge particles_ParticleFactory_drawParticle__P3166_nochk
    push {lr}
    bl _expand_args_4_17
    bl particles_ParticleFactory_drawParticle__P3166_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_ParticleFactory_drawParticle__P3166:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleFactory__C3163_validate_98
    mov lr, r7
particles_ParticleFactory_drawParticle__P3166_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleFactory_drawParticle__P3166_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1365:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1366:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_24
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3166:
    @stackempty locals
    movs r0, #0
.final_0_431:
particles_ParticleFactory_drawParticle__P3166_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(113,9): sprites.SpriteMap.toString
    ;
    .object sprites_SpriteMap_toString__P2430 "game/spritemap.ts(113,9): sprites.SpriteMap.toString"
sprites_SpriteMap_toString__P2430_pre:
    .section code
    .balign 4
sprites_SpriteMap_toString__P2430_args:
    cmp r4, #1
    bge sprites_SpriteMap_toString__P2430_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteMap_toString__P2430_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteMap_toString__P2430:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_toString__P2430_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteMap_toString__P2430_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_284 ; _str37      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r3, r0
    ldr r0, _ldlit_285 ; length_inline__P14739_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall1367:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_286 ; _str38      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.2430:
    @stackempty locals
.final_0_432:
sprites_SpriteMap_toString__P2430_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(114,75): length.inline
    ;
    .object length_inline__P14739 "game/spritemap.ts(114,75): length.inline"
length_inline__P14739_pre:
    .section code
    .balign 4
length_inline__P14739_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word length_inline__P14739_args@fn
length_inline__P14739_args:
    cmp r4, #1
    bge length_inline__P14739_nochk
    push {lr}
    bl _expand_args_1_12
    bl length_inline__P14739_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
length_inline__P14739:
length_inline__P14739_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
length_inline__P14739_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.14739:
    @stackempty locals
.final_0_433:
length_inline__P14739_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(655,5): ArcadePhysicsEngine.moveSprite
    ;
    .object ArcadePhysicsEngine_moveSprite__P2517 "game/physics.ts(655,5): ArcadePhysicsEngine.moveSprite"
ArcadePhysicsEngine_moveSprite__P2517_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_moveSprite__P2517_args:
    cmp r4, #4
    bge ArcadePhysicsEngine_moveSprite__P2517_nochk
    push {lr}
    bl _expand_args_4_17
    bl ArcadePhysicsEngine_moveSprite__P2517_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
ArcadePhysicsEngine_moveSprite__P2517:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_moveSprite__P2517_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_moveSprite__P2517_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    ldr r1, [sp, args@2]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2975
_proccall1368:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_434      
.jmpz1369:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_434      
.lazySkip_2_434:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2723
_proccall1370:
    add sp, #4*1 ; pop locals 1
.lazy_1_434:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1371
    b .else_0_434      
.jmpz1371:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1372:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1374:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_abs__P128
_proccall1375:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_434      
.jmpz1373:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_434      
.lazySkip_5_434:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1376:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_abs__P128
_proccall1377:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_4_434:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_434      
.jmpz1378:
    ldr r0, _ldlit_287 ; MovingSprite__C2501_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    ldr r0, [sp, #4*7] ; tmpref @1
    push {r0} ; proc-arg
    bl MovingSprite_constructor__P2502
_proccall1379:
    add sp, #4*8 ; pop locals 8
    pop {r0} ; tmpref @1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_tilemapCollisions__P4828_nochk
_proccall1380:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_6_434      
.else_3_434:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2734
_proccall1382:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_434      
.jmpz1381:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_434      
.lazySkip_9_434:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_canResolveClipping__P4830_nochk
_proccall1383:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_8_434:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_434      
.jmpz1384:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_10_434      
.else_7_434:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    ldr r1, _ldlit_288 ; -513      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_10_434:
.afterif_6_434:
.else_0_434:
.afterif_11_434:
.ret.2517:
    @stackempty locals
    movs r0, #0
.final_12_434:
    add sp, #4*3 ; pop locals 3
ArcadePhysicsEngine_moveSprite__P2517_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(689,5): ArcadePhysicsEngine.canResolveClipping
    ;
    .object ArcadePhysicsEngine_canResolveClipping__P4830 "game/physics.ts(689,5): ArcadePhysicsEngine.canResolveClipping"
ArcadePhysicsEngine_canResolveClipping__P4830_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_canResolveClipping__P4830_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_canResolveClipping__P4830_nochk
    push {lr}
    bl _expand_args_3_14
    bl ArcadePhysicsEngine_canResolveClipping__P4830_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
.object PUSH
.balign 4
_ldlit_284:
 .word _str37
_ldlit_285:
 .word length_inline__P14739_Lit
_ldlit_286:
 .word _str38
_ldlit_287:
 .word MovingSprite__C2501_VT
_ldlit_288:
 .word -513
.object POP
    .section code
ArcadePhysicsEngine_canResolveClipping__P4830:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_canResolveClipping__P4830_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_canResolveClipping__P4830_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_isStatic__P2371
_proccall1386:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_435      
.jmpz1385:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2317_104
_proccall1387:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_435:
.afterif_1_435:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_maxStep__P2509_nochk
_proccall1388:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1389:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1390:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1391:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1392:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1393:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1394:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1395:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1396:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@9]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_2_435      
.jmpz1397:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1398:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2734
_proccall1400:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_435      
.jmpz1399:
    movs r0, #66
    b .ret.4830      
    b .afterif_4_435      
.else_3_435:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@3]
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #16]
    @stackempty locals
.afterif_4_435:
.else_2_435:
.afterif_5_435:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@7]
    bl _numops_subs
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_6_435      
.jmpz1401:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1402:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2734
_proccall1404:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_435      
.jmpz1403:
    movs r0, #66
    b .ret.4830      
    b .afterif_8_435      
.else_7_435:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@3]
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #16]
    @stackempty locals
.afterif_8_435:
.else_6_435:
.afterif_9_435:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_10_435      
.jmpz1405:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1406:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2734
_proccall1408:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_435      
.jmpz1407:
    movs r0, #66
    b .ret.4830      
    b .afterif_12_435      
.else_11_435:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@4]
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #12]
    @stackempty locals
.afterif_12_435:
.else_10_435:
.afterif_13_435:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@5]
    bl _numops_subs
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@12]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_14_435      
.jmpz1409:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1410:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2734
_proccall1412:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_435      
.jmpz1411:
    movs r0, #66
    b .ret.4830      
    b .afterif_16_435      
.else_15_435:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@4]
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #12]
    @stackempty locals
.afterif_16_435:
.else_14_435:
.afterif_17_435:
    movs r0, #10
.ret.4830:
    @stackempty locals
.final_18_435:
    add sp, #4*13 ; pop locals 13
ArcadePhysicsEngine_canResolveClipping__P4830_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(34,9): game.Hitbox.bottom
    ;
    .object game_Hitbox_bottom__P2196 "game/hitbox.ts(34,9): game.Hitbox.bottom"
game_Hitbox_bottom__P2196_pre:
    .section code
    .balign 4
game_Hitbox_bottom__P2196_args:
    cmp r4, #1
    bge game_Hitbox_bottom__P2196_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_bottom__P2196_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_bottom__P2196:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_25
    mov lr, r7
game_Hitbox_bottom__P2196_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_bottom__P2196_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194_nochk
_proccall1413:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.ret.2196:
    @stackempty locals
.final_0_436:
game_Hitbox_bottom__P2196_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(23,9): game.Hitbox.top
    ;
    .object game_Hitbox_top__P2194 "game/hitbox.ts(23,9): game.Hitbox.top"
game_Hitbox_top__P2194_pre:
    .section code
    .balign 4
game_Hitbox_top__P2194_args:
    cmp r4, #1
    bge game_Hitbox_top__P2194_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_top__P2194_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_top__P2194:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_25
    mov lr, r7
game_Hitbox_top__P2194_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_top__P2194_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
.ret.2194:
    @stackempty locals
.final_0_437:
game_Hitbox_top__P2194_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(27,9): game.Hitbox.right
    ;
    .object game_Hitbox_right__P2195 "game/hitbox.ts(27,9): game.Hitbox.right"
game_Hitbox_right__P2195_pre:
    .section code
    .balign 4
game_Hitbox_right__P2195_args:
    cmp r4, #1
    bge game_Hitbox_right__P2195_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_right__P2195_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_right__P2195:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_25
    mov lr, r7
game_Hitbox_right__P2195_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_right__P2195_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193_nochk
_proccall1414:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.ret.2195:
    @stackempty locals
.final_0_438:
game_Hitbox_right__P2195_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(19,9): game.Hitbox.left
    ;
    .object game_Hitbox_left__P2193 "game/hitbox.ts(19,9): game.Hitbox.left"
game_Hitbox_left__P2193_pre:
    .section code
    .balign 4
game_Hitbox_left__P2193_args:
    cmp r4, #1
    bge game_Hitbox_left__P2193_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_left__P2193_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_left__P2193:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_25
    mov lr, r7
game_Hitbox_left__P2193_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_left__P2193_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
.ret.2193:
    @stackempty locals
.final_0_439:
game_Hitbox_left__P2193_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(356,5): Sprite.isStatic
    ;
    .object Sprite_isStatic__P2371 "game/sprite.ts(356,5): Sprite.isStatic"
Sprite_isStatic__P2371_pre:
    .section code
    .balign 4
Sprite_isStatic__P2371_args:
    cmp r4, #1
    bge Sprite_isStatic__P2371_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_isStatic__P2371_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_isStatic__P2371:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_isStatic__P2371_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_isStatic__P2371_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::isStatic
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2371:
    @stackempty locals
.final_0_440:
Sprite_isStatic__P2371_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(535,9): tiles.TileMap.isOnWall
    ;
    .object tiles_TileMap_isOnWall__P2734 "game/tilemap.ts(535,9): tiles.TileMap.isOnWall"
tiles_TileMap_isOnWall__P2734_pre:
    .section code
    .balign 4
tiles_TileMap_isOnWall__P2734_args:
    cmp r4, #2
    bge tiles_TileMap_isOnWall__P2734_nochk
    push {lr}
    bl _expand_args_2_19
    bl tiles_TileMap_isOnWall__P2734_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_isOnWall__P2734:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_isOnWall__P2734_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMap_isOnWall__P2734_locals:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1415:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1416:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1417:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1418:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1419:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1420:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1421:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1422:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@1]
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.15052:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .brk.15052      
.jmpz1423:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.15057:
    ldr r0, [sp, locals@6]
    ldr r1, [sp, locals@4]
    bl _cmp_le
    beq .brk.15057      
.jmpz1424:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2732_nochk
_proccall1426:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_441      
.jmpz1425:
    movs r0, #66
    b .ret.2734      
.else_0_441:
.afterif_1_441:
.cont.15057:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    @stackempty locals
    b .fortop.15057      
.brk.15057:
.cont.15052:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    b .fortop.15052      
.brk.15052:
    movs r0, #10
.ret.2734:
    @stackempty locals
.final_2_441:
    add sp, #4*7 ; pop locals 7
tiles_TileMap_isOnWall__P2734_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(516,9): tiles.TileMap.isObstacle
    ;
    .object tiles_TileMap_isObstacle__P2732 "game/tilemap.ts(516,9): tiles.TileMap.isObstacle"
tiles_TileMap_isObstacle__P2732_pre:
    .section code
    .balign 4
tiles_TileMap_isObstacle__P2732_args:
    cmp r4, #3
    bge tiles_TileMap_isObstacle__P2732_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_isObstacle__P2732_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_isObstacle__P2732:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_isObstacle__P2732_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_isObstacle__P2732_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2723_nochk
_proccall1428:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_442      
.jmpz1427:
    movs r0, #10
    b .ret.2732      
.else_0_442:
.afterif_1_442:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_isOutsideMap__P2705
_proccall1430:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_442      
.jmpz1429:
    movs r0, #66
    b .ret.2732      
.else_2_442:
.afterif_3_442:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_isWall__P2704
_proccall1431:
    add sp, #4*3 ; pop locals 3
.ret.2732:
    @stackempty locals
.final_4_442:
tiles_TileMap_isObstacle__P2732_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(275,9): tiles.TileMapData.isWall
    ;
    .object tiles_TileMapData_isWall__P2704 "game/tilemap.ts(275,9): tiles.TileMapData.isWall"
tiles_TileMapData_isWall__P2704_pre:
    .section code
    .balign 4
tiles_TileMapData_isWall__P2704_args:
    cmp r4, #3
    bge tiles_TileMapData_isWall__P2704_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMapData_isWall__P2704_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMapData_isWall__P2704:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2693_validate_71
    mov lr, r7
tiles_TileMapData_isWall__P2704_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_isWall__P2704_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.ret.2704:
    @stackempty locals
.final_0_443:
tiles_TileMapData_isWall__P2704_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(279,9): tiles.TileMapData.isOutsideMap
    ;
    .object tiles_TileMapData_isOutsideMap__P2705 "game/tilemap.ts(279,9): tiles.TileMapData.isOutsideMap"
tiles_TileMapData_isOutsideMap__P2705_pre:
    .section code
    .balign 4
tiles_TileMapData_isOutsideMap__P2705_args:
    cmp r4, #3
    bge tiles_TileMapData_isOutsideMap__P2705_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMapData_isOutsideMap__P2705_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMapData_isOutsideMap__P2705:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2693_validate_71
    mov lr, r7
tiles_TileMapData_isOutsideMap__P2705_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_isOutsideMap__P2705_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_444      
.jmpz1432:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_444      
.lazySkip_1_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_0_444:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_444      
.jmpz1433:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_444      
.lazySkip_3_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_2_444:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_5_444      
.jmpz1434:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_444      
.lazySkip_5_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_4_444:
; jmp value (already in r0)
.ret.2705:
    @stackempty locals
.final_6_444:
tiles_TileMapData_isOutsideMap__P2705_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(380,5): ArcadePhysicsEngine.tilemapCollisions
    ;
    .object ArcadePhysicsEngine_tilemapCollisions__P4828 "game/physics.ts(380,5): ArcadePhysicsEngine.tilemapCollisions"
ArcadePhysicsEngine_tilemapCollisions__P4828_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapCollisions__P4828_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_tilemapCollisions__P4828_nochk
    push {lr}
    bl _expand_args_3_14
    bl ArcadePhysicsEngine_tilemapCollisions__P4828_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapCollisions__P4828:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_tilemapCollisions__P4828_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_tilemapCollisions__P4828_locals:
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_445      
.jmpz1435:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2734
_proccall1437:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_445      
.jmpz1436:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    ldr r1, _ldlit_290 ; -513      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_1_445:
.afterif_2_445:
.else_0_445:
.afterif_3_445:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_isStatic__P2371
_proccall1439:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_445      
.jmpz1438:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2317_104
_proccall1440:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_445:
.afterif_5_445:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    ldr r0, [r0, #4]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #72]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #76]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1441
    bb .else_6_445
.jmpz1441:
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _cmp_neqq
    bne .jmpz1442
    b .else_7_445      
.jmpz1442:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_445      
.jmpz1443:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1444:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    b .condexprfin_9_445      
.condexprz_8_445:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1445:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.condexprfin_9_445:
; jmp value (already in r0)
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1446:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1447:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    str r0, [sp, locals@9]
    @stackempty locals
.fortop.15198:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1449:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1450:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.15198      
.jmpz1448:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1451:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1452:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1453:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2732
_proccall1455:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_445      
.jmpz1454:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_getObstacle__P2733
_proccall1456:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@11]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_291 ; ArcadePhysicsEngine_tilemapCollisions_inline__P15230_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@11]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl helpers_arraySome__P107
_proccall1458:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_445      
.jmpz1457:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_11_445:
.afterif_12_445:
.else_10_445:
.afterif_13_445:
.cont.15198:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1459:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
    b .fortop.15198      
.brk.15198:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1460
    b .else_14_445      
.jmpz1460:
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_15_445      
.jmpz1461:
    movs r0, #5
    b .condexprfin_16_445      
.condexprz_15_445:
    movs r0, #1
.condexprfin_16_445:
; jmp value (already in r0)
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_17_445      
.jmpz1462:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1463:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    b .condexprfin_18_445      
.object PUSH
.balign 4
_ldlit_290:
 .word -513
_ldlit_291:
 .word ArcadePhysicsEngine_tilemapCollisions_inline__P15230_Lit
.object POP
.condexprz_17_445:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1464:
    add sp, #4*1 ; pop locals 1
.condexprfin_18_445:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #12]
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*2] ; tmpref @1
    pop {r1} ; tmpref @3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #12]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@14]
    movs r0, #1
    str r0, [sp, locals@15]
    @stackempty locals
.fortop.15276:
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.15276      
.jmpz1465:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@13]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_445      
.jmpz1466:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_registerObstacle__P2402
_proccall1467:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_19_445:
.afterif_20_445:
.cont.15276:
    ldr r0, [sp, locals@15]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@15]
    b .fortop.15276      
.brk.15276:
    movs r0, #0
    str r0, [sp, locals@14]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #33
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_21_445      
.jmpz1468:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_destroy__P2404
_proccall1469:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_22_445      
.else_21_445:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_25_445      
.jmpz1470:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_24_445      
.lazySkip_25_445:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_24_445:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1471
    b .else_23_445      
.jmpz1471:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #65
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1472
    b .else_26_445      
.jmpz1472:
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_29_445      
.jmpz1473:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_28_445      
.lazySkip_29_445:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2334
_proccall1474:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_28_445:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_31_445      
.jmpz1475:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_30_445      
.lazySkip_31_445:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_33_445      
.jmpz1476:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_32_445      
.lazySkip_33_445:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2334
_proccall1477:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_32_445:
; jmp value (already in r0)
.lazy_30_445:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_27_445      
.jmpz1478:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_27_445:
.afterif_34_445:
    b .afterif_35_445      
.else_26_445:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    @stackempty locals
.afterif_35_445:
    b .afterif_36_445      
.else_23_445:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1480:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1481:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1482:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1483:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_37_445      
.jmpz1479:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #16]
    @stackempty locals
.else_37_445:
.afterif_38_445:
.afterif_36_445:
.afterif_22_445:
.else_14_445:
.afterif_39_445:
.else_7_445:
.afterif_40_445:
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_neqq
    bne .jmpz1484
    b .else_41_445      
.jmpz1484:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_42_445      
.jmpz1485:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1486:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    b .condexprfin_43_445      
.condexprz_42_445:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1487:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.condexprfin_43_445:
; jmp value (already in r0)
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1488:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@17]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@18]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1489:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@19]
    @stackempty locals
.fortop.15386:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1491:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1492:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.15386      
.jmpz1490:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1493:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1494:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1495:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@20]
    @stackempty locals
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2732
_proccall1497:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_44_445      
.jmpz1496:
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_getObstacle__P2733
_proccall1498:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@21]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_293 ; ArcadePhysicsEngine_tilemapCollisions_inline__P15414_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@21]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    bl helpers_arraySome__P107
_proccall1500:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_45_445      
.jmpz1499:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@21]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_45_445:
.afterif_46_445:
.else_44_445:
.afterif_47_445:
.cont.15386:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1501:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@19]
    @stackempty locals
    b .fortop.15386      
.brk.15386:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1502
    b .else_48_445      
.jmpz1502:
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_49_445      
.jmpz1503:
    movs r0, #7
    b .condexprfin_50_445      
.condexprz_49_445:
    movs r0, #3
.condexprfin_50_445:
; jmp value (already in r0)
    str r0, [sp, locals@22]
    @stackempty locals
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_51_445      
.jmpz1504:
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1505:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    b .condexprfin_52_445      
.condexprz_51_445:
    ldr r0, [sp, locals@17]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1506:
    add sp, #4*1 ; pop locals 1
.condexprfin_52_445:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #16]
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*2] ; tmpref @1
    pop {r1} ; tmpref @3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@23]
    @stackempty locals
    ldr r0, [sp, locals@18]
    str r0, [sp, locals@24]
    movs r0, #1
    str r0, [sp, locals@25]
    @stackempty locals
.fortop.15460:
    ldr r0, [sp, locals@25]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@24]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.15460      
.jmpz1507:
    ldr r0, [sp, locals@24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@25]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@23]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_53_445      
.jmpz1508:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@23]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_registerObstacle__P2402
_proccall1509:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_53_445:
.afterif_54_445:
.cont.15460:
    ldr r0, [sp, locals@25]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@25]
    b .fortop.15460      
.brk.15460:
    movs r0, #0
    str r0, [sp, locals@24]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #33
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_55_445      
.jmpz1510:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_destroy__P2404
_proccall1511:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_56_445      
.else_55_445:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_59_445      
.jmpz1512:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_58_445      
.lazySkip_59_445:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_58_445:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1513
    b .else_57_445      
.jmpz1513:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #65
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1514
    b .else_60_445      
.jmpz1514:
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_63_445      
.jmpz1515:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_62_445      
.lazySkip_63_445:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2336
_proccall1516:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_62_445:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_65_445      
.jmpz1517:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_64_445      
.lazySkip_65_445:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@16]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_67_445      
.jmpz1518:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_66_445      
.object PUSH
.balign 4
_ldlit_293:
 .word ArcadePhysicsEngine_tilemapCollisions_inline__P15414_Lit
.object POP
.lazySkip_67_445:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2336
_proccall1519:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_66_445:
; jmp value (already in r0)
.lazy_64_445:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_61_445      
.jmpz1520:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #28]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_61_445:
.afterif_68_445:
    b .afterif_69_445      
.else_60_445:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    @stackempty locals
.afterif_69_445:
    b .afterif_70_445      
.else_57_445:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1522:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1523:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1524:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1525:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_71_445      
.jmpz1521:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #20]
    @stackempty locals
.else_71_445:
.afterif_72_445:
.afterif_70_445:
.afterif_56_445:
.else_48_445:
.afterif_73_445:
.else_41_445:
.afterif_74_445:
.else_6_445:
.afterif_75_445:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #12
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1526
    b .else_76_445      
.jmpz1526:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@26]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1527:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@27]
    @stackempty locals
.fortop.15555:
    ldr r0, [sp, locals@27]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1529:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1530:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1528
    b .brk.15555      
.jmpz1528:
    ldr r0, [sp, locals@27]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1531:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1532:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1533:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@28]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1534:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@29]
    @stackempty locals
.fortop.15574:
    ldr r0, [sp, locals@29]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1536:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1537:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1535
    b .brk.15574      
.jmpz1535:
    ldr r0, [sp, locals@29]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1538:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1539:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1540:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@30]
    @stackempty locals
    ldr r0, [sp, locals@30]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2732
_proccall1542:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_79_445      
.jmpz1541:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_78_445      
.lazySkip_79_445:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #16
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_78_445:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_77_445      
.jmpz1543:
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@30]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_getTile__P2725
_proccall1544:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_77_445:
.afterif_80_445:
.cont.15574:
    ldr r0, [sp, locals@29]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1545:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@29]
    @stackempty locals
    b .fortop.15574      
.brk.15574:
.cont.15555:
    ldr r0, [sp, locals@27]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1546:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@27]
    @stackempty locals
    b .fortop.15555      
.brk.15555:
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_81_445      
.jmpz1547:
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_tilemapOverlaps__P4829_nochk
_proccall1548:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_81_445:
.afterif_82_445:
.else_76_445:
.afterif_83_445:
.ret.4828:
    @stackempty locals
    movs r0, #0
.final_84_445:
    add sp, #4*31 ; pop locals 31
ArcadePhysicsEngine_tilemapCollisions__P4828_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(442,49): ArcadePhysicsEngine.tilemapCollisions.inline
    ;
    .object ArcadePhysicsEngine_tilemapCollisions_inline__P15230 "game/physics.ts(442,49): ArcadePhysicsEngine.tilemapCollisions.inline"
ArcadePhysicsEngine_tilemapCollisions_inline__P15230_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapCollisions_inline__P15230_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapCollisions_inline__P15230_args@fn
ArcadePhysicsEngine_tilemapCollisions_inline__P15230_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapCollisions_inline__P15230_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_tilemapCollisions_inline__P15230_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapCollisions_inline__P15230:
ArcadePhysicsEngine_tilemapCollisions_inline__P15230_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapCollisions_inline__P15230_locals:
    ldr r0, [sp, args@0]
    bl _inst_sprites_StaticObstacle__C2474_validate_106
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    bl _inst_sprites_StaticObstacle__C2474_validate_106
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.15230:
    @stackempty locals
.final_0_446:
ArcadePhysicsEngine_tilemapCollisions_inline__P15230_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(523,49): ArcadePhysicsEngine.tilemapCollisions.inline
    ;
    .object ArcadePhysicsEngine_tilemapCollisions_inline__P15414 "game/physics.ts(523,49): ArcadePhysicsEngine.tilemapCollisions.inline"
ArcadePhysicsEngine_tilemapCollisions_inline__P15414_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapCollisions_inline__P15414_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapCollisions_inline__P15414_args@fn
ArcadePhysicsEngine_tilemapCollisions_inline__P15414_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapCollisions_inline__P15414_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_tilemapCollisions_inline__P15414_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapCollisions_inline__P15414:
ArcadePhysicsEngine_tilemapCollisions_inline__P15414_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapCollisions_inline__P15414_locals:
    ldr r0, [sp, args@0]
    bl _inst_sprites_StaticObstacle__C2474_validate_106
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    bl _inst_sprites_StaticObstacle__C2474_validate_106
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.15414:
    @stackempty locals
.final_0_447:
ArcadePhysicsEngine_tilemapCollisions_inline__P15414_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(627,5): ArcadePhysicsEngine.tilemapOverlaps
    ;
    .object ArcadePhysicsEngine_tilemapOverlaps__P4829 "game/physics.ts(627,5): ArcadePhysicsEngine.tilemapOverlaps"
ArcadePhysicsEngine_tilemapOverlaps__P4829_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapOverlaps__P4829_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_tilemapOverlaps__P4829_nochk
    push {lr}
    bl _expand_args_3_14
    bl ArcadePhysicsEngine_tilemapOverlaps__P4829_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapOverlaps__P4829:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_tilemapOverlaps__P4829_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_tilemapOverlaps__P4829_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.15632:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1549
    b .brk.15632      
.jmpz1549:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    movs r0, #1
    ldr r1, _ldlit_295 ; ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arraySome__P107
_proccall1551:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_448      
.jmpz1550:
    b .cont.15632      
.else_0_448:
.afterif_1_448:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2975
_proccall1552:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #56]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_448      
.jmpz1553:
    movs r0, #2
    ldr r1, _ldlit_296 ; forEach_inline__P15660_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #2
    ldr r1, _ldlit_297 ; ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1554:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1555:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_448:
.afterif_3_448:
.cont.15632:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.15632      
.brk.15632:
    movs r0, #0
    str r0, [sp, locals@2]
.ret.4829:
    @stackempty locals
    movs r0, #0
.final_4_448:
    add sp, #4*5 ; pop locals 5
ArcadePhysicsEngine_tilemapOverlaps__P4829_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(631,37): ArcadePhysicsEngine.tilemapOverlaps.inline
    ;
    .object ArcadePhysicsEngine_tilemapOverlaps_inline__P15635 "game/physics.ts(631,37): ArcadePhysicsEngine.tilemapOverlaps.inline"
ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_args@fn
ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapOverlaps_inline__P15635:
ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_449      
.jmpz1556:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_449      
.lazySkip_1_449:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_0_449:
; jmp value (already in r0)
.ret.15635:
    @stackempty locals
.final_2_449:
ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(639,29): forEach.inline
    ;
    .object forEach_inline__P15660 "game/physics.ts(639,29): forEach.inline"
forEach_inline__P15660_pre:
    .section code
    .balign 4
forEach_inline__P15660_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P15660_args@fn
forEach_inline__P15660_args:
    cmp r4, #1
    bge forEach_inline__P15660_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P15660_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P15660:
forEach_inline__P15660_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P15660_locals:
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_450      
.jmpz1557:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_450      
.lazySkip_1_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    bl tiles_getTileImage__P2744
_proccall1558:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_66
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::equals
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_0_450:
; jmp value (already in r0)
.ret.15660:
    @stackempty locals
.final_2_450:
forEach_inline__P15660_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(640,30): ArcadePhysicsEngine.tilemapOverlaps.inline
    ;
    .object ArcadePhysicsEngine_tilemapOverlaps_inline__P15677 "game/physics.ts(640,30): ArcadePhysicsEngine.tilemapOverlaps.inline"
ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_args@fn
ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapOverlaps_inline__P15677:
ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_locals:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall3__57
_proccall1559:
    add sp, #4*3 ; pop locals 3
.ret.15677:
    @stackempty locals
    movs r0, #0
.final_0_451:
ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(674,5): tiles.getTileImage
    ;
    .object tiles_getTileImage__P2744 "game/tilemap.ts(674,5): tiles.getTileImage"
tiles_getTileImage__P2744_pre:
    .section code
    .balign 4
    .section code
tiles_getTileImage__P2744:
tiles_getTileImage__P2744_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
tiles_getTileImage__P2744_locals:
    bl game_currentScene__P2975
_proccall1560:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_452      
.jmpz1561:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_452      
.lazySkip_2_452:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_452:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_452      
.jmpz1562:
    ldr r0, _ldlit_298 ; _hexlit41      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    b .ret.2744      
.else_0_452:
.afterif_3_452:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileSet__P2680
_proccall1563:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl tiles_TileMap_getTileImage__P2735
_proccall1564:
    add sp, #4*2 ; pop locals 2
.ret.2744:
    @stackempty locals
.final_4_452:
    add sp, #4*1 ; pop locals 1
tiles_getTileImage__P2744_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(87,9): tiles.Location.tileSet
    ;
    .object tiles_Location_tileSet__P2680 "game/tilemap.ts(87,9): tiles.Location.tileSet"
tiles_Location_tileSet__P2680_pre:
    .section code
    .balign 4
tiles_Location_tileSet__P2680_args:
    cmp r4, #1
    bge tiles_Location_tileSet__P2680_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_tileSet__P2680_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_tileSet__P2680:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2669_validate_107
    mov lr, r7
tiles_Location_tileSet__P2680_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_tileSet__P2680_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2671_nochk
_proccall1565:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl tiles_TileMap_getTileIndex__P2726
_proccall1566:
    add sp, #4*3 ; pop locals 3
.ret.2680:
    @stackempty locals
.final_0_453:
tiles_Location_tileSet__P2680_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_295:
 .word ArcadePhysicsEngine_tilemapOverlaps_inline__P15635_Lit
_ldlit_296:
 .word forEach_inline__P15660_Lit
_ldlit_297:
 .word ArcadePhysicsEngine_tilemapOverlaps_inline__P15677_Lit
_ldlit_298:
 .word _hexlit41
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(25,9): tiles.Location.tileMap
    ;
    .object tiles_Location_tileMap__P2671 "game/tilemap.ts(25,9): tiles.Location.tileMap"
tiles_Location_tileMap__P2671_pre:
    .section code
    .balign 4
tiles_Location_tileMap__P2671_args:
    cmp r4, #1
    bge tiles_Location_tileMap__P2671_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_tileMap__P2671_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_tileMap__P2671:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2669_validate_107
    mov lr, r7
tiles_Location_tileMap__P2671_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_tileMap__P2671_locals:
    bl game_currentScene__P2975
_proccall1567:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
.ret.2671:
    @stackempty locals
.final_0_454:
tiles_Location_tileMap__P2671_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(385,9): tiles.TileMap.getTileIndex
    ;
    .object tiles_TileMap_getTileIndex__P2726 "game/tilemap.ts(385,9): tiles.TileMap.getTileIndex"
tiles_TileMap_getTileIndex__P2726_pre:
    .section code
    .balign 4
tiles_TileMap_getTileIndex__P2726_args:
    cmp r4, #3
    bge tiles_TileMap_getTileIndex__P2726_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_getTileIndex__P2726_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_getTileIndex__P2726:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_getTileIndex__P2726_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_getTileIndex__P2726_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTile__P2699
_proccall1568:
    add sp, #4*3 ; pop locals 3
.ret.2726:
    @stackempty locals
.final_0_455:
tiles_TileMap_getTileIndex__P2726_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(232,9): tiles.TileMapData.getTile
    ;
    .object tiles_TileMapData_getTile__P2699 "game/tilemap.ts(232,9): tiles.TileMapData.getTile"
tiles_TileMapData_getTile__P2699_pre:
    .section code
    .balign 4
tiles_TileMapData_getTile__P2699_args:
    cmp r4, #3
    bge tiles_TileMapData_getTile__P2699_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMapData_getTile__P2699_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMapData_getTile__P2699:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2693_validate_71
    mov lr, r7
tiles_TileMapData_getTile__P2699_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_getTile__P2699_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMapData_isOutsideMap__P2705_nochk
_proccall1570:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_456      
.jmpz1569:
    movs r0, #1
    b .ret.2699      
.else_0_456:
.afterif_1_456:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    mov r1, r0
    movs r0, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getUint8
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.2699:
    @stackempty locals
.final_2_456:
tiles_TileMapData_getTile__P2699_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(554,9): tiles.TileMap.getTileImage
    ;
    .object tiles_TileMap_getTileImage__P2735 "game/tilemap.ts(554,9): tiles.TileMap.getTileImage"
tiles_TileMap_getTileImage__P2735_pre:
    .section code
    .balign 4
tiles_TileMap_getTileImage__P2735_args:
    cmp r4, #2
    bge tiles_TileMap_getTileImage__P2735_nochk
    push {lr}
    bl _expand_args_2_19
    bl tiles_TileMap_getTileImage__P2735_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_getTileImage__P2735:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_getTileImage__P2735_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_getTileImage__P2735_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTileImage__P2702
_proccall1571:
    add sp, #4*2 ; pop locals 2
.ret.2735:
    @stackempty locals
.final_0_457:
tiles_TileMap_getTileImage__P2735_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(252,9): tiles.TileMapData.getTileImage
    ;
    .object tiles_TileMapData_getTileImage__P2702 "game/tilemap.ts(252,9): tiles.TileMapData.getTileImage"
tiles_TileMapData_getTileImage__P2702_pre:
    .section code
    .balign 4
tiles_TileMapData_getTileImage__P2702_args:
    cmp r4, #2
    bge tiles_TileMapData_getTileImage__P2702_nochk
    push {lr}
    bl _expand_args_2_19
    bl tiles_TileMapData_getTileImage__P2702_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMapData_getTileImage__P2702:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2693_validate_71
    mov lr, r7
tiles_TileMapData_getTileImage__P2702_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMapData_getTileImage__P2702_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_458      
.jmpz1572:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_458      
.jmpz1573:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_458      
.jmpz1574:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_458      
.lazySkip_4_458:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_3_458:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_458      
.jmpz1575:
    ldr r0, [sp, locals@2]
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_5_458      
.else_2_458:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_66
    movs r2, #0
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawImage
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_5_458:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_1_458:
.afterif_6_458:
.else_0_458:
.afterif_7_458:
    ldr r0, [sp, locals@1]
.ret.2702:
    @stackempty locals
.final_8_458:
    add sp, #4*3 ; pop locals 3
tiles_TileMapData_getTileImage__P2702_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(223,9): tiles.TileMapData.scale
    ;
    .object tiles_TileMapData_scale__P2697 "game/tilemap.ts(223,9): tiles.TileMapData.scale"
tiles_TileMapData_scale__P2697_pre:
    .section code
    .balign 4
tiles_TileMapData_scale__P2697_args:
    cmp r4, #1
    bge tiles_TileMapData_scale__P2697_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMapData_scale__P2697_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMapData_scale__P2697:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2693_validate_71
    mov lr, r7
tiles_TileMapData_scale__P2697_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_scale__P2697_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.2697:
    @stackempty locals
.final_0_459:
tiles_TileMapData_scale__P2697_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(39,9): tiles.Location.row
    ;
    .object tiles_Location_row__P2673 "game/tilemap.ts(39,9): tiles.Location.row"
tiles_Location_row__P2673_pre:
    .section code
    .balign 4
tiles_Location_row__P2673_args:
    cmp r4, #1
    bge tiles_Location_row__P2673_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_row__P2673_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_row__P2673:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2669_validate_107
    mov lr, r7
tiles_Location_row__P2673_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_row__P2673_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2673:
    @stackempty locals
.final_0_460:
tiles_Location_row__P2673_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(32,9): tiles.Location.column
    ;
    .object tiles_Location_column__P2672 "game/tilemap.ts(32,9): tiles.Location.column"
tiles_Location_column__P2672_pre:
    .section code
    .balign 4
tiles_Location_column__P2672_args:
    cmp r4, #1
    bge tiles_Location_column__P2672_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_column__P2672_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_column__P2672:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2669_validate_107
    mov lr, r7
tiles_Location_column__P2672_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_column__P2672_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2672:
    @stackempty locals
.final_0_461:
tiles_Location_column__P2672_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(381,9): tiles.TileMap.getTile
    ;
    .object tiles_TileMap_getTile__P2725 "game/tilemap.ts(381,9): tiles.TileMap.getTile"
tiles_TileMap_getTile__P2725_pre:
    .section code
    .balign 4
tiles_TileMap_getTile__P2725_args:
    cmp r4, #3
    bge tiles_TileMap_getTile__P2725_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_getTile__P2725_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_getTile__P2725:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_getTile__P2725_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_getTile__P2725_locals:
    ldr r0, _ldlit_300 ; tiles_Location__C2669_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl tiles_Location_constructor__P2670
_proccall1576:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
.ret.2725:
    @stackempty locals
.final_0_462:
tiles_TileMap_getTile__P2725_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(20,9): tiles.Location.constructor
    ;
    .object tiles_Location_constructor__P2670 "game/tilemap.ts(20,9): tiles.Location.constructor"
tiles_Location_constructor__P2670_pre:
    .section code
    .balign 4
    .section code
tiles_Location_constructor__P2670:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2669_validate_107
    mov lr, r7
tiles_Location_constructor__P2670_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_constructor__P2670_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.2670:
    @stackempty locals
.final_0_463:
tiles_Location_constructor__P2670_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(548,5): Math.sign
    ;
    .object Math_sign__P129 "base/pxt-helpers.ts(548,5): Math.sign"
Math_sign__P129_pre:
    .section code
    .balign 4
    .section code
Math_sign__P129:
Math_sign__P129_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_sign__P129_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_eq
    beq .else_0_464      
.jmpz1577:
    movs r0, #1
    b .ret.129      
.else_0_464:
.afterif_1_464:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_gt
    beq .else_2_464      
.jmpz1578:
    movs r0, #3
    b .ret.129      
.else_2_464:
.afterif_3_464:
    movs r0, #1
    negs r0, r0
.ret.129:
    @stackempty locals
.final_4_464:
Math_sign__P129_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(816,5): Sprite.registerObstacle
    ;
    .object Sprite_registerObstacle__P2402 "game/sprite.ts(816,5): Sprite.registerObstacle"
Sprite_registerObstacle__P2402_pre:
    .section code
    .balign 4
Sprite_registerObstacle__P2402_args:
    cmp r4, #4
    bge Sprite_registerObstacle__P2402_nochk
    push {lr}
    bl _expand_args_4_17
    bl Sprite_registerObstacle__P2402_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
Sprite_registerObstacle__P2402:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_registerObstacle__P2402_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_registerObstacle__P2402_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    bl game_currentScene__P2975
_proccall1579:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #60]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #85
    bl _ifacecall1_get_8
_proccall1580:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    bl game_currentScene__P2975
_proccall1581:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #64]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_465      
.jmpz1582:
    movs r0, #1
    ldr r1, _ldlit_301 ; forEach_inline__P15850_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #1
    ldr r1, _ldlit_302 ; Sprite_registerObstacle_inline__P15856_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1583:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1584:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_465:
.afterif_1_465:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1585
    b .else_2_465      
.jmpz1585:
    ldr r0, [sp, args@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_465      
.jmpz1586:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_465      
.lazySkip_4_465:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    bl game_currentScene__P2975
_proccall1587:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
.lazy_3_465:
; jmp value (already in r0)
    str r0, [sp, args@3]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_303 ; wallHandlersToRun_inline__P15869_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1588:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_465      
.jmpz1589:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #196
    bl _ifacecall1_get_8
_proccall1590:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #97
    bl _ifacecall1_get_8
_proccall1591:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl tiles_TileMap_getTile__P2725
_proccall1592:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_304 ; Sprite_registerObstacle_inline__P15896_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1593:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_5_465:
.afterif_6_465:
.else_2_465:
.afterif_7_465:
.ret.2402:
    @stackempty locals
    movs r0, #0
.final_8_465:
    add sp, #4*4 ; pop locals 4
Sprite_registerObstacle__P2402_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(823,25): forEach.inline
    ;
    .object forEach_inline__P15850 "game/sprite.ts(823,25): forEach.inline"
forEach_inline__P15850_pre:
    .section code
    .balign 4
forEach_inline__P15850_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P15850_args@fn
forEach_inline__P15850_args:
    cmp r4, #1
    bge forEach_inline__P15850_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P15850_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P15850:
forEach_inline__P15850_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P15850_locals:
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.15850:
    @stackempty locals
.final_0_466:
forEach_inline__P15850_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(824,26): Sprite.registerObstacle.inline
    ;
    .object Sprite_registerObstacle_inline__P15856 "game/sprite.ts(824,26): Sprite.registerObstacle.inline"
Sprite_registerObstacle_inline__P15856_pre:
    .section code
    .balign 4
Sprite_registerObstacle_inline__P15856_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word Sprite_registerObstacle_inline__P15856_args@fn
Sprite_registerObstacle_inline__P15856_args:
    cmp r4, #1
    bge Sprite_registerObstacle_inline__P15856_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_registerObstacle_inline__P15856_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_registerObstacle_inline__P15856:
Sprite_registerObstacle_inline__P15856_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_registerObstacle_inline__P15856_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall2__63
_proccall1594:
    add sp, #4*2 ; pop locals 2
.ret.15856:
    @stackempty locals
    movs r0, #0
.final_0_467:
Sprite_registerObstacle_inline__P15856_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(829,25): wallHandlersToRun.inline
    ;
    .object wallHandlersToRun_inline__P15869 "game/sprite.ts(829,25): wallHandlersToRun.inline"
wallHandlersToRun_inline__P15869_pre:
    .section code
    .balign 4
wallHandlersToRun_inline__P15869_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word wallHandlersToRun_inline__P15869_args@fn
wallHandlersToRun_inline__P15869_args:
    cmp r4, #1
    bge wallHandlersToRun_inline__P15869_nochk
    push {lr}
    bl _expand_args_1_12
    bl wallHandlersToRun_inline__P15869_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
wallHandlersToRun_inline__P15869:
wallHandlersToRun_inline__P15869_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
wallHandlersToRun_inline__P15869_locals:
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.15869:
    @stackempty locals
.final_0_468:
wallHandlersToRun_inline__P15869_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_300:
 .word tiles_Location__C2669_VT
_ldlit_301:
 .word forEach_inline__P15850_Lit
_ldlit_302:
 .word Sprite_registerObstacle_inline__P15856_Lit
_ldlit_303:
 .word wallHandlersToRun_inline__P15869_Lit
_ldlit_304:
 .word Sprite_registerObstacle_inline__P15896_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(833,30): Sprite.registerObstacle.inline
    ;
    .object Sprite_registerObstacle_inline__P15896 "game/sprite.ts(833,30): Sprite.registerObstacle.inline"
Sprite_registerObstacle_inline__P15896_pre:
    .section code
    .balign 4
Sprite_registerObstacle_inline__P15896_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word Sprite_registerObstacle_inline__P15896_args@fn
Sprite_registerObstacle_inline__P15896_args:
    cmp r4, #1
    bge Sprite_registerObstacle_inline__P15896_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_registerObstacle_inline__P15896_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_registerObstacle_inline__P15896:
Sprite_registerObstacle_inline__P15896_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_registerObstacle_inline__P15896_locals:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall3__57
_proccall1595:
    add sp, #4*3 ; pop locals 3
.ret.15896:
    @stackempty locals
    movs r0, #0
.final_0_469:
Sprite_registerObstacle_inline__P15896_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(239,5): helpers.arraySome
    ;
    .object helpers_arraySome__P107 "base/pxt-helpers.ts(239,5): helpers.arraySome"
helpers_arraySome__P107_pre:
    .section code
    .balign 4
    .section code
helpers_arraySome__P107:
helpers_arraySome__P107_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySome__P107_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.15908:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.15908      
.jmpz1596:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_35
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_470      
.jmpz1597:
    movs r0, #66
    b .ret.107      
.else_0_470:
.afterif_1_470:
.cont.15908:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.15908      
.brk.15908:
    movs r0, #10
.ret.107:
    @stackempty locals
.final_2_470:
    add sp, #4*2 ; pop locals 2
helpers_arraySome__P107_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(523,9): tiles.TileMap.getObstacle
    ;
    .object tiles_TileMap_getObstacle__P2733 "game/tilemap.ts(523,9): tiles.TileMap.getObstacle"
tiles_TileMap_getObstacle__P2733_pre:
    .section code
    .balign 4
tiles_TileMap_getObstacle__P2733_args:
    cmp r4, #3
    bge tiles_TileMap_getObstacle__P2733_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_getObstacle__P2733_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_getObstacle__P2733:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_getObstacle__P2733_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMap_getObstacle__P2733_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_isOutsideMap__P2705
_proccall1600:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_471      
.jmpz1599:
    movs r0, #1
    b .condexprfin_1_471      
.condexprz_0_471:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTile__P2699
_proccall1601:
    add sp, #4*3 ; pop locals 3
.condexprfin_1_471:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTileImage__P2702
_proccall1602:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, _ldlit_306 ; sprites_StaticObstacle__C2474_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    ldr r0, [sp, #4*5] ; tmpref @1
    push {r0} ; proc-arg
    bl sprites_StaticObstacle_constructor__P2480
_proccall1603:
    add sp, #4*6 ; pop locals 6
    pop {r0} ; tmpref @1
.ret.2733:
    @stackempty locals
.final_2_471:
    add sp, #4*2 ; pop locals 2
tiles_TileMap_getObstacle__P2733_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(342,9): tiles.TileMap.layer
    ;
    .object tiles_TileMap_layer__P2721 "game/tilemap.ts(342,9): tiles.TileMap.layer"
tiles_TileMap_layer__P2721_pre:
    .section code
    .balign 4
tiles_TileMap_layer__P2721_args:
    cmp r4, #1
    bge tiles_TileMap_layer__P2721_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_layer__P2721_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_layer__P2721:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_layer__P2721_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_layer__P2721_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2721:
    @stackempty locals
.final_0_472:
tiles_TileMap_layer__P2721_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(29,9): sprites.StaticObstacle.constructor
    ;
    .object sprites_StaticObstacle_constructor__P2480 "game/obstacle.ts(29,9): sprites.StaticObstacle.constructor"
sprites_StaticObstacle_constructor__P2480_pre:
    .section code
    .balign 4
    .section code
sprites_StaticObstacle_constructor__P2480:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2474_validate_106
    mov lr, r7
sprites_StaticObstacle_constructor__P2480_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_constructor__P2480_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #0
.ret.2480:
    @stackempty locals
.final_0_473:
sprites_StaticObstacle_constructor__P2480_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(34,5): MovingSprite.constructor
    ;
    .object MovingSprite_constructor__P2502 "game/physics.ts(34,5): MovingSprite.constructor"
MovingSprite_constructor__P2502_pre:
    .section code
    .balign 4
    .section code
MovingSprite_constructor__P2502:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_MovingSprite__C2501_validate_105
    mov lr, r7
MovingSprite_constructor__P2502_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
MovingSprite_constructor__P2502_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@6]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@7]
    str r1, [r0, #28]
    movs r0, #0
.ret.2502:
    @stackempty locals
.final_0_474:
MovingSprite_constructor__P2502_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(113,5): ArcadePhysicsEngine.move
    ;
    .object ArcadePhysicsEngine_move__P2515 "game/physics.ts(113,5): ArcadePhysicsEngine.move"
ArcadePhysicsEngine_move__P2515_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_move__P2515_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_move__P2515_nochk
    push {lr}
    bl _expand_args_2_19
    bl ArcadePhysicsEngine_move__P2515_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_move__P2515:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_move__P2515_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_move__P2515_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r0, #201
    push {r0} ; proc-arg
    bl Math_min__P131
_proccall1604:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_27
    movs r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    bl game_currentScene__P2975
_proccall1605:
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_307 ; movingSprites_inline__P15996_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayMap__P106
_proccall1606:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_308 ; ArcadePhysicsEngine_move_inline__P16008_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1607:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl sprites_SpriteMap_clear__P2428
_proccall1608:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl sprites_SpriteMap_resizeBuckets__P2427
_proccall1609:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_div__P162
_proccall1610:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1611:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1612:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1613:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #48]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySlice__P115
_proccall1614:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@9]
    @stackempty locals
.fortop.16050:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_475      
.jmpz1615:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_475      
.lazySkip_1_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.lazy_0_475:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1616
    b .brk.16050      
.object PUSH
.balign 4
_ldlit_306:
 .word sprites_StaticObstacle__C2474_VT
_ldlit_307:
 .word movingSprites_inline__P15996_Lit
_ldlit_308:
 .word ArcadePhysicsEngine_move_inline__P16008_Lit
.object POP
.jmpz1616:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_eors
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@11]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@10]
    str r0, [sp, locals@13]
    movs r0, #1
    str r0, [sp, locals@14]
    @stackempty locals
.fortop.16073:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1617
    b .brk.16073      
.jmpz1617:
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #4]
    str r0, [sp, locals@15]
    @stackempty locals
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    bne .jmpz1618
    b .else_2_475      
.jmpz1618:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_eq
    beq .else_3_475      
.jmpz1619:
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #16]
    @stackempty locals
    b .afterif_4_475      
.else_3_475:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_7_475      
.jmpz1620:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_475      
.lazySkip_7_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_6_475:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_9_475      
.jmpz1621:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_475      
.lazySkip_9_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_11_475      
.jmpz1622:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_475      
.lazySkip_11_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_10_475:
; jmp value (already in r0)
.lazy_8_475:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_475      
.jmpz1623:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_5_475:
.afterif_12_475:
.afterif_4_475:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_475:
.afterif_13_475:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    bne .jmpz1624
    b .else_14_475      
.jmpz1624:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    movs r1, #1
    bl _cmp_eq
    beq .else_15_475      
.jmpz1625:
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #20]
    @stackempty locals
    b .afterif_16_475      
.else_15_475:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_19_475      
.jmpz1626:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_18_475      
.lazySkip_19_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_18_475:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_21_475      
.jmpz1627:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_20_475      
.lazySkip_21_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_23_475      
.jmpz1628:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_22_475      
.lazySkip_23_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_22_475:
; jmp value (already in r0)
.lazy_20_475:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_17_475      
.jmpz1629:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #28]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_17_475:
.afterif_24_475:
.afterif_16_475:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_14_475:
.afterif_25_475:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1631:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1632:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .condexprz_26_475      
.jmpz1630:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #16]
    b .condexprfin_27_475      
.condexprz_26_475:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #24]
.condexprfin_27_475:
; jmp value (already in r0)
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #28]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1634:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1635:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .condexprz_28_475      
.jmpz1633:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #20]
    b .condexprfin_29_475      
.condexprz_28_475:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #28]
.condexprfin_29_475:
; jmp value (already in r0)
    str r0, [sp, locals@17]
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@16]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@17]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2501_validate_105
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    ldr r1, [sp, locals@16]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@17]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_30_475      
.jmpz1636:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteMap_insertAABB__P2429
_proccall1637:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_30_475:
.afterif_31_475:
    ldr r0, [sp, locals@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_34_475      
.jmpz1638:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_33_475      
.lazySkip_34_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2723
_proccall1639:
    add sp, #4*1 ; pop locals 1
.lazy_33_475:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_32_475      
.jmpz1640:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_tilemapCollisions__P4828_nochk
_proccall1641:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_32_475:
.afterif_35_475:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #65
    bl _numops_ands
    str r0, [sp, locals@18]
    @stackempty locals
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #17
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_38_475      
.jmpz1642:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_37_475      
.lazySkip_38_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@18]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_40_475      
.jmpz1643:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_39_475      
.lazySkip_40_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_39_475:
; jmp value (already in r0)
.lazy_37_475:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_36_475      
.jmpz1644:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl ArcadePhysicsEngine_screenEdgeCollisions__P4827_nochk
_proccall1645:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_36_475:
.afterif_41_475:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1647:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_44_475      
.jmpz1646:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_43_475      
.lazySkip_44_475:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1648:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_43_475:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_42_475      
.jmpz1649:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_42_475:
.afterif_45_475:
.cont.16073:
    ldr r0, [sp, locals@14]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@14]
    b .fortop.16073      
.brk.16073:
    movs r0, #0
    str r0, [sp, locals@13]
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_spriteCollisions__P4826_nochk
_proccall1650:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.16275:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.16275      
.jmpz1651:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.16275      
.brk.16275:
.cont.16050:
    ldr r0, [sp, locals@9]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    b .fortop.16050      
.brk.16050:
.ret.2515:
    @stackempty locals
    movs r0, #0
.final_46_475:
    add sp, #4*19 ; pop locals 19
ArcadePhysicsEngine_move__P2515_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(122,18): movingSprites.inline
    ;
    .object movingSprites_inline__P15996 "game/physics.ts(122,18): movingSprites.inline"
movingSprites_inline__P15996_pre:
    .section code
    .balign 4
movingSprites_inline__P15996_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word movingSprites_inline__P15996_args@fn
movingSprites_inline__P15996_args:
    cmp r4, #1
    bge movingSprites_inline__P15996_nochk
    push {lr}
    bl _expand_args_1_12
    bl movingSprites_inline__P15996_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
movingSprites_inline__P15996:
movingSprites_inline__P15996_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
movingSprites_inline__P15996_locals:
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_createMovingSprite__P4825_nochk
_proccall1652:
    add sp, #4*4 ; pop locals 4
.ret.15996:
    @stackempty locals
.final_0_476:
movingSprites_inline__P15996_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(125,30): ArcadePhysicsEngine.move.inline
    ;
    .object ArcadePhysicsEngine_move_inline__P16008 "game/physics.ts(125,30): ArcadePhysicsEngine.move.inline"
ArcadePhysicsEngine_move_inline__P16008_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_move_inline__P16008_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_move_inline__P16008_args@fn
ArcadePhysicsEngine_move_inline__P16008_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_move_inline__P16008_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_move_inline__P16008_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_move_inline__P16008:
ArcadePhysicsEngine_move_inline__P16008_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_move_inline__P16008_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2334
_proccall1654:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_477      
.jmpz1653:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_477      
.lazySkip_2_477:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2336
_proccall1655:
    add sp, #4*1 ; pop locals 1
.lazy_1_477:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_477      
.jmpz1656:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_clearObstacles__P2401
_proccall1657:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_477:
.afterif_3_477:
.ret.16008:
    @stackempty locals
    movs r0, #0
.final_4_477:
ArcadePhysicsEngine_move_inline__P16008_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(310,5): ArcadePhysicsEngine.spriteCollisions
    ;
    .object ArcadePhysicsEngine_spriteCollisions__P4826 "game/physics.ts(310,5): ArcadePhysicsEngine.spriteCollisions"
ArcadePhysicsEngine_spriteCollisions__P4826_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_spriteCollisions__P4826_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_spriteCollisions__P4826_nochk
    push {lr}
    bl _expand_args_3_14
    bl ArcadePhysicsEngine_spriteCollisions__P4826_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
ArcadePhysicsEngine_spriteCollisions__P4826:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_spriteCollisions__P4826_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_spriteCollisions__P4826_locals:
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_478      
.jmpz1658:
    b .ret.4826      
.else_0_478:
.afterif_1_478:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.16294:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1659
    b .brk.16294      
.jmpz1659:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #4]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_478      
.jmpz1660:
    b .cont.16294      
.else_2_478:
.afterif_3_478:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl sprites_SpriteMap_overlaps__P2425
_proccall1661:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@4]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.16311:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1662
    b .brk.16311      
.jmpz1662:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@5]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_478      
.jmpz1663:
    b .cont.16311      
.else_4_478:
.afterif_5_478:
    ldr r0, [sp, locals@3]
    ldr r0, [r0, #64]
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@5]
    ldr r0, [r0, #64]
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@3]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #112]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    negs r1, r1
    bl _cmp_eqq
    beq .else_6_478      
.jmpz1664:
    b .cont.16311      
.else_6_478:
.afterif_7_478:
    ldr r0, [sp, locals@3]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .condexprz_8_478      
.jmpz1665:
    ldr r0, [sp, locals@3]
    b .condexprfin_9_478      
.condexprz_8_478:
    ldr r0, [sp, locals@5]
.condexprfin_9_478:
; jmp value (already in r0)
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    ldr r1, [sp, locals@3]
    bl _cmp_eqq
    beq .condexprz_10_478      
.jmpz1666:
    ldr r0, [sp, locals@5]
    b .condexprfin_11_478      
.condexprz_10_478:
    ldr r0, [sp, locals@3]
.condexprfin_11_478:
; jmp value (already in r0)
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@10]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    negs r1, r1
    bl _cmp_eqq
    beq .else_12_478      
.jmpz1667:
    movs r0, #2
    ldr r1, _ldlit_310 ; forEach_inline__P16358_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@9]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #5
    ldr r1, _ldlit_311 ; ArcadePhysicsEngine_spriteCollisions_inline__P16382_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #1
    ldr r2, [sp, locals@11]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #2
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #3
    ldr r2, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #4
    ldr r2, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1668:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1669:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_12_478:
.afterif_13_478:
.cont.16311:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.16311      
.brk.16311:
    movs r0, #0
    str r0, [sp, locals@6]
.cont.16294:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.16294      
.brk.16294:
    movs r0, #0
    str r0, [sp, locals@1]
.ret.4826:
    @stackempty locals
    movs r0, #0
.final_14_478:
    add sp, #4*12 ; pop locals 12
ArcadePhysicsEngine_spriteCollisions__P4826_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(336,33): forEach.inline
    ;
    .object forEach_inline__P16358 "game/physics.ts(336,33): forEach.inline"
forEach_inline__P16358_pre:
    .section code
    .balign 4
forEach_inline__P16358_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P16358_args@fn
forEach_inline__P16358_args:
    cmp r4, #1
    bge forEach_inline__P16358_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P16358_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P16358:
forEach_inline__P16358_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P16358_locals:
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_479      
.jmpz1670:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_479      
.lazySkip_1_479:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_0_479:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_479      
.jmpz1671:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_479      
.lazySkip_3_479:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_479      
.jmpz1672:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_479      
.lazySkip_5_479:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_4_479:
; jmp value (already in r0)
.lazy_2_479:
; jmp value (already in r0)
.ret.16358:
    @stackempty locals
.final_6_479:
forEach_inline__P16358_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(339,34): ArcadePhysicsEngine.spriteCollisions.inline
    ;
    .object ArcadePhysicsEngine_spriteCollisions_inline__P16382 "game/physics.ts(339,34): ArcadePhysicsEngine.spriteCollisions.inline"
ArcadePhysicsEngine_spriteCollisions_inline__P16382_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_spriteCollisions_inline__P16382_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_spriteCollisions_inline__P16382_args@fn
ArcadePhysicsEngine_spriteCollisions_inline__P16382_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_spriteCollisions_inline__P16382_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_spriteCollisions_inline__P16382_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_spriteCollisions_inline__P16382:
ArcadePhysicsEngine_spriteCollisions_inline__P16382_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_spriteCollisions_inline__P16382_locals:
    ldr r0, [r5, #4*3]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #108]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #6
    ldr r1, _ldlit_312 ; ArcadePhysicsEngine_spriteCollisions_inline__P16392_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [r5, #4*6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [r5, #4*7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #5
    ldr r2, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.16382:
    @stackempty locals
    movs r0, #0
.final_0_480:
ArcadePhysicsEngine_spriteCollisions_inline__P16382_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(341,51): ArcadePhysicsEngine.spriteCollisions.inline
    ;
    .object ArcadePhysicsEngine_spriteCollisions_inline__P16392 "game/physics.ts(341,51): ArcadePhysicsEngine.spriteCollisions.inline"
ArcadePhysicsEngine_spriteCollisions_inline__P16392_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_spriteCollisions_inline__P16392_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_spriteCollisions_inline__P16392_args@fn
ArcadePhysicsEngine_spriteCollisions_inline__P16392_args:
    .section code
ArcadePhysicsEngine_spriteCollisions_inline__P16392:
ArcadePhysicsEngine_spriteCollisions_inline__P16392_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_spriteCollisions_inline__P16392_locals:
    ldr r0, [r5, #4*3]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_orrs
    add sp, #4*2 ; pop locals 2
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_481      
.jmpz1673:
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .condexprz_1_481      
.jmpz1674:
    ldr r0, [r5, #4*3]
    b .condexprfin_2_481      
.condexprz_1_481:
    ldr r0, [r5, #4*4]
.condexprfin_2_481:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    bl _inst_controller_ControlledSprite__C2107_validate_73
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .condexprz_3_481      
.jmpz1675:
    ldr r0, [r5, #4*4]
    b .condexprfin_4_481      
.condexprz_3_481:
    ldr r0, [r5, #4*3]
.condexprfin_4_481:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall3__57
_proccall1676:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_5_481      
.object PUSH
.balign 4
_ldlit_310:
 .word forEach_inline__P16358_Lit
_ldlit_311:
 .word ArcadePhysicsEngine_spriteCollisions_inline__P16382_Lit
_ldlit_312:
 .word ArcadePhysicsEngine_spriteCollisions_inline__P16392_Lit
.object POP
.else_0_481:
.afterif_5_481:
    ldr r0, [r5, #4*7]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #108]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*8]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.ret.16392:
    @stackempty locals
    movs r0, #0
.final_6_481:
ArcadePhysicsEngine_spriteCollisions_inline__P16392_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(31,9): sprites.SpriteMap.overlaps
    ;
    .object sprites_SpriteMap_overlaps__P2425 "game/spritemap.ts(31,9): sprites.SpriteMap.overlaps"
sprites_SpriteMap_overlaps__P2425_pre:
    .section code
    .balign 4
sprites_SpriteMap_overlaps__P2425_args:
    cmp r4, #2
    bge sprites_SpriteMap_overlaps__P2425_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_SpriteMap_overlaps__P2425_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_overlaps__P2425:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_overlaps__P2425_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_overlaps__P2425_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_neighbors__P2424_nochk
_proccall1677:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_314 ; o_inline__P16430_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1678:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
.ret.2425:
    @stackempty locals
.final_0_482:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_overlaps__P2425_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(33,32): o.inline
    ;
    .object o_inline__P16430 "game/spritemap.ts(33,32): o.inline"
o_inline__P16430_pre:
    .section code
    .balign 4
o_inline__P16430_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word o_inline__P16430_args@fn
o_inline__P16430_args:
    cmp r4, #1
    bge o_inline__P16430_nochk
    push {lr}
    bl _expand_args_1_12
    bl o_inline__P16430_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
o_inline__P16430:
o_inline__P16430_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
o_inline__P16430_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl Sprite_overlapsWith__P2396
_proccall1679:
    add sp, #4*2 ; pop locals 2
.ret.16430:
    @stackempty locals
.final_0_483:
o_inline__P16430_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(690,5): Sprite.overlapsWith
    ;
    .object Sprite_overlapsWith__P2396 "game/sprite.ts(690,5): Sprite.overlapsWith"
Sprite_overlapsWith__P2396_pre:
    .section code
    .balign 4
Sprite_overlapsWith__P2396_args:
    cmp r4, #2
    bge Sprite_overlapsWith__P2396_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_overlapsWith__P2396_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_overlapsWith__P2396:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_overlapsWith__P2396_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_overlapsWith__P2396_locals:
    @stackempty locals
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@0]
    bl _cmp_eq
    beq .else_0_484      
.jmpz1680:
    movs r0, #10
    b .ret.2396      
.else_0_484:
.afterif_1_484:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_484      
.jmpz1681:
    movs r0, #10
    b .ret.2396      
.else_2_484:
.afterif_3_484:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_484      
.jmpz1682:
    movs r0, #10
    b .ret.2396      
.else_4_484:
.afterif_5_484:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl game_Hitbox_overlapsWith__P2200
_proccall1684:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_484      
.jmpz1683:
    movs r0, #10
    b .ret.2396      
.else_6_484:
.afterif_7_484:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isScaled__P4781_nochk
_proccall1686:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_484      
.jmpz1685:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_484      
.lazySkip_10_484:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_isScaled__P4781
_proccall1687:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_9_484:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_484      
.jmpz1688:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2375_nochk
_proccall1689:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2375
_proccall1690:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2379_nochk
_proccall1691:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2379
_proccall1692:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_69
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::overlapsWith
    add sp, #4*4 ; pop locals 4
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    b .ret.2396      
    b .afterif_11_484      
.else_8_484:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2346_nochk
_proccall1694:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_14_484      
.jmpz1693:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_484      
.lazySkip_14_484:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2348_nochk
_proccall1695:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_13_484:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_16_484      
.jmpz1696:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_15_484      
.lazySkip_16_484:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sx__P2346
_proccall1697:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_15_484:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_18_484      
.jmpz1698:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_17_484      
.lazySkip_18_484:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sy__P2348
_proccall1699:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_17_484:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_484      
.jmpz1700:
    movs r0, #10
    b .ret.2396      
    b .afterif_19_484      
.object PUSH
.balign 4
_ldlit_314:
 .word o_inline__P16430_Lit
.object POP
.else_12_484:
.afterif_19_484:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2346_nochk
_proccall1702:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2348_nochk
_proccall1703:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sx__P2346
_proccall1704:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sy__P2348
_proccall1705:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .else_20_484      
.jmpz1701:
    ldr r0, [sp, args@0]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_21_484      
.else_20_484:
    ldr r0, [sp, args@1]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_21_484:
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2375
_proccall1706:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2375
_proccall1707:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2346
_proccall1708:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2379
_proccall1709:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2379
_proccall1710:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2348
_proccall1711:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_width__P2373
_proccall1712:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2346
_proccall1713:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_height__P2374
_proccall1714:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2348
_proccall1715:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    ldr r0, [sp, #4*12] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*13] ; estack
    ldr r0, [sp, #4*14] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*15] ; estack
    ldr r0, [sp, #4*16] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*17] ; estack
    ldr r0, [sp, #4*18] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*19] ; estack
    bl helpers_imageBlit__P1933
_proccall1716:
    add sp, #4*20 ; pop locals 20
    b .ret.2396      
.afterif_11_484:
    movs r0, #0
.ret.2396:
    @stackempty locals
.final_22_484:
    add sp, #4*2 ; pop locals 2
Sprite_overlapsWith__P2396_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(137,5): helpers.imageBlit
    ;
    .object helpers_imageBlit__P1933 "screen---st7735/image.ts(137,5): helpers.imageBlit"
helpers_imageBlit__P1933_pre:
    .section code
    .balign 4
    .section code
helpers_imageBlit__P1933:
helpers_imageBlit__P1933_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageBlit__P1933_locals:
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_485      
.jmpz1717:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_485      
.lazySkip_1_485:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
.lazy_0_485:
; jmp value (already in r0)
    movs r1, #93
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #3
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #5
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #7
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #9
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@7]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #11
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@8]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #13
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@9]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #15
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@10]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_485      
.jmpz1718:
    movs r0, #3
    b .condexprfin_3_485      
.condexprz_2_485:
    movs r0, #1
.condexprfin_3_485:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #17
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@11]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_485      
.jmpz1719:
    movs r0, #3
    b .condexprfin_5_485      
.condexprz_4_485:
    movs r0, #1
.condexprfin_5_485:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #19
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_108
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_blit
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.1933:
    @stackempty locals
.final_6_485:
helpers_imageBlit__P1933_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(370,5): Sprite.isScaled
    ;
    .object Sprite_isScaled__P4781 "game/sprite.ts(370,5): Sprite.isScaled"
Sprite_isScaled__P4781_pre:
    .section code
    .balign 4
Sprite_isScaled__P4781_args:
    cmp r4, #1
    bge Sprite_isScaled__P4781_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_isScaled__P4781_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_isScaled__P4781:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_isScaled__P4781_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_isScaled__P4781_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_486      
.jmpz1720:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_486      
.lazySkip_1_486:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.lazy_0_486:
; jmp value (already in r0)
.ret.4781:
    @stackempty locals
.final_2_486:
Sprite_isScaled__P4781_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(88,9): game.Hitbox.overlapsWith
    ;
    .object game_Hitbox_overlapsWith__P2200 "game/hitbox.ts(88,9): game.Hitbox.overlapsWith"
game_Hitbox_overlapsWith__P2200_pre:
    .section code
    .balign 4
game_Hitbox_overlapsWith__P2200_args:
    cmp r4, #2
    bge game_Hitbox_overlapsWith__P2200_nochk
    push {lr}
    bl _expand_args_2_19
    bl game_Hitbox_overlapsWith__P2200_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
game_Hitbox_overlapsWith__P2200:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_25
    mov lr, r7
game_Hitbox_overlapsWith__P2200_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_overlapsWith__P2200_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_updateIfInvalid__P2199_nochk
_proccall1721:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_updateIfInvalid__P2199
_proccall1722:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1724:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1725:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198_nochk
_proccall1726:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_487      
.jmpz1723:
    movs r0, #66
    b .ret.2200      
.else_0_487:
.afterif_1_487:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1728:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1729:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198_nochk
_proccall1730:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_487      
.jmpz1727:
    movs r0, #66
    b .ret.2200      
.else_2_487:
.afterif_3_487:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1732:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1733:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198_nochk
_proccall1734:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_487      
.jmpz1731:
    movs r0, #66
    b .ret.2200      
.else_4_487:
.afterif_5_487:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1736:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1737:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198_nochk
_proccall1738:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_487      
.jmpz1735:
    movs r0, #66
    b .ret.2200      
.else_6_487:
.afterif_7_487:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193_nochk
_proccall1740:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194_nochk
_proccall1741:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198
_proccall1742:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_487      
.jmpz1739:
    movs r0, #66
    b .ret.2200      
.else_8_487:
.afterif_9_487:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193_nochk
_proccall1744:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196_nochk
_proccall1745:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198
_proccall1746:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_487      
.jmpz1743:
    movs r0, #66
    b .ret.2200      
.else_10_487:
.afterif_11_487:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195_nochk
_proccall1748:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194_nochk
_proccall1749:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198
_proccall1750:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_487      
.jmpz1747:
    movs r0, #66
    b .ret.2200      
.else_12_487:
.afterif_13_487:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195_nochk
_proccall1752:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196_nochk
_proccall1753:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198
_proccall1754:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_487      
.jmpz1751:
    movs r0, #66
    b .ret.2200      
.else_14_487:
.afterif_15_487:
    movs r0, #10
.ret.2200:
    @stackempty locals
.final_16_487:
game_Hitbox_overlapsWith__P2200_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(45,9): game.Hitbox.contains
    ;
    .object game_Hitbox_contains__P2198 "game/hitbox.ts(45,9): game.Hitbox.contains"
game_Hitbox_contains__P2198_pre:
    .section code
    .balign 4
game_Hitbox_contains__P2198_args:
    cmp r4, #3
    bge game_Hitbox_contains__P2198_nochk
    push {lr}
    bl _expand_args_3_14
    bl game_Hitbox_contains__P2198_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
game_Hitbox_contains__P2198:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_25
    mov lr, r7
game_Hitbox_contains__P2198_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_contains__P2198_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193_nochk
_proccall1756:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_488      
.jmpz1755:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_488      
.lazySkip_1_488:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195_nochk
_proccall1757:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_0_488:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_488      
.jmpz1758:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_488      
.lazySkip_3_488:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194_nochk
_proccall1759:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_2_488:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_488      
.jmpz1760:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_488      
.lazySkip_5_488:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196_nochk
_proccall1761:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_4_488:
; jmp value (already in r0)
.ret.2198:
    @stackempty locals
.final_6_488:
game_Hitbox_contains__P2198_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(16,9): sprites.SpriteMap.neighbors
    ;
    .object sprites_SpriteMap_neighbors__P2424 "game/spritemap.ts(16,9): sprites.SpriteMap.neighbors"
sprites_SpriteMap_neighbors__P2424_pre:
    .section code
    .balign 4
sprites_SpriteMap_neighbors__P2424_args:
    cmp r4, #2
    bge sprites_SpriteMap_neighbors__P2424_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_SpriteMap_neighbors__P2424_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_neighbors__P2424:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_neighbors__P2424_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_neighbors__P2424_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #68]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2375
_proccall1762:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2379
_proccall1763:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4790_nochk
_proccall1764:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2375
_proccall1765:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_bottom__P2381
_proccall1766:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4790_nochk
_proccall1767:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_right__P2377
_proccall1768:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2379
_proccall1769:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4790_nochk
_proccall1770:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_right__P2377
_proccall1771:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_bottom__P2381
_proccall1772:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4790_nochk
_proccall1773:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2424:
    @stackempty locals
.final_0_489:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_neighbors__P2424_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(406,5): Sprite.right
    ;
    .object Sprite_right__P2377 "game/sprite.ts(406,5): Sprite.right"
Sprite_right__P2377_pre:
    .section code
    .balign 4
Sprite_right__P2377_args:
    cmp r4, #1
    bge Sprite_right__P2377_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_right__P2377_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_right__P2377:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_right__P2377_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_right__P2377_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2375_nochk
_proccall1774:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2373_nochk
_proccall1775:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2377:
    @stackempty locals
.final_0_490:
Sprite_right__P2377_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(436,5): Sprite.bottom
    ;
    .object Sprite_bottom__P2381 "game/sprite.ts(436,5): Sprite.bottom"
Sprite_bottom__P2381_pre:
    .section code
    .balign 4
Sprite_bottom__P2381_args:
    cmp r4, #1
    bge Sprite_bottom__P2381_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_bottom__P2381_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_bottom__P2381:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_bottom__P2381_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_bottom__P2381_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2379_nochk
_proccall1776:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2374_nochk
_proccall1777:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2381:
    @stackempty locals
.final_0_491:
Sprite_bottom__P2381_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(102,9): sprites.SpriteMap.mergeAtKey
    ;
    .object sprites_SpriteMap_mergeAtKey__P4790 "game/spritemap.ts(102,9): sprites.SpriteMap.mergeAtKey"
sprites_SpriteMap_mergeAtKey__P4790_pre:
    .section code
    .balign 4
sprites_SpriteMap_mergeAtKey__P4790_args:
    cmp r4, #5
    bge sprites_SpriteMap_mergeAtKey__P4790_nochk
    push {lr}
    bl _expand_args_5_54
    bl sprites_SpriteMap_mergeAtKey__P4790_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
sprites_SpriteMap_mergeAtKey__P4790:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_mergeAtKey__P4790_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_mergeAtKey__P4790_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_key__P4788_nochk
_proccall1778:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_492      
.jmpz1779:
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16748:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.16748      
.jmpz1780:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #68]
    ldr r1, [sp, args@3]
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_492      
.jmpz1781:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_492      
.lazySkip_3_492:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_2_492:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_492      
.jmpz1782:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_492:
.afterif_4_492:
.cont.16748:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.16748      
.brk.16748:
    movs r0, #0
    str r0, [sp, locals@3]
.else_0_492:
.afterif_5_492:
.ret.4790:
    @stackempty locals
    movs r0, #0
.final_6_492:
    add sp, #4*5 ; pop locals 5
sprites_SpriteMap_mergeAtKey__P4790_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(77,9): sprites.SpriteMap.key
    ;
    .object sprites_SpriteMap_key__P4788 "game/spritemap.ts(77,9): sprites.SpriteMap.key"
sprites_SpriteMap_key__P4788_pre:
    .section code
    .balign 4
sprites_SpriteMap_key__P4788_args:
    cmp r4, #3
    bge sprites_SpriteMap_key__P4788_nochk
    push {lr}
    bl _expand_args_3_14
    bl sprites_SpriteMap_key__P4788_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
sprites_SpriteMap_key__P4788:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_key__P4788_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_key__P4788_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1783:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1784:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.4788:
    @stackempty locals
.final_0_493:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_key__P4788_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(356,5): ArcadePhysicsEngine.screenEdgeCollisions
    ;
    .object ArcadePhysicsEngine_screenEdgeCollisions__P4827 "game/physics.ts(356,5): ArcadePhysicsEngine.screenEdgeCollisions"
ArcadePhysicsEngine_screenEdgeCollisions__P4827_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_screenEdgeCollisions__P4827_args:
    cmp r4, #4
    bge ArcadePhysicsEngine_screenEdgeCollisions__P4827_nochk
    push {lr}
    bl _expand_args_4_17
    bl ArcadePhysicsEngine_screenEdgeCollisions__P4827_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
ArcadePhysicsEngine_screenEdgeCollisions__P4827:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_screenEdgeCollisions__P4827_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_screenEdgeCollisions__P4827_locals:
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2501_validate_105
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_isStatic__P2371
_proccall1786:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_494      
.jmpz1785:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2317_104
_proccall1787:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_494:
.afterif_1_494:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl scene_Camera_isUpdated__P2773
_proccall1789:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_494      
.jmpz1788:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl scene_Camera_update__P2774
_proccall1790:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_494:
.afterif_3_494:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_left__P2193
_proccall1791:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_4_494      
.jmpz1792:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_left__P2375
_proccall1793:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_left__P2376
_proccall1794:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_494      
.jmpz1795:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2334
_proccall1796:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vx__P2335
_proccall1797:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_5_494:
.afterif_6_494:
    b .afterif_7_494      
.else_4_494:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_right__P2195
_proccall1798:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    movs r1, #1
    bl _cmp_gt
    beq .else_8_494      
.jmpz1799:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_right__P2377
_proccall1800:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_right__P2378
_proccall1801:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_9_494      
.jmpz1802:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2334
_proccall1803:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vx__P2335
_proccall1804:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_9_494:
.afterif_10_494:
.else_8_494:
.afterif_11_494:
.afterif_7_494:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_top__P2194
_proccall1805:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    movs r1, #1
    bl _cmp_lt
    beq .else_12_494      
.jmpz1806:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_top__P2379
_proccall1807:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2380
_proccall1808:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_13_494      
.jmpz1809:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2336
_proccall1810:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vy__P2337
_proccall1811:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_13_494:
.afterif_14_494:
    b .afterif_15_494      
.else_12_494:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_bottom__P2196
_proccall1812:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    movs r1, #1
    bl _cmp_gt
    beq .else_16_494      
.jmpz1813:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_bottom__P2381
_proccall1814:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_bottom__P2382
_proccall1815:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_17_494      
.jmpz1816:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2336
_proccall1817:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vy__P2337
_proccall1818:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_17_494:
.afterif_18_494:
.else_16_494:
.afterif_19_494:
.afterif_15_494:
.ret.4827:
    @stackempty locals
    movs r0, #0
.final_20_494:
    add sp, #4*2 ; pop locals 2
ArcadePhysicsEngine_screenEdgeCollisions__P4827_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(441,5): Sprite.bottom
    ;
    .object Sprite_bottom__P2382 "game/sprite.ts(441,5): Sprite.bottom"
Sprite_bottom__P2382_pre:
    .section code
    .balign 4
Sprite_bottom__P2382_args:
    cmp r4, #2
    bge Sprite_bottom__P2382_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_bottom__P2382_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_bottom__P2382:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_bottom__P2382_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_bottom__P2382_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2374_nochk
_proccall1819:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2380_nochk
_proccall1820:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2382:
    @stackempty locals
    movs r0, #0
.final_0_495:
Sprite_bottom__P2382_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(411,5): Sprite.right
    ;
    .object Sprite_right__P2378 "game/sprite.ts(411,5): Sprite.right"
Sprite_right__P2378_pre:
    .section code
    .balign 4
Sprite_right__P2378_args:
    cmp r4, #2
    bge Sprite_right__P2378_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_right__P2378_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_right__P2378:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_right__P2378_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_right__P2378_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2373_nochk
_proccall1821:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_left__P2376_nochk
_proccall1822:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2378:
    @stackempty locals
    movs r0, #0
.final_0_496:
Sprite_right__P2378_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(80,9): scene.Camera.isUpdated
    ;
    .object scene_Camera_isUpdated__P2773 "game/camera.ts(80,9): scene.Camera.isUpdated"
scene_Camera_isUpdated__P2773_pre:
    .section code
    .balign 4
scene_Camera_isUpdated__P2773_args:
    cmp r4, #1
    bge scene_Camera_isUpdated__P2773_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_isUpdated__P2773_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_isUpdated__P2773:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_isUpdated__P2773_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_isUpdated__P2773_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_497      
.jmpz1823:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_497      
.lazySkip_1_497:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_x__P2330
_proccall1825:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_497      
.jmpz1824:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_497      
.lazySkip_3_497:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_y__P2332
_proccall1826:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_2_497:
; jmp value (already in r0)
.lazy_0_497:
; jmp value (already in r0)
.ret.2773:
    @stackempty locals
.final_4_497:
scene_Camera_isUpdated__P2773_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(92,9): sprites.SpriteMap.insertAABB
    ;
    .object sprites_SpriteMap_insertAABB__P2429 "game/spritemap.ts(92,9): sprites.SpriteMap.insertAABB"
sprites_SpriteMap_insertAABB__P2429_pre:
    .section code
    .balign 4
sprites_SpriteMap_insertAABB__P2429_args:
    cmp r4, #2
    bge sprites_SpriteMap_insertAABB__P2429_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_SpriteMap_insertAABB__P2429_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_insertAABB__P2429:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_insertAABB__P2429_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_insertAABB__P2429_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2375
_proccall1827:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2379
_proccall1828:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_width__P2373
_proccall1829:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_height__P2374
_proccall1830:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16965:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .brk.16965      
.jmpz1831:
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.16969:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@3]
    bl _cmp_le
    beq .brk.16969      
.jmpz1832:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_width__P2373
_proccall1833:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1834:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_height__P2374
_proccall1835:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1836:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_insertAtKey__P4789_nochk
_proccall1837:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.cont.16969:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    b .fortop.16969      
.brk.16969:
.cont.16965:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    b .fortop.16965      
.brk.16965:
.ret.2429:
    @stackempty locals
    movs r0, #0
.final_0_498:
    add sp, #4*6 ; pop locals 6
sprites_SpriteMap_insertAABB__P2429_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(83,9): sprites.SpriteMap.insertAtKey
    ;
    .object sprites_SpriteMap_insertAtKey__P4789 "game/spritemap.ts(83,9): sprites.SpriteMap.insertAtKey"
sprites_SpriteMap_insertAtKey__P4789_pre:
    .section code
    .balign 4
sprites_SpriteMap_insertAtKey__P4789_args:
    cmp r4, #4
    bge sprites_SpriteMap_insertAtKey__P4789_nochk
    push {lr}
    bl _expand_args_4_17
    bl sprites_SpriteMap_insertAtKey__P4789_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
sprites_SpriteMap_insertAtKey__P4789:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_insertAtKey__P4789_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_insertAtKey__P4789_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_key__P4788_nochk
_proccall1838:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_499      
.jmpz1839:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; estack
    ldr r1, [sp, #4*2] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    pop {r0} ; tmpref @3
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
.else_0_499:
.afterif_1_499:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_499      
.jmpz1840:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_499:
.afterif_3_499:
.ret.4789:
    @stackempty locals
    movs r0, #0
.final_4_499:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_insertAtKey__P4789_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(39,5): Fx.idiv
    ;
    .object Fx_idiv__P163 "base/fixed.ts(39,5): Fx.idiv"
Fx_idiv__P163_pre:
    .section code
    .balign 4
    .section code
Fx_idiv__P163:
Fx_idiv__P163_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_idiv__P163_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.163:
    @stackempty locals
.final_0_500:
Fx_idiv__P163_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(53,9): sprites.SpriteMap.resizeBuckets
    ;
    .object sprites_SpriteMap_resizeBuckets__P2427 "game/spritemap.ts(53,9): sprites.SpriteMap.resizeBuckets"
sprites_SpriteMap_resizeBuckets__P2427_pre:
    .section code
    .balign 4
sprites_SpriteMap_resizeBuckets__P2427_args:
    cmp r4, #2
    bge sprites_SpriteMap_resizeBuckets__P2427_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_SpriteMap_resizeBuckets__P2427_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_resizeBuckets__P2427:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_resizeBuckets__P2427_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_resizeBuckets__P2427_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.17041:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.17041      
.jmpz1841:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_width__P2373
_proccall1843:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _cmp_gt
    beq .else_0_501      
.jmpz1842:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_width__P2373
_proccall1844:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
.else_0_501:
.afterif_1_501:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_height__P2374
_proccall1846:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_2_501      
.jmpz1845:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_height__P2374
_proccall1847:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
.else_2_501:
.afterif_3_501:
.cont.17041:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.17041      
.brk.17041:
    movs r0, #0
    str r0, [sp, locals@3]
    bl game_currentScene__P2975
_proccall1848:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_501      
.jmpz1849:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaWidth__P2719
_proccall1850:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_5_501      
.condexprz_4_501:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.condexprfin_5_501:
; jmp value (already in r0)
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_6_501      
.jmpz1851:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaHeight__P2720
_proccall1852:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_7_501      
.condexprz_6_501:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.condexprfin_7_501:
; jmp value (already in r0)
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #17
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1853:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #17
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1854:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2427:
    @stackempty locals
    movs r0, #0
.final_8_501:
    add sp, #4*8 ; pop locals 8
sprites_SpriteMap_resizeBuckets__P2427_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(73,9): sprites.SpriteMap.clear
    ;
    .object sprites_SpriteMap_clear__P2428 "game/spritemap.ts(73,9): sprites.SpriteMap.clear"
sprites_SpriteMap_clear__P2428_pre:
    .section code
    .balign 4
sprites_SpriteMap_clear__P2428_args:
    cmp r4, #1
    bge sprites_SpriteMap_clear__P2428_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteMap_clear__P2428_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteMap_clear__P2428:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_clear__P2428_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteMap_clear__P2428_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2428:
    @stackempty locals
    movs r0, #0
.final_0_502:
sprites_SpriteMap_clear__P2428_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(812,5): Sprite.clearObstacles
    ;
    .object Sprite_clearObstacles__P2401 "game/sprite.ts(812,5): Sprite.clearObstacles"
Sprite_clearObstacles__P2401_pre:
    .section code
    .balign 4
Sprite_clearObstacles__P2401_args:
    cmp r4, #1
    bge Sprite_clearObstacles__P2401_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_clearObstacles__P2401_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_clearObstacles__P2401:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_clearObstacles__P2401_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_clearObstacles__P2401_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2401:
    @stackempty locals
    movs r0, #0
.final_0_503:
Sprite_clearObstacles__P2401_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(218,5): ArcadePhysicsEngine.createMovingSprite
    ;
    .object ArcadePhysicsEngine_createMovingSprite__P4825 "game/physics.ts(218,5): ArcadePhysicsEngine.createMovingSprite"
ArcadePhysicsEngine_createMovingSprite__P4825_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_createMovingSprite__P4825_args:
    cmp r4, #4
    bge ArcadePhysicsEngine_createMovingSprite__P4825_nochk
    push {lr}
    bl _expand_args_4_17
    bl ArcadePhysicsEngine_createMovingSprite__P4825_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
ArcadePhysicsEngine_createMovingSprite__P4825:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_createMovingSprite__P4825_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_createMovingSprite__P4825_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4831_nochk
_proccall1855:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4831_nochk
_proccall1856:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #28]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_504      
.jmpz1857:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1858:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1859:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_504      
.else_0_504:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #36]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_504      
.jmpz1860:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #36]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1861:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1862:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _cmp_lt
    beq .else_3_504      
.jmpz1863:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall1864:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_4_504      
.else_3_504:
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _cmp_gt
    beq .else_5_504      
.jmpz1865:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall1866:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_6_504      
.else_5_504:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    @stackempty locals
.afterif_6_504:
.afterif_4_504:
.else_2_504:
.afterif_7_504:
.afterif_1_504:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_504      
.jmpz1867:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #32]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1868:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1869:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_9_504      
.else_8_504:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_504      
.jmpz1870:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #40]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1871:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1872:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@4]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_lt
    beq .else_11_504      
.jmpz1873:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall1874:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_12_504      
.else_11_504:
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_gt
    beq .else_13_504      
.jmpz1875:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@4]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall1876:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_14_504      
.else_13_504:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    @stackempty locals
.afterif_14_504:
.afterif_12_504:
.else_10_504:
.afterif_15_504:
.afterif_9_504:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4831_nochk
_proccall1877:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4831_nochk
_proccall1878:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1879:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1880:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@6]
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@7]
    str r0, [sp, locals@9]
    @stackempty locals
.cont.17266:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1882:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_17_504      
.jmpz1881:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_16_504      
.lazySkip_17_504:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1883:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_16_504:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.17266      
.jmpz1884:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1886:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_18_504      
.jmpz1885:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl Fx_idiv__P163
_proccall1887:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
.else_18_504:
.afterif_19_504:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1889:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_20_504      
.jmpz1888:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx_idiv__P163
_proccall1890:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
.else_20_504:
.afterif_21_504:
    b .cont.17266      
.brk.17266:
    ldr r0, _ldlit_316 ; MovingSprite__C2501_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    ldr r0, [sp, #4*7] ; tmpref @1
    push {r0} ; proc-arg
    bl MovingSprite_constructor__P2502
_proccall1891:
    add sp, #4*8 ; pop locals 8
    pop {r0} ; tmpref @1
.ret.4825:
    @stackempty locals
.final_22_504:
    add sp, #4*10 ; pop locals 10
ArcadePhysicsEngine_createMovingSprite__P4825_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(762,5): ArcadePhysicsEngine.constrain
    ;
    .object ArcadePhysicsEngine_constrain__P4831 "game/physics.ts(762,5): ArcadePhysicsEngine.constrain"
ArcadePhysicsEngine_constrain__P4831_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_constrain__P4831_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_constrain__P4831_nochk
    push {lr}
    bl _expand_args_2_19
    bl ArcadePhysicsEngine_constrain__P4831_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_constrain__P4831:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_constrain__P4831_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_constrain__P4831_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_min__P166
_proccall1892:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_max__P167
_proccall1893:
    add sp, #4*2 ; pop locals 2
.ret.4831:
    @stackempty locals
.final_0_506:
ArcadePhysicsEngine_constrain__P4831_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(109,5): ArcadePhysicsEngine.draw
    ;
    .object ArcadePhysicsEngine_draw__P2514 "game/physics.ts(109,5): ArcadePhysicsEngine.draw"
ArcadePhysicsEngine_draw__P2514_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_draw__P2514_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_draw__P2514_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_draw__P2514_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_draw__P2514:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_draw__P2514_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_draw__P2514_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl sprites_SpriteMap_draw__P2426
_proccall1894:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2514:
    @stackempty locals
    movs r0, #0
.final_0_507:
ArcadePhysicsEngine_draw__P2514_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(37,9): sprites.SpriteMap.draw
    ;
    .object sprites_SpriteMap_draw__P2426 "game/spritemap.ts(37,9): sprites.SpriteMap.draw"
sprites_SpriteMap_draw__P2426_pre:
    .section code
    .balign 4
sprites_SpriteMap_draw__P2426_args:
    cmp r4, #1
    bge sprites_SpriteMap_draw__P2426_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteMap_draw__P2426_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteMap_draw__P2426:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2422_validate_79
    mov lr, r7
sprites_SpriteMap_draw__P2426_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_draw__P2426_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.17326:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1895
    b .brk.17326      
.jmpz1895:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.17331:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.17331      
.jmpz1896:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_key__P4788_nochk
_proccall1897:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_508      
.jmpz1898:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_508      
.lazySkip_2_508:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_1_508:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_508      
.jmpz1899:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawRect__P1939
_proccall1900:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
.else_0_508:
.afterif_3_508:
.cont.17331:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.17331      
.brk.17331:
.cont.17326:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.17326      
.brk.17326:
.ret.2426:
    @stackempty locals
    movs r0, #0
.final_4_508:
    add sp, #4*6 ; pop locals 6
sprites_SpriteMap_draw__P2426_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(105,5): ArcadePhysicsEngine.removeSprite
    ;
    .object ArcadePhysicsEngine_removeSprite__P2513 "game/physics.ts(105,5): ArcadePhysicsEngine.removeSprite"
ArcadePhysicsEngine_removeSprite__P2513_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_removeSprite__P2513_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_removeSprite__P2513_nochk
    push {lr}
    bl _expand_args_2_19
    bl ArcadePhysicsEngine_removeSprite__P2513_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_removeSprite__P2513:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_removeSprite__P2513_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_removeSprite__P2513_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.ret.2513:
    @stackempty locals
    movs r0, #0
.final_0_509:
ArcadePhysicsEngine_removeSprite__P2513_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(97,5): ArcadePhysicsEngine.addSprite
    ;
    .object ArcadePhysicsEngine_addSprite__P2512 "game/physics.ts(97,5): ArcadePhysicsEngine.addSprite"
ArcadePhysicsEngine_addSprite__P2512_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_addSprite__P2512_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_addSprite__P2512_nochk
    push {lr}
    bl _expand_args_2_19
    bl ArcadePhysicsEngine_addSprite__P2512_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_addSprite__P2512:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2503_validate_78
    mov lr, r7
ArcadePhysicsEngine_addSprite__P2512_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_addSprite__P2512_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2975
_proccall1901:
    bl _inst_scene_Scene__C2819_validate_10
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_510      
.jmpz1902:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_510      
.lazySkip_2_510:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2734
_proccall1903:
    add sp, #4*2 ; pop locals 2
.lazy_1_510:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_510      
.jmpz1904:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2317_validate_15
    ldr r0, [r0, #116]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2317_validate_15
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_510:
.afterif_3_510:
.ret.2512:
    @stackempty locals
    movs r0, #0
.final_4_510:
    add sp, #4*1 ; pop locals 1
ArcadePhysicsEngine_addSprite__P2512_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_316:
 .word MovingSprite__C2501_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(205,9): tiles.TileMapData.constructor
    ;
    .object tiles_TileMapData_constructor__P2694 "game/tilemap.ts(205,9): tiles.TileMapData.constructor"
tiles_TileMapData_constructor__P2694_pre:
    .section code
    .balign 4
    .section code
tiles_TileMapData_constructor__P2694:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2693_validate_71
    mov lr, r7
tiles_TileMapData_constructor__P2694_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_constructor__P2694_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMapData_scale__P2698_nochk
_proccall1905:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #4
    movs r2, #2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2694:
    @stackempty locals
.final_0_511:
tiles_TileMapData_constructor__P2694_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(227,9): tiles.TileMapData.scale
    ;
    .object tiles_TileMapData_scale__P2698 "game/tilemap.ts(227,9): tiles.TileMapData.scale"
tiles_TileMapData_scale__P2698_pre:
    .section code
    .balign 4
tiles_TileMapData_scale__P2698_args:
    cmp r4, #2
    bge tiles_TileMapData_scale__P2698_nochk
    push {lr}
    bl _expand_args_2_19
    bl tiles_TileMapData_scale__P2698_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMapData_scale__P2698:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2693_validate_71
    mov lr, r7
tiles_TileMapData_scale__P2698_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_scale__P2698_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2698:
    @stackempty locals
    movs r0, #0
.final_0_512:
tiles_TileMapData_scale__P2698_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(301,9): tiles.TileMap.constructor
    ;
    .object tiles_TileMap_constructor__P2713 "game/tilemap.ts(301,9): tiles.TileMap.constructor"
tiles_TileMap_constructor__P2713_pre:
    .section code
    .balign 4
    .section code
tiles_TileMap_constructor__P2713:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_constructor__P2713_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_constructor__P2713_locals:
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_scale__P2715_nochk
_proccall1906:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_318 ; tiles_TileMap_inline__P17448_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    bl scene_createRenderable__P2781
_proccall1907:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.2713:
    @stackempty locals
.final_0_513:
tiles_TileMap_constructor__P2713_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(307,17): tiles.TileMap.inline
    ;
    .object tiles_TileMap_inline__P17448 "game/tilemap.ts(307,17): tiles.TileMap.inline"
tiles_TileMap_inline__P17448_pre:
    .section code
    .balign 4
tiles_TileMap_inline__P17448_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word tiles_TileMap_inline__P17448_args@fn
tiles_TileMap_inline__P17448_args:
    cmp r4, #2
    bge tiles_TileMap_inline__P17448_nochk
    push {lr}
    bl _expand_args_2_19
    bl tiles_TileMap_inline__P17448_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_inline__P17448:
tiles_TileMap_inline__P17448_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_inline__P17448_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl tiles_TileMap_draw__P4901_nochk
_proccall1908:
    add sp, #4*3 ; pop locals 3
.ret.17448:
    @stackempty locals
    movs r0, #0
.final_0_514:
tiles_TileMap_inline__P17448_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(459,9): tiles.TileMap.draw
    ;
    .object tiles_TileMap_draw__P4901 "game/tilemap.ts(459,9): tiles.TileMap.draw"
tiles_TileMap_draw__P4901_pre:
    .section code
    .balign 4
tiles_TileMap_draw__P4901_args:
    cmp r4, #3
    bge tiles_TileMap_draw__P4901_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_draw__P4901_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_draw__P4901:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_draw__P4901_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMap_draw__P4901_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2723_nochk
_proccall1910:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_515      
.jmpz1909:
    b .ret.4901      
.else_0_515:
.afterif_1_515:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #12]
    ldr r1, [sp, locals@0]
    bl _numops_ands
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@0]
    bl _numops_ands
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall1911:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1912:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall1913:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1914:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.17525:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@4]
    bl _cmp_le
    beq .brk.17525      
.jmpz1915:
    ldr r0, [sp, locals@5]
    str r0, [sp, locals@8]
    @stackempty locals
.fortop.17530:
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@6]
    bl _cmp_le
    beq .brk.17530      
.jmpz1916:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTile__P2699
_proccall1917:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTileImage__P2702
_proccall1918:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_515      
.jmpz1919:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_69
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_2_515:
.afterif_3_515:
.cont.17530:
    ldr r0, [sp, locals@8]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@8]
    @stackempty locals
    b .fortop.17530      
.brk.17530:
.cont.17525:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .fortop.17525      
.brk.17525:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1920
    b .else_4_515      
.jmpz1920:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@11]
    @stackempty locals
.fortop.17578:
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@4]
    bl _cmp_le
    bne .jmpz1921
    b .brk.17578      
.object PUSH
.balign 4
_ldlit_318:
 .word tiles_TileMap_inline__P17448_Lit
.object POP
.jmpz1921:
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_7_515      
.jmpz1922:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_515      
.lazySkip_7_515:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_6_515:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_515      
.jmpz1923:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    movs r0, #3
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    push {r4}
    bl helpers_imageDrawLine__P1938
_proccall1924:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.else_5_515:
.afterif_8_515:
.cont.17578:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    @stackempty locals
    b .fortop.17578      
.brk.17578:
    ldr r0, [sp, locals@5]
    str r0, [sp, locals@13]
    @stackempty locals
.fortop.17609:
    ldr r0, [sp, locals@13]
    ldr r1, [sp, locals@6]
    bl _cmp_le
    beq .brk.17609      
.jmpz1925:
    ldr r0, [sp, locals@13]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@14]
    @stackempty locals
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_11_515      
.jmpz1926:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_515      
.lazySkip_11_515:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_10_515:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_9_515      
.jmpz1927:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    bl helpers_imageDrawLine__P1938
_proccall1928:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.else_9_515:
.afterif_12_515:
.cont.17609:
    ldr r0, [sp, locals@13]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@13]
    @stackempty locals
    b .fortop.17609      
.brk.17609:
.else_4_515:
.afterif_13_515:
.ret.4901:
    @stackempty locals
    movs r0, #0
.final_14_515:
    add sp, #4*15 ; pop locals 15
tiles_TileMap_draw__P4901_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(315,9): tiles.TileMap.scale
    ;
    .object tiles_TileMap_scale__P2715 "game/tilemap.ts(315,9): tiles.TileMap.scale"
tiles_TileMap_scale__P2715_pre:
    .section code
    .balign 4
tiles_TileMap_scale__P2715_args:
    cmp r4, #2
    bge tiles_TileMap_scale__P2715_nochk
    push {lr}
    bl _expand_args_2_19
    bl tiles_TileMap_scale__P2715_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_scale__P2715:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_scale__P2715_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_scale__P2715_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_516      
.jmpz1929:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_scale__P2698
_proccall1930:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_516:
.afterif_1_516:
.ret.2715:
    @stackempty locals
    movs r0, #0
.final_2_516:
tiles_TileMap_scale__P2715_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(322,9): tiles.TileMap.data
    ;
    .object tiles_TileMap_data__P2716 "game/tilemap.ts(322,9): tiles.TileMap.data"
tiles_TileMap_data__P2716_pre:
    .section code
    .balign 4
tiles_TileMap_data__P2716_args:
    cmp r4, #1
    bge tiles_TileMap_data__P2716_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_data__P2716_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_data__P2716:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2711_validate_70
    mov lr, r7
tiles_TileMap_data__P2716_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_data__P2716_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
.ret.2716:
    @stackempty locals
.final_0_517:
tiles_TileMap_data__P2716_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(73,9): scene.BackgroundLayer.constructor
    ;
    .object scene_BackgroundLayer_constructor__P2662 "game/background.ts(73,9): scene.BackgroundLayer.constructor"
scene_BackgroundLayer_constructor__P2662_pre:
    .section code
    .balign 4
    .section code
scene_BackgroundLayer_constructor__P2662:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_BackgroundLayer__C2655_validate_68
    mov lr, r7
scene_BackgroundLayer_constructor__P2662_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_BackgroundLayer_constructor__P2662_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall1931:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #11
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1932
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_518      
.jmpz1932:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1933
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_518      
.jmpz1933:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1934
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_518      
.jmpz1934:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1935
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_518      
.jmpz1935:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1936
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_518      
.jmpz1936:
    pop {r0} ; tmpref @1
    b .brk.17663      
.switch_0_518:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #24]
    @stackempty locals
    b .brk.17663      
.switch_1_518:
.switch_2_518:
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #24]
    @stackempty locals
    b .brk.17663      
.switch_3_518:
.switch_4_518:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #24]
    @stackempty locals
.brk.17663:
    movs r0, #0
.ret.2662:
    @stackempty locals
.final_5_518:
scene_BackgroundLayer_constructor__P2662_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(52,9): scene.Camera.y
    ;
    .object scene_Camera_y__P2767 "game/camera.ts(52,9): scene.Camera.y"
scene_Camera_y__P2767_pre:
    .section code
    .balign 4
scene_Camera_y__P2767_args:
    cmp r4, #1
    bge scene_Camera_y__P2767_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_y__P2767_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_y__P2767:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_y__P2767_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_y__P2767_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2767:
    @stackempty locals
.final_0_519:
scene_Camera_y__P2767_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(49,9): scene.Camera.x
    ;
    .object scene_Camera_x__P2766 "game/camera.ts(49,9): scene.Camera.x"
scene_Camera_x__P2766_pre:
    .section code
    .balign 4
scene_Camera_x__P2766_args:
    cmp r4, #1
    bge scene_Camera_x__P2766_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_x__P2766_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_x__P2766:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_x__P2766_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_x__P2766_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2766:
    @stackempty locals
.final_0_520:
scene_Camera_x__P2766_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(189,9): scene.Scene.data
    ;
    .object scene_Scene_data__P2844 "game/scene.ts(189,9): scene.Scene.data"
scene_Scene_data__P2844_pre:
    .section code
    .balign 4
scene_Scene_data__P2844_args:
    cmp r4, #1
    bge scene_Scene_data__P2844_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_data__P2844_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_data__P2844:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2819_validate_10
    mov lr, r7
scene_Scene_data__P2844_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_data__P2844_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
.ret.2844:
    @stackempty locals
.final_0_521:
scene_Scene_data__P2844_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(98,9): sprites.SpriteSet.toString
    ;
    .object sprites_SpriteSet_toString__P2450 "game/spriteset.ts(98,9): sprites.SpriteSet.toString"
sprites_SpriteSet_toString__P2450_pre:
    .section code
    .balign 4
sprites_SpriteSet_toString__P2450_args:
    cmp r4, #1
    bge sprites_SpriteSet_toString__P2450_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteSet_toString__P2450_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteSet_toString__P2450:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2439_validate_38
    mov lr, r7
sprites_SpriteSet_toString__P2450_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_toString__P2450_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteSet_length__P2442_nochk
_proccall1937:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_320 ; _str39      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.2450:
    @stackempty locals
.final_0_522:
sprites_SpriteSet_toString__P2450_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(27,9): sprites.SpriteSet.length
    ;
    .object sprites_SpriteSet_length__P2442 "game/spriteset.ts(27,9): sprites.SpriteSet.length"
sprites_SpriteSet_length__P2442_pre:
    .section code
    .balign 4
sprites_SpriteSet_length__P2442_args:
    cmp r4, #1
    bge sprites_SpriteSet_length__P2442_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteSet_length__P2442_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteSet_length__P2442:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2439_validate_38
    mov lr, r7
sprites_SpriteSet_length__P2442_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_length__P2442_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.2442:
    @stackempty locals
.final_0_523:
sprites_SpriteSet_length__P2442_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1065,5): Sprite.toString
    ;
    .object Sprite_toString__P2410 "game/sprite.ts(1065,5): Sprite.toString"
Sprite_toString__P2410_pre:
    .section code
    .balign 4
Sprite_toString__P2410_args:
    cmp r4, #1
    bge Sprite_toString__P2410_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_toString__P2410_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_toString__P2410:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_toString__P2410_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_toString__P2410_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_321 ; _str32      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_x__P2330_nochk
_proccall1938:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_322 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_y__P2332_nochk
_proccall1939:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_323 ; _str33      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2334_nochk
_proccall1940:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_322 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2336_nochk
_proccall1941:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_324 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.2410:
    @stackempty locals
.final_0_524:
Sprite_toString__P2410_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(629,5): Sprite.__update
    ;
    .object Sprite___update__P2392 "game/sprite.ts(629,5): Sprite.__update"
Sprite___update__P2392_pre:
    .section code
    .balign 4
Sprite___update__P2392_args:
    cmp r4, #3
    bge Sprite___update__P2392_nochk
    push {lr}
    bl _expand_args_3_14
    bl Sprite___update__P2392_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite___update__P2392:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite___update__P2392_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite___update__P2392_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #84]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_525      
.jmpz1942:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #84]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #84]
    movs r1, #1
    bl _cmp_le
    beq .else_1_525      
.jmpz1943:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite__destroyCore__P2405_nochk
_proccall1944:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_1_525:
.afterif_2_525:
.else_0_525:
.afterif_3_525:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #9
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_525      
.jmpz1945:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_525      
.lazySkip_6_525:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isOutOfScreen__P2390_nochk
_proccall1946:
    add sp, #4*2 ; pop locals 2
.lazy_5_525:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_525      
.jmpz1947:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_destroy__P2404_nochk
_proccall1948:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_525:
.afterif_7_525:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_525      
.jmpz1949:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #40
    bl _classCall_sprites_BaseSpriteSayRenderer__C2236_109
_proccall1950:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_8_525:
.afterif_9_525:
.ret.2392:
    @stackempty locals
    movs r0, #0
.final_10_525:
Sprite___update__P2392_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(10,9): sprites.BaseSpriteSayRenderer.update
    ;
    .object sprites_BaseSpriteSayRenderer_update__P2239 "game/spritesay.ts(10,9): sprites.BaseSpriteSayRenderer.update"
sprites_BaseSpriteSayRenderer_update__P2239_pre:
    .section code
    .balign 4
sprites_BaseSpriteSayRenderer_update__P2239_args:
    cmp r4, #4
    bge sprites_BaseSpriteSayRenderer_update__P2239_nochk
    push {lr}
    bl _expand_args_4_17
    bl sprites_BaseSpriteSayRenderer_update__P2239_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
sprites_BaseSpriteSayRenderer_update__P2239:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2236_validate_110
    mov lr, r7
sprites_BaseSpriteSayRenderer_update__P2239_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_update__P2239_locals:
.ret.2239:
    @stackempty locals
    movs r0, #0
.final_0_526:
sprites_BaseSpriteSayRenderer_update__P2239_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(608,5): Sprite.isOutOfScreen
    ;
    .object Sprite_isOutOfScreen__P2390 "game/sprite.ts(608,5): Sprite.isOutOfScreen"
Sprite_isOutOfScreen__P2390_pre:
    .section code
    .balign 4
Sprite_isOutOfScreen__P2390_args:
    cmp r4, #2
    bge Sprite_isOutOfScreen__P2390_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_isOutOfScreen__P2390_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_isOutOfScreen__P2390:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_isOutOfScreen__P2390_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_isOutOfScreen__P2390_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_527      
.jmpz1951:
    movs r0, #1
    b .condexprfin_1_527      
.condexprz_0_527:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #12]
.condexprfin_1_527:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_527      
.jmpz1952:
    movs r0, #1
    b .condexprfin_3_527      
.condexprz_2_527:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #16]
    b .condexprfin_3_527      
.object PUSH
.balign 4
_ldlit_320:
 .word _str39
_ldlit_321:
 .word _str32
_ldlit_322:
 .word _str0
_ldlit_323:
 .word _str33
_ldlit_324:
 .word _str34
.object POP
.condexprfin_3_527:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_right__P2377_nochk
_proccall1954:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_5_527      
.jmpz1953:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_527      
.lazySkip_5_527:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_bottom__P2381_nochk
_proccall1955:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_4_527:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_527      
.jmpz1956:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_527      
.lazySkip_7_527:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2375_nochk
_proccall1957:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_6_527:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_9_527      
.jmpz1958:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_527      
.lazySkip_9_527:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2379_nochk
_proccall1959:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_8_527:
; jmp value (already in r0)
.ret.2390:
    @stackempty locals
.final_10_527:
    add sp, #4*2 ; pop locals 2
Sprite_isOutOfScreen__P2390_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(242,5): Sprite.data
    ;
    .object Sprite_data__P2353 "game/sprite.ts(242,5): Sprite.data"
Sprite_data__P2353_pre:
    .section code
    .balign 4
Sprite_data__P2353_args:
    cmp r4, #2
    bge Sprite_data__P2353_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_data__P2353_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_data__P2353:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_data__P2353_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_data__P2353_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #60]
    @stackempty locals
.ret.2353:
    @stackempty locals
    movs r0, #0
.final_0_528:
Sprite_data__P2353_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(237,5): Sprite.data
    ;
    .object Sprite_data__P2352 "game/sprite.ts(237,5): Sprite.data"
Sprite_data__P2352_pre:
    .section code
    .balign 4
Sprite_data__P2352_args:
    cmp r4, #1
    bge Sprite_data__P2352_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_data__P2352_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_data__P2352:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_data__P2352_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_data__P2352_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_529      
.jmpz1960:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_529:
.afterif_1_529:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
.ret.2352:
    @stackempty locals
.final_2_529:
Sprite_data__P2352_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(46,9): sprites.BaseSprite.__update
    ;
    .object sprites_BaseSprite___update__P2079 "game/basesprite.ts(46,9): sprites.BaseSprite.__update"
sprites_BaseSprite___update__P2079_pre:
    .section code
    .balign 4
sprites_BaseSprite___update__P2079_args:
    cmp r4, #3
    bge sprites_BaseSprite___update__P2079_nochk
    push {lr}
    bl _expand_args_3_14
    bl sprites_BaseSprite___update__P2079_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
sprites_BaseSprite___update__P2079:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_40
    mov lr, r7
sprites_BaseSprite___update__P2079_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___update__P2079_locals:
.ret.2079:
    @stackempty locals
    movs r0, #0
.final_0_530:
sprites_BaseSprite___update__P2079_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(38,9): sprites.BaseSprite.__draw
    ;
    .object sprites_BaseSprite___draw__P2077 "game/basesprite.ts(38,9): sprites.BaseSprite.__draw"
sprites_BaseSprite___draw__P2077_pre:
    .section code
    .balign 4
sprites_BaseSprite___draw__P2077_args:
    cmp r4, #2
    bge sprites_BaseSprite___draw__P2077_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_BaseSprite___draw__P2077_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_BaseSprite___draw__P2077:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_40
    mov lr, r7
sprites_BaseSprite___draw__P2077_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___draw__P2077_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_Sprite__C2317_this_23
_proccall1962:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_531      
.jmpz1961:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_Sprite__C2317_this_23
_proccall1963:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_531:
.afterif_1_531:
.ret.2077:
    @stackempty locals
    movs r0, #0
.final_2_531:
sprites_BaseSprite___draw__P2077_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(44,9): sprites.BaseSprite.__drawCore
    ;
    .object sprites_BaseSprite___drawCore__P2078 "game/basesprite.ts(44,9): sprites.BaseSprite.__drawCore"
sprites_BaseSprite___drawCore__P2078_pre:
    .section code
    .balign 4
sprites_BaseSprite___drawCore__P2078_args:
    cmp r4, #2
    bge sprites_BaseSprite___drawCore__P2078_nochk
    push {lr}
    bl _expand_args_2_19
    bl sprites_BaseSprite___drawCore__P2078_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_BaseSprite___drawCore__P2078:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_40
    mov lr, r7
sprites_BaseSprite___drawCore__P2078_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___drawCore__P2078_locals:
.ret.2078:
    @stackempty locals
    movs r0, #0
.final_0_532:
sprites_BaseSprite___drawCore__P2078_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(23,9): sprites.BaseSprite.__visible
    ;
    .object sprites_BaseSprite___visible__P2074 "game/basesprite.ts(23,9): sprites.BaseSprite.__visible"
sprites_BaseSprite___visible__P2074_pre:
    .section code
    .balign 4
sprites_BaseSprite___visible__P2074_args:
    cmp r4, #1
    bge sprites_BaseSprite___visible__P2074_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_BaseSprite___visible__P2074_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_BaseSprite___visible__P2074:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_40
    mov lr, r7
sprites_BaseSprite___visible__P2074_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___visible__P2074_locals:
    movs r0, #66
.ret.2074:
    @stackempty locals
.final_0_533:
sprites_BaseSprite___visible__P2074_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(470,9): controller.AnyButton.isPressed
    ;
    .object controller_AnyButton_isPressed__P4762 "game/controller.ts(470,9): controller.AnyButton.isPressed"
controller_AnyButton_isPressed__P4762_pre:
    .section code
    .balign 4
controller_AnyButton_isPressed__P4762_args:
    cmp r4, #1
    bge controller_AnyButton_isPressed__P4762_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_AnyButton_isPressed__P4762_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_AnyButton_isPressed__P4762:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_AnyButton__C4754_validate_111
    mov lr, r7
controller_AnyButton_isPressed__P4762_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_AnyButton_isPressed__P4762_locals:
    bl controller__player1__P2105
_proccall1964:
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_Controller__C2111_validate_61
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.17870:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.17870      
.jmpz1965:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_72
_proccall1967:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_534      
.jmpz1966:
    movs r0, #66
    b .ret.4762      
.else_0_534:
.afterif_1_534:
.cont.17870:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.17870      
.brk.17870:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #10
.ret.4762:
    @stackempty locals
.final_2_534:
    add sp, #4*4 ; pop locals 4
controller_AnyButton_isPressed__P4762_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(74,9): controller.Button.toString
    ;
    .object controller_Button_toString__P2171 "game/controllerbutton.ts(74,9): controller.Button.toString"
controller_Button_toString__P2171_pre:
    .section code
    .balign 4
controller_Button_toString__P2171_args:
    cmp r4, #1
    bge controller_Button_toString__P2171_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_toString__P2171_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_toString__P2171:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_50
    mov lr, r7
controller_Button_toString__P2171_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_toString__P2171_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_535      
.jmpz1968:
    ldr r0, _ldlit_326 ; _str29      
    b .condexprfin_1_535      
.condexprz_0_535:
    ldr r0, _ldlit_327 ; _str30      
.condexprfin_1_535:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_328 ; _str27      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_329 ; _str28      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
.ret.2171:
    @stackempty locals
.final_2_535:
controller_Button_toString__P2171_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(3,9): sprites.BaseSpriteSayRenderer.constructor
    ;
    .object sprites_BaseSpriteSayRenderer_constructor__P2237 "game/spritesay.ts(3,9): sprites.BaseSpriteSayRenderer.constructor"
sprites_BaseSpriteSayRenderer_constructor__P2237_pre:
    .section code
    .balign 4
    .section code
sprites_BaseSpriteSayRenderer_constructor__P2237:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2236_validate_110
    mov lr, r7
sprites_BaseSpriteSayRenderer_constructor__P2237_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_constructor__P2237_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    movs r0, #0
.ret.2237:
    @stackempty locals
.final_0_536:
sprites_BaseSpriteSayRenderer_constructor__P2237_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(49,9): sprites.StaticObstacle.width
    ;
    .object sprites_StaticObstacle_width__P2484 "game/obstacle.ts(49,9): sprites.StaticObstacle.width"
sprites_StaticObstacle_width__P2484_pre:
    .section code
    .balign 4
sprites_StaticObstacle_width__P2484_args:
    cmp r4, #1
    bge sprites_StaticObstacle_width__P2484_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_StaticObstacle_width__P2484_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_width__P2484:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2474_validate_106
    mov lr, r7
sprites_StaticObstacle_width__P2484_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_width__P2484_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.2484:
    @stackempty locals
.final_0_537:
sprites_StaticObstacle_width__P2484_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(45,9): sprites.StaticObstacle.height
    ;
    .object sprites_StaticObstacle_height__P2483 "game/obstacle.ts(45,9): sprites.StaticObstacle.height"
sprites_StaticObstacle_height__P2483_pre:
    .section code
    .balign 4
sprites_StaticObstacle_height__P2483_args:
    cmp r4, #1
    bge sprites_StaticObstacle_height__P2483_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_StaticObstacle_height__P2483_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_height__P2483:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2474_validate_106
    mov lr, r7
sprites_StaticObstacle_height__P2483_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_height__P2483_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.2483:
    @stackempty locals
.final_0_538:
sprites_StaticObstacle_height__P2483_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(41,9): sprites.StaticObstacle.y
    ;
    .object sprites_StaticObstacle_y__P2482 "game/obstacle.ts(41,9): sprites.StaticObstacle.y"
sprites_StaticObstacle_y__P2482_pre:
    .section code
    .balign 4
sprites_StaticObstacle_y__P2482_args:
    cmp r4, #1
    bge sprites_StaticObstacle_y__P2482_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_StaticObstacle_y__P2482_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_y__P2482:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2474_validate_106
    mov lr, r7
sprites_StaticObstacle_y__P2482_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_y__P2482_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_StaticObstacle_height__P2483_nochk
_proccall1969:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2482:
    @stackempty locals
.final_0_539:
sprites_StaticObstacle_y__P2482_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(37,9): sprites.StaticObstacle.x
    ;
    .object sprites_StaticObstacle_x__P2481 "game/obstacle.ts(37,9): sprites.StaticObstacle.x"
sprites_StaticObstacle_x__P2481_pre:
    .section code
    .balign 4
sprites_StaticObstacle_x__P2481_args:
    cmp r4, #1
    bge sprites_StaticObstacle_x__P2481_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_StaticObstacle_x__P2481_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_x__P2481:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2474_validate_106
    mov lr, r7
sprites_StaticObstacle_x__P2481_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_x__P2481_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_StaticObstacle_width__P2484_nochk
_proccall1970:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2481:
    @stackempty locals
.final_0_540:
sprites_StaticObstacle_x__P2481_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(69,9): tiles.Location.top
    ;
    .object tiles_Location_top__P2677 "game/tilemap.ts(69,9): tiles.Location.top"
tiles_Location_top__P2677_pre:
    .section code
    .balign 4
tiles_Location_top__P2677_args:
    cmp r4, #1
    bge tiles_Location_top__P2677_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_top__P2677_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_top__P2677:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2669_validate_107
    mov lr, r7
tiles_Location_top__P2677_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_top__P2677_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2671_nochk
_proccall1971:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
.ret.2677:
    @stackempty locals
.final_0_541:
tiles_Location_top__P2677_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(62,9): tiles.Location.left
    ;
    .object tiles_Location_left__P2676 "game/tilemap.ts(62,9): tiles.Location.left"
tiles_Location_left__P2676_pre:
    .section code
    .balign 4
tiles_Location_left__P2676_args:
    cmp r4, #1
    bge tiles_Location_left__P2676_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_left__P2676_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_left__P2676:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2669_validate_107
    mov lr, r7
tiles_Location_left__P2676_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_left__P2676_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2671_nochk
_proccall1972:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
.ret.2676:
    @stackempty locals
.final_0_542:
tiles_Location_left__P2676_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(54,9): tiles.Location.y
    ;
    .object tiles_Location_y__P2675 "game/tilemap.ts(54,9): tiles.Location.y"
tiles_Location_y__P2675_pre:
    .section code
    .balign 4
tiles_Location_y__P2675_args:
    cmp r4, #1
    bge tiles_Location_y__P2675_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_y__P2675_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_y__P2675:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2669_validate_107
    mov lr, r7
tiles_Location_y__P2675_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
tiles_Location_y__P2675_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2671_nochk
_proccall1973:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2675:
    @stackempty locals
.final_0_543:
    add sp, #4*1 ; pop locals 1
tiles_Location_y__P2675_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(46,9): tiles.Location.x
    ;
    .object tiles_Location_x__P2674 "game/tilemap.ts(46,9): tiles.Location.x"
tiles_Location_x__P2674_pre:
    .section code
    .balign 4
tiles_Location_x__P2674_args:
    cmp r4, #1
    bge tiles_Location_x__P2674_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_x__P2674_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_x__P2674:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2669_validate_107
    mov lr, r7
tiles_Location_x__P2674_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
tiles_Location_x__P2674_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2671_nochk
_proccall1974:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2674:
    @stackempty locals
.final_0_544:
    add sp, #4*1 ; pop locals 1
tiles_Location_x__P2674_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(230,9): particles.ShapeFactory.drawParticle
    ;
    .object particles_ShapeFactory_drawParticle__P3192 "game/particlefactories.ts(230,9): particles.ShapeFactory.drawParticle"
particles_ShapeFactory_drawParticle__P3192_pre:
    .section code
    .balign 4
particles_ShapeFactory_drawParticle__P3192_args:
    cmp r4, #4
    bge particles_ShapeFactory_drawParticle__P3192_nochk
    push {lr}
    bl _expand_args_4_17
    bl particles_ShapeFactory_drawParticle__P3192_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
.object PUSH
.balign 4
_ldlit_326:
 .word _str29
_ldlit_327:
 .word _str30
_ldlit_328:
 .word _str27
_ldlit_329:
 .word _str28
.object POP
    .section code
particles_ShapeFactory_drawParticle__P3192:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3189_validate_100
    mov lr, r7
particles_ShapeFactory_drawParticle__P3192_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_ShapeFactory_drawParticle__P3192_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_FastRandom_pickRandom__P3040
_proccall1975:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::clone
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_112
    movs r1, #15
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::replace
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0}; tmpstore @3
    ldr r0, [sp, args@2]
    pop {r1} ; tmpref @3
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1976:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0}; tmpstore @4
    ldr r0, [sp, args@3]
    pop {r1} ; tmpref @4
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1977:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_69
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.3192:
    @stackempty locals
    movs r0, #0
.final_0_545:
    add sp, #4*1 ; pop locals 1
particles_ShapeFactory_drawParticle__P3192_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(71,9): Math.FastRandom.pickRandom
    ;
    .object Math_FastRandom_pickRandom__P3040 "game/mathUtil.ts(71,9): Math.FastRandom.pickRandom"
Math_FastRandom_pickRandom__P3040_pre:
    .section code
    .balign 4
Math_FastRandom_pickRandom__P3040_args:
    cmp r4, #2
    bge Math_FastRandom_pickRandom__P3040_nochk
    push {lr}
    bl _expand_args_2_19
    bl Math_FastRandom_pickRandom__P3040_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Math_FastRandom_pickRandom__P3040:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3035_validate_80
    mov lr, r7
Math_FastRandom_pickRandom__P3040_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_pickRandom__P3040_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_546      
.jmpz1978:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_546      
.lazySkip_2_546:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_546:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_546      
.jmpz1979:
    movs r0, #0
    b .ret.3040      
.else_0_546:
.afterif_3_546:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3039_nochk
_proccall1980:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.ret.3040:
    @stackempty locals
.final_4_546:
Math_FastRandom_pickRandom__P3040_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(159,9): particles.AreaFactory.drawParticle
    ;
    .object particles_AreaFactory_drawParticle__P3180 "game/particlefactories.ts(159,9): particles.AreaFactory.drawParticle"
particles_AreaFactory_drawParticle__P3180_pre:
    .section code
    .balign 4
particles_AreaFactory_drawParticle__P3180_args:
    cmp r4, #4
    bge particles_AreaFactory_drawParticle__P3180_nochk
    push {lr}
    bl _expand_args_4_17
    bl particles_AreaFactory_drawParticle__P3180_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_AreaFactory_drawParticle__P3180:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_AreaFactory__C3173_validate_101
    mov lr, r7
particles_AreaFactory_drawParticle__P3180_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_AreaFactory_drawParticle__P3180_locals:
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #20]
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #233
    bl _cmp_gt
    beq .condexprz_0_547      
.jmpz1981:
    movs r0, #9
    b .condexprfin_1_547      
.condexprz_0_547:
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3108_validate_86
    ldr r0, [r0, #20]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #245
    bl _cmp_gt
    beq .condexprz_2_547      
.jmpz1982:
    movs r0, #11
    b .condexprfin_3_547      
.condexprz_2_547:
    movs r0, #3
.condexprfin_3_547:
; jmp value (already in r0)
.condexprfin_1_547:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1983:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1984:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.3180:
    @stackempty locals
    movs r0, #0
.final_4_547:
    add sp, #4*1 ; pop locals 1
particles_AreaFactory_drawParticle__P3180_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(116,9): particles.SprayFactory.drawParticle
    ;
    .object particles_SprayFactory_drawParticle__P3170 "game/particlefactories.ts(116,9): particles.SprayFactory.drawParticle"
particles_SprayFactory_drawParticle__P3170_pre:
    .section code
    .balign 4
particles_SprayFactory_drawParticle__P3170_args:
    cmp r4, #4
    bge particles_SprayFactory_drawParticle__P3170_nochk
    push {lr}
    bl _expand_args_4_17
    bl particles_SprayFactory_drawParticle__P3170_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_SprayFactory_drawParticle__P3170:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3167_validate_96
    mov lr, r7
particles_SprayFactory_drawParticle__P3170_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_drawParticle__P3170_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1985:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1986:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_24
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3170:
    @stackempty locals
    movs r0, #0
.final_0_548:
particles_SprayFactory_drawParticle__P3170_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(15,9): scene.Renderable.__drawCore
    ;
    .object scene_Renderable___drawCore__P2779 "game/renderable.ts(15,9): scene.Renderable.__drawCore"
scene_Renderable___drawCore__P2779_pre:
    .section code
    .balign 4
scene_Renderable___drawCore__P2779_args:
    cmp r4, #2
    bge scene_Renderable___drawCore__P2779_nochk
    push {lr}
    bl _expand_args_2_19
    bl scene_Renderable___drawCore__P2779_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Renderable___drawCore__P2779:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Renderable__C2776_validate_84
    mov lr, r7
scene_Renderable___drawCore__P2779_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Renderable___drawCore__P2779_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall3__57
_proccall1987:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2779:
    @stackempty locals
    movs r0, #0
.final_0_549:
scene_Renderable___drawCore__P2779_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(11,9): scene.Renderable.__visible
    ;
    .object scene_Renderable___visible__P2778 "game/renderable.ts(11,9): scene.Renderable.__visible"
scene_Renderable___visible__P2778_pre:
    .section code
    .balign 4
scene_Renderable___visible__P2778_args:
    cmp r4, #1
    bge scene_Renderable___visible__P2778_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Renderable___visible__P2778_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Renderable___visible__P2778:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Renderable__C2776_validate_84
    mov lr, r7
scene_Renderable___visible__P2778_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Renderable___visible__P2778_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #63
    bl _ifacecall1__48
_proccall1988:
    add sp, #4*1 ; pop locals 1
.ret.2778:
    @stackempty locals
.final_0_550:
scene_Renderable___visible__P2778_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(61,9): scene.Camera.top
    ;
    .object scene_Camera_top__P2770 "game/camera.ts(61,9): scene.Camera.top"
scene_Camera_top__P2770_pre:
    .section code
    .balign 4
scene_Camera_top__P2770_args:
    cmp r4, #1
    bge scene_Camera_top__P2770_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_top__P2770_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_top__P2770:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_top__P2770_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_top__P2770_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2770:
    @stackempty locals
.final_0_551:
scene_Camera_top__P2770_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(55,9): scene.Camera.left
    ;
    .object scene_Camera_left__P2768 "game/camera.ts(55,9): scene.Camera.left"
scene_Camera_left__P2768_pre:
    .section code
    .balign 4
scene_Camera_left__P2768_args:
    cmp r4, #1
    bge scene_Camera_left__P2768_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_left__P2768_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_left__P2768:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2757_validate_67
    mov lr, r7
scene_Camera_left__P2768_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_left__P2768_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2768:
    @stackempty locals
.final_0_552:
scene_Camera_left__P2768_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(614,5): Sprite.__drawCore
    ;
    .object Sprite___drawCore__P2391 "game/sprite.ts(614,5): Sprite.__drawCore"
Sprite___drawCore__P2391_pre:
    .section code
    .balign 4
Sprite___drawCore__P2391_args:
    cmp r4, #2
    bge Sprite___drawCore__P2391_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite___drawCore__P2391_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite___drawCore__P2391:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite___drawCore__P2391_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite___drawCore__P2391_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_drawSay__P4782_nochk
_proccall1989:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isOutOfScreen__P2390_nochk
_proccall1991:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_553      
.jmpz1990:
    b .ret.2391      
.else_0_553:
.afterif_1_553:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_553      
.jmpz1992:
    movs r0, #1
    b .condexprfin_3_553      
.condexprz_2_553:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #12]
.condexprfin_3_553:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_553      
.jmpz1993:
    movs r0, #1
    b .condexprfin_5_553      
.condexprz_4_553:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2757_validate_67
    ldr r0, [r0, #16]
.condexprfin_5_553:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2375_nochk
_proccall1994:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2379_nochk
_proccall1995:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #60
    bl _classCall_Sprite__C2317_this_23
_proccall1996:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_drawDebug__P4783_nochk
_proccall1997:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.2391:
    @stackempty locals
    movs r0, #0
.final_6_553:
    add sp, #4*4 ; pop locals 4
Sprite___drawCore__P2391_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1087,5): Sprite.drawDebug
    ;
    .object Sprite_drawDebug__P4783 "game/sprite.ts(1087,5): Sprite.drawDebug"
Sprite_drawDebug__P4783_pre:
    .section code
    .balign 4
Sprite_drawDebug__P4783_args:
    cmp r4, #5
    bge Sprite_drawDebug__P4783_nochk
    push {lr}
    bl _expand_args_5_54
    bl Sprite_drawDebug__P4783_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
Sprite_drawDebug__P4783:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_drawDebug__P4783_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_drawDebug__P4783_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #129
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1998
    b .else_0_554      
.jmpz1998:
    ldr r7, [r6, #0]
    ldr r0, [r7, #120]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2374_nochk
_proccall1999:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_x__P2330_nochk
_proccall2000:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_331 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_y__P2332_nochk
_proccall2001:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_imagePrint__P1968
_proccall2002:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #98
    bl _ifacecall1_get_8
_proccall2003:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2334_nochk
_proccall2005:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_554      
.jmpz2004:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_554      
.lazySkip_3_554:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2336_nochk
_proccall2006:
    add sp, #4*1 ; pop locals 1
.lazy_2_554:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_554      
.jmpz2007:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall2008:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2334_nochk
_proccall2009:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_332 ; _str35      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_331 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2336_nochk
_proccall2010:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_imagePrint__P1968
_proccall2011:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.else_1_554:
.afterif_4_554:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ax__P2338_nochk
_proccall2013:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_554      
.jmpz2012:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_554      
.lazySkip_7_554:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ay__P2340_nochk
_proccall2014:
    add sp, #4*1 ; pop locals 1
.lazy_6_554:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_554      
.jmpz2015:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #97
    bl _ifacecall1_get_8
_proccall2016:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ax__P2338_nochk
_proccall2017:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_58
    ldr r0, _ldlit_333 ; _str36      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_21
    ldr r1, _ldlit_331 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ay__P2340_nochk
_proccall2018:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_imagePrint__P1968
_proccall2019:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.else_5_554:
.afterif_8_554:
.else_0_554:
.afterif_9_554:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_554      
.jmpz2020:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_left__P2193
_proccall2021:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall2022:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_top__P2194
_proccall2023:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall2024:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@4]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall2025:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    bl _inst_game_Hitbox__C2185_validate_25
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall2026:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawRect__P1939
_proccall2027:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
.else_10_554:
.afterif_11_554:
.ret.4783:
    @stackempty locals
    movs r0, #0
.final_12_554:
    add sp, #4*3 ; pop locals 3
Sprite_drawDebug__P4783_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1117,5): Sprite.drawSprite
    ;
    .object Sprite_drawSprite__P4784 "game/sprite.ts(1117,5): Sprite.drawSprite"
Sprite_drawSprite__P4784_pre:
    .section code
    .balign 4
Sprite_drawSprite__P4784_args:
    cmp r4, #3
    bge Sprite_drawSprite__P4784_nochk
    push {lr}
    bl _expand_args_3_14
    bl Sprite_drawSprite__P4784_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite_drawSprite__P4784:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_drawSprite__P4784_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_drawSprite__P4784_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isScaled__P4781_nochk
_proccall2029:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz2028
    b .else_0_555      
.object PUSH
.balign 4
_ldlit_331:
 .word _str0
_ldlit_332:
 .word _str35
_ldlit_333:
 .word _str36
.object POP
.jmpz2028:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_69
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_1_555      
.else_0_555:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2373_nochk
_proccall2030:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2374_nochk
_proccall2031:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #10
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    ldr r0, [sp, #4*12] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*13] ; estack
    ldr r0, [sp, #4*14] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*15] ; estack
    ldr r0, [sp, #4*16] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*17] ; estack
    ldr r0, [sp, #4*18] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*19] ; estack
    bl helpers_imageBlit__P1933
_proccall2032:
    add sp, #4*20 ; pop locals 20
    @stackempty locals
.afterif_1_555:
.ret.4784:
    @stackempty locals
    movs r0, #0
.final_2_555:
Sprite_drawSprite__P4784_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1069,5): Sprite.drawSay
    ;
    .object Sprite_drawSay__P4782 "game/sprite.ts(1069,5): Sprite.drawSay"
Sprite_drawSay__P4782_pre:
    .section code
    .balign 4
Sprite_drawSay__P4782_args:
    cmp r4, #2
    bge Sprite_drawSay__P4782_nochk
    push {lr}
    bl _expand_args_2_19
    bl Sprite_drawSay__P4782_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_drawSay__P4782:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite_drawSay__P4782_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_drawSay__P4782_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_556      
.jmpz2033:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    movs r1, #0
    bl _cmp_neqq
    beq .else_1_556      
.jmpz2034:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .else_2_556      
.jmpz2035:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_sprites_BaseSpriteSayRenderer__C2236_109
_proccall2036:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_3_556      
.else_2_556:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    push {r0} ; the one arg
    movs r1, #44
    bl _classCall_sprites_BaseSpriteSayRenderer__C2236_109
_proccall2037:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #100]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #96]
    @stackempty locals
.afterif_3_556:
    b .afterif_4_556      
.else_1_556:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_sprites_BaseSpriteSayRenderer__C2236_109
_proccall2038:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.afterif_4_556:
.else_0_556:
.afterif_5_556:
.ret.4782:
    @stackempty locals
    movs r0, #0
.final_6_556:
Sprite_drawSay__P4782_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(14,9): sprites.BaseSpriteSayRenderer.destroy
    ;
    .object sprites_BaseSpriteSayRenderer_destroy__P2240 "game/spritesay.ts(14,9): sprites.BaseSpriteSayRenderer.destroy"
sprites_BaseSpriteSayRenderer_destroy__P2240_pre:
    .section code
    .balign 4
sprites_BaseSpriteSayRenderer_destroy__P2240_args:
    cmp r4, #1
    bge sprites_BaseSpriteSayRenderer_destroy__P2240_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_BaseSpriteSayRenderer_destroy__P2240_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_BaseSpriteSayRenderer_destroy__P2240:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2236_validate_110
    mov lr, r7
sprites_BaseSpriteSayRenderer_destroy__P2240_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_destroy__P2240_locals:
.ret.2240:
    @stackempty locals
    movs r0, #0
.final_0_557:
sprites_BaseSpriteSayRenderer_destroy__P2240_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(6,9): sprites.BaseSpriteSayRenderer.draw
    ;
    .object sprites_BaseSpriteSayRenderer_draw__P2238 "game/spritesay.ts(6,9): sprites.BaseSpriteSayRenderer.draw"
sprites_BaseSpriteSayRenderer_draw__P2238_pre:
    .section code
    .balign 4
sprites_BaseSpriteSayRenderer_draw__P2238_args:
    cmp r4, #4
    bge sprites_BaseSpriteSayRenderer_draw__P2238_nochk
    push {lr}
    bl _expand_args_4_17
    bl sprites_BaseSpriteSayRenderer_draw__P2238_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
sprites_BaseSpriteSayRenderer_draw__P2238:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2236_validate_110
    mov lr, r7
sprites_BaseSpriteSayRenderer_draw__P2238_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_draw__P2238_locals:
.ret.2238:
    @stackempty locals
    movs r0, #0
.final_0_558:
sprites_BaseSpriteSayRenderer_draw__P2238_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(360,5): Sprite.__visible
    ;
    .object Sprite___visible__P2372 "game/sprite.ts(360,5): Sprite.__visible"
Sprite___visible__P2372_pre:
    .section code
    .balign 4
Sprite___visible__P2372_args:
    cmp r4, #1
    bge Sprite___visible__P2372_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite___visible__P2372_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite___visible__P2372:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2317_validate_15
    mov lr, r7
Sprite___visible__P2372_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite___visible__P2372_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2372:
    @stackempty locals
.final_0_559:
Sprite___visible__P2372_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    .object _pxt_helper_trampoline "helper: trampoline"
    .section code
_pxt_lambda_trampoline:
    push { r4, r5, r6, r7, lr}
    mov r4, r8
    mov r5, r9
    mov r6, r10
    mov r7, r11
    push {r4, r5, r6, r7} ; save high registers
    mov r4, r1
    mov r5, r2
    mov r6, r3
    mov r7, r0
    bl _inst_builtin4_validate_0
    mov r0, sp
    push {r4, r5, r6, r7} ; push args and the lambda
    mov r1, sp
    bl pxt::pushThreadContext
    mov r6, r0          ; save ctx or globals
    mov r5, r7          ; save lambda for closure
    mov r0, r5          ; also save lambda pointer in r0 - needed by pxt::bindMethod
    ldr r1, [r5, #8]    ; ld fnptr
    movs r4, #3         ; 3 args
    blx r1              ; execute the actual lambda
    mov r7, r0          ; save result
    @dummystack 4
    add sp, #4*4        ; remove arguments and lambda
    mov r0, r6   ; or pop the thread context
    bl pxt::popThreadContext
    mov r0, r7 ; restore result
    pop {r4, r5, r6, r7} ; restore high registers
    mov r8, r4
    mov r9, r5
    mov r10, r6
    mov r11, r7
    pop { r4, r5, r6, r7, pc}
    .object _pxt_helper_exn "helper: exn"
    .section code
; r0 - try frame
; r1 - handler PC
_pxt_save_exception_state:
    push {r0, lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::beginTry
    pop {r1, r4}
    str r1, [r0, #1*4] ; PC
    mov r1, sp
    str r1, [r0, #2*4] ; SP
    str r5, [r0, #3*4] ; lambda ptr
    bx r4
    .section code
; r0 - try frame
; r1 - thread context
_pxt_restore_exception_state:
    mov r6, r1
    ldr r1, [r0, #2*4] ; SP
    mov sp, r1
    ldr r5, [r0, #3*4] ; lambda ptr
    ldr r1, [r0, #1*4] ; PC
    movs r0, #1
    orrs r1, r0
    bx r1
    .object _pxt_helper_stringconv "helper: stringconv"
    .section code
_pxt_stringConv:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #1
    bne .notstring
    bx lr
.notstring:
    ldr r7, [r3, #4*8]
    cmp r7, #0
    beq .fail
    push {r0, lr}
    movs r4, #1
    blx r7
    str r0, [sp, #0]
    b .numops
.fail:
    push {r0, lr}
.numops:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toString
    pop {r1, pc}      
    .object _pxt_helper_get_buffer "helper: get buffer"
    .section code
_pxt_buffer_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    ldrb r0, [r4, #8]
    lsls r0, r0, #1
    adds r0, #1
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    lsls r0, r0, #1
    adds r0, #1
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #1 ; 0 or undefined
    bx lr
    .object _pxt_helper_get_array "helper: get array"
    .section code
_pxt_array_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    ldr r0, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #0 ; 0 or undefined
    bx lr
    .object _pxt_helper_set_buffer "helper: set buffer"
    .section code
_pxt_buffer_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    strb r2, [r4, #8]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_set_array "helper: set array"
    .section code
_pxt_array_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    str r2, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_get "helper: get"
    .section code
_pxt_map_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*1 ; pop locals 1
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_set "helper: set"
    .section code
_pxt_map_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, r2, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*2 ; pop locals 2
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_bind "helper: bind"
    .section code
_pxt_bind_helper:
    push {r0, r2}
    movs r0, #2
    ldr r1, _ldlit_335 ; _pxt_bind_lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    pop {r1, r2}
    str r1, [r0, #12]
    str r2, [r0, #16]
    bx r4 ; return
_pxt_bind_lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word .bindCode@fn
.bindCode:
; r0-bind object, r4-#args
    cmp r4, #12
    bge .fail
    lsls r3, r4, #2
    ldr r2, _ldlit_336 ; _pxt_copy_list      
    ldr r1, [r2, r3]
    ldr r3, [r0, #12]
    ldr r2, [r0, #16]
    adds r4, r4, #1
    bx r1
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
_pxt_copy_list:
    .word _pxt_bind_0@fn
    .word _pxt_bind_1@fn
    .word _pxt_bind_2@fn
    .word _pxt_bind_3@fn
    .word _pxt_bind_4@fn
    .word _pxt_bind_5@fn
    .word _pxt_bind_6@fn
    .word _pxt_bind_7@fn
    .word _pxt_bind_8@fn
    .word _pxt_bind_9@fn
    .word _pxt_bind_10@fn
    .word _pxt_bind_11@fn
_pxt_bind_0:
    sub sp, #4
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*1] ; store LR
    blx r2
    ldr r1, [sp, #4*1]
    add sp, #8
    bx r1
_pxt_bind_1:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*2] ; store LR
    blx r2
    ldr r1, [sp, #4*2]
    add sp, #8
    bx r1
_pxt_bind_2:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*3] ; store LR
    blx r2
    ldr r1, [sp, #4*3]
    add sp, #8
    bx r1
_pxt_bind_3:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*4] ; store LR
    blx r2
    ldr r1, [sp, #4*4]
    add sp, #8
    bx r1
_pxt_bind_4:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*5] ; store LR
    blx r2
    ldr r1, [sp, #4*5]
    add sp, #8
    bx r1
_pxt_bind_5:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*6] ; store LR
    blx r2
    ldr r1, [sp, #4*6]
    add sp, #8
    bx r1
_pxt_bind_6:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*7] ; store LR
    blx r2
    ldr r1, [sp, #4*7]
    add sp, #8
    bx r1
_pxt_bind_7:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*8] ; store LR
    blx r2
    ldr r1, [sp, #4*8]
    add sp, #8
    bx r1
_pxt_bind_8:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*9] ; store LR
    blx r2
    ldr r1, [sp, #4*9]
    add sp, #8
    bx r1
_pxt_bind_9:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*10] ; store LR
    blx r2
    ldr r1, [sp, #4*10]
    add sp, #8
    bx r1
_pxt_bind_10:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*11] ; store LR
    blx r2
    ldr r1, [sp, #4*11]
    add sp, #8
    bx r1
_pxt_bind_11:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    ldr r1, [sp, #4*11]
    str r1, [sp, #4*10]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*12] ; store LR
    blx r2
    ldr r1, [sp, #4*12]
    add sp, #8
    bx r1
_code_end:
    .section code
    .object _code_helper__inst_builtin4_validate_0
_inst_builtin4_validate_0:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_1
_conv_1:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin4_validate_0
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin3_validate_2
_inst_builtin3_validate_2:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #3
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_3
_conv_3:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin3_validate_2
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin6_validate_4
_inst_builtin6_validate_4:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #6
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_5
_conv_5:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin6_validate_4
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin5_validate_6
_inst_builtin5_validate_6:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #5
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_7
_conv_7:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin5_validate_6
    pop {pc}
.object PUSH
.balign 4
_ldlit_335:
 .word _pxt_bind_lit
_ldlit_336:
 .word _pxt_copy_list
.object POP
    @stackempty args
    .section code
    .object _code_helper__ifacecall1_get_8
_ifacecall1_get_8:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    bx r4
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__lambda_call0_9
_lambda_call0_9:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_Scene__C2819_validate_10
_inst_scene_Scene__C2819_validate_10:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #30
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_11
_conv_11:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__expand_args_1_12
_expand_args_1_12:
    movs r0, #0
    movs r1, #0
    push {r0}
    bx lr
    .section code
    .object _code_helper__conv_13
_conv_13:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_4
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__expand_args_3_14
_expand_args_3_14:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_Sprite__C2317_validate_15
_inst_Sprite__C2317_validate_15:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #22
    blt .fail
    cmp r2, #23
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_PhysicsEngine__C2487_16
_classCall_PhysicsEngine__C2487_16:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #26
    blt .fail
    cmp r2, #27
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_4_17
_expand_args_4_17:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_PhysicsEngine__C2487_validate_18
_inst_PhysicsEngine__C2487_validate_18:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #26
    blt .fail
    cmp r2, #27
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_2_19
_expand_args_2_19:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #2*4]
    str r1, [sp, #2*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_TextSprite__C4330_validate_20
_inst_TextSprite__C4330_validate_20:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #23
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_21
_conv_21:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_22
_conv_22:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__classCall_Sprite__C2317_this_23
_classCall_Sprite__C2317_this_23:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_24
_conv_24:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_game_Hitbox__C2185_validate_25
_inst_game_Hitbox__C2185_validate_25:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #28
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_26
_conv_26:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_27
_conv_27:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_28
_conv_28:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_29
_conv_29:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_30
_conv_30:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_31
_conv_31:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_32
_conv_32:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_33
_conv_33:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__lambda_call3_34
_lambda_call3_34:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #3
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*2]
    str r5, [sp, #4*3]
    mov r1, lr
    str r1, [sp, #4*4]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*4] ; restore what was in LR
    ldr r5, [sp, #4*3] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*4]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__lambda_call2_35
_lambda_call2_35:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #2
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    str r5, [sp, #4*2]
    mov r1, lr
    str r1, [sp, #4*3]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*3] ; restore what was in LR
    ldr r5, [sp, #4*2] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_36
_conv_36:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_37
_conv_37:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    ldr r0, [sp, #4*3] ; estack
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_sprites_SpriteSet__C2439_validate_38
_inst_sprites_SpriteSet__C2439_validate_38:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #29
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_39
_conv_39:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_4
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_sprites_BaseSprite__C2071_validate_40
_inst_sprites_BaseSprite__C2071_validate_40:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #21
    blt .fail
    cmp r2, #25
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall2_set_41
_ifacecall2_set_41:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    ldr r2, [sp, #4] ; ld-val
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    bx r4
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__inst_serial_Serial__C4350_validate_42
_inst_serial_Serial__C4350_validate_42:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #31
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_UTF8Decoder__C416_validate_43
_inst_UTF8Decoder__C416_validate_43:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #32
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_44
_conv_44:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_45
_conv_45:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_2
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_46
_conv_46:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*3] ; estack
    ldr r1, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_scene_GameForeverHandler__C2796_validate_47
_inst_scene_GameForeverHandler__C2796_validate_47:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #33
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall1__48
_ifacecall1__48:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #1
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    movs r1, r0
    str r1, [sp, #4*0]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_49
_conv_49:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin3_validate_2
    mov r1, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_controller_Button__C2166_validate_50
_inst_controller_Button__C2166_validate_50:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #17
    blt .fail
    cmp r2, #18
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_ButtonHandler__C2160_validate_51
_inst_controller_ButtonHandler__C2160_validate_51:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #35
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_ButtonEventHandlerState__C2162_validate_52
_inst_controller_ButtonEventHandlerState__C2162_validate_52:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #34
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_53
_conv_53:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin4_validate_0
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__expand_args_5_54
_expand_args_5_54:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #4
    blt .zero4
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero4:
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_control_EventContext__C395_validate_55
_inst_control_EventContext__C395_validate_55:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #36
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_control_EventHandler__C4497_validate_56
_inst_control_EventHandler__C4497_validate_56:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #37
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall3__57
_ifacecall3__57:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #3
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    movs r1, r0
    str r1, [sp, #4*2]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #2
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    str r5, [sp, #4*2]
    mov r1, lr
    str r1, [sp, #4*3]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*3] ; restore what was in LR
    ldr r5, [sp, #4*2] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_58
_conv_58:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_59
_conv_59:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__lambda_call1_60
_lambda_call1_60:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_Controller__C2111_validate_61
_inst_controller_Controller__C2111_validate_61:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #16
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_62
_conv_62:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*3] ; estack
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__ifacecall2__63
_ifacecall2__63:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #2
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    movs r1, r0
    str r1, [sp, #4*1]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_64
_conv_64:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_scene_Background__C2645_validate_65
_inst_scene_Background__C2645_validate_65:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #39
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_66
_conv_66:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_scene_Camera__C2757_validate_67
_inst_scene_Camera__C2757_validate_67:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #38
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_BackgroundLayer__C2655_validate_68
_inst_scene_BackgroundLayer__C2655_validate_68:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #40
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_69
_conv_69:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_tiles_TileMap__C2711_validate_70
_inst_tiles_TileMap__C2711_validate_70:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #41
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_tiles_TileMapData__C2693_validate_71
_inst_tiles_TileMapData__C2693_validate_71:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #42
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_controller_Button__C2166_72
_classCall_controller_Button__C2166_72:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #17
    blt .fail
    cmp r2, #18
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_ControlledSprite__C2107_validate_73
_inst_controller_ControlledSprite__C2107_validate_73:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    b .fail ; always fails; class never instantiated
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_74
_conv_74:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_control_FrameCallback__C392_validate_75
_inst_control_FrameCallback__C392_validate_75:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #43
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_76
_conv_76:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin6_validate_4
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0}
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_control_PollEvent__C4476_validate_77
_inst_control_PollEvent__C4476_validate_77:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #44
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_ArcadePhysicsEngine__C2503_validate_78
_inst_ArcadePhysicsEngine__C2503_validate_78:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #27
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_SpriteMap__C2422_validate_79
_inst_sprites_SpriteMap__C2422_validate_79:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #45
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_Math_FastRandom__C3035_validate_80
_inst_Math_FastRandom__C3035_validate_80:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #20
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_81
_conv_81:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_scene_systemMenu_PauseMenu__C3071_validate_82
_inst_scene_systemMenu_PauseMenu__C3071_validate_82:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #46
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_systemMenu_MenuOption__C3063_validate_83
_inst_scene_systemMenu_MenuOption__C3063_validate_83:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #47
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_Renderable__C2776_validate_84
_inst_scene_Renderable__C2776_validate_84:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #24
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ParticleSource__C3127_validate_85
_inst_particles_ParticleSource__C3127_validate_85:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #25
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_Particle__C3108_validate_86
_inst_particles_Particle__C3108_validate_86:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #59
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_effects_ParticleEffect__C3238_validate_87
_inst_effects_ParticleEffect__C3238_validate_87:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #48
    blt .fail
    cmp r2, #49
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_effects_ImageEffect__C3266_validate_88
_inst_effects_ImageEffect__C3266_validate_88:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #50
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_89
_conv_89:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_90
_conv_90:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_91
_conv_91:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_92
_conv_92:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_game_GameOverConfig__C2949_validate_93
_inst_game_GameOverConfig__C2949_validate_93:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #19
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_music_Melody__C1623_validate_94
_inst_music_Melody__C1623_validate_94:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #51
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_music_MelodyPlayable__C1898_validate_95
_inst_music_MelodyPlayable__C1898_validate_95:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #53
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_SprayFactory__C3167_validate_96
_inst_particles_SprayFactory__C3167_validate_96:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #55
    blt .fail
    cmp r2, #58
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_particles_ParticleFactory__C3163_97
_classCall_particles_ParticleFactory__C3163_97:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #54
    blt .fail
    cmp r2, #58
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ParticleFactory__C3163_validate_98
_inst_particles_ParticleFactory__C3163_validate_98:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #54
    blt .fail
    cmp r2, #58
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ConfettiFactory__C3194_validate_99
_inst_particles_ConfettiFactory__C3194_validate_99:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #58
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ShapeFactory__C3189_validate_100
_inst_particles_ShapeFactory__C3189_validate_100:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #57
    blt .fail
    cmp r2, #58
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_AreaFactory__C3173_validate_101
_inst_particles_AreaFactory__C3173_validate_101:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #56
    blt .fail
    cmp r2, #58
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_effects_ScreenEffect__C3242_validate_102
_inst_effects_ScreenEffect__C3242_validate_102:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #49
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_103
_conv_103:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin4_validate_0
    mov r2, r0      
    pop {r1, pc}      
    @stackempty args
    .section code
    .object _code_helper__classCall_Sprite__C2317_104
_classCall_Sprite__C2317_104:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #22
    blt .fail
    cmp r2, #23
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_MovingSprite__C2501_validate_105
_inst_MovingSprite__C2501_validate_105:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #60
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_StaticObstacle__C2474_validate_106
_inst_sprites_StaticObstacle__C2474_validate_106:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #62
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_tiles_Location__C2669_validate_107
_inst_tiles_Location__C2669_validate_107:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #61
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_108
_conv_108:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin5_validate_6
    mov r1, r0      
    pop {r0}
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__classCall_sprites_BaseSpriteSayRenderer__C2236_109
_classCall_sprites_BaseSpriteSayRenderer__C2236_109:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #63
    bne .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_BaseSpriteSayRenderer__C2236_validate_110
_inst_sprites_BaseSpriteSayRenderer__C2236_validate_110:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #63
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_AnyButton__C4754_validate_111
_inst_controller_AnyButton__C4754_validate_111:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #18
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_112
_conv_112:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
_numops_adds:
    @scope _numops_adds
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    adds r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::adds
                    add sp, #8
                    pop {pc}
_numops_subs:
    @scope _numops_subs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    subs r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::subs
                    add sp, #8
                    pop {pc}
_numops_ands:
    @scope _numops_ands
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ands r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::ands
                    add sp, #8
                    pop {pc}
_numops_orrs:
    @scope _numops_orrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    orrs r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::orrs
                    add sp, #8
                    pop {pc}
_numops_eors:
    @scope _numops_eors
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    eors r0, r1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::eors
                    add sp, #8
                    pop {pc}
_numops_lsls:
    @scope _numops_lsls
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsls r2, r3
    lsrs r3, r2, #30
    beq .ok
    cmp r3, #3
    bne .boxed
.ok:
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsls
                    add sp, #8
                    pop {pc}
_numops_lsrs:
    @scope _numops_lsrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsrs r2, r3
    lsrs r3, r2, #30
    bne .boxed
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsrs
                    add sp, #8
                    pop {pc}
_numops_asrs:
    @scope _numops_asrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r0, r3
    movs r2, #1
    orrs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::asrs
                    add sp, #8
                    pop {pc}
@scope _numops_toInt
_numops_toInt:
    asrs r0, r0, #1
    bcc .over
    blx lr
.over:
    lsls r0, r0, #1
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::toInt
pop {pc}
_numops_fromInt:
    lsls r2, r0, #1
    asrs r1, r2, #1
    cmp r0, r1
    bne .over2
    adds r0, r2, #1
    blx lr
.over2:
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::fromInt
pop {pc}
.section code
.object _pxt_helper_cmp_lt
_cmp_lt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    blt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::lt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_gt
_cmp_gt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bgt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::gt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_le
_cmp_le:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    ble .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::le
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_ge
_cmp_ge:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bge .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::ge
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eq
_cmp_eq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eqq
_cmp_eqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neq
_cmp_neq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neqq
_cmp_neqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
_helpers_end:
        .object controller_Controller__C2111_VT
        .balign 4
controller_Controller__C2111_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_Controller__C2111_IfaceVT
        .short 16 ; class-id
        .short 0 ; reserved
        .word 883080987 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
controller_Controller__C2111_IfaceVT:
  .short 72, 102, 68, 90, 64, 62, 60, 154, 96, 118, 52, 106, 48, 46, 44, 42, 40, 38, 36, 154, 40, 30, 28, 98, 24, 126, 148, 18, 16, 102, 28, 10, 88, 6, 4, 2
  .short 248, 0 ; playerIndex
  .word 4
  .short 81, 0 ; buttons
  .word 8
  .short 63, 0 ; analog
  .word 12
  .short 20, 0 ; _id
  .word 16
  .short 10, 0 ; _connected
  .word 20
  .short 11, 1 ; _controlledSprites
  .word controller_Controller__controlledSprites__P2116_args@fn
  .short 11, 0 ; set _controlledSprites
  .word controller_Controller__controlledSprites__P2117_args@fn
  .short 172, 1 ; id
  .word controller_Controller_id__P2118_args@fn
  .short 196, 1 ; left
  .word controller_Controller_left__P2120_args@fn
  .short 276, 1 ; right
  .word controller_Controller_right__P2121_args@fn
  .short 355, 1 ; up
  .word controller_Controller_up__P2122_args@fn
  .short 126, 1 ; down
  .word controller_Controller_down__P2123_args@fn
  .short 79, 2 ; button
  .word controller_Controller_button__P4753_args@fn
  .short 106, 1 ; connected
  .word controller_Controller_connected__P2132_args@fn
  .short 106, 0 ; set connected
  .word controller_Controller_connected__P2133_args@fn
  .short 3, 2 ; __preUpdate
  .word controller_Controller___preUpdate__P2139_args@fn
  .short 4, 2 ; __update
  .word controller_Controller___update__P2140_args@fn
  .word 0, 0 ; the end
        .object controller_Button__C2166_VT
        .balign 4
controller_Button__C2166_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_Button__C2166_IfaceVT
        .short 17 ; class-id
        .short 0 ; reserved
        .word 1703617818 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word controller_Button_toString__P2171_args@fn
        .word controller_Button_isPressed__P2177_nochk@fn
        .balign 4
controller_Button__C2166_IfaceVT:
  .short 136, 134, 132, 130, 160, 126, 140, 122, 120, 198, 236, 114, 112, 110, 116, 106, 152, 102, 244, 98, 96, 94, 92, 90, 192, 86, 84, 178, 80, 78, 116, 98, 72, 70, 156, 178, 64, 190, 60, 122, 56, 110, 188, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 88, 14, 12, 10, 8, 6, 4, 2
  .short 36, 0 ; _owner
  .word 4
  .short 172, 0 ; id
  .word 8
  .short 270, 0 ; repeatDelay
  .word 12
  .short 271, 0 ; repeatInterval
  .word 16
  .short 38, 0 ; _pressed
  .word 20
  .short 39, 0 ; _pressedElasped
  .word 24
  .short 41, 0 ; _repeatCount
  .word 28
  .short 163, 1 ; handlerState
  .word controller_Button_handlerState__P4756_args@fn
  .short 352, 2 ; toString
  .word controller_Button_toString__P2171_args@fn
  .short 257, 2 ; raiseButtonUp
  .word controller_Button_raiseButtonUp__P4757_args@fn
  .short 255, 2 ; raiseButtonDown
  .word controller_Button_raiseButtonDown__P4758_args@fn
  .short 256, 2 ; raiseButtonRepeat
  .word controller_Button_raiseButtonRepeat__P4759_args@fn
  .short 228, 2 ; onEvent
  .word controller_Button_onEvent__P2173_args@fn
  .short 185, 2 ; isPressed
  .word controller_Button_isPressed__P2177_args@fn
  .short 251, 2 ; pressureLevel
  .word controller_Button_pressureLevel__P2178_args@fn
  .short 308, 2 ; setPressed
  .word controller_Button_setPressed__P2179_args@fn
  .short 4, 2 ; __update
  .word controller_Button___update__P2180_args@fn
  .short 279, 2 ; runButtonEvents
  .word controller_Button_runButtonEvents__P4760_args@fn
  .short 157, 2 ; getOrCreateHandlerForEvent
  .word controller_Button_getOrCreateHandlerForEvent__P4761_args@fn
  .word 0, 0 ; the end
        .object controller_AnyButton__C4754_VT
        .balign 4
controller_AnyButton__C4754_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_AnyButton__C4754_IfaceVT
        .short 18 ; class-id
        .short 0 ; reserved
        .word 1703617818 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word controller_AnyButton_isPressed__P4762_nochk@fn
        .balign 4
controller_AnyButton__C4754_IfaceVT:
  .short 136, 134, 132, 130, 160, 126, 140, 122, 120, 206, 236, 114, 112, 110, 116, 106, 152, 102, 244, 98, 96, 94, 92, 90, 144, 86, 84, 186, 80, 78, 116, 98, 72, 70, 164, 178, 64, 190, 60, 130, 56, 118, 188, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 96, 14, 12, 10, 8, 6, 4, 2
  .short 36, 0 ; _owner
  .word 4
  .short 172, 0 ; id
  .word 8
  .short 270, 0 ; repeatDelay
  .word 12
  .short 271, 0 ; repeatInterval
  .word 16
  .short 38, 0 ; _pressed
  .word 20
  .short 39, 0 ; _pressedElasped
  .word 24
  .short 41, 0 ; _repeatCount
  .word 28
  .short 185, 2 ; isPressed
  .word controller_AnyButton_isPressed__P4762_args@fn
  .short 163, 1 ; handlerState
  .word controller_Button_handlerState__P4756_args@fn
  .short 352, 2 ; toString
  .word controller_Button_toString__P2171_args@fn
  .short 257, 2 ; raiseButtonUp
  .word controller_Button_raiseButtonUp__P4757_args@fn
  .short 255, 2 ; raiseButtonDown
  .word controller_Button_raiseButtonDown__P4758_args@fn
  .short 256, 2 ; raiseButtonRepeat
  .word controller_Button_raiseButtonRepeat__P4759_args@fn
  .short 228, 2 ; onEvent
  .word controller_Button_onEvent__P2173_args@fn
  .short 251, 2 ; pressureLevel
  .word controller_Button_pressureLevel__P2178_args@fn
  .short 308, 2 ; setPressed
  .word controller_Button_setPressed__P2179_args@fn
  .short 4, 2 ; __update
  .word controller_Button___update__P2180_args@fn
  .short 279, 2 ; runButtonEvents
  .word controller_Button_runButtonEvents__P4760_args@fn
  .short 157, 2 ; getOrCreateHandlerForEvent
  .word controller_Button_getOrCreateHandlerForEvent__P4761_args@fn
  .word 0, 0 ; the end
        .object game_GameOverConfig__C2949_VT
        .balign 4
game_GameOverConfig__C2949_VT:
        .short 60  ; size in bytes
        .byte 4, 249 ; magic
        .word game_GameOverConfig__C2949_IfaceVT
        .short 19 ; class-id
        .short 0 ; reserved
        .word 1192397595 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
game_GameOverConfig__C2949_IfaceVT:
  .short 72, 70, 140, 154, 64, 70, 60, 162, 104, 134, 52, 74, 48, 158, 100, 42, 40, 38, 36, 34, 72, 30, 124, 90, 24, 38, 20, 18, 16, 14, 12, 42, 8, 6, 4, 2
  .short 288, 0 ; scoringType
  .word 4
  .short 368, 0 ; winEffect
  .word 8
  .short 201, 0 ; loseEffect
  .word 12
  .short 203, 0 ; loseSound
  .word 16
  .short 371, 0 ; winSound
  .word 20
  .short 204, 0 ; loseSoundLooping
  .word 24
  .short 372, 0 ; winSoundLooping
  .word 28
  .short 369, 0 ; winMessage
  .word 32
  .short 370, 0 ; winMessageMultiplayer
  .word 36
  .short 202, 0 ; loseMessage
  .word 40
  .short 138, 0 ; effectSetByUser
  .word 44
  .short 321, 0 ; soundSetByUser
  .word 48
  .short 215, 0 ; messageSetByUser
  .word 52
  .short 289, 0 ; scoringTypeSetByUser
  .word 56
  .short 178, 2 ; init
  .word game_GameOverConfig_init__P2965_args@fn
  .word 0, 0 ; the end
        .object Math_FastRandom__C3035_VT
        .balign 4
Math_FastRandom__C3035_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word Math_FastRandom__C3035_IfaceVT
        .short 20 ; class-id
        .short 0 ; reserved
        .word 337477917 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
Math_FastRandom__C3035_IfaceVT:
  .short 32, 22, 44, 50, 16, 30, 12, 10, 8, 6, 4, 2
  .short 198, 0 ; lfsr
  .word 4
  .short 294, 0 ; seed
  .word 8
  .short 225, 2 ; next
  .word Math_FastRandom_next__P3038_args@fn
  .short 258, 2 ; randomRange
  .word Math_FastRandom_randomRange__P3039_args@fn
  .short 247, 2 ; pickRandom
  .word Math_FastRandom_pickRandom__P3040_args@fn
  .word 0, 0 ; the end
        .object sprites_BaseSprite__C2071_VT
        .balign 4
sprites_BaseSprite__C2071_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_BaseSprite__C2071_IfaceVT
        .short 21 ; class-id
        .short 0 ; reserved
        .word 1197357341 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word sprites_BaseSprite___visible__P2074_nochk@fn
        .word sprites_BaseSprite___draw__P2077_nochk@fn
        .word sprites_BaseSprite___drawCore__P2078_nochk@fn
        .word sprites_BaseSprite___update__P2079_nochk@fn
        .balign 4
sprites_BaseSprite__C2071_IfaceVT:
  .short 24, 78, 60, 34, 64, 14, 36, 18, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 172, 0 ; id
  .word 8
  .short 5, 2 ; __visible
  .word sprites_BaseSprite___visible__P2074_args@fn
  .short 383, 1 ; z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 383, 0 ; set z
  .word sprites_BaseSprite_z__P2076_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2077_args@fn
  .short 2, 2 ; __drawCore
  .word sprites_BaseSprite___drawCore__P2078_args@fn
  .short 4, 2 ; __update
  .word sprites_BaseSprite___update__P2079_args@fn
  .word 0, 0 ; the end
        .object Sprite__C2317_VT
        .balign 4
Sprite__C2317_VT:
        .short 124  ; size in bytes
        .byte 4, 249 ; magic
        .word Sprite__C2317_IfaceVT
        .short 22 ; class-id
        .short 0 ; reserved
        .word 1783883544 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word Sprite_toString__P2410_args@fn
        .word Sprite___visible__P2372_nochk@fn
        .word sprites_BaseSprite___draw__P2077_nochk@fn
        .word Sprite___drawCore__P2391_nochk@fn
        .word Sprite___update__P2392_nochk@fn
        .word Sprite_setHitbox__P2370_nochk@fn
        .word Sprite_recalcSize__P4780_nochk@fn
        .word Sprite_drawSprite__P4784_nochk@fn
        .balign 4
Sprite__C2317_IfaceVT:
  .short 520, 1094, 516, 538, 512, 510, 508, 506, 504, 502, 500, 498, 496, 494, 492, 562, 1112, 486, 484, 930, 1160, 478, 476, 474, 472, 470, 468, 554, 464, 462, 460, 458, 456, 806, 452, 570, 448, 446, 444, 442, 440, 1102, 436, 434, 432, 430, 524, 698, 424, 902, 420, 1066, 416, 414, 556, 410, 408, 406, 404, 402, 400, 1070, 700, 394, 856, 1022, 388, 794, 384, 782, 380, 378, 376, 374, 548, 370, 368, 782, 364, 362, 360, 358, 412, 354, 352, 350, 348, 346, 344, 726, 372, 338, 336, 334, 332, 330, 328, 326, 324, 322, 320, 318, 956, 314, 800, 310, 564, 1002, 304, 302, 772, 898, 304, 294, 292, 290, 288, 286, 284, 282, 280, 382, 276, 274, 272, 422, 268, 266, 264, 262, 828, 258, 256, 254, 252, 250, 864, 454, 428, 242, 240, 454, 604, 234, 768, 230, 228, 354, 224, 222, 220, 218, 216, 230, 500, 210, 208, 726, 204, 202, 200, 198, 700, 418, 192, 254, 188, 346, 504, 774, 180, 410, 616, 734, 172, 170, 248, 166, 164, 162, 160, 158, 156, 490, 320, 150, 148, 146, 144, 142, 692, 138, 376, 134, 132, 130, 168, 126, 124, 122, 120, 118, 116, 114, 248, 534, 108, 106, 104, 102, 100, 754, 680, 94, 92, 90, 88, 518, 692, 82, 80, 78, 76, 74, 72, 70, 68, 66, 264, 62, 60, 58, 104, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 222, 28, 26, 400, 22, 20, 130, 16, 470, 12, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 172, 0 ; id
  .word 8
  .short 52, 0 ; _x
  .word 12
  .short 53, 0 ; _y
  .word 16
  .short 49, 0 ; _vx
  .word 20
  .short 50, 0 ; _vy
  .word 24
  .short 7, 0 ; _ax
  .word 28
  .short 8, 0 ; _ay
  .word 32
  .short 16, 0 ; _fx
  .word 36
  .short 17, 0 ; _fy
  .word 40
  .short 45, 0 ; _sx
  .word 44
  .short 46, 0 ; _sy
  .word 48
  .short 51, 0 ; _width
  .word 52
  .short 18, 0 ; _height
  .word 56
  .short 12, 0 ; _data
  .word 60
  .short 22, 0 ; _kind
  .word 64
  .short 194, 0 ; layer
  .word 68
  .short 26, 0 ; _lastX
  .word 72
  .short 27, 0 ; _lastY
  .word 76
  .short 6, 0 ; _action
  .word 80
  .short 199, 0 ; lifespan
  .word 84
  .short 21, 0 ; _image
  .word 88
  .short 32, 0 ; _obstacles
  .word 92
  .short 283, 0 ; sayEndTime
  .word 96
  .short 284, 0 ; sayRenderer
  .word 100
  .short 19, 0 ; _hitbox
  .word 104
  .short 35, 0 ; _overlappers
  .word 108
  .short 23, 0 ; _kindsOverlappedWith
  .word 112
  .short 146, 0 ; flags
  .word 116
  .short 122, 0 ; destroyHandler
  .word 120
  .short 375, 1 ; x
  .word Sprite_x__P2330_args@fn
  .short 375, 0 ; set x
  .word Sprite_x__P2331_args@fn
  .short 379, 1 ; y
  .word Sprite_y__P2332_args@fn
  .short 379, 0 ; set y
  .word Sprite_y__P2333_args@fn
  .short 364, 1 ; vx
  .word Sprite_vx__P2334_args@fn
  .short 364, 0 ; set vx
  .word Sprite_vx__P2335_args@fn
  .short 365, 1 ; vy
  .word Sprite_vy__P2336_args@fn
  .short 365, 0 ; set vy
  .word Sprite_vy__P2337_args@fn
  .short 68, 1 ; ax
  .word Sprite_ax__P2338_args@fn
  .short 68, 0 ; set ax
  .word Sprite_ax__P2339_args@fn
  .short 69, 1 ; ay
  .word Sprite_ay__P2340_args@fn
  .short 69, 0 ; set ay
  .word Sprite_ay__P2341_args@fn
  .short 151, 1 ; fx
  .word Sprite_fx__P2342_args@fn
  .short 151, 0 ; set fx
  .word Sprite_fx__P2343_args@fn
  .short 152, 1 ; fy
  .word Sprite_fy__P2344_args@fn
  .short 152, 0 ; set fy
  .word Sprite_fy__P2345_args@fn
  .short 336, 1 ; sx
  .word Sprite_sx__P2346_args@fn
  .short 337, 1 ; sy
  .word Sprite_sy__P2348_args@fn
  .short 114, 1 ; data
  .word Sprite_data__P2352_args@fn
  .short 114, 0 ; set data
  .word Sprite_data__P2353_args@fn
  .short 174, 1 ; image
  .word Sprite_image__P2366_args@fn
  .short 304, 2 ; setImage
  .word Sprite_setImage__P2367_args@fn
  .short 85, 2 ; calcDimensionalHash
  .word Sprite_calcDimensionalHash__P2368_args@fn
  .short 274, 2 ; resetHitbox
  .word Sprite_resetHitbox__P2369_args@fn
  .short 303, 2 ; setHitbox
  .word Sprite_setHitbox__P2370_args@fn
  .short 187, 2 ; isStatic
  .word Sprite_isStatic__P2371_args@fn
  .short 5, 2 ; __visible
  .word Sprite___visible__P2372_args@fn
  .short 260, 2 ; recalcSize
  .word Sprite_recalcSize__P4780_args@fn
  .short 186, 2 ; isScaled
  .word Sprite_isScaled__P4781_args@fn
  .short 367, 1 ; width
  .word Sprite_width__P2373_args@fn
  .short 169, 1 ; height
  .word Sprite_height__P2374_args@fn
  .short 196, 1 ; left
  .word Sprite_left__P2375_args@fn
  .short 196, 0 ; set left
  .word Sprite_left__P2376_args@fn
  .short 276, 1 ; right
  .word Sprite_right__P2377_args@fn
  .short 276, 0 ; set right
  .word Sprite_right__P2378_args@fn
  .short 353, 1 ; top
  .word Sprite_top__P2379_args@fn
  .short 353, 0 ; set top
  .word Sprite_top__P2380_args@fn
  .short 76, 1 ; bottom
  .word Sprite_bottom__P2381_args@fn
  .short 76, 0 ; set bottom
  .word Sprite_bottom__P2382_args@fn
  .short 192, 2 ; kind
  .word Sprite_kind__P2383_args@fn
  .short 305, 2 ; setKind
  .word Sprite_setKind__P2384_args@fn
  .short 307, 2 ; setPosition
  .word Sprite_setPosition__P2385_args@fn
  .short 183, 2 ; isOutOfScreen
  .word Sprite_isOutOfScreen__P2390_args@fn
  .short 2, 2 ; __drawCore
  .word Sprite___drawCore__P2391_args@fn
  .short 4, 2 ; __update
  .word Sprite___update__P2392_args@fn
  .short 302, 2 ; setFlag
  .word Sprite_setFlag__P2395_args@fn
  .short 238, 2 ; overlapsWith
  .word Sprite_overlapsWith__P2396_args@fn
  .short 100, 2 ; clearObstacles
  .word Sprite_clearObstacles__P2401_args@fn
  .short 265, 2 ; registerObstacle
  .word Sprite_registerObstacle__P2402_args@fn
  .short 121, 2 ; destroy
  .word Sprite_destroy__P2404_args@fn
  .short 13, 2 ; _destroyCore
  .word Sprite__destroyCore__P2405_args@fn
  .short 352, 2 ; toString
  .word Sprite_toString__P2410_args@fn
  .short 132, 2 ; drawSay
  .word Sprite_drawSay__P4782_args@fn
  .short 128, 2 ; drawDebug
  .word Sprite_drawDebug__P4783_args@fn
  .short 133, 2 ; drawSprite
  .word Sprite_drawSprite__P4784_args@fn
  .short 383, 1 ; z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 383, 0 ; set z
  .word sprites_BaseSprite_z__P2076_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2077_args@fn
  .word 0, 0 ; the end
        .object TextSprite__C4330_VT
        .balign 4
TextSprite__C4330_VT:
        .short 164  ; size in bytes
        .byte 4, 249 ; magic
        .word TextSprite__C4330_IfaceVT
        .short 23 ; class-id
        .short 0 ; reserved
        .word 1783883544 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word Sprite___visible__P2372_nochk@fn
        .word sprites_BaseSprite___draw__P2077_nochk@fn
        .word Sprite___drawCore__P2391_nochk@fn
        .word Sprite___update__P2392_nochk@fn
        .word Sprite_setHitbox__P2370_nochk@fn
        .word Sprite_recalcSize__P4780_nochk@fn
        .word Sprite_drawSprite__P4784_nochk@fn
        .balign 4
TextSprite__C4330_IfaceVT:
  .short 520, 1190, 516, 538, 512, 510, 508, 506, 504, 502, 500, 498, 496, 494, 492, 562, 1208, 486, 484, 1026, 1256, 478, 476, 474, 472, 470, 468, 554, 464, 462, 460, 458, 456, 902, 452, 570, 448, 446, 716, 442, 440, 1198, 436, 434, 432, 430, 524, 794, 720, 998, 420, 1162, 416, 414, 556, 410, 408, 406, 404, 402, 400, 1166, 796, 394, 952, 1118, 388, 890, 384, 878, 380, 378, 376, 374, 548, 370, 368, 878, 364, 362, 360, 358, 412, 354, 352, 350, 348, 346, 344, 822, 372, 338, 336, 334, 332, 330, 328, 326, 324, 322, 320, 318, 1052, 314, 896, 310, 636, 658, 1096, 302, 868, 994, 304, 294, 292, 290, 288, 286, 284, 282, 280, 382, 276, 274, 272, 422, 268, 266, 264, 262, 924, 546, 256, 254, 252, 250, 960, 454, 428, 242, 240, 454, 700, 498, 864, 230, 228, 354, 224, 222, 220, 218, 216, 230, 596, 522, 208, 822, 204, 202, 200, 198, 796, 418, 192, 254, 188, 346, 600, 870, 180, 410, 712, 830, 172, 170, 248, 166, 164, 162, 160, 158, 156, 586, 320, 150, 148, 146, 424, 142, 788, 138, 472, 134, 132, 130, 168, 126, 428, 122, 120, 118, 116, 114, 248, 350, 628, 362, 104, 102, 100, 850, 776, 94, 92, 90, 88, 614, 788, 82, 400, 78, 76, 74, 72, 70, 68, 66, 264, 62, 60, 306, 104, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 222, 28, 26, 496, 22, 20, 130, 16, 566, 12, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 172, 0 ; id
  .word 8
  .short 52, 0 ; _x
  .word 12
  .short 53, 0 ; _y
  .word 16
  .short 49, 0 ; _vx
  .word 20
  .short 50, 0 ; _vy
  .word 24
  .short 7, 0 ; _ax
  .word 28
  .short 8, 0 ; _ay
  .word 32
  .short 16, 0 ; _fx
  .word 36
  .short 17, 0 ; _fy
  .word 40
  .short 45, 0 ; _sx
  .word 44
  .short 46, 0 ; _sy
  .word 48
  .short 51, 0 ; _width
  .word 52
  .short 18, 0 ; _height
  .word 56
  .short 12, 0 ; _data
  .word 60
  .short 22, 0 ; _kind
  .word 64
  .short 194, 0 ; layer
  .word 68
  .short 26, 0 ; _lastX
  .word 72
  .short 27, 0 ; _lastY
  .word 76
  .short 6, 0 ; _action
  .word 80
  .short 199, 0 ; lifespan
  .word 84
  .short 21, 0 ; _image
  .word 88
  .short 32, 0 ; _obstacles
  .word 92
  .short 283, 0 ; sayEndTime
  .word 96
  .short 284, 0 ; sayRenderer
  .word 100
  .short 19, 0 ; _hitbox
  .word 104
  .short 35, 0 ; _overlappers
  .word 108
  .short 23, 0 ; _kindsOverlappedWith
  .word 112
  .short 146, 0 ; flags
  .word 116
  .short 122, 0 ; destroyHandler
  .word 120
  .short 339, 0 ; text
  .word 124
  .short 72, 0 ; bg
  .word 128
  .short 144, 0 ; fg
  .word 132
  .short 206, 0 ; maxFontHeight
  .word 136
  .short 75, 0 ; borderWidth
  .word 140
  .short 74, 0 ; borderColor
  .word 144
  .short 242, 0 ; padding
  .word 148
  .short 234, 0 ; outlineWidth
  .word 152
  .short 233, 0 ; outlineColor
  .word 156
  .short 170, 0 ; icon
  .word 160
  .short 356, 2 ; update
  .word TextSprite_update__P4332_args@fn
  .short 314, 2 ; setText
  .word TextSprite_setText__P4335_args@fn
  .short 375, 1 ; x
  .word Sprite_x__P2330_args@fn
  .short 375, 0 ; set x
  .word Sprite_x__P2331_args@fn
  .short 379, 1 ; y
  .word Sprite_y__P2332_args@fn
  .short 379, 0 ; set y
  .word Sprite_y__P2333_args@fn
  .short 364, 1 ; vx
  .word Sprite_vx__P2334_args@fn
  .short 364, 0 ; set vx
  .word Sprite_vx__P2335_args@fn
  .short 365, 1 ; vy
  .word Sprite_vy__P2336_args@fn
  .short 365, 0 ; set vy
  .word Sprite_vy__P2337_args@fn
  .short 68, 1 ; ax
  .word Sprite_ax__P2338_args@fn
  .short 68, 0 ; set ax
  .word Sprite_ax__P2339_args@fn
  .short 69, 1 ; ay
  .word Sprite_ay__P2340_args@fn
  .short 69, 0 ; set ay
  .word Sprite_ay__P2341_args@fn
  .short 151, 1 ; fx
  .word Sprite_fx__P2342_args@fn
  .short 151, 0 ; set fx
  .word Sprite_fx__P2343_args@fn
  .short 152, 1 ; fy
  .word Sprite_fy__P2344_args@fn
  .short 152, 0 ; set fy
  .word Sprite_fy__P2345_args@fn
  .short 336, 1 ; sx
  .word Sprite_sx__P2346_args@fn
  .short 337, 1 ; sy
  .word Sprite_sy__P2348_args@fn
  .short 114, 1 ; data
  .word Sprite_data__P2352_args@fn
  .short 114, 0 ; set data
  .word Sprite_data__P2353_args@fn
  .short 174, 1 ; image
  .word Sprite_image__P2366_args@fn
  .short 304, 2 ; setImage
  .word Sprite_setImage__P2367_args@fn
  .short 85, 2 ; calcDimensionalHash
  .word Sprite_calcDimensionalHash__P2368_args@fn
  .short 274, 2 ; resetHitbox
  .word Sprite_resetHitbox__P2369_args@fn
  .short 303, 2 ; setHitbox
  .word Sprite_setHitbox__P2370_args@fn
  .short 187, 2 ; isStatic
  .word Sprite_isStatic__P2371_args@fn
  .short 5, 2 ; __visible
  .word Sprite___visible__P2372_args@fn
  .short 260, 2 ; recalcSize
  .word Sprite_recalcSize__P4780_args@fn
  .short 186, 2 ; isScaled
  .word Sprite_isScaled__P4781_args@fn
  .short 367, 1 ; width
  .word Sprite_width__P2373_args@fn
  .short 169, 1 ; height
  .word Sprite_height__P2374_args@fn
  .short 196, 1 ; left
  .word Sprite_left__P2375_args@fn
  .short 196, 0 ; set left
  .word Sprite_left__P2376_args@fn
  .short 276, 1 ; right
  .word Sprite_right__P2377_args@fn
  .short 276, 0 ; set right
  .word Sprite_right__P2378_args@fn
  .short 353, 1 ; top
  .word Sprite_top__P2379_args@fn
  .short 353, 0 ; set top
  .word Sprite_top__P2380_args@fn
  .short 76, 1 ; bottom
  .word Sprite_bottom__P2381_args@fn
  .short 76, 0 ; set bottom
  .word Sprite_bottom__P2382_args@fn
  .short 192, 2 ; kind
  .word Sprite_kind__P2383_args@fn
  .short 305, 2 ; setKind
  .word Sprite_setKind__P2384_args@fn
  .short 307, 2 ; setPosition
  .word Sprite_setPosition__P2385_args@fn
  .short 183, 2 ; isOutOfScreen
  .word Sprite_isOutOfScreen__P2390_args@fn
  .short 2, 2 ; __drawCore
  .word Sprite___drawCore__P2391_args@fn
  .short 4, 2 ; __update
  .word Sprite___update__P2392_args@fn
  .short 302, 2 ; setFlag
  .word Sprite_setFlag__P2395_args@fn
  .short 238, 2 ; overlapsWith
  .word Sprite_overlapsWith__P2396_args@fn
  .short 100, 2 ; clearObstacles
  .word Sprite_clearObstacles__P2401_args@fn
  .short 265, 2 ; registerObstacle
  .word Sprite_registerObstacle__P2402_args@fn
  .short 121, 2 ; destroy
  .word Sprite_destroy__P2404_args@fn
  .short 13, 2 ; _destroyCore
  .word Sprite__destroyCore__P2405_args@fn
  .short 352, 2 ; toString
  .word Sprite_toString__P2410_args@fn
  .short 132, 2 ; drawSay
  .word Sprite_drawSay__P4782_args@fn
  .short 128, 2 ; drawDebug
  .word Sprite_drawDebug__P4783_args@fn
  .short 133, 2 ; drawSprite
  .word Sprite_drawSprite__P4784_args@fn
  .short 383, 1 ; z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 383, 0 ; set z
  .word sprites_BaseSprite_z__P2076_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2077_args@fn
  .word 0, 0 ; the end
        .object PhysicsEngine__C2487_VT
        .balign 4
PhysicsEngine__C2487_VT:
        .short 4  ; size in bytes
        .byte 4, 249 ; magic
        .word PhysicsEngine__C2487_IfaceVT
        .short 26 ; class-id
        .short 0 ; reserved
        .word 883080989 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word PhysicsEngine_addSprite__P2489_nochk@fn
        .word PhysicsEngine_removeSprite__P2490_nochk@fn
        .word PhysicsEngine_moveSprite__P2491_nochk@fn
        .word PhysicsEngine_draw__P2492_nochk@fn
        .word PhysicsEngine_move__P2493_nochk@fn
        .balign 4
PhysicsEngine__C2487_IfaceVT:
  .short 48, 22, 20, 50, 16, 30, 12, 18, 8, 6, 4, 2
  .short 59, 2 ; addSprite
  .word PhysicsEngine_addSprite__P2489_args@fn
  .short 267, 2 ; removeSprite
  .word PhysicsEngine_removeSprite__P2490_args@fn
  .short 222, 2 ; moveSprite
  .word PhysicsEngine_moveSprite__P2491_args@fn
  .short 127, 2 ; draw
  .word PhysicsEngine_draw__P2492_args@fn
  .short 221, 2 ; move
  .word PhysicsEngine_move__P2493_args@fn
  .word 0, 0 ; the end
        .object game_Hitbox__C2185_VT
        .balign 4
game_Hitbox__C2185_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word game_Hitbox__C2185_IfaceVT
        .short 28 ; class-id
        .short 0 ; reserved
        .word 1192397595 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
game_Hitbox__C2185_IfaceVT:
  .short 128, 70, 172, 138, 64, 62, 60, 58, 56, 54, 52, 66, 144, 94, 52, 122, 40, 38, 36, 98, 56, 30, 28, 26, 24, 22, 20, 18, 48, 54, 12, 98, 8, 6, 4, 2
  .short 165, 0 ; hash
  .word 4
  .short 243, 0 ; parent
  .word 8
  .short 239, 0 ; ox
  .word 12
  .short 240, 0 ; oy
  .word 16
  .short 367, 0 ; width
  .word 20
  .short 169, 0 ; height
  .word 24
  .short 196, 1 ; left
  .word game_Hitbox_left__P2193_args@fn
  .short 353, 1 ; top
  .word game_Hitbox_top__P2194_args@fn
  .short 276, 1 ; right
  .word game_Hitbox_right__P2195_args@fn
  .short 76, 1 ; bottom
  .word game_Hitbox_bottom__P2196_args@fn
  .short 189, 2 ; isValid
  .word game_Hitbox_isValid__P2197_args@fn
  .short 108, 2 ; contains
  .word game_Hitbox_contains__P2198_args@fn
  .short 358, 2 ; updateIfInvalid
  .word game_Hitbox_updateIfInvalid__P2199_args@fn
  .short 238, 2 ; overlapsWith
  .word game_Hitbox_overlapsWith__P2200_args@fn
  .word 0, 0 ; the end
        .object sprites_SpriteSet__C2439_VT
        .balign 4
sprites_SpriteSet__C2439_VT:
        .short 8  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_SpriteSet__C2439_IfaceVT
        .short 29 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word sprites_SpriteSet_toString__P2450_args@fn
        .balign 4
sprites_SpriteSet__C2439_IfaceVT:
  .short 24, 62, 20, 42, 16, 30, 20, 42, 8, 6, 4, 2
  .short 44, 0 ; _sprites
  .word 4
  .short 197, 1 ; length
  .word sprites_SpriteSet_length__P2442_args@fn
  .short 57, 2 ; add
  .word sprites_SpriteSet_add__P2444_args@fn
  .short 266, 2 ; remove
  .word sprites_SpriteSet_remove__P2446_args@fn
  .short 108, 2 ; contains
  .word sprites_SpriteSet_contains__P2447_args@fn
  .short 352, 2 ; toString
  .word sprites_SpriteSet_toString__P2450_args@fn
  .word 0, 0 ; the end
        .object scene_Scene__C2819_VT
        .balign 4
scene_Scene__C2819_VT:
        .short 104  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Scene__C2819_IfaceVT
        .short 30 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_Scene__C2819_IfaceVT:
  .short 264, 382, 356, 258, 256, 254, 268, 410, 248, 254, 436, 314, 240, 238, 236, 234, 232, 286, 228, 226, 224, 222, 268, 218, 216, 214, 212, 210, 208, 374, 204, 202, 200, 198, 340, 194, 192, 190, 188, 418, 184, 182, 180, 314, 384, 174, 172, 170, 168, 166, 164, 162, 160, 158, 156, 154, 152, 150, 148, 250, 144, 182, 140, 138, 360, 134, 132, 130, 128, 126, 124, 122, 120, 118, 116, 114, 112, 198, 108, 106, 104, 166, 132, 98, 96, 94, 92, 90, 240, 86, 84, 298, 80, 78, 76, 74, 96, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 216, 38, 36, 34, 32, 30, 28, 106, 224, 134, 20, 146, 16, 14, 196, 10, 8, 6, 4, 2
  .short 142, 0 ; eventContext
  .word 4
  .short 70, 0 ; background
  .word 8
  .short 342, 0 ; tileMap
  .word 12
  .short 62, 0 ; allSprites
  .word 16
  .short 329, 0 ; spriteNextId
  .word 20
  .short 331, 0 ; spritesByKind
  .word 24
  .short 246, 0 ; physicsEngine
  .word 28
  .short 87, 0 ; camera
  .word 32
  .short 146, 0 ; flags
  .word 36
  .short 123, 0 ; destroyedHandlers
  .word 40
  .short 113, 0 ; createdHandlers
  .word 44
  .short 235, 0 ; overlapHandlers
  .word 48
  .short 236, 0 ; overlapMap
  .word 52
  .short 343, 0 ; tileOverlapHandlers
  .word 56
  .short 101, 0 ; collisionHandlers
  .word 60
  .short 366, 0 ; wallCollisionHandlers
  .word 64
  .short 154, 0 ; gameForeverHandlers
  .word 68
  .short 244, 0 ; particleSources
  .word 72
  .short 109, 0 ; controlledSprites
  .word 76
  .short 110, 0 ; controllerConnectionState
  .word 80
  .short 147, 0 ; followingSprites
  .word 84
  .short 80, 0 ; buttonEventHandlers
  .word 88
  .short 31, 0 ; _millis
  .word 92
  .short 12, 0 ; _data
  .word 96
  .short 253, 0 ; previousScene
  .word 100
  .short 178, 2 ; init
  .word scene_Scene_init__P2843_args@fn
  .short 114, 1 ; data
  .word scene_Scene_data__P2844_args@fn
  .short 216, 2 ; millis
  .word scene_Scene_millis__P2845_args@fn
  .short 59, 2 ; addSprite
  .word scene_Scene_addSprite__P2846_args@fn
  .short 268, 2 ; render
  .word scene_Scene_render__P2848_args@fn
  .word 0, 0 ; the end
        .object serial_Serial__C4350_VT
        .balign 4
serial_Serial__C4350_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word serial_Serial__C4350_IfaceVT
        .short 31 ; class-id
        .short 0 ; reserved
        .word 1192397597 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
serial_Serial__C4350_IfaceVT:
  .short 24, 30, 20, 18, 48, 14, 36, 26, 8, 6, 4, 2
  .short 297, 0 ; serialDevice
  .word 4
  .short 116, 0 ; decoder
  .word 8
  .short 259, 2 ; readString
  .word serial_Serial_readString__P4354_args@fn
  .short 374, 2 ; writeString
  .word serial_Serial_writeString__P4357_args@fn
  .short 373, 2 ; writeLine
  .word serial_Serial_writeLine__P4358_args@fn
  .word 0, 0 ; the end
        .object UTF8Decoder__C416_VT
        .balign 4
UTF8Decoder__C416_VT:
        .short 8  ; size in bytes
        .byte 4, 249 ; magic
        .word UTF8Decoder__C416_IfaceVT
        .short 32 ; class-id
        .short 0 ; reserved
        .word 1101023518 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
UTF8Decoder__C416_IfaceVT:
  .short 16, 30, 20, 10, 8, 6, 4, 2
  .short 78, 0 ; buf
  .word 4
  .short 57, 2 ; add
  .word UTF8Decoder_add__P418_args@fn
  .short 115, 2 ; decode
  .word UTF8Decoder_decode__P420_args@fn
  .word 0, 0 ; the end
        .object scene_GameForeverHandler__C2796_VT
        .balign 4
scene_GameForeverHandler__C2796_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_GameForeverHandler__C2796_IfaceVT
        .short 33 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_GameForeverHandler__C2796_IfaceVT:
  .short 12, 18, 8, 6, 4, 2
  .short 200, 0 ; lock
  .word 4
  .short 162, 0 ; handler
  .word 8
  .word 0, 0 ; the end
        .object controller_ButtonEventHandlerState__C2162_VT
        .balign 4
controller_ButtonEventHandlerState__C2162_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_ButtonEventHandlerState__C2162_IfaceVT
        .short 34 ; class-id
        .short 0 ; reserved
        .word 1468534558 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
controller_ButtonEventHandlerState__C2162_IfaceVT:
  .short 16, 22, 28, 10, 8, 6, 4, 2
  .short 172, 0 ; id
  .word 4
  .short 361, 0 ; user
  .word 8
  .short 338, 0 ; system
  .word 12
  .word 0, 0 ; the end
        .object controller_ButtonHandler__C2160_VT
        .balign 4
controller_ButtonHandler__C2160_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_ButtonHandler__C2160_IfaceVT
        .short 35 ; class-id
        .short 0 ; reserved
        .word -287244001 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
controller_ButtonHandler__C2160_IfaceVT:
  .short 20, 10, 8, 6, 4, 2
  .short 141, 0 ; event
  .word 4
  .short 86, 0 ; callback
  .word 8
  .word 0, 0 ; the end
        .object control_EventContext__C395_VT
        .balign 4
control_EventContext__C395_VT:
        .short 44  ; size in bytes
        .byte 4, 249 ; magic
        .word control_EventContext__C395_IfaceVT
        .short 36 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_EventContext__C395_IfaceVT:
  .short 136, 134, 244, 130, 128, 126, 124, 122, 120, 118, 156, 114, 112, 110, 108, 226, 104, 102, 188, 122, 96, 94, 92, 90, 88, 190, 84, 162, 80, 78, 84, 74, 72, 70, 100, 66, 64, 62, 60, 58, 56, 182, 108, 50, 48, 118, 44, 42, 40, 38, 36, 34, 128, 78, 92, 26, 40, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 164, 0 ; handlers
  .word 4
  .short 148, 0 ; frameCallbacks
  .word 8
  .short 149, 0 ; frameWorker
  .word 12
  .short 150, 0 ; framesInSample
  .word 16
  .short 348, 0 ; timeInSample
  .word 20
  .short 193, 0 ; lastPerfDump
  .word 24
  .short 120, 0 ; deltaTimeMillis
  .word 28
  .short 252, 0 ; prevTimeMillis
  .word 32
  .short 173, 0 ; idleCallbacks
  .word 36
  .short 281, 0 ; runningCallbacks
  .word 40
  .short 119, 1 ; deltaTime
  .word control_EventContext_deltaTime__P400_args@fn
  .short 280, 2 ; runCallbacks
  .word control_EventContext_runCallbacks__P4502_args@fn
  .short 262, 2 ; registerFrameCallbacks
  .word control_EventContext_registerFrameCallbacks__P4503_args@fn
  .short 261, 2 ; register
  .word control_EventContext_register__P401_args@fn
  .short 354, 2 ; unregister
  .word control_EventContext_unregister__P402_args@fn
  .short 263, 2 ; registerFrameHandler
  .word control_EventContext_registerFrameHandler__P403_args@fn
  .short 264, 2 ; registerHandler
  .word control_EventContext_registerHandler__P405_args@fn
  .word 0, 0 ; the end
        .object control_EventHandler__C4497_VT
        .balign 4
control_EventHandler__C4497_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word control_EventHandler__C4497_IfaceVT
        .short 37 ; class-id
        .short 0 ; reserved
        .word 1703617821 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_EventHandler__C4497_IfaceVT:
  .short 24, 22, 36, 58, 24, 14, 44, 34, 8, 6, 4, 2
  .short 332, 0 ; src
  .word 4
  .short 362, 0 ; value
  .word 8
  .short 162, 0 ; handler
  .word 12
  .short 146, 0 ; flags
  .word 16
  .short 261, 2 ; register
  .word control_EventHandler_register__P4498_args@fn
  .short 354, 2 ; unregister
  .word control_EventHandler_unregister__P4499_args@fn
  .word 0, 0 ; the end
        .object scene_Camera__C2757_VT
        .balign 4
scene_Camera__C2757_VT:
        .short 44  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Camera__C2757_IfaceVT
        .short 38 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_Camera__C2757_IfaceVT:
  .short 72, 70, 124, 74, 208, 62, 60, 130, 56, 150, 52, 50, 96, 166, 172, 42, 40, 38, 52, 170, 32, 94, 28, 26, 136, 22, 52, 98, 168, 14, 52, 34, 8, 6, 4, 2
  .short 33, 0 ; _offsetX
  .word 4
  .short 34, 0 ; _offsetY
  .word 8
  .short 129, 0 ; drawOffsetX
  .word 12
  .short 130, 0 ; drawOffsetY
  .word 16
  .short 327, 0 ; sprite
  .word 20
  .short 24, 0 ; _lastUpdatedSpriteX
  .word 24
  .short 25, 0 ; _lastUpdatedSpriteY
  .word 28
  .short 318, 0 ; shakeStartTime
  .word 32
  .short 317, 0 ; shakeDuration
  .word 36
  .short 316, 0 ; shakeAmplitude
  .word 40
  .short 226, 1 ; offsetX
  .word scene_Camera_offsetX__P2762_args@fn
  .short 226, 0 ; set offsetX
  .word scene_Camera_offsetX__P2763_args@fn
  .short 227, 1 ; offsetY
  .word scene_Camera_offsetY__P2764_args@fn
  .short 227, 0 ; set offsetY
  .word scene_Camera_offsetY__P2765_args@fn
  .short 375, 1 ; x
  .word scene_Camera_x__P2766_args@fn
  .short 379, 1 ; y
  .word scene_Camera_y__P2767_args@fn
  .short 196, 1 ; left
  .word scene_Camera_left__P2768_args@fn
  .short 353, 1 ; top
  .word scene_Camera_top__P2770_args@fn
  .short 188, 2 ; isUpdated
  .word scene_Camera_isUpdated__P2773_args@fn
  .short 356, 2 ; update
  .word scene_Camera_update__P2774_args@fn
  .word 0, 0 ; the end
        .object scene_Background__C2645_VT
        .balign 4
scene_Background__C2645_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Background__C2645_IfaceVT
        .short 39 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_Background__C2645_IfaceVT:
  .short 48, 38, 20, 18, 16, 22, 44, 10, 8, 6, 4, 2
  .short 102, 0 ; color
  .word 4
  .short 21, 0 ; _image
  .word 8
  .short 87, 0 ; camera
  .word 12
  .short 29, 0 ; _layers
  .word 16
  .short 127, 2 ; draw
  .word scene_Background_draw__P2654_args@fn
  .word 0, 0 ; the end
        .object scene_BackgroundLayer__C2655_VT
        .balign 4
scene_BackgroundLayer__C2655_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_BackgroundLayer__C2655_IfaceVT
        .short 40 ; class-id
        .short 0 ; reserved
        .word 1650515229 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_BackgroundLayer__C2655_IfaceVT:
  .short 24, 54, 28, 58, 32, 14, 60, 34, 8, 6, 4, 2
  .short 125, 0 ; distance
  .word 4
  .short 175, 0 ; img
  .word 8
  .short 272, 0 ; repeatX
  .word 12
  .short 273, 0 ; repeatY
  .word 16
  .short 60, 0 ; alignX
  .word 20
  .short 61, 0 ; alignY
  .word 24
  .short 127, 2 ; draw
  .word scene_BackgroundLayer_draw__P2663_args@fn
  .word 0, 0 ; the end
        .object tiles_TileMap__C2711_VT
        .balign 4
tiles_TileMap__C2711_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word tiles_TileMap__C2711_IfaceVT
        .short 41 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
tiles_TileMap__C2711_IfaceVT:
  .short 72, 182, 68, 66, 168, 198, 60, 58, 56, 126, 52, 90, 104, 134, 60, 202, 40, 38, 132, 186, 40, 30, 60, 50, 152, 166, 100, 18, 80, 134, 12, 10, 8, 6, 4, 2
  .short 43, 0 ; _scale
  .word 4
  .short 28, 0 ; _layer
  .word 8
  .short 30, 0 ; _map
  .word 12
  .short 269, 0 ; renderable
  .word 16
  .short 163, 0 ; handlerState
  .word 20
  .short 285, 1 ; scale
  .word tiles_TileMap_scale__P2714_args@fn
  .short 285, 0 ; set scale
  .word tiles_TileMap_scale__P2715_args@fn
  .short 114, 1 ; data
  .word tiles_TileMap_data__P2716_args@fn
  .short 226, 2 ; offsetX
  .word tiles_TileMap_offsetX__P2717_args@fn
  .short 227, 2 ; offsetY
  .word tiles_TileMap_offsetY__P2718_args@fn
  .short 67, 2 ; areaWidth
  .word tiles_TileMap_areaWidth__P2719_args@fn
  .short 66, 2 ; areaHeight
  .word tiles_TileMap_areaHeight__P2720_args@fn
  .short 194, 1 ; layer
  .word tiles_TileMap_layer__P2721_args@fn
  .short 140, 1 ; enabled
  .word tiles_TileMap_enabled__P2723_args@fn
  .short 159, 2 ; getTile
  .word tiles_TileMap_getTile__P2725_args@fn
  .short 161, 2 ; getTileIndex
  .word tiles_TileMap_getTileIndex__P2726_args@fn
  .short 127, 2 ; draw
  .word tiles_TileMap_draw__P4901_args@fn
  .short 181, 2 ; isObstacle
  .word tiles_TileMap_isObstacle__P2732_args@fn
  .short 156, 2 ; getObstacle
  .word tiles_TileMap_getObstacle__P2733_args@fn
  .short 182, 2 ; isOnWall
  .word tiles_TileMap_isOnWall__P2734_args@fn
  .short 160, 2 ; getTileImage
  .word tiles_TileMap_getTileImage__P2735_args@fn
  .word 0, 0 ; the end
        .object tiles_TileMapData__C2693_VT
        .balign 4
tiles_TileMapData__C2693_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word tiles_TileMapData__C2693_IfaceVT
        .short 42 ; class-id
        .short 0 ; reserved
        .word 209555226 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
tiles_TileMapData__C2693_IfaceVT:
  .short 160, 134, 132, 130, 128, 126, 156, 122, 120, 118, 116, 114, 112, 110, 108, 170, 104, 206, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 114, 80, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 128, 38, 36, 130, 32, 30, 28, 26, 72, 94, 76, 34, 16, 14, 124, 10, 8, 6, 4, 2
  .short 114, 0 ; data
  .word 4
  .short 195, 0 ; layers
  .word 8
  .short 347, 0 ; tileset
  .word 12
  .short 82, 0 ; cachedTileView
  .word 16
  .short 43, 0 ; _scale
  .word 20
  .short 51, 0 ; _width
  .word 24
  .short 18, 0 ; _height
  .word 28
  .short 367, 1 ; width
  .word tiles_TileMapData_width__P2695_args@fn
  .short 169, 1 ; height
  .word tiles_TileMapData_height__P2696_args@fn
  .short 285, 1 ; scale
  .word tiles_TileMapData_scale__P2697_args@fn
  .short 285, 0 ; set scale
  .word tiles_TileMapData_scale__P2698_args@fn
  .short 159, 2 ; getTile
  .word tiles_TileMapData_getTile__P2699_args@fn
  .short 160, 2 ; getTileImage
  .word tiles_TileMapData_getTileImage__P2702_args@fn
  .short 190, 2 ; isWall
  .word tiles_TileMapData_isWall__P2704_args@fn
  .short 184, 2 ; isOutsideMap
  .word tiles_TileMapData_isOutsideMap__P2705_args@fn
  .word 0, 0 ; the end
        .object control_FrameCallback__C392_VT
        .balign 4
control_FrameCallback__C392_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word control_FrameCallback__C392_IfaceVT
        .short 43 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_FrameCallback__C392_IfaceVT:
  .short 12, 18, 8, 6, 4, 2
  .short 232, 0 ; order
  .word 4
  .short 162, 0 ; handler
  .word 8
  .word 0, 0 ; the end
        .object control_PollEvent__C4476_VT
        .balign 4
control_PollEvent__C4476_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word control_PollEvent__C4476_IfaceVT
        .short 44 ; class-id
        .short 0 ; reserved
        .word 1101023516 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_PollEvent__C4476_IfaceVT:
  .short 48, 38, 36, 34, 32, 46, 28, 50, 24, 22, 20, 18, 16, 14, 44, 50, 8, 6, 4, 2
  .short 139, 0 ; eid
  .word 4
  .short 363, 0 ; vid
  .word 8
  .short 333, 0 ; start
  .word 12
  .short 349, 0 ; timeOut
  .word 16
  .short 105, 0 ; condition
  .word 20
  .short 230, 0 ; once
  .word 24
  .word 0, 0 ; the end
        .object ArcadePhysicsEngine__C2503_VT
        .balign 4
ArcadePhysicsEngine__C2503_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word ArcadePhysicsEngine__C2503_IfaceVT
        .short 27 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word ArcadePhysicsEngine_addSprite__P2512_nochk@fn
        .word ArcadePhysicsEngine_removeSprite__P2513_nochk@fn
        .word ArcadePhysicsEngine_moveSprite__P2517_nochk@fn
        .word ArcadePhysicsEngine_draw__P2514_nochk@fn
        .word ArcadePhysicsEngine_move__P2515_nochk@fn
        .balign 4
ArcadePhysicsEngine__C2503_IfaceVT:
  .short 72, 86, 68, 194, 72, 62, 228, 106, 192, 206, 52, 50, 72, 110, 188, 226, 136, 214, 36, 34, 112, 30, 188, 138, 24, 62, 140, 18, 120, 14, 44, 10, 8, 6, 4, 2
  .short 330, 0 ; sprites
  .word 4
  .short 205, 0 ; map
  .word 8
  .short 212, 0 ; maxVelocity
  .word 12
  .short 208, 0 ; maxNegativeVelocity
  .word 16
  .short 219, 0 ; minSingleStep
  .word 20
  .short 209, 0 ; maxSingleStep
  .word 24
  .short 210, 1 ; maxSpeed
  .word ArcadePhysicsEngine_maxSpeed__P2505_args@fn
  .short 210, 0 ; set maxSpeed
  .word ArcadePhysicsEngine_maxSpeed__P2506_args@fn
  .short 220, 1 ; minStep
  .word ArcadePhysicsEngine_minStep__P2507_args@fn
  .short 220, 0 ; set minStep
  .word ArcadePhysicsEngine_minStep__P2508_args@fn
  .short 211, 1 ; maxStep
  .word ArcadePhysicsEngine_maxStep__P2509_args@fn
  .short 211, 0 ; set maxStep
  .word ArcadePhysicsEngine_maxStep__P2510_args@fn
  .short 59, 2 ; addSprite
  .word ArcadePhysicsEngine_addSprite__P2512_args@fn
  .short 267, 2 ; removeSprite
  .word ArcadePhysicsEngine_removeSprite__P2513_args@fn
  .short 127, 2 ; draw
  .word ArcadePhysicsEngine_draw__P2514_args@fn
  .short 221, 2 ; move
  .word ArcadePhysicsEngine_move__P2515_args@fn
  .short 111, 2 ; createMovingSprite
  .word ArcadePhysicsEngine_createMovingSprite__P4825_args@fn
  .short 328, 2 ; spriteCollisions
  .word ArcadePhysicsEngine_spriteCollisions__P4826_args@fn
  .short 290, 2 ; screenEdgeCollisions
  .word ArcadePhysicsEngine_screenEdgeCollisions__P4827_args@fn
  .short 345, 2 ; tilemapCollisions
  .word ArcadePhysicsEngine_tilemapCollisions__P4828_args@fn
  .short 346, 2 ; tilemapOverlaps
  .word ArcadePhysicsEngine_tilemapOverlaps__P4829_args@fn
  .short 222, 2 ; moveSprite
  .word ArcadePhysicsEngine_moveSprite__P2517_args@fn
  .short 88, 2 ; canResolveClipping
  .word ArcadePhysicsEngine_canResolveClipping__P4830_args@fn
  .short 107, 2 ; constrain
  .word ArcadePhysicsEngine_constrain__P4831_args@fn
  .word 0, 0 ; the end
        .object sprites_SpriteMap__C2422_VT
        .balign 4
sprites_SpriteMap__C2422_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_SpriteMap__C2422_IfaceVT
        .short 45 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word sprites_SpriteMap_toString__P2430_args@fn
        .balign 4
sprites_SpriteMap__C2422_IfaceVT:
  .short 72, 78, 108, 138, 64, 62, 84, 122, 168, 54, 132, 146, 48, 94, 44, 58, 40, 38, 36, 34, 32, 30, 28, 82, 112, 22, 20, 18, 120, 14, 12, 42, 8, 6, 4, 2
  .short 95, 0 ; cellWidth
  .word 4
  .short 94, 0 ; cellHeight
  .word 8
  .short 278, 0 ; rowCount
  .word 12
  .short 104, 0 ; columnCount
  .word 16
  .short 77, 0 ; buckets
  .word 20
  .short 224, 2 ; neighbors
  .word sprites_SpriteMap_neighbors__P2424_args@fn
  .short 237, 2 ; overlaps
  .word sprites_SpriteMap_overlaps__P2425_args@fn
  .short 127, 2 ; draw
  .word sprites_SpriteMap_draw__P2426_args@fn
  .short 275, 2 ; resizeBuckets
  .word sprites_SpriteMap_resizeBuckets__P2427_args@fn
  .short 99, 2 ; clear
  .word sprites_SpriteMap_clear__P2428_args@fn
  .short 191, 2 ; key
  .word sprites_SpriteMap_key__P4788_args@fn
  .short 180, 2 ; insertAtKey
  .word sprites_SpriteMap_insertAtKey__P4789_args@fn
  .short 179, 2 ; insertAABB
  .word sprites_SpriteMap_insertAABB__P2429_args@fn
  .short 214, 2 ; mergeAtKey
  .word sprites_SpriteMap_mergeAtKey__P4790_args@fn
  .short 352, 2 ; toString
  .word sprites_SpriteMap_toString__P2430_args@fn
  .word 0, 0 ; the end
        .object scene_systemMenu_PauseMenu__C3071_VT
        .balign 4
scene_systemMenu_PauseMenu__C3071_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_systemMenu_PauseMenu__C3071_IfaceVT
        .short 46 ; class-id
        .short 0 ; reserved
        .word 1783883548 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_systemMenu_PauseMenu__C3071_IfaceVT:
  .short 40, 102, 108, 42, 56, 30, 76, 26, 112, 118, 100, 50, 16, 54, 68, 10, 24, 6, 4, 2
  .short 231, 0 ; options
  .word 4
  .short 340, 0 ; theme
  .word 8
  .short 296, 0 ; selection
  .word 12
  .short 292, 0 ; scrollRow
  .word 16
  .short 293, 0 ; scrollTarget
  .word 20
  .short 291, 0 ; scrollOffset
  .word 24
  .short 155, 0 ; generator
  .word 28
  .short 320, 2 ; show
  .word scene_systemMenu_PauseMenu_show__P3073_args@fn
  .short 229, 2 ; onUpdate
  .word scene_systemMenu_PauseMenu_onUpdate__P3074_args@fn
  .short 311, 2 ; setSelection
  .word scene_systemMenu_PauseMenu_setSelection__P3075_args@fn
  .short 134, 2 ; drawText
  .word scene_systemMenu_PauseMenu_drawText__P3076_args@fn
  .short 124, 2 ; dispose
  .word scene_systemMenu_PauseMenu_dispose__P3077_args@fn
  .short 360, 2 ; updateScrollTarget
  .word scene_systemMenu_PauseMenu_updateScrollTarget__P5228_args@fn
  .word 0, 0 ; the end
        .object scene_systemMenu_MenuOption__C3063_VT
        .balign 4
scene_systemMenu_MenuOption__C3063_VT:
        .short 36  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_systemMenu_MenuOption__C3063_IfaceVT
        .short 47 ; class-id
        .short 0 ; reserved
        .word 1703617819 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_systemMenu_MenuOption__C3063_IfaceVT:
  .short 88, 70, 68, 66, 160, 166, 60, 58, 56, 54, 52, 50, 128, 54, 44, 66, 40, 38, 36, 146, 32, 78, 28, 26, 96, 22, 60, 50, 72, 78, 100, 10, 8, 6, 4, 2
  .short 89, 0 ; card
  .word 4
  .short 170, 0 ; icon
  .word 8
  .short 353, 0 ; top
  .word 12
  .short 334, 0 ; state
  .word 16
  .short 340, 0 ; theme
  .word 20
  .short 171, 0 ; iconImage
  .word 24
  .short 158, 0 ; getText
  .word 28
  .short 55, 0 ; action
  .word 32
  .short 320, 2 ; show
  .word scene_systemMenu_MenuOption_show__P3065_args@fn
  .short 249, 2 ; position
  .word scene_systemMenu_MenuOption_position__P3066_args@fn
  .short 306, 2 ; setOffset
  .word scene_systemMenu_MenuOption_setOffset__P3067_args@fn
  .short 315, 2 ; setTheme
  .word scene_systemMenu_MenuOption_setTheme__P3068_args@fn
  .short 313, 2 ; setState
  .word scene_systemMenu_MenuOption_setState__P3069_args@fn
  .short 124, 2 ; dispose
  .word scene_systemMenu_MenuOption_dispose__P3070_args@fn
  .short 357, 2 ; updateCard
  .word scene_systemMenu_MenuOption_updateCard__P5227_args@fn
  .word 0, 0 ; the end
        .object scene_Renderable__C2776_VT
        .balign 4
scene_Renderable__C2776_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Renderable__C2776_IfaceVT
        .short 24 ; class-id
        .short 0 ; reserved
        .word 1101023514 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word scene_Renderable___visible__P2778_nochk@fn
        .word sprites_BaseSprite___draw__P2077_nochk@fn
        .word scene_Renderable___drawCore__P2779_nochk@fn
        .word sprites_BaseSprite___update__P2079_nochk@fn
        .balign 4
scene_Renderable__C2776_IfaceVT:
  .short 136, 206, 132, 130, 128, 134, 124, 122, 120, 118, 116, 162, 112, 110, 108, 106, 168, 102, 132, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 112, 86, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 62, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 172, 0 ; id
  .word 8
  .short 162, 0 ; handler
  .word 12
  .short 319, 0 ; shouldBeVisible
  .word 16
  .short 5, 2 ; __visible
  .word scene_Renderable___visible__P2778_args@fn
  .short 2, 2 ; __drawCore
  .word scene_Renderable___drawCore__P2779_args@fn
  .short 383, 1 ; z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 383, 0 ; set z
  .word sprites_BaseSprite_z__P2076_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2077_args@fn
  .short 4, 2 ; __update
  .word sprites_BaseSprite___update__P2079_args@fn
  .word 0, 0 ; the end
        .object particles_ParticleSource__C3127_VT
        .balign 4
particles_ParticleSource__C3127_VT:
        .short 56  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ParticleSource__C3127_IfaceVT
        .short 25 ; class-id
        .short 0 ; reserved
        .word 1192397593 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word sprites_BaseSprite___visible__P2074_nochk@fn
        .word particles_ParticleSource___draw__P3133_nochk@fn
        .word sprites_BaseSprite___drawCore__P2078_nochk@fn
        .word sprites_BaseSprite___update__P2079_nochk@fn
        .word particles_ParticleSource_updateParticle__P5313_nochk@fn
        .balign 4
particles_ParticleSource__C3127_IfaceVT:
  .short 264, 438, 332, 258, 256, 254, 252, 250, 384, 246, 244, 298, 240, 358, 484, 234, 232, 230, 228, 322, 224, 286, 300, 218, 216, 214, 212, 210, 208, 206, 204, 242, 200, 198, 196, 298, 192, 190, 188, 186, 184, 294, 404, 178, 176, 174, 172, 378, 168, 382, 164, 162, 160, 158, 156, 154, 152, 150, 148, 146, 144, 142, 308, 138, 136, 134, 148, 130, 128, 126, 124, 362, 312, 118, 116, 274, 112, 110, 108, 106, 104, 102, 100, 98, 96, 294, 92, 90, 88, 86, 84, 82, 80, 206, 76, 74, 80, 70, 100, 66, 248, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 186, 128, 62, 36, 34, 80, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 172, 0 ; id
  .word 8
  .short 254, 0 ; priority
  .word 12
  .short 14, 0 ; _dt
  .word 16
  .short 64, 0 ; anchor
  .word 20
  .short 199, 0 ; lifespan
  .word 24
  .short 241, 0 ; pFlags
  .word 28
  .short 166, 0 ; head
  .word 32
  .short 350, 0 ; timer
  .word 36
  .short 245, 0 ; period
  .word 40
  .short 15, 0 ; _factory
  .word 44
  .short 68, 0 ; ax
  .word 48
  .short 69, 0 ; ay
  .word 52
  .short 1, 2 ; __draw
  .word particles_ParticleSource___draw__P3133_args@fn
  .short 48, 2 ; _update
  .word particles_ParticleSource__update__P3134_args@fn
  .short 40, 2 ; _prune
  .word particles_ParticleSource__prune__P3135_args@fn
  .short 298, 2 ; setAcceleration
  .word particles_ParticleSource_setAcceleration__P3136_args@fn
  .short 310, 2 ; setRelativeToCamera
  .word particles_ParticleSource_setRelativeToCamera__P3138_args@fn
  .short 140, 1 ; enabled
  .word particles_ParticleSource_enabled__P3139_args@fn
  .short 140, 0 ; set enabled
  .word particles_ParticleSource_enabled__P3140_args@fn
  .short 121, 2 ; destroy
  .word particles_ParticleSource_destroy__P3141_args@fn
  .short 99, 2 ; clear
  .word particles_ParticleSource_clear__P3142_args@fn
  .short 299, 2 ; setAnchor
  .word particles_ParticleSource_setAnchor__P3143_args@fn
  .short 309, 2 ; setRate
  .word particles_ParticleSource_setRate__P3144_args@fn
  .short 301, 2 ; setFactory
  .word particles_ParticleSource_setFactory__P3146_args@fn
  .short 359, 2 ; updateParticle
  .word particles_ParticleSource_updateParticle__P5313_args@fn
  .short 131, 2 ; drawParticle
  .word particles_ParticleSource_drawParticle__P5314_args@fn
  .short 5, 2 ; __visible
  .word sprites_BaseSprite___visible__P2074_args@fn
  .short 383, 1 ; z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 383, 0 ; set z
  .word sprites_BaseSprite_z__P2076_args@fn
  .short 2, 2 ; __drawCore
  .word sprites_BaseSprite___drawCore__P2078_args@fn
  .short 4, 2 ; __update
  .word sprites_BaseSprite___update__P2079_args@fn
  .word 0, 0 ; the end
        .object effects_ParticleEffect__C3238_VT
        .balign 4
effects_ParticleEffect__C3238_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word effects_ParticleEffect__C3238_IfaceVT
        .short 48 ; class-id
        .short 0 ; reserved
        .word 1197357341 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
effects_ParticleEffect__C3238_IfaceVT:
  .short 24, 22, 20, 18, 32, 46, 36, 18, 8, 6, 4, 2
  .short 323, 0 ; sourceFactory
  .word 4
  .short 118, 0 ; defaultRate
  .word 8
  .short 117, 0 ; defaultLifespan
  .word 12
  .short 333, 2 ; start
  .word effects_ParticleEffect_start__P3240_args@fn
  .short 121, 2 ; destroy
  .word effects_ParticleEffect_destroy__P3241_args@fn
  .word 0, 0 ; the end
        .object effects_ImageEffect__C3266_VT
        .balign 4
effects_ImageEffect__C3266_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word effects_ImageEffect__C3266_IfaceVT
        .short 50 ; class-id
        .short 0 ; reserved
        .word -287244005 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
effects_ImageEffect__C3266_IfaceVT:
  .short 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 62, 44, 42, 64, 38, 76, 34, 64, 30, 28, 26, 24, 22, 28, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 250, 0 ; preferredDelay
  .word 4
  .short 137, 0 ; effect
  .word 8
  .short 143, 0 ; fastRandom
  .word 12
  .short 351, 0 ; times
  .word 16
  .short 65, 2 ; applyTo
  .word effects_ImageEffect_applyTo__P3268_args@fn
  .short 96, 2 ; change
  .word effects_ImageEffect_change__P3269_args@fn
  .word 0, 0 ; the end
        .object music_Melody__C1623_VT
        .balign 4
music_Melody__C1623_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word music_Melody__C1623_IfaceVT
        .short 51 ; class-id
        .short 0 ; reserved
        .word 1468534558 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word music_Melody_toString__P1632_args@fn
        .balign 4
music_Melody__C1623_IfaceVT:
  .short 16, 30, 20, 10, 8, 6, 4, 2
  .short 47, 0 ; _text
  .word 4
  .short 37, 0 ; _player
  .word 8
  .short 352, 2 ; toString
  .word music_Melody_toString__P1632_args@fn
  .word 0, 0 ; the end
        .object music_Playable__C1893_VT
        .balign 4
music_Playable__C1893_VT:
        .short 8  ; size in bytes
        .byte 4, 249 ; magic
        .word music_Playable__C1893_IfaceVT
        .short 52 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
music_Playable__C1893_IfaceVT:
  .short 12, 10, 8, 6, 4, 2
  .short 335, 0 ; stopped
  .word 4
  .word 0, 0 ; the end
        .object music_MelodyPlayable__C1898_VT
        .balign 4
music_MelodyPlayable__C1898_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word music_MelodyPlayable__C1898_IfaceVT
        .short 53 ; class-id
        .short 0 ; reserved
        .word 476074271 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
music_MelodyPlayable__C1898_IfaceVT:
  .short 12, 18, 8, 6, 4, 2
  .short 335, 0 ; stopped
  .word 4
  .short 213, 0 ; melody
  .word 8
  .word 0, 0 ; the end
        .object effects_ScreenEffect__C3242_VT
        .balign 4
effects_ScreenEffect__C3242_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word effects_ScreenEffect__C3242_IfaceVT
        .short 49 ; class-id
        .short 0 ; reserved
        .word 1644222236 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
effects_ScreenEffect__C3242_IfaceVT:
  .short 40, 38, 44, 34, 56, 78, 28, 66, 24, 22, 20, 18, 32, 46, 12, 10, 8, 6, 4, 2
  .short 323, 0 ; sourceFactory
  .word 4
  .short 118, 0 ; defaultRate
  .word 8
  .short 117, 0 ; defaultLifespan
  .word 12
  .short 322, 0 ; source
  .word 16
  .short 287, 0 ; sceneDefaultRate
  .word 20
  .short 333, 2 ; start
  .word effects_ParticleEffect_start__P3240_args@fn
  .short 121, 2 ; destroy
  .word effects_ParticleEffect_destroy__P3241_args@fn
  .word 0, 0 ; the end
        .object particles_ParticleFactory__C3163_VT
        .balign 4
particles_ParticleFactory__C3163_VT:
        .short 4  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ParticleFactory__C3163_IfaceVT
        .short 54 ; class-id
        .short 0 ; reserved
        .word 1468534559 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_ParticleFactory_createParticle__P3165_nochk@fn
        .word particles_ParticleFactory_drawParticle__P3166_nochk@fn
        .balign 4
particles_ParticleFactory__C3163_IfaceVT:
  .short 12, 18, 8, 6, 4, 2
  .short 112, 2 ; createParticle
  .word particles_ParticleFactory_createParticle__P3165_args@fn
  .short 131, 2 ; drawParticle
  .word particles_ParticleFactory_drawParticle__P3166_args@fn
  .word 0, 0 ; the end
        .object particles_SprayFactory__C3167_VT
        .balign 4
particles_SprayFactory__C3167_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_SprayFactory__C3167_IfaceVT
        .short 55 ; class-id
        .short 0 ; reserved
        .word 1703617820 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_SprayFactory_createParticle__P3169_nochk@fn
        .word particles_SprayFactory_drawParticle__P3170_nochk@fn
        .balign 4
particles_SprayFactory__C3167_IfaceVT:
  .short 40, 46, 36, 34, 48, 30, 52, 26, 24, 22, 20, 18, 56, 14, 12, 42, 56, 6, 4, 2
  .short 325, 0 ; speed
  .word 4
  .short 217, 0 ; minAngle
  .word 8
  .short 326, 0 ; spread
  .word 12
  .short 112, 2 ; createParticle
  .word particles_SprayFactory_createParticle__P3169_args@fn
  .short 131, 2 ; drawParticle
  .word particles_SprayFactory_drawParticle__P3170_args@fn
  .short 312, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3171_args@fn
  .short 300, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3172_args@fn
  .word 0, 0 ; the end
        .object particles_AreaFactory__C3173_VT
        .balign 4
particles_AreaFactory__C3173_VT:
        .short 36  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_AreaFactory__C3173_IfaceVT
        .short 56 ; class-id
        .short 0 ; reserved
        .word 538732827 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_AreaFactory_createParticle__P3179_nochk@fn
        .word particles_AreaFactory_drawParticle__P3180_nochk@fn
        .balign 4
particles_AreaFactory__C3173_IfaceVT:
  .short 72, 134, 68, 66, 144, 62, 116, 66, 56, 78, 52, 90, 48, 118, 44, 42, 40, 38, 36, 34, 120, 30, 28, 26, 24, 54, 20, 18, 32, 14, 60, 10, 8, 6, 4, 2
  .short 325, 0 ; speed
  .word 4
  .short 217, 0 ; minAngle
  .word 8
  .short 326, 0 ; spread
  .word 12
  .short 377, 0 ; xRange
  .word 16
  .short 381, 0 ; yRange
  .word 20
  .short 218, 0 ; minLifespan
  .word 24
  .short 207, 0 ; maxLifespan
  .word 28
  .short 153, 0 ; galois
  .word 32
  .short 112, 2 ; createParticle
  .word particles_AreaFactory_createParticle__P3179_args@fn
  .short 131, 2 ; drawParticle
  .word particles_AreaFactory_drawParticle__P3180_args@fn
  .short 312, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3171_args@fn
  .short 300, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3172_args@fn
  .word 0, 0 ; the end
        .object particles_ShapeFactory__C3189_VT
        .balign 4
particles_ShapeFactory__C3189_VT:
        .short 48  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ShapeFactory__C3189_IfaceVT
        .short 57 ; class-id
        .short 0 ; reserved
        .word -69291238 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_ShapeFactory_createParticle__P3193_nochk@fn
        .word particles_ShapeFactory_drawParticle__P3192_nochk@fn
        .balign 4
particles_ShapeFactory__C3189_IfaceVT:
  .short 136, 134, 132, 130, 216, 126, 124, 122, 200, 190, 236, 114, 216, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 116, 82, 72, 70, 124, 66, 64, 62, 60, 58, 56, 54, 100, 50, 48, 46, 44, 58, 40, 102, 36, 34, 32, 30, 60, 26, 120, 22, 44, 18, 16, 126, 12, 10, 8, 6, 4, 2
  .short 325, 0 ; speed
  .word 4
  .short 217, 0 ; minAngle
  .word 8
  .short 326, 0 ; spread
  .word 12
  .short 377, 0 ; xRange
  .word 16
  .short 381, 0 ; yRange
  .word 20
  .short 218, 0 ; minLifespan
  .word 24
  .short 207, 0 ; maxLifespan
  .word 28
  .short 153, 0 ; galois
  .word 32
  .short 324, 0 ; sources
  .word 36
  .short 239, 0 ; ox
  .word 40
  .short 240, 0 ; oy
  .word 44
  .short 58, 2 ; addShape
  .word particles_ShapeFactory_addShape__P3191_args@fn
  .short 131, 2 ; drawParticle
  .word particles_ShapeFactory_drawParticle__P3192_args@fn
  .short 112, 2 ; createParticle
  .word particles_ShapeFactory_createParticle__P3193_args@fn
  .short 312, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3171_args@fn
  .short 300, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3172_args@fn
  .word 0, 0 ; the end
        .object particles_ConfettiFactory__C3194_VT
        .balign 4
particles_ConfettiFactory__C3194_VT:
        .short 48  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ConfettiFactory__C3194_IfaceVT
        .short 58 ; class-id
        .short 0 ; reserved
        .word -69291238 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_ShapeFactory_createParticle__P3193_nochk@fn
        .word particles_ShapeFactory_drawParticle__P3192_nochk@fn
        .balign 4
particles_ConfettiFactory__C3194_IfaceVT:
  .short 136, 134, 132, 130, 216, 126, 124, 122, 200, 190, 236, 114, 216, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 116, 82, 72, 70, 124, 66, 64, 62, 60, 58, 56, 54, 100, 50, 48, 46, 44, 58, 40, 102, 36, 34, 32, 30, 60, 26, 120, 22, 44, 18, 16, 126, 12, 10, 8, 6, 4, 2
  .short 325, 0 ; speed
  .word 4
  .short 217, 0 ; minAngle
  .word 8
  .short 326, 0 ; spread
  .word 12
  .short 377, 0 ; xRange
  .word 16
  .short 381, 0 ; yRange
  .word 20
  .short 218, 0 ; minLifespan
  .word 24
  .short 207, 0 ; maxLifespan
  .word 28
  .short 153, 0 ; galois
  .word 32
  .short 324, 0 ; sources
  .word 36
  .short 239, 0 ; ox
  .word 40
  .short 240, 0 ; oy
  .word 44
  .short 58, 2 ; addShape
  .word particles_ShapeFactory_addShape__P3191_args@fn
  .short 131, 2 ; drawParticle
  .word particles_ShapeFactory_drawParticle__P3192_args@fn
  .short 112, 2 ; createParticle
  .word particles_ShapeFactory_createParticle__P3193_args@fn
  .short 312, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3171_args@fn
  .short 300, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3172_args@fn
  .word 0, 0 ; the end
        .object particles_Particle__C3108_VT
        .balign 4
particles_Particle__C3108_VT:
        .short 36  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_Particle__C3108_IfaceVT
        .short 59 ; class-id
        .short 0 ; reserved
        .word 1650515228 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
particles_Particle__C3108_IfaceVT:
  .short 40, 38, 36, 90, 56, 38, 28, 58, 64, 22, 20, 18, 64, 14, 28, 10, 8, 6, 4, 2
  .short 52, 0 ; _x
  .word 4
  .short 53, 0 ; _y
  .word 8
  .short 364, 0 ; vx
  .word 12
  .short 365, 0 ; vy
  .word 16
  .short 199, 0 ; lifespan
  .word 20
  .short 225, 0 ; next
  .word 24
  .short 114, 0 ; data
  .word 28
  .short 102, 0 ; color
  .word 32
  .word 0, 0 ; the end
        .object MovingSprite__C2501_VT
        .balign 4
MovingSprite__C2501_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word MovingSprite__C2501_IfaceVT
        .short 60 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
MovingSprite__C2501_IfaceVT:
  .short 48, 22, 20, 26, 48, 62, 12, 26, 48, 6, 4, 2
  .short 327, 0 ; sprite
  .word 4
  .short 83, 0 ; cachedVx
  .word 8
  .short 84, 0 ; cachedVy
  .word 12
  .short 135, 0 ; dx
  .word 16
  .short 136, 0 ; dy
  .word 20
  .short 378, 0 ; xStep
  .word 24
  .short 382, 0 ; yStep
  .word 28
  .word 0, 0 ; the end
        .object tiles_Location__C2669_VT
        .balign 4
tiles_Location__C2669_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word tiles_Location__C2669_IfaceVT
        .short 61 ; class-id
        .short 0 ; reserved
        .word 1783883548 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
tiles_Location__C2669_IfaceVT:
  .short 56, 70, 36, 34, 32, 30, 76, 26, 80, 86, 20, 26, 40, 54, 84, 10, 8, 6, 4, 2
  .short 42, 0 ; _row
  .word 4
  .short 9, 0 ; _col
  .word 8
  .short 342, 1 ; tileMap
  .word tiles_Location_tileMap__P2671_args@fn
  .short 103, 1 ; column
  .word tiles_Location_column__P2672_args@fn
  .short 277, 1 ; row
  .word tiles_Location_row__P2673_args@fn
  .short 375, 1 ; x
  .word tiles_Location_x__P2674_args@fn
  .short 379, 1 ; y
  .word tiles_Location_y__P2675_args@fn
  .short 196, 1 ; left
  .word tiles_Location_left__P2676_args@fn
  .short 353, 1 ; top
  .word tiles_Location_top__P2677_args@fn
  .short 344, 1 ; tileSet
  .word tiles_Location_tileSet__P2680_args@fn
  .word 0, 0 ; the end
        .object sprites_StaticObstacle__C2474_VT
        .balign 4
sprites_StaticObstacle__C2474_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_StaticObstacle__C2474_IfaceVT
        .short 62 ; class-id
        .short 0 ; reserved
        .word 538732828 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
sprites_StaticObstacle__C2474_IfaceVT:
  .short 80, 102, 36, 90, 56, 30, 28, 26, 72, 54, 20, 18, 32, 22, 12, 10, 8, 6, 4, 2
  .short 194, 0 ; layer
  .word 4
  .short 174, 0 ; image
  .word 8
  .short 341, 0 ; tileIndex
  .word 12
  .short 353, 0 ; top
  .word 16
  .short 196, 0 ; left
  .word 20
  .short 375, 1 ; x
  .word sprites_StaticObstacle_x__P2481_args@fn
  .short 379, 1 ; y
  .word sprites_StaticObstacle_y__P2482_args@fn
  .short 169, 1 ; height
  .word sprites_StaticObstacle_height__P2483_args@fn
  .short 367, 1 ; width
  .word sprites_StaticObstacle_width__P2484_args@fn
  .word 0, 0 ; the end
        .object sprites_BaseSpriteSayRenderer__C2236_VT
        .balign 4
sprites_BaseSpriteSayRenderer__C2236_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_BaseSpriteSayRenderer__C2236_IfaceVT
        .short 63 ; class-id
        .short 0 ; reserved
        .word 1650515229 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word sprites_BaseSpriteSayRenderer_draw__P2238_nochk@fn
        .word sprites_BaseSpriteSayRenderer_update__P2239_nochk@fn
        .word sprites_BaseSpriteSayRenderer_destroy__P2240_nochk@fn
        .balign 4
sprites_BaseSpriteSayRenderer__C2236_IfaceVT:
  .short 40, 22, 20, 58, 16, 22, 36, 42, 8, 6, 4, 2
  .short 339, 0 ; text
  .word 4
  .short 145, 0 ; fgColor
  .word 8
  .short 73, 0 ; bgColor
  .word 12
  .short 127, 2 ; draw
  .word sprites_BaseSpriteSayRenderer_draw__P2238_args@fn
  .short 356, 2 ; update
  .word sprites_BaseSpriteSayRenderer_update__P2239_args@fn
  .short 121, 2 ; destroy
  .word sprites_BaseSpriteSayRenderer_destroy__P2240_args@fn
  .word 0, 0 ; the end
.balign 4
.object _pxt_iface_member_names
_pxt_iface_member_names:
    .word 384
    .word _str2039  ; 0 .
    .word _str2040  ; 1 .__draw
    .word _str2041  ; 2 .__drawCore
    .word _str2042  ; 3 .__preUpdate
    .word _str2043  ; 4 .__update
    .word _str2044  ; 5 .__visible
    .word _str2045  ; 6 ._action
    .word _str2046  ; 7 ._ax
    .word _str2047  ; 8 ._ay
    .word _str2048  ; 9 ._col
    .word _str2049  ; 10 ._connected
    .word _str2050  ; 11 ._controlledSprites
    .word _str2051  ; 12 ._data
    .word _str2052  ; 13 ._destroyCore
    .word _str2053  ; 14 ._dt
    .word _str2054  ; 15 ._factory
    .word _str2055  ; 16 ._fx
    .word _str2056  ; 17 ._fy
    .word _str2057  ; 18 ._height
    .word _str2058  ; 19 ._hitbox
    .word _str2059  ; 20 ._id
    .word _str2060  ; 21 ._image
    .word _str2061  ; 22 ._kind
    .word _str2062  ; 23 ._kindsOverlappedWith
    .word _str2063  ; 24 ._lastUpdatedSpriteX
    .word _str2064  ; 25 ._lastUpdatedSpriteY
    .word _str2065  ; 26 ._lastX
    .word _str2066  ; 27 ._lastY
    .word _str2067  ; 28 ._layer
    .word _str2068  ; 29 ._layers
    .word _str2069  ; 30 ._map
    .word _str2070  ; 31 ._millis
    .word _str2071  ; 32 ._obstacles
    .word _str2072  ; 33 ._offsetX
    .word _str2073  ; 34 ._offsetY
    .word _str2074  ; 35 ._overlappers
    .word _str2075  ; 36 ._owner
    .word _str2076  ; 37 ._player
    .word _str2077  ; 38 ._pressed
    .word _str2078  ; 39 ._pressedElasped
    .word _str2079  ; 40 ._prune
    .word _str2080  ; 41 ._repeatCount
    .word _str2081  ; 42 ._row
    .word _str2082  ; 43 ._scale
    .word _str2083  ; 44 ._sprites
    .word _str2084  ; 45 ._sx
    .word _str2085  ; 46 ._sy
    .word _str2086  ; 47 ._text
    .word _str2087  ; 48 ._update
    .word _str2088  ; 49 ._vx
    .word _str2089  ; 50 ._vy
    .word _str2090  ; 51 ._width
    .word _str2091  ; 52 ._x
    .word _str2092  ; 53 ._y
    .word _str2093  ; 54 ._z
    .word _str2094  ; 55 .action
    .word _str2095  ; 56 .activeCard
    .word _str2096  ; 57 .add
    .word _str2097  ; 58 .addShape
    .word _str2098  ; 59 .addSprite
    .word _str2099  ; 60 .alignX
    .word _str2100  ; 61 .alignY
    .word _str2101  ; 62 .allSprites
    .word _str2102  ; 63 .analog
    .word _str2103  ; 64 .anchor
    .word _str2104  ; 65 .applyTo
    .word _str2105  ; 66 .areaHeight
    .word _str2106  ; 67 .areaWidth
    .word _str2107  ; 68 .ax
    .word _str2108  ; 69 .ay
    .word _str2109  ; 70 .background
    .word _str2110  ; 71 .basicCard
    .word _str2111  ; 72 .bg
    .word _str2112  ; 73 .bgColor
    .word _str2113  ; 74 .borderColor
    .word _str2114  ; 75 .borderWidth
    .word _str2115  ; 76 .bottom
    .word _str2116  ; 77 .buckets
    .word _str2117  ; 78 .buf
    .word _str2118  ; 79 .button
    .word _str2119  ; 80 .buttonEventHandlers
    .word _str2120  ; 81 .buttons
    .word _str2121  ; 82 .cachedTileView
    .word _str2122  ; 83 .cachedVx
    .word _str2123  ; 84 .cachedVy
    .word _str2124  ; 85 .calcDimensionalHash
    .word _str2125  ; 86 .callback
    .word _str2126  ; 87 .camera
    .word _str2127  ; 88 .canResolveClipping
    .word _str2128  ; 89 .card
    .word _str2129  ; 90 .cardSpacing
    .word _str2130  ; 91 .cardWidth
    .word _str2131  ; 92 .cardsPerRow
    .word _str2132  ; 93 .cardsTop
    .word _str2133  ; 94 .cellHeight
    .word _str2134  ; 95 .cellWidth
    .word _str2135  ; 96 .change
    .word _str2136  ; 97 .charHeight
    .word _str2137  ; 98 .charWidth
    .word _str2138  ; 99 .clear
    .word _str2139  ; 100 .clearObstacles
    .word _str2140  ; 101 .collisionHandlers
    .word _str2141  ; 102 .color
    .word _str2142  ; 103 .column
    .word _str2143  ; 104 .columnCount
    .word _str2144  ; 105 .condition
    .word _str2145  ; 106 .connected
    .word _str2146  ; 107 .constrain
    .word _str2147  ; 108 .contains
    .word _str2148  ; 109 .controlledSprites
    .word _str2149  ; 110 .controllerConnectionState
    .word _str2150  ; 111 .createMovingSprite
    .word _str2151  ; 112 .createParticle
    .word _str2152  ; 113 .createdHandlers
    .word _str2153  ; 114 .data
    .word _str2154  ; 115 .decode
    .word _str2155  ; 116 .decoder
    .word _str2156  ; 117 .defaultLifespan
    .word _str2157  ; 118 .defaultRate
    .word _str2158  ; 119 .deltaTime
    .word _str2159  ; 120 .deltaTimeMillis
    .word _str2160  ; 121 .destroy
    .word _str2161  ; 122 .destroyHandler
    .word _str2162  ; 123 .destroyedHandlers
    .word _str2163  ; 124 .dispose
    .word _str2164  ; 125 .distance
    .word _str29  ; 126 .down
    .word _str2165  ; 127 .draw
    .word _str2166  ; 128 .drawDebug
    .word _str2167  ; 129 .drawOffsetX
    .word _str2168  ; 130 .drawOffsetY
    .word _str2169  ; 131 .drawParticle
    .word _str2170  ; 132 .drawSay
    .word _str2171  ; 133 .drawSprite
    .word _str2172  ; 134 .drawText
    .word _str2173  ; 135 .dx
    .word _str2174  ; 136 .dy
    .word _str2175  ; 137 .effect
    .word _str2176  ; 138 .effectSetByUser
    .word _str2177  ; 139 .eid
    .word _str2178  ; 140 .enabled
    .word _str2179  ; 141 .event
    .word _str2180  ; 142 .eventContext
    .word _str2181  ; 143 .fastRandom
    .word _str2182  ; 144 .fg
    .word _str2183  ; 145 .fgColor
    .word _str2184  ; 146 .flags
    .word _str2185  ; 147 .followingSprites
    .word _str2186  ; 148 .frameCallbacks
    .word _str2187  ; 149 .frameWorker
    .word _str2188  ; 150 .framesInSample
    .word _str2189  ; 151 .fx
    .word _str2190  ; 152 .fy
    .word _str2191  ; 153 .galois
    .word _str2192  ; 154 .gameForeverHandlers
    .word _str2193  ; 155 .generator
    .word _str2194  ; 156 .getObstacle
    .word _str2195  ; 157 .getOrCreateHandlerForEvent
    .word _str2196  ; 158 .getText
    .word _str2197  ; 159 .getTile
    .word _str2198  ; 160 .getTileImage
    .word _str2199  ; 161 .getTileIndex
    .word _str2200  ; 162 .handler
    .word _str2201  ; 163 .handlerState
    .word _str2202  ; 164 .handlers
    .word _str2203  ; 165 .hash
    .word _str2204  ; 166 .head
    .word _str2205  ; 167 .headerFont
    .word _str2206  ; 168 .headerText
    .word _str2207  ; 169 .height
    .word _str2208  ; 170 .icon
    .word _str2209  ; 171 .iconImage
    .word _str2210  ; 172 .id
    .word _str2211  ; 173 .idleCallbacks
    .word _str2212  ; 174 .image
    .word _str2213  ; 175 .img
    .word _str2214  ; 176 .infoFont
    .word _str2215  ; 177 .infoTop
    .word _str2216  ; 178 .init
    .word _str2217  ; 179 .insertAABB
    .word _str2218  ; 180 .insertAtKey
    .word _str2219  ; 181 .isObstacle
    .word _str2220  ; 182 .isOnWall
    .word _str2221  ; 183 .isOutOfScreen
    .word _str2222  ; 184 .isOutsideMap
    .word _str2223  ; 185 .isPressed
    .word _str2224  ; 186 .isScaled
    .word _str2225  ; 187 .isStatic
    .word _str2226  ; 188 .isUpdated
    .word _str2227  ; 189 .isValid
    .word _str2228  ; 190 .isWall
    .word _str2229  ; 191 .key
    .word _str2230  ; 192 .kind
    .word _str2231  ; 193 .lastPerfDump
    .word _str2232  ; 194 .layer
    .word _str2233  ; 195 .layers
    .word _str2234  ; 196 .left
    .word _str2235  ; 197 .length
    .word _str2236  ; 198 .lfsr
    .word _str2237  ; 199 .lifespan
    .word _str2238  ; 200 .lock
    .word _str2239  ; 201 .loseEffect
    .word _str2240  ; 202 .loseMessage
    .word _str2241  ; 203 .loseSound
    .word _str2242  ; 204 .loseSoundLooping
    .word _str2243  ; 205 .map
    .word _str2244  ; 206 .maxFontHeight
    .word _str2245  ; 207 .maxLifespan
    .word _str2246  ; 208 .maxNegativeVelocity
    .word _str2247  ; 209 .maxSingleStep
    .word _str2248  ; 210 .maxSpeed
    .word _str2249  ; 211 .maxStep
    .word _str2250  ; 212 .maxVelocity
    .word _str2251  ; 213 .melody
    .word _str2252  ; 214 .mergeAtKey
    .word _str2253  ; 215 .messageSetByUser
    .word _str2254  ; 216 .millis
    .word _str2255  ; 217 .minAngle
    .word _str2256  ; 218 .minLifespan
    .word _str2257  ; 219 .minSingleStep
    .word _str2258  ; 220 .minStep
    .word _str2259  ; 221 .move
    .word _str2260  ; 222 .moveSprite
    .word _str2261  ; 223 .multiplier
    .word _str2262  ; 224 .neighbors
    .word _str2263  ; 225 .next
    .word _str2264  ; 226 .offsetX
    .word _str2265  ; 227 .offsetY
    .word _str2266  ; 228 .onEvent
    .word _str2267  ; 229 .onUpdate
    .word _str2268  ; 230 .once
    .word _str2269  ; 231 .options
    .word _str2270  ; 232 .order
    .word _str2271  ; 233 .outlineColor
    .word _str2272  ; 234 .outlineWidth
    .word _str2273  ; 235 .overlapHandlers
    .word _str2274  ; 236 .overlapMap
    .word _str2275  ; 237 .overlaps
    .word _str2276  ; 238 .overlapsWith
    .word _str2277  ; 239 .ox
    .word _str2278  ; 240 .oy
    .word _str2279  ; 241 .pFlags
    .word _str2280  ; 242 .padding
    .word _str2281  ; 243 .parent
    .word _str2282  ; 244 .particleSources
    .word _str2283  ; 245 .period
    .word _str2284  ; 246 .physicsEngine
    .word _str2285  ; 247 .pickRandom
    .word _str2286  ; 248 .playerIndex
    .word _str2287  ; 249 .position
    .word _str2288  ; 250 .preferredDelay
    .word _str2289  ; 251 .pressureLevel
    .word _str2290  ; 252 .prevTimeMillis
    .word _str2291  ; 253 .previousScene
    .word _str2292  ; 254 .priority
    .word _str2293  ; 255 .raiseButtonDown
    .word _str2294  ; 256 .raiseButtonRepeat
    .word _str2295  ; 257 .raiseButtonUp
    .word _str2296  ; 258 .randomRange
    .word _str2297  ; 259 .readString
    .word _str2298  ; 260 .recalcSize
    .word _str2299  ; 261 .register
    .word _str2300  ; 262 .registerFrameCallbacks
    .word _str2301  ; 263 .registerFrameHandler
    .word _str2302  ; 264 .registerHandler
    .word _str2303  ; 265 .registerObstacle
    .word _str2304  ; 266 .remove
    .word _str2305  ; 267 .removeSprite
    .word _str2306  ; 268 .render
    .word _str2307  ; 269 .renderable
    .word _str2308  ; 270 .repeatDelay
    .word _str2309  ; 271 .repeatInterval
    .word _str2310  ; 272 .repeatX
    .word _str2311  ; 273 .repeatY
    .word _str2312  ; 274 .resetHitbox
    .word _str2313  ; 275 .resizeBuckets
    .word _str2314  ; 276 .right
    .word _str2315  ; 277 .row
    .word _str2316  ; 278 .rowCount
    .word _str2317  ; 279 .runButtonEvents
    .word _str2318  ; 280 .runCallbacks
    .word _str2319  ; 281 .runningCallbacks
    .word _str2320  ; 282 .s
    .word _str2321  ; 283 .sayEndTime
    .word _str2322  ; 284 .sayRenderer
    .word _str2323  ; 285 .scale
    .word _str2324  ; 286 .scene
    .word _str2325  ; 287 .sceneDefaultRate
    .word _str2326  ; 288 .scoringType
    .word _str2327  ; 289 .scoringTypeSetByUser
    .word _str2328  ; 290 .screenEdgeCollisions
    .word _str2329  ; 291 .scrollOffset
    .word _str2330  ; 292 .scrollRow
    .word _str2331  ; 293 .scrollTarget
    .word _str2332  ; 294 .seed
    .word _str2333  ; 295 .selectedCard
    .word _str2334  ; 296 .selection
    .word _str2335  ; 297 .serialDevice
    .word _str2336  ; 298 .setAcceleration
    .word _str2337  ; 299 .setAnchor
    .word _str2338  ; 300 .setDirection
    .word _str2339  ; 301 .setFactory
    .word _str2340  ; 302 .setFlag
    .word _str2341  ; 303 .setHitbox
    .word _str2342  ; 304 .setImage
    .word _str2343  ; 305 .setKind
    .word _str2344  ; 306 .setOffset
    .word _str2345  ; 307 .setPosition
    .word _str2346  ; 308 .setPressed
    .word _str2347  ; 309 .setRate
    .word _str2348  ; 310 .setRelativeToCamera
    .word _str2349  ; 311 .setSelection
    .word _str2350  ; 312 .setSpeed
    .word _str2351  ; 313 .setState
    .word _str2352  ; 314 .setText
    .word _str2353  ; 315 .setTheme
    .word _str2354  ; 316 .shakeAmplitude
    .word _str2355  ; 317 .shakeDuration
    .word _str2356  ; 318 .shakeStartTime
    .word _str2357  ; 319 .shouldBeVisible
    .word _str2358  ; 320 .show
    .word _str2359  ; 321 .soundSetByUser
    .word _str2360  ; 322 .source
    .word _str2361  ; 323 .sourceFactory
    .word _str2362  ; 324 .sources
    .word _str2363  ; 325 .speed
    .word _str2364  ; 326 .spread
    .word _str2365  ; 327 .sprite
    .word _str2366  ; 328 .spriteCollisions
    .word _str2367  ; 329 .spriteNextId
    .word _str2368  ; 330 .sprites
    .word _str2369  ; 331 .spritesByKind
    .word _str2370  ; 332 .src
    .word _str2371  ; 333 .start
    .word _str2372  ; 334 .state
    .word _str2373  ; 335 .stopped
    .word _str2374  ; 336 .sx
    .word _str2375  ; 337 .sy
    .word _str2376  ; 338 .system
    .word _str2377  ; 339 .text
    .word _str2378  ; 340 .theme
    .word _str2379  ; 341 .tileIndex
    .word _str2380  ; 342 .tileMap
    .word _str2381  ; 343 .tileOverlapHandlers
    .word _str2382  ; 344 .tileSet
    .word _str2383  ; 345 .tilemapCollisions
    .word _str2384  ; 346 .tilemapOverlaps
    .word _str2385  ; 347 .tileset
    .word _str2386  ; 348 .timeInSample
    .word _str2387  ; 349 .timeOut
    .word _str2388  ; 350 .timer
    .word _str2389  ; 351 .times
    .word _str2390  ; 352 .toString
    .word _str2391  ; 353 .top
    .word _str2392  ; 354 .unregister
    .word _str30  ; 355 .up
    .word _str2393  ; 356 .update
    .word _str2394  ; 357 .updateCard
    .word _str2395  ; 358 .updateIfInvalid
    .word _str2396  ; 359 .updateParticle
    .word _str2397  ; 360 .updateScrollTarget
    .word _str2398  ; 361 .user
    .word _str2399  ; 362 .value
    .word _str2400  ; 363 .vid
    .word _str2401  ; 364 .vx
    .word _str2402  ; 365 .vy
    .word _str2403  ; 366 .wallCollisionHandlers
    .word _str2404  ; 367 .width
    .word _str2405  ; 368 .winEffect
    .word _str2406  ; 369 .winMessage
    .word _str2407  ; 370 .winMessageMultiplayer
    .word _str2408  ; 371 .winSound
    .word _str2409  ; 372 .winSoundLooping
    .word _str2410  ; 373 .writeLine
    .word _str2411  ; 374 .writeString
    .word _str2412  ; 375 .x
    .word _str2413  ; 376 .xOffset
    .word _str2414  ; 377 .xRange
    .word _str2415  ; 378 .xStep
    .word _str2416  ; 379 .y
    .word _str2417  ; 380 .yOffset
    .word _str2418  ; 381 .yRange
    .word _str2419  ; 382 .yStep
    .word _str2420  ; 383 .z
    .word 0
_vtables_end:
.balign 4
.object _pxt_config_data
_pxt_config_data:
    .word 4, 1054  ; PIN_BTN_A=1054
    .word 5, 1055  ; PIN_BTN_B=1055
    .word 32, 17  ; PIN_DISPLAY_SCK=17
    .word 33, 1  ; PIN_DISPLAY_MISO=1
    .word 34, 13  ; PIN_DISPLAY_MOSI=13
    .word 36, 10  ; PIN_DISPLAY_DC=10
    .word 37, 160  ; DISPLAY_WIDTH=160
    .word 38, 128  ; DISPLAY_HEIGHT=128
    .word 39, 128  ; DISPLAY_CFG0=128
    .word 40, 1539  ; DISPLAY_CFG1=1539
    .word 41, 8  ; DISPLAY_CFG2=8
    .word 43, 34  ; PIN_DISPLAY_RST=34
    .word 44, 26  ; PIN_DISPLAY_BL=26
    .word 47, 1050  ; PIN_BTN_LEFT=1050
    .word 48, 1053  ; PIN_BTN_RIGHT=1053
    .word 49, 1051  ; PIN_BTN_UP=1051
    .word 50, 1052  ; PIN_BTN_DOWN=1052
    .word 51, 1056  ; PIN_BTN_MENU=1056
    .word 60, 12  ; PIN_JACK_TX=12
    .word 65, 0  ; PIN_JACK_SND=0
    .word 71, 9  ; PIN_BTNMX_LATCH=9
    .word 72, 32  ; PIN_BTNMX_CLOCK=32
    .word 73, 1  ; PIN_BTNMX_DATA=1
    .word 78, 4242  ; DISPLAY_TYPE=4242
    .word 0
            .balign 4
            .object _str2039
_str2039:
 .word pxt::string_inline_ascii_vt
    .short 0
    .string ""
            .balign 4
            .object _str2040
_str2040:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "__draw"
            .balign 4
            .object _str2041
_str2041:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "__drawCore"
            .balign 4
            .object _str2042
_str2042:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "__preUpdate"
            .balign 4
            .object _str2043
_str2043:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "__update"
            .balign 4
            .object _str2044
_str2044:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "__visible"
            .balign 4
            .object _str2045
_str2045:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_action"
            .balign 4
            .object _str2046
_str2046:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_ax"
            .balign 4
            .object _str2047
_str2047:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_ay"
            .balign 4
            .object _str2048
_str2048:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "_col"
            .balign 4
            .object _str2049
_str2049:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_connected"
            .balign 4
            .object _str2050
_str2050:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "_controlledSprites"
            .balign 4
            .object _str2051
_str2051:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_data"
            .balign 4
            .object _str2052
_str2052:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_destroyCore"
            .balign 4
            .object _str2053
_str2053:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_dt"
            .balign 4
            .object _str2054
_str2054:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_factory"
            .balign 4
            .object _str2055
_str2055:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_fx"
            .balign 4
            .object _str2056
_str2056:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_fy"
            .balign 4
            .object _str2057
_str2057:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_height"
            .balign 4
            .object _str2058
_str2058:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_hitbox"
            .balign 4
            .object _str2059
_str2059:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_id"
            .balign 4
            .object _str2060
_str2060:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_image"
            .balign 4
            .object _str2061
_str2061:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_kind"
            .balign 4
            .object _str2062
_str2062:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "_kindsOverlappedWith"
            .balign 4
            .object _str2063
_str2063:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "_lastUpdatedSpriteX"
            .balign 4
            .object _str2064
_str2064:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "_lastUpdatedSpriteY"
            .balign 4
            .object _str2065
_str2065:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_lastX"
            .balign 4
            .object _str2066
_str2066:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_lastY"
            .balign 4
            .object _str2067
_str2067:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_layer"
            .balign 4
            .object _str2068
_str2068:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_layers"
            .balign 4
            .object _str2069
_str2069:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "_map"
            .balign 4
            .object _str2070
_str2070:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_millis"
            .balign 4
            .object _str2071
_str2071:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_obstacles"
            .balign 4
            .object _str2072
_str2072:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_offsetX"
            .balign 4
            .object _str2073
_str2073:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_offsetY"
            .balign 4
            .object _str2074
_str2074:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_overlappers"
            .balign 4
            .object _str2075
_str2075:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_owner"
            .balign 4
            .object _str2076
_str2076:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_player"
            .balign 4
            .object _str2077
_str2077:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_pressed"
            .balign 4
            .object _str2078
_str2078:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "_pressedElasped"
            .balign 4
            .object _str2079
_str2079:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_prune"
            .balign 4
            .object _str2080
_str2080:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_repeatCount"
            .balign 4
            .object _str2081
_str2081:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "_row"
            .balign 4
            .object _str2082
_str2082:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_scale"
            .balign 4
            .object _str2083
_str2083:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_sprites"
            .balign 4
            .object _str2084
_str2084:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_sx"
            .balign 4
            .object _str2085
_str2085:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_sy"
            .balign 4
            .object _str2086
_str2086:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_text"
            .balign 4
            .object _str2087
_str2087:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_update"
            .balign 4
            .object _str2088
_str2088:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_vx"
            .balign 4
            .object _str2089
_str2089:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_vy"
            .balign 4
            .object _str2090
_str2090:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_width"
            .balign 4
            .object _str2091
_str2091:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "_x"
            .balign 4
            .object _str2092
_str2092:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "_y"
            .balign 4
            .object _str2093
_str2093:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "_z"
            .balign 4
            .object _str2094
_str2094:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "action"
            .balign 4
            .object _str2095
_str2095:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "activeCard"
            .balign 4
            .object _str2096
_str2096:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "add"
            .balign 4
            .object _str2097
_str2097:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "addShape"
            .balign 4
            .object _str2098
_str2098:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "addSprite"
            .balign 4
            .object _str2099
_str2099:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "alignX"
            .balign 4
            .object _str2100
_str2100:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "alignY"
            .balign 4
            .object _str2101
_str2101:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "allSprites"
            .balign 4
            .object _str2102
_str2102:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "analog"
            .balign 4
            .object _str2103
_str2103:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "anchor"
            .balign 4
            .object _str2104
_str2104:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "applyTo"
            .balign 4
            .object _str2105
_str2105:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "areaHeight"
            .balign 4
            .object _str2106
_str2106:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "areaWidth"
            .balign 4
            .object _str2107
_str2107:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "ax"
            .balign 4
            .object _str2108
_str2108:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "ay"
            .balign 4
            .object _str2109
_str2109:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "background"
            .balign 4
            .object _str2110
_str2110:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "basicCard"
            .balign 4
            .object _str2111
_str2111:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "bg"
            .balign 4
            .object _str2112
_str2112:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "bgColor"
            .balign 4
            .object _str2113
_str2113:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "borderColor"
            .balign 4
            .object _str2114
_str2114:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "borderWidth"
            .balign 4
            .object _str2115
_str2115:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "bottom"
            .balign 4
            .object _str2116
_str2116:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "buckets"
            .balign 4
            .object _str2117
_str2117:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "buf"
            .balign 4
            .object _str2118
_str2118:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "button"
            .balign 4
            .object _str2119
_str2119:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "buttonEventHandlers"
            .balign 4
            .object _str2120
_str2120:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "buttons"
            .balign 4
            .object _str2121
_str2121:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "cachedTileView"
            .balign 4
            .object _str2122
_str2122:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "cachedVx"
            .balign 4
            .object _str2123
_str2123:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "cachedVy"
            .balign 4
            .object _str2124
_str2124:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "calcDimensionalHash"
            .balign 4
            .object _str2125
_str2125:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "callback"
            .balign 4
            .object _str2126
_str2126:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "camera"
            .balign 4
            .object _str2127
_str2127:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "canResolveClipping"
            .balign 4
            .object _str2128
_str2128:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "card"
            .balign 4
            .object _str2129
_str2129:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "cardSpacing"
            .balign 4
            .object _str2130
_str2130:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "cardWidth"
            .balign 4
            .object _str2131
_str2131:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "cardsPerRow"
            .balign 4
            .object _str2132
_str2132:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "cardsTop"
            .balign 4
            .object _str2133
_str2133:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "cellHeight"
            .balign 4
            .object _str2134
_str2134:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "cellWidth"
            .balign 4
            .object _str2135
_str2135:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "change"
            .balign 4
            .object _str2136
_str2136:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "charHeight"
            .balign 4
            .object _str2137
_str2137:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "charWidth"
            .balign 4
            .object _str2138
_str2138:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "clear"
            .balign 4
            .object _str2139
_str2139:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "clearObstacles"
            .balign 4
            .object _str2140
_str2140:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "collisionHandlers"
            .balign 4
            .object _str2141
_str2141:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "color"
            .balign 4
            .object _str2142
_str2142:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "column"
            .balign 4
            .object _str2143
_str2143:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "columnCount"
            .balign 4
            .object _str2144
_str2144:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "condition"
            .balign 4
            .object _str2145
_str2145:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "connected"
            .balign 4
            .object _str2146
_str2146:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "constrain"
            .balign 4
            .object _str2147
_str2147:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "contains"
            .balign 4
            .object _str2148
_str2148:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "controlledSprites"
            .balign 4
            .object _str2149
_str2149:
 .word pxt::string_inline_ascii_vt
    .short 25
    .string "controllerConnectionState"
            .balign 4
            .object _str2150
_str2150:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "createMovingSprite"
            .balign 4
            .object _str2151
_str2151:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "createParticle"
            .balign 4
            .object _str2152
_str2152:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "createdHandlers"
            .balign 4
            .object _str2153
_str2153:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "data"
            .balign 4
            .object _str2154
_str2154:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "decode"
            .balign 4
            .object _str2155
_str2155:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "decoder"
            .balign 4
            .object _str2156
_str2156:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "defaultLifespan"
            .balign 4
            .object _str2157
_str2157:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "defaultRate"
            .balign 4
            .object _str2158
_str2158:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "deltaTime"
            .balign 4
            .object _str2159
_str2159:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "deltaTimeMillis"
            .balign 4
            .object _str2160
_str2160:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "destroy"
            .balign 4
            .object _str2161
_str2161:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "destroyHandler"
            .balign 4
            .object _str2162
_str2162:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "destroyedHandlers"
            .balign 4
            .object _str2163
_str2163:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "dispose"
            .balign 4
            .object _str2164
_str2164:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "distance"
            .balign 4
            .object _str29
_str29:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "down"
            .balign 4
            .object _str2165
_str2165:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "draw"
            .balign 4
            .object _str2166
_str2166:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "drawDebug"
            .balign 4
            .object _str2167
_str2167:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "drawOffsetX"
            .balign 4
            .object _str2168
_str2168:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "drawOffsetY"
            .balign 4
            .object _str2169
_str2169:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "drawParticle"
            .balign 4
            .object _str2170
_str2170:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "drawSay"
            .balign 4
            .object _str2171
_str2171:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "drawSprite"
            .balign 4
            .object _str2172
_str2172:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "drawText"
            .balign 4
            .object _str2173
_str2173:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "dx"
            .balign 4
            .object _str2174
_str2174:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "dy"
            .balign 4
            .object _str2175
_str2175:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "effect"
            .balign 4
            .object _str2176
_str2176:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "effectSetByUser"
            .balign 4
            .object _str2177
_str2177:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "eid"
            .balign 4
            .object _str2178
_str2178:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "enabled"
            .balign 4
            .object _str2179
_str2179:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "event"
            .balign 4
            .object _str2180
_str2180:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "eventContext"
            .balign 4
            .object _str2181
_str2181:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "fastRandom"
            .balign 4
            .object _str2182
_str2182:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "fg"
            .balign 4
            .object _str2183
_str2183:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "fgColor"
            .balign 4
            .object _str2184
_str2184:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "flags"
            .balign 4
            .object _str2185
_str2185:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "followingSprites"
            .balign 4
            .object _str2186
_str2186:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "frameCallbacks"
            .balign 4
            .object _str2187
_str2187:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "frameWorker"
            .balign 4
            .object _str2188
_str2188:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "framesInSample"
            .balign 4
            .object _str2189
_str2189:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "fx"
            .balign 4
            .object _str2190
_str2190:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "fy"
            .balign 4
            .object _str2191
_str2191:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "galois"
            .balign 4
            .object _str2192
_str2192:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "gameForeverHandlers"
            .balign 4
            .object _str2193
_str2193:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "generator"
            .balign 4
            .object _str2194
_str2194:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "getObstacle"
            .balign 4
            .object _str2195
_str2195:
 .word pxt::string_inline_ascii_vt
    .short 26
    .string "getOrCreateHandlerForEvent"
            .balign 4
            .object _str2196
_str2196:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "getText"
            .balign 4
            .object _str2197
_str2197:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "getTile"
            .balign 4
            .object _str2198
_str2198:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "getTileImage"
            .balign 4
            .object _str2199
_str2199:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "getTileIndex"
            .balign 4
            .object _str2200
_str2200:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "handler"
            .balign 4
            .object _str2201
_str2201:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "handlerState"
            .balign 4
            .object _str2202
_str2202:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "handlers"
            .balign 4
            .object _str2203
_str2203:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "hash"
            .balign 4
            .object _str2204
_str2204:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "head"
            .balign 4
            .object _str2205
_str2205:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "headerFont"
            .balign 4
            .object _str2206
_str2206:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "headerText"
            .balign 4
            .object _str2207
_str2207:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "height"
            .balign 4
            .object _str2208
_str2208:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "icon"
            .balign 4
            .object _str2209
_str2209:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "iconImage"
            .balign 4
            .object _str2210
_str2210:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "id"
            .balign 4
            .object _str2211
_str2211:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "idleCallbacks"
            .balign 4
            .object _str2212
_str2212:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "image"
            .balign 4
            .object _str2213
_str2213:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "img"
            .balign 4
            .object _str2214
_str2214:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "infoFont"
            .balign 4
            .object _str2215
_str2215:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "infoTop"
            .balign 4
            .object _str2216
_str2216:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "init"
            .balign 4
            .object _str2217
_str2217:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "insertAABB"
            .balign 4
            .object _str2218
_str2218:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "insertAtKey"
            .balign 4
            .object _str2219
_str2219:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "isObstacle"
            .balign 4
            .object _str2220
_str2220:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isOnWall"
            .balign 4
            .object _str2221
_str2221:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "isOutOfScreen"
            .balign 4
            .object _str2222
_str2222:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "isOutsideMap"
            .balign 4
            .object _str2223
_str2223:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "isPressed"
            .balign 4
            .object _str2224
_str2224:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isScaled"
            .balign 4
            .object _str2225
_str2225:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isStatic"
            .balign 4
            .object _str2226
_str2226:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "isUpdated"
            .balign 4
            .object _str2227
_str2227:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isValid"
            .balign 4
            .object _str2228
_str2228:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "isWall"
            .balign 4
            .object _str2229
_str2229:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "key"
            .balign 4
            .object _str2230
_str2230:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "kind"
            .balign 4
            .object _str2231
_str2231:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "lastPerfDump"
            .balign 4
            .object _str2232
_str2232:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "layer"
            .balign 4
            .object _str2233
_str2233:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "layers"
            .balign 4
            .object _str2234
_str2234:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "left"
            .balign 4
            .object _str2235
_str2235:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "length"
            .balign 4
            .object _str2236
_str2236:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "lfsr"
            .balign 4
            .object _str2237
_str2237:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "lifespan"
            .balign 4
            .object _str2238
_str2238:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "lock"
            .balign 4
            .object _str2239
_str2239:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "loseEffect"
            .balign 4
            .object _str2240
_str2240:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "loseMessage"
            .balign 4
            .object _str2241
_str2241:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "loseSound"
            .balign 4
            .object _str2242
_str2242:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "loseSoundLooping"
            .balign 4
            .object _str2243
_str2243:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "map"
            .balign 4
            .object _str2244
_str2244:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "maxFontHeight"
            .balign 4
            .object _str2245
_str2245:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "maxLifespan"
            .balign 4
            .object _str2246
_str2246:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "maxNegativeVelocity"
            .balign 4
            .object _str2247
_str2247:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "maxSingleStep"
            .balign 4
            .object _str2248
_str2248:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "maxSpeed"
            .balign 4
            .object _str2249
_str2249:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "maxStep"
            .balign 4
            .object _str2250
_str2250:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "maxVelocity"
            .balign 4
            .object _str2251
_str2251:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "melody"
            .balign 4
            .object _str2252
_str2252:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "mergeAtKey"
            .balign 4
            .object _str2253
_str2253:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "messageSetByUser"
            .balign 4
            .object _str2254
_str2254:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "millis"
            .balign 4
            .object _str2255
_str2255:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "minAngle"
            .balign 4
            .object _str2256
_str2256:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "minLifespan"
            .balign 4
            .object _str2257
_str2257:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "minSingleStep"
            .balign 4
            .object _str2258
_str2258:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "minStep"
            .balign 4
            .object _str2259
_str2259:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "move"
            .balign 4
            .object _str2260
_str2260:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "moveSprite"
            .balign 4
            .object _str2261
_str2261:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "multiplier"
            .balign 4
            .object _str2262
_str2262:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "neighbors"
            .balign 4
            .object _str2263
_str2263:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "next"
            .balign 4
            .object _str2264
_str2264:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "offsetX"
            .balign 4
            .object _str2265
_str2265:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "offsetY"
            .balign 4
            .object _str2266
_str2266:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "onEvent"
            .balign 4
            .object _str2267
_str2267:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "onUpdate"
            .balign 4
            .object _str2268
_str2268:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "once"
            .balign 4
            .object _str2269
_str2269:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "options"
            .balign 4
            .object _str2270
_str2270:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "order"
            .balign 4
            .object _str2271
_str2271:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "outlineColor"
            .balign 4
            .object _str2272
_str2272:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "outlineWidth"
            .balign 4
            .object _str2273
_str2273:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "overlapHandlers"
            .balign 4
            .object _str2274
_str2274:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "overlapMap"
            .balign 4
            .object _str2275
_str2275:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "overlaps"
            .balign 4
            .object _str2276
_str2276:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "overlapsWith"
            .balign 4
            .object _str2277
_str2277:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "ox"
            .balign 4
            .object _str2278
_str2278:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "oy"
            .balign 4
            .object _str2279
_str2279:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "pFlags"
            .balign 4
            .object _str2280
_str2280:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "padding"
            .balign 4
            .object _str2281
_str2281:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "parent"
            .balign 4
            .object _str2282
_str2282:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "particleSources"
            .balign 4
            .object _str2283
_str2283:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "period"
            .balign 4
            .object _str2284
_str2284:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "physicsEngine"
            .balign 4
            .object _str2285
_str2285:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "pickRandom"
            .balign 4
            .object _str2286
_str2286:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "playerIndex"
            .balign 4
            .object _str2287
_str2287:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "position"
            .balign 4
            .object _str2288
_str2288:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "preferredDelay"
            .balign 4
            .object _str2289
_str2289:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "pressureLevel"
            .balign 4
            .object _str2290
_str2290:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "prevTimeMillis"
            .balign 4
            .object _str2291
_str2291:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "previousScene"
            .balign 4
            .object _str2292
_str2292:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "priority"
            .balign 4
            .object _str2293
_str2293:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "raiseButtonDown"
            .balign 4
            .object _str2294
_str2294:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "raiseButtonRepeat"
            .balign 4
            .object _str2295
_str2295:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "raiseButtonUp"
            .balign 4
            .object _str2296
_str2296:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "randomRange"
            .balign 4
            .object _str2297
_str2297:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "readString"
            .balign 4
            .object _str2298
_str2298:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "recalcSize"
            .balign 4
            .object _str2299
_str2299:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "register"
            .balign 4
            .object _str2300
_str2300:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "registerFrameCallbacks"
            .balign 4
            .object _str2301
_str2301:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "registerFrameHandler"
            .balign 4
            .object _str2302
_str2302:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "registerHandler"
            .balign 4
            .object _str2303
_str2303:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "registerObstacle"
            .balign 4
            .object _str2304
_str2304:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "remove"
            .balign 4
            .object _str2305
_str2305:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "removeSprite"
            .balign 4
            .object _str2306
_str2306:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "render"
            .balign 4
            .object _str2307
_str2307:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "renderable"
            .balign 4
            .object _str2308
_str2308:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "repeatDelay"
            .balign 4
            .object _str2309
_str2309:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "repeatInterval"
            .balign 4
            .object _str2310
_str2310:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "repeatX"
            .balign 4
            .object _str2311
_str2311:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "repeatY"
            .balign 4
            .object _str2312
_str2312:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "resetHitbox"
            .balign 4
            .object _str2313
_str2313:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "resizeBuckets"
            .balign 4
            .object _str2314
_str2314:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "right"
            .balign 4
            .object _str2315
_str2315:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "row"
            .balign 4
            .object _str2316
_str2316:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "rowCount"
            .balign 4
            .object _str2317
_str2317:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "runButtonEvents"
            .balign 4
            .object _str2318
_str2318:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "runCallbacks"
            .balign 4
            .object _str2319
_str2319:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "runningCallbacks"
            .balign 4
            .object _str2320
_str2320:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "s"
            .balign 4
            .object _str2321
_str2321:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "sayEndTime"
            .balign 4
            .object _str2322
_str2322:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "sayRenderer"
            .balign 4
            .object _str2323
_str2323:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "scale"
            .balign 4
            .object _str2324
_str2324:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "scene"
            .balign 4
            .object _str2325
_str2325:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "sceneDefaultRate"
            .balign 4
            .object _str2326
_str2326:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "scoringType"
            .balign 4
            .object _str2327
_str2327:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "scoringTypeSetByUser"
            .balign 4
            .object _str2328
_str2328:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "screenEdgeCollisions"
            .balign 4
            .object _str2329
_str2329:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "scrollOffset"
            .balign 4
            .object _str2330
_str2330:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "scrollRow"
            .balign 4
            .object _str2331
_str2331:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "scrollTarget"
            .balign 4
            .object _str2332
_str2332:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "seed"
            .balign 4
            .object _str2333
_str2333:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "selectedCard"
            .balign 4
            .object _str2334
_str2334:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "selection"
            .balign 4
            .object _str2335
_str2335:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "serialDevice"
            .balign 4
            .object _str2336
_str2336:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "setAcceleration"
            .balign 4
            .object _str2337
_str2337:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setAnchor"
            .balign 4
            .object _str2338
_str2338:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "setDirection"
            .balign 4
            .object _str2339
_str2339:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "setFactory"
            .balign 4
            .object _str2340
_str2340:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setFlag"
            .balign 4
            .object _str2341
_str2341:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setHitbox"
            .balign 4
            .object _str2342
_str2342:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setImage"
            .balign 4
            .object _str2343
_str2343:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setKind"
            .balign 4
            .object _str2344
_str2344:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setOffset"
            .balign 4
            .object _str2345
_str2345:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "setPosition"
            .balign 4
            .object _str2346
_str2346:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "setPressed"
            .balign 4
            .object _str2347
_str2347:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setRate"
            .balign 4
            .object _str2348
_str2348:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "setRelativeToCamera"
            .balign 4
            .object _str2349
_str2349:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "setSelection"
            .balign 4
            .object _str2350
_str2350:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setSpeed"
            .balign 4
            .object _str2351
_str2351:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setState"
            .balign 4
            .object _str2352
_str2352:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setText"
            .balign 4
            .object _str2353
_str2353:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setTheme"
            .balign 4
            .object _str2354
_str2354:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "shakeAmplitude"
            .balign 4
            .object _str2355
_str2355:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "shakeDuration"
            .balign 4
            .object _str2356
_str2356:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "shakeStartTime"
            .balign 4
            .object _str2357
_str2357:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "shouldBeVisible"
            .balign 4
            .object _str2358
_str2358:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "show"
            .balign 4
            .object _str2359
_str2359:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "soundSetByUser"
            .balign 4
            .object _str2360
_str2360:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "source"
            .balign 4
            .object _str2361
_str2361:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "sourceFactory"
            .balign 4
            .object _str2362
_str2362:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "sources"
            .balign 4
            .object _str2363
_str2363:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "speed"
            .balign 4
            .object _str2364
_str2364:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "spread"
            .balign 4
            .object _str2365
_str2365:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "sprite"
            .balign 4
            .object _str2366
_str2366:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "spriteCollisions"
            .balign 4
            .object _str2367
_str2367:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "spriteNextId"
            .balign 4
            .object _str2368
_str2368:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "sprites"
            .balign 4
            .object _str2369
_str2369:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "spritesByKind"
            .balign 4
            .object _str2370
_str2370:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "src"
            .balign 4
            .object _str2371
_str2371:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "start"
            .balign 4
            .object _str2372
_str2372:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "state"
            .balign 4
            .object _str2373
_str2373:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "stopped"
            .balign 4
            .object _str2374
_str2374:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "sx"
            .balign 4
            .object _str2375
_str2375:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "sy"
            .balign 4
            .object _str2376
_str2376:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "system"
            .balign 4
            .object _str2377
_str2377:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "text"
            .balign 4
            .object _str2378
_str2378:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "theme"
            .balign 4
            .object _str2379
_str2379:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "tileIndex"
            .balign 4
            .object _str2380
_str2380:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "tileMap"
            .balign 4
            .object _str2381
_str2381:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "tileOverlapHandlers"
            .balign 4
            .object _str2382
_str2382:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "tileSet"
            .balign 4
            .object _str2383
_str2383:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "tilemapCollisions"
            .balign 4
            .object _str2384
_str2384:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "tilemapOverlaps"
            .balign 4
            .object _str2385
_str2385:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "tileset"
            .balign 4
            .object _str2386
_str2386:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "timeInSample"
            .balign 4
            .object _str2387
_str2387:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "timeOut"
            .balign 4
            .object _str2388
_str2388:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "timer"
            .balign 4
            .object _str2389
_str2389:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "times"
            .balign 4
            .object _str2390
_str2390:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "toString"
            .balign 4
            .object _str2391
_str2391:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "top"
            .balign 4
            .object _str2392
_str2392:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "unregister"
            .balign 4
            .object _str30
_str30:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "up"
            .balign 4
            .object _str2393
_str2393:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "update"
            .balign 4
            .object _str2394
_str2394:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "updateCard"
            .balign 4
            .object _str2395
_str2395:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "updateIfInvalid"
            .balign 4
            .object _str2396
_str2396:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "updateParticle"
            .balign 4
            .object _str2397
_str2397:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "updateScrollTarget"
            .balign 4
            .object _str2398
_str2398:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "user"
            .balign 4
            .object _str2399
_str2399:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "value"
            .balign 4
            .object _str2400
_str2400:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "vid"
            .balign 4
            .object _str2401
_str2401:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "vx"
            .balign 4
            .object _str2402
_str2402:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "vy"
            .balign 4
            .object _str2403
_str2403:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "wallCollisionHandlers"
            .balign 4
            .object _str2404
_str2404:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "width"
            .balign 4
            .object _str2405
_str2405:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "winEffect"
            .balign 4
            .object _str2406
_str2406:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "winMessage"
            .balign 4
            .object _str2407
_str2407:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "winMessageMultiplayer"
            .balign 4
            .object _str2408
_str2408:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "winSound"
            .balign 4
            .object _str2409
_str2409:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "winSoundLooping"
            .balign 4
            .object _str2410
_str2410:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "writeLine"
            .balign 4
            .object _str2411
_str2411:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "writeString"
            .balign 4
            .object _str2412
_str2412:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "x"
            .balign 4
            .object _str2413
_str2413:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "xOffset"
            .balign 4
            .object _str2414
_str2414:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "xRange"
            .balign 4
            .object _str2415
_str2415:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "xStep"
            .balign 4
            .object _str2416
_str2416:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "y"
            .balign 4
            .object _str2417
_str2417:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "yOffset"
            .balign 4
            .object _str2418
_str2418:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "yRange"
            .balign 4
            .object _str2419
_str2419:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "yStep"
            .balign 4
            .object _str2420
_str2420:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "z"
            .balign 4
            .object _str0
_str0:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ","
            .balign 4
            .object _str1
_str1:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\n"
            .balign 4
            .object _str2
_str2:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "string"
            .balign 4
            .object _str3
_str3:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "number"
            .balign 4
            .object _str4
_str4:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "..."
            .balign 4
            .object _str5
_str5:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "[object Object]"
            .balign 4
            .object _str6
_str6:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "[Object]"
            .balign 4
            .object _str7
_str7:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "{"
            .balign 4
            .object _str8
_str8:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "\n    "
            .balign 4
            .object _str9
_str9:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string ": "
            .balign 4
            .object _str10
_str10:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "\n    ..."
            .balign 4
            .object _str11
_str11:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "\n}"
            .balign 4
            .object _str12
_str12:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "fps:"
            .balign 4
            .object _str13
_str13:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "."
            .balign 4
            .object _str14
_str14:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "/100 fps - "
            .balign 4
            .object _str15
_str15:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string " frames ("
            .balign 4
            .object _str16
_str16:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "ms/"
            .balign 4
            .object _str17
_str17:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "ms)"
            .balign 4
            .object _str18
_str18:
 .word pxt::string_inline_ascii_vt
    .short 34
    .string "~15 e3:3 r:1 d#:3 r:1 d:4 r:1 c#:8"
            .balign 4
            .object _str19
_str19:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "g4:1 c5 e g:2 e:1 g:3"
            .balign 4
            .object _str24
_str24:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "#run"
            .balign 4
            .object _str25
_str25:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "#scope"
            .balign 4
            .object _str27
_str27:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "btn "
            .balign 4
            .object _str28
_str28:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string " "
            .balign 4
            .object _str31
_str31:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "sim"
            .balign 4
            .object _str32
_str32:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "("
            .balign 4
            .object _str33
_str33:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string ")->("
            .balign 4
            .object _str34
_str34:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ")"
            .balign 4
            .object _str35
_str35:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "v"
            .balign 4
            .object _str36
_str36:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "a"
            .balign 4
            .object _str37
_str37:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string " buckets, "
            .balign 4
            .object _str38
_str38:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string " filled"
            .balign 4
            .object _str39
_str39:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string " sprites"
            .balign 4
            .object _str43
_str43:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string " sprites:"
            .balign 4
            .object _str47
_str47:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "YOU WIN!"
            .balign 4
            .object _str48
_str48:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "${WINNER} WINS!"
            .balign 4
            .object _str49
_str49:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "GAME OVER"
            .balign 4
            .object _str51
_str51:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "#volume"
            .balign 4
            .object _str52
_str52:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "#brightness"
            .balign 4
            .object _str53
_str53:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "console"
            .balign 4
            .object _str54
_str54:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "VOLUME DOWN ("
            .balign 4
            .object _str55
_str55:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "VOLUME UP ("
            .balign 4
            .object _str56
_str56:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "BRIGHTNESS DOWN ("
            .balign 4
            .object _str57
_str57:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "BRIGHTNESS UP ("
            .balign 4
            .object _str58
_str58:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "HIDE STATS"
            .balign 4
            .object _str59
_str59:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "SHOW STATS"
            .balign 4
            .object _str60
_str60:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "HIDE CONSOLE"
            .balign 4
            .object _str61
_str61:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "SHOW CONSOLE"
            .balign 4
            .object _str62
_str62:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "SLEEP"
            .balign 4
            .object _str63
_str63:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "CLOSE"
            .balign 4
            .object _str64
_str64:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "PAUSED"
            .balign 4
            .object _str76
_str76:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\x09"
            .balign 4
            .object _str85
_str85:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "server"
            .balign 4
            .object _str86
_str86:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "\x0d\n"
            .balign 4
            .object _str87
_str87:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "Hello"
            .balign 4
            .object _str88
_str88:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "There"
            .balign 4
            .object _str89
_str89:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "my-project"
.object _dbl26
.balign 4
_dbl26:
 .word pxt::number_vt
        .hex 0000c0ffffffdf41
.object _dbl40
.balign 4
_dbl40:
 .word pxt::number_vt
        .hex 9a9999999999b93f
.object _dbl42
.balign 4
_dbl42:
 .word pxt::number_vt
        .hex 000000000000e83f
.object _dbl50
.balign 4
_dbl50:
 .word pxt::number_vt
        .hex 182d4454fb21f93f
.object _dbl77
.balign 4
_dbl77:
 .word pxt::number_vt
        .hex 1a271792bf15b03f
.object _dbl78
.balign 4
_dbl78:
 .word pxt::number_vt
        .hex 182d4454fb211940
.object _dbl79
.balign 4
_dbl79:
 .word pxt::number_vt
        .hex 399d52a246df913f
.balign 4
.object _hexlit20
_hexlit20:
 .word pxt::buffer_vt
                .word 5272
                .hex 
.balign 4
.object _hexlit21
_hexlit21:
 .word pxt::buffer_vt
                .word 2470
                .hex 20000000000000000000000000000000000000000000000000002100000000000006fc0000000000000000000000000000000000220000001c00000000001c0000000000000000000000000000002300a000f807a000f807a00000000000000000000000000000002400000018022404460c8803000000000000000000000000000025003802c4017800200390040803000000000000000000000000260080037804a4041803800340040000000000000000000000002700000000001c00000000000000000000000000000000000000280000000000f8010606010800000000000000000000000000002900000001080606f801000000000000000000000000000000002a00040014000e001400040000000000000000000000000000002b0040004000f8034000400000000000000000000000000000002c000000000000090006000000000000000000000000000000002d000000800080008000000000000000000000000000000000002e000000000000060000000000000000000000000000000000002f00000c800360001c000300000000000000000000000000000030000000f80304040404f80300000000000000000000000000003100000004040404fc07000400040000000000000000000000003200000008060405c4043804000000000000000000000000000033000000080244044404b803000000000000000000000000000034000000800170010801fc070001000000000000000000000000350000023c0424042404c403000000000000000000000000000036000000f0034804440488030000000000000000000000000000370000000400c40734000c00000000000000000000000000000038000000b80344044404b803000000000000000000000000000039000000780284048802f00100000000000000000000000000003a000000000030060000000000000000000000000000000000003b000000000018090006000000000000000000000000000000003c004000a000a000a000100100000000000000000000000000003d002001200120012001200100000000000000000000000000003e0000001001a000a000a00040000000000000000000000000003f000000080084066400180000000000000000000000000000004000f0030c04c20822092409f80900000000000000000000000041000007f8008400f8000007000000000000000000000000000042000000fc0744044404b803000000000000000000000000000043000000f001080204040404080200000000000000000000000044000000fc0704040802f001000000000000000000000000000045000000fc07440444044404000000000000000000000000000046000000fc07440044004400000000000000000000000000000047000000f00108024404c803000000000000000000000000000048000000fc0740004000fc070000000000000000000000000000490000000404fc070404040400000000000000000000000000004a000000000200040004fc0300000000000000000000000000004b000000fc074000f0000c0304040000000000000000000000004c000000fc0700040004000400000000000000000000000000004d000000fc0738007000fc0700000000000000000000000000004e000000fc073800c003fc0700000000000000000000000000004f000000f80304040404f803000000000000000000000000000050000000fc07840084004400780000000000000000000000000051000000fc0102020206fc09000000000000000000000000000052000000fc074400c4013806000000000000000000000000000053000000180224044404880300000000000000000000000000005400000004000400fc070400040000000000000000000000000055000000fc0300040004fc03000000000000000000000000000056000c00f0030004f0030c00000000000000000000000000000057007c008007e001f0010007fc0000000000000000000000000058000404b8034000b80304040000000000000000000000000000590004003800c00730000c0000000000000000000000000000005a0004040407e4041c04040400000000000000000000000000005b0000000000ff0f0108010800000000000000000000000000005c0003001c0060008003000c00000000000000000000000000005d00000001080108ff0f000000000000000000000000000000005e004000380004003800400000000000000000000000000000005f00000800080008000800080000000000000000000000000000600000000000020004000000000000000000000000000000000061000000200390049004e007000000000000000000000000000062000000fc0710041004e003000000000000000000000000000063000000c001200210043004000200000000000000000000000064000000e00310041004fc07000000000000000000000000000065000000e00390049004e0040000000000000000000000000000660000001000f80714001400000000000000000000000000000067000000b806440944093c09040600000000000000000000000068000000fc0710001000e0070000000000000000000000000000690000000000f4070000000000000000000000000000000000006a00000800080008fd07000000000000000000000000000000006b000000fe078000e001100610040000000000000000000000006c0000000000fc030004000400000000000000000000000000006d00f00710001000e0071000e0070000000000000000000000006e000000f00710001000e00700000000000000000000000000006f000000e00310041004e003000000000000000000000000000070000000fc0f04010401f800000000000000000000000000000071000000f80004010401fc0f000000000000000000000000000072000000f00720001000100000000000000000000000000000007300000060029004900420030000000000000000000000000000740000001000fc0310041004000000000000000000000000000075000000f00300040004f007000000000000000000000000000076003000c0030004c003300000000000000000000000000000007700f0000007e003c0010007f000000000000000000000000000780010046003800060031004000000000000000000000000000079000c0870088007f0000c0000000000000000000000000000007a000000000410079004700410040000000000000000000000007b0000004000be070108010800000000000000000000000000007c0000000000ff0f0000000000000000000000000000000000007d00000001080108be07400000000000000000000000000000007e00800040004000800080004000000000000000000000000000
.balign 4
.object _hexlit22
_hexlit22:
 .word pxt::buffer_vt
                .word 904
                .hex 20000000000000002100001700000000220000030003000023000a1f0a1f0a0024000a17151d0a00250013090412190026000a15150a100027000003000000002800000e11000000290000110e0000002a00000a040a00002b0000040e0400002c000010080000002d000004040400002e000008000000002f0010080402010030000e11110e0000310000121f100000320019151512000033000911150b000034000c0a091f080035001715151509003600081416150800370011090503010038000a1515150a00390002150d0502003a00000a000000003b0000100a0000003c0000040a1100003d00000a0a0a00003e0000110a0400003f0002011505020040000e1115090e0041001e05051e000042001f15150a000043000e111111000044001f11110e000045001f151511000046001f050501000047000e1111150c0048001f04041f00004900111f110000004a000911110f01004b001f040a1100004c001f10101000004d001f0204021f004e001f0204081f004f000e11110e000050001f0505020000510006091916000052001f05050a10005300121515090000540001011f01010055000f10100f0000560007081008070057001f0804081f0058001b04041b0000590001021c0201005a001915131100005b00001f111100005c000102040810005d000011111f00005e000002010200005f00101010101000600000010200000061000c12121e100062001f141408000063000c121212000064000814141f000065000e15151200006600041e0501000067000215150f000068001f04041800006900001d000000006a000010100d00006b001f040a1000006c00000f101000006d001e0204021e006e001e02021c00006f000c12120c000070001e0a0a0400007100040a0a1e000072001c0202020000730010140a0200007400000f1414100075000e10101e1000760006081008060077001e1008101e007800120c0c12000079001214080402007a00121a161200007b0000041f1100007c00001f000000007d00111f040000007e00000404080800d3000c1213130c00f3000c12130d000004010e05051e100005010609191f080006010c121313120007010c121313000018010f0b1b19000019010e151d1a000041011f14121000004201100f1412000043011f0205081f0044011e03031c00005a0110140b0302005b0110140b0300007901121a171300007a01121a171300007b01121b171200007c01121b17120000
.balign 4
.object _hexlit23
_hexlit23:
 .word pxt::buffer_vt
                .word 48
                .hex 000000ffffffff2121ff93c4ff8135fff609249ca378dc52003fad87f2ff8e2ec4a4839f5c406ce5cdc491463d000000
.balign 4
.object _hexlit41
_hexlit41:
 .word pxt::buffer_vt
                .word 8
                .hex 8704000000000000
.balign 4
.object _hexlit44
_hexlit44:
 .word pxt::buffer_vt
                .word 36
                .hex 870407000800000000000000404400005055040450555505505501011011000000000000
.balign 4
.object _hexlit45
_hexlit45:
 .word pxt::buffer_vt
                .word 136
                .hex 87041000100000000000000000000000000000000000000000000050050000000000000550000000005045444404000000455544444400040045555555550404004555555555450500455555555511050045555555150101004555111111000100501511110100000000000550000000000000500500000000000000000000000000000000000000
.balign 4
.object _hexlit46
_hexlit46:
 .word pxt::buffer_vt
                .word 136
                .hex 870410001000000000000000000000000000000000000000006666666666060060ffffff666f660060fffffff6ff660060fff1ff666f660060fff1ff6666660060fffff16666660060fffff16666660060fff1ff6666660060fff1ff66f6660060ffffff6666660060fffffff6666600006666666666060000000000000000000000000000000000
.balign 4
.object _hexlit65
_hexlit65:
 .word pxt::buffer_vt
                .word 728
                .hex
.balign 4
.object _hexlit66
_hexlit66:
 .word pxt::buffer_vt
                .word 728
                .hex
.balign 4
.object _hexlit67
_hexlit67:
 .word pxt::buffer_vt
                .word 728
                .hex
.balign 4
.object _hexlit68
_hexlit68:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d00000000000000000000000070666607000000000000000000000000006776000000000000000000000000660700007066000000000000000000006766777766760000000000000000000060666666660600000000000000000066006766667600660000000000000000667600000000676600000000000000006766767777676676000000000000000060666666666666060000000000000000006766666666760000000000000000000000676666760000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit69
_hexlit69:
 .word pxt::buffer_vt
                .word 520
                .hex 8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0bb000000000000000000000000b000404500b0000000000000000000005b0b000400540b0000000000000000b0550400000054b5000000000000000000440040bb0040040000000000000000000040d4ddbb0000000000000000000000004055ddbd000000000000000000004b005455d5dd0b400b000000000000005b045411d5dd0b540b000000000000004b005411d5dd0b400b0000000000000000004055ddbd00000000000000000000000040d4ddbb0000000000000000000000440040bb0040040000000000000000b0550400000054b50000000000000000005b04000400540b000000000000000000b000404500b0000000000000000000000000b0bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit70
_hexlit70:
 .word pxt::buffer_vt
                .word 520
                .hex
.balign 4
.object _hexlit71
_hexlit71:
 .word pxt::buffer_vt
                .word 520
                .hex 8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d0000000000000000000000007066660700000000000000000000000000677600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit72
_hexlit72:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0cbcc0c0000000000000000000000b0db55d5cd0c00000000000000000000db555555ddcd000000000000000000b055555555d59d0b0000000000000000db55555555d59db900000000000000005b55555555d5ddb900000000000000b05db5cccc5bdddd990b000000000000b055ccccccccdddd9d0b000000000000b0b5ccccccccdbdd9d0b000000000000b0c5ccccccccdcdd9d0b000000000000b0c5ccdccbccdcdd9d0c000000000000b0cdcc5b55ccdcdd9d0c00000000000000ccdc55b5ccdcddc90000000000000000cccc5b55ccdbddc90000000000000000c0ccdccbccdd9d0c000000000000000000ccccccdbddcd00000000000000000000c0dcddddcd0c0000000000000000000000c0cccc0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit73
_hexlit73:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000000000000b0bbbbbbbbcb00c0cd000000000000001bddddddddbd0c1ccd000000000000b011cbccccccbc0c1ccd000000000000b01d6c666666bc0cbccd000000000000b01d6c616661bc0c1ccd000000000000b01d6c161666bccc1bcd000000000000b01d6c666166bcccbbcd000000000000b01d6c666666bccc1bcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666661bcccbbcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666666bc0c1ccd000000000000b01dcbccccccbc0cbccd000000000000c0b1bbbbbbbbbb0cdccb000000000000c0bbbbbbbbbbcb00dc0c00000000000000cccccccccc0c00cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit74
_hexlit74:
 .word pxt::buffer_vt
                .word 520
                .hex 87042000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004000000000000000000000000000054450000000000000000000000440b00bbbb00b0440000000000000040550b00000000b0550400000000000040b5000044bb00005b04000000000000b00b0044ddddbb00b00b0000000000000000405d55d5dd0b00000000000000000000d4555555ddbd0000000000000000000054555555d5bd0000000000000000b44055555555d5dd0b4b000000000040b54055555555d5dd0b5b040000000040b54055555555d5dd0b5b040000000000b44055115555d5dd0b4b000000000000000054115555d5bd00000000000000000000d4555555ddbd00000000000000000000405d55d5dd0b0000000000000000b00b0044ddddbb00b00b00000000000040b5000044bb00005b0400000000000040550b00000000b0550400000000000000440b00bbbb00b0440000000000000000000000544500000000000000000000000000004004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit75
_hexlit75:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb00000000000000000000000000b055bb00bbbbbb000000000000000000b0b5bdbcbbbbddcb0000000000000000b0dbcb5b5555bbdd0c00000000000000b0cbdcbdbb5b55dbcd0000000000000000c0dddb11d15bb5bd0c00000000000000bbbd111111b155bb0c00000000000000db1b111111115bb5cb00000000000000db1bb11d1199b9d5cb00000000000000db1b11bb9199b955cb000000000000005b1b11b19b99995bcb000000000000005b1d1111bb99995ccb00000000000000b0b511bbbb99995ccb00000000000000b0d51d919999d95b0b00000000000000005bdb919999c9d50b0000000000000000b0d51b99d9bcb5000000000000000000005bd5bbbc550b00000000000000000000b05b5555bd000000000000000000000000b0bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit80
_hexlit80:
 .word pxt::buffer_vt
                .word 12
                .hex 87040100010000000f000000
.balign 4
.object _hexlit81
_hexlit81:
 .word pxt::buffer_vt
                .word 12
                .hex 8704010002000000ff000000
.balign 4
.object _hexlit82
_hexlit82:
 .word pxt::buffer_vt
                .word 16
                .hex 87040200010000000f0000000f000000
.balign 4
.object _hexlit83
_hexlit83:
 .word pxt::buffer_vt
                .word 16
                .hex 8704020002000000ff0000000f000000
.balign 4
.object _hexlit84
_hexlit84:
 .word pxt::buffer_vt
                .word 16
                .hex 87040200020000000f000000ff000000
.balign 4
.section code
.object _perf_counters
_pxt_perf_counters:
    .word 0
_literals_end:
