; Interface tables: 522/1566 (33%)
; Virtual methods: 37 / 245
; generated code sizes (bytes): 126296 (incl. 87768 user, 4460 helpers, 11008 vtables, 23060 lits); src size 0
; assembly: 77477 lines; density: 34.18 bytes/stmt; (2568 stmts)
; total bytes: 238936 (45.6% of 512.0k flash with 285352 free)
; peep hole pass: 1524 instructions removed and 2796 updated
; peep hole pass: 1291 instructions removed and 5 updated
; peep hole pass: 1 instructions removed and 1 updated
; peep hole pass: 0 instructions removed and 0 updated


; start
    .startaddr 0x1b800
    .hex 708E3B92C615A841C49866C975EE5197 ; magic number
    .hex F45992325D6E48C5 ; hex template hash
    .hex 873266330af9dbdb ; replaced in binary by program hash
    .short 86   ; num. globals
    .short 0 ; patched with number of 64 bit words resulting from assembly
    .word _pxt_config_data
    .short 0 ; patched with comm section size
    .short 1 ; number of globals that are not pointers (they come first)
    .word _pxt_iface_member_names
    .word _pxt_lambda_trampoline@fn
    .word _pxt_perf_counters
    .word _pxt_restore_exception_state@fn
    .word _str86 ; name
    ;
; Function main.ts(1,1): <main>
    ;
    .object _main___P4323 "main.ts(1,1): <main>"
_main___P4323_pre:
    .section code
    .balign 4
_main___P4323_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _main___P4323_args@fn
_main___P4323_args:
    .section code
_main___P4323:
_main___P4323_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_main___P4323_locals:
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #4]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    movs r0, #3
    movs r1, #67
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    ldr r1, _ldlit_2 ; listeners_inline__P4387_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    pop {r0} ; tmpref @1
    movs r1, #244
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #6
    movs r1, #35
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #1
    movs r1, #69
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_3 ; music_Melody__C1623_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_4 ; _str18      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl music_Melody_constructor__P1626
_proccall87:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_3 ; music_Melody__C1623_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_5 ; _str19      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl music_Melody_constructor__P1626
_proccall88:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #37
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #201
    movs r1, #17
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #94
    movs r2, #13
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #93
    movs r2, #17
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #109
    ldr r2, _ldlit_6 ; _hexlit20      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
    movs r1, #212
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #94
    movs r2, #25
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #93
    movs r2, #25
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #109
    ldr r2, _ldlit_7 ; _hexlit21      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
    movs r1, #208
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #94
    movs r2, #13
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #93
    movs r2, #11
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #109
    ldr r2, _ldlit_8 ; _hexlit22      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #116]
    @stackempty locals
    movs r0, #10
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    ldr r0, _ldlit_9 ; control___screen_inline__P4537_Lit      
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_10 ; _hexlit23      
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setPalette
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl _screen_internal_createScreen__P2013
_proccall89:
    ldr r7, [r6, #0]
    str r0, [r7, #124]
    @stackempty locals
    ldr r0, _ldlit_11 ; _str24      
    movs r1, #83
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_12 ; _str25      
    movs r1, #21
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl settings_initScopes__P4568
_proccall90:
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2164_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2170
_proccall91:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #140
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2164_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #11
    push {r0} ; proc-arg
    movs r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2170
_proccall92:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #144
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2164_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #95
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2170
_proccall93:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #156
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2164_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #99
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2170
_proccall94:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #148
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2164_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #97
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2170
_proccall95:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #160
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2164_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2170
_proccall96:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #152
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2164_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #103
    push {r0} ; proc-arg
    movs r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2170
_proccall97:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #224
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_14 ; controller_AnyButton__C4597_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2170
_proccall98:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #16]
    @stackempty locals
    movs r0, #66
    movs r1, #236
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    movs r1, #228
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #61
    movs r1, #232
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl SpriteKind_create__P2452
_proccall99:
    ldr r7, [r6, #0]
    str r0, [r7, #20]
    @stackempty locals
    bl SpriteKind_create__P2452
_proccall100:
    ldr r7, [r6, #0]
    str r0, [r7, #24]
    @stackempty locals
    bl SpriteKind_create__P2452
_proccall101:
    ldr r7, [r6, #0]
    str r0, [r7, #28]
    @stackempty locals
    ldr r0, _ldlit_15 ; _dbl40      
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall102:
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    str r0, [r7, #32]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #36]
    @stackempty locals
    ldr r0, _ldlit_16 ; info_inline__P4684_Lit      
    push {r0} ; proc-arg
    bl game_addScenePushHandler__P2986
_proccall103:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_17 ; info_inline__P4700_Lit      
    push {r0} ; proc-arg
    bl game_addScenePopHandler__P2988
_proccall104:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #64]
    @stackempty locals
    ldr r0, _ldlit_18 ; _hexlit44      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #44]
    @stackempty locals
    ldr r0, _ldlit_19 ; _hexlit45      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #48]
    @stackempty locals
    ldr r0, _ldlit_20 ; _hexlit46      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #52]
    @stackempty locals
    movs r0, #10
    movs r1, #184
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #10
    movs r1, #172
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_21 ; gameOverConfig_inline__P4808_Lit      
    ldr r7, [r6, #0]
    str r0, [r7, #56]
    @stackempty locals
    bl scene_systemMenu_initVolume__P5082
_proccall105:
    @stackempty locals
    bl scene_systemMenu_initScreen__P5083
_proccall106:
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
    push {r0} ; proc-arg
    bl _conv_5
    ldr r1, _ldlit_22 ; scene_systemMenu_register__P3074_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_23 ; _hexlit65      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #68]
    @stackempty locals
    ldr r0, _ldlit_24 ; _hexlit66      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #72]
    @stackempty locals
    ldr r0, _ldlit_25 ; _hexlit67      
    mov r7, sp
    str r7, [r6, #4]
    b _jmpwords_26      
.object PUSH
.balign 4
_ldlit_2:
 .word listeners_inline__P4387_Lit
_ldlit_3:
 .word music_Melody__C1623_VT
_ldlit_4:
 .word _str18
_ldlit_5:
 .word _str19
_ldlit_6:
 .word _hexlit20
_ldlit_7:
 .word _hexlit21
_ldlit_8:
 .word _hexlit22
_ldlit_9:
 .word control___screen_inline__P4537_Lit
_ldlit_10:
 .word _hexlit23
_ldlit_11:
 .word _str24
_ldlit_12:
 .word _str25
_ldlit_13:
 .word controller_Button__C2164_VT
_ldlit_14:
 .word controller_AnyButton__C4597_VT
_ldlit_15:
 .word _dbl40
_ldlit_16:
 .word info_inline__P4684_Lit
_ldlit_17:
 .word info_inline__P4700_Lit
_ldlit_18:
 .word _hexlit44
_ldlit_19:
 .word _hexlit45
_ldlit_20:
 .word _hexlit46
_ldlit_21:
 .word gameOverConfig_inline__P4808_Lit
_ldlit_22:
 .word scene_systemMenu_register__P3074_Lit
_ldlit_23:
 .word _hexlit65
_ldlit_24:
 .word _hexlit66
_ldlit_25:
 .word _hexlit67
_jmpwords_26:
.object POP
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #76]
    @stackempty locals
    ldr r0, _ldlit_27 ; _hexlit68      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #80]
    @stackempty locals
    ldr r0, _ldlit_28 ; _hexlit69      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #84]
    @stackempty locals
    ldr r0, _ldlit_29 ; _hexlit70      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #88]
    @stackempty locals
    ldr r0, _ldlit_30 ; _hexlit71      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #92]
    @stackempty locals
    ldr r0, _ldlit_31 ; _hexlit72      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #96]
    @stackempty locals
    ldr r0, _ldlit_32 ; _hexlit73      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #100]
    @stackempty locals
    ldr r0, _ldlit_33 ; _hexlit74      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #104]
    @stackempty locals
    ldr r0, _ldlit_34 ; _hexlit75      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #108]
    @stackempty locals
    movs r0, #3
    movs r1, #204
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #17
    movs r1, #200
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    ldr r7, [r6, #0]
    str r0, [r7, #112]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall107:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_subs
    ldr r7, [r6, #0]
    str r0, [r7, #120]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #17
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall108:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #128
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_35 ; game_consoleOverlay_listener__P5149_Lit      
    push {r0} ; proc-arg
    bl console_addListener__P383
_proccall109:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_36 ; MAX_SOURCES_inline__P13245_Lit      
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    movs r1, #19
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_37 ; particles_SprayFactory__C3159_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #121
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl particles_SprayFactory_constructor__P3160
_proccall111:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
    movs r1, #77
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_38 ; Math_FastRandom__C3027_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Math_FastRandom_constructor__P3029
_proccall112:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #132
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_39 ; _dbl77      
    movs r1, #39
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_40 ; effects_ScreenEffect__C3234_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_41 ; confetti_inline__P12998_Lit      
    push {r0} ; proc-arg
    movs r0, #31
    lsls r0, r0, #8
    adds r0, #65
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    ldr r0, [sp, #4*4] ; tmpref @1
    push {r0} ; proc-arg
    bl effects_ScreenEffect_constructor__P3235
_proccall113:
    add sp, #4*5 ; pop locals 5
    pop {r0} ; tmpref @1
    movs r1, #9
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_42 ; effects_ImageEffect__C3258_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_43 ; dissolve_inline__P11602_Lit      
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl effects_ImageEffect_constructor__P3259
_proccall114:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #65
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_42 ; effects_ImageEffect__C3258_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_44 ; melt_inline__P12945_Lit      
    push {r0} ; proc-arg
    movs r0, #251
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl effects_ImageEffect_constructor__P3259
_proccall115:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #73
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_45 ; controller_pauseUntilAnyButtonIsPressed__P2180_Lit      
    push {r0} ; proc-arg
    bl game_setWaitAnyButton__P2969
_proccall116:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl game_eventContext__P2971
_proccall117:
    @stackempty locals
    movs r0, #160
    movs r1, #120
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    movs r1, #136
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_imageFillRect__P1935
_proccall118:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    movs r1, #50
    movs r2, #50
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #11
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_imageDrawCircle__P1939
_proccall119:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    bl draw__P4322
_proccall120:
    @stackempty locals
    ldr r0, _ldlit_46 ; inline__P6883_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall121:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_47 ; inline__P6888_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall122:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_48 ; inline__P6894_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall123:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_49 ; inline__P6910_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall124:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_50 ; inline__P6928_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall125:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_51 ; inline__P6952_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall126:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4323:
    @stackempty locals
    movs r0, #0
.final_0_1:
_main___P4323_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/frame.ts(18,27): control.__screen.inline
    ;
    .object control___screen_inline__P4537 "screen---st7735/frame.ts(18,27): control.__screen.inline"
control___screen_inline__P4537_pre:
    .section code
    .balign 4
control___screen_inline__P4537_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control___screen_inline__P4537_args@fn
control___screen_inline__P4537_args:
    .section code
control___screen_inline__P4537:
control___screen_inline__P4537_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control___screen_inline__P4537_locals:
.cont.4538:
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz127
    b .brk.4538      
.object PUSH
.balign 4
_ldlit_27:
 .word _hexlit68
_ldlit_28:
 .word _hexlit69
_ldlit_29:
 .word _hexlit70
_ldlit_30:
 .word _hexlit71
_ldlit_31:
 .word _hexlit72
_ldlit_32:
 .word _hexlit73
_ldlit_33:
 .word _hexlit74
_ldlit_34:
 .word _hexlit75
_ldlit_35:
 .word game_consoleOverlay_listener__P5149_Lit
_ldlit_36:
 .word MAX_SOURCES_inline__P13245_Lit
_ldlit_37:
 .word particles_SprayFactory__C3159_VT
_ldlit_38:
 .word Math_FastRandom__C3027_VT
_ldlit_39:
 .word _dbl77
_ldlit_40:
 .word effects_ScreenEffect__C3234_VT
_ldlit_41:
 .word confetti_inline__P12998_Lit
_ldlit_42:
 .word effects_ImageEffect__C3258_VT
_ldlit_43:
 .word dissolve_inline__P11602_Lit
_ldlit_44:
 .word melt_inline__P12945_Lit
_ldlit_45:
 .word controller_pauseUntilAnyButtonIsPressed__P2180_Lit
_ldlit_46:
 .word inline__P6883_Lit
_ldlit_47:
 .word inline__P6888_Lit
_ldlit_48:
 .word inline__P6894_Lit
_ldlit_49:
 .word inline__P6910_Lit
_ldlit_50:
 .word inline__P6928_Lit
_ldlit_51:
 .word inline__P6952_Lit
.object POP
.jmpz127:
    movs r0, #10
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    bl pause__P413
_proccall128:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_2      
.jmpz129:
    bl control___screen_update__P1970
_proccall130:
    @stackempty locals
    movs r0, #66
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
.else_0_2:
.afterif_1_2:
    b .cont.4538      
.brk.4538:
    movs r0, #0
.ret.4537:
    @stackempty locals
.final_2_2:
control___screen_inline__P4537_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/info.ts(94,30): info.inline
    ;
    .object info_inline__P4684 "game/info.ts(94,30): info.inline"
info_inline__P4684_pre:
    .section code
    .balign 4
info_inline__P4684_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word info_inline__P4684_args@fn
info_inline__P4684_args:
    cmp r4, #1
    bge info_inline__P4684_nochk
    push {lr}
    bl _expand_args_1_10
    bl info_inline__P4684_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
info_inline__P4684:
info_inline__P4684_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
info_inline__P4684_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_3      
.jmpz131:
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_3      
.jmpz132:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
.else_1_3:
.afterif_2_3:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #79
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r2, [r7, #36]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #15
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #36]
    @stackempty locals
.else_0_3:
.afterif_3_3:
.ret.4684:
    @stackempty locals
    movs r0, #0
.final_4_3:
info_inline__P4684_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/info.ts(105,29): info.inline
    ;
    .object info_inline__P4700 "game/info.ts(105,29): info.inline"
info_inline__P4700_pre:
    .section code
    .balign 4
info_inline__P4700_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word info_inline__P4700_args@fn
info_inline__P4700_args:
    .section code
info_inline__P4700:
info_inline__P4700_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
info_inline__P4700_locals:
    bl game_currentScene__P2968
_proccall133:
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #36]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_4      
.jmpz134:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_4      
.lazySkip_2_4:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_1_4:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_4      
.jmpz135:
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #15
    bl _ifacecall1_get_8
_proccall137:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _cmp_eq
    beq .else_3_4      
.jmpz136:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #79
    lsls r1, r1, #2
    bl _ifacecall1_get_8
_proccall138:
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    str r0, [r7, #36]
    @stackempty locals
    b .afterif_4_4      
.else_3_4:
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_4_4:
.else_0_4:
.afterif_5_4:
.ret.4700:
    @stackempty locals
    movs r0, #0
.final_6_4:
    add sp, #4*2 ; pop locals 2
info_inline__P4700_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(96,35): gameOverConfig.inline
    ;
    .object gameOverConfig_inline__P4808 "game/game.ts(96,35): gameOverConfig.inline"
gameOverConfig_inline__P4808_pre:
    .section code
    .balign 4
gameOverConfig_inline__P4808_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word gameOverConfig_inline__P4808_args@fn
gameOverConfig_inline__P4808_args:
    .section code
gameOverConfig_inline__P4808:
gameOverConfig_inline__P4808_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
gameOverConfig_inline__P4808_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #60]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_5      
.jmpz139:
    ldr r0, _ldlit_53 ; game_GameOverConfig__C2945_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl game_GameOverConfig_constructor__P2958
_proccall140:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #60]
    @stackempty locals
.else_0_5:
.afterif_1_5:
    ldr r7, [r6, #0]
    ldr r0, [r7, #60]
.ret.4808:
    @stackempty locals
.final_2_5:
gameOverConfig_inline__P4808_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function main.ts(21,53): inline
    ;
    .object inline__P6883 "main.ts(21,53): inline"
inline__P6883_pre:
    .section code
    .balign 4
inline__P6883_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6883_args@fn
inline__P6883_args:
    .section code
inline__P6883:
inline__P6883_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6883_locals:
    bl clear__P4321
_proccall141:
    @stackempty locals
.ret.6883:
    @stackempty locals
    movs r0, #0
.final_0_6:
inline__P6883_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function main.ts(22,53): inline
    ;
    .object inline__P6888 "main.ts(22,53): inline"
inline__P6888_pre:
    .section code
    .balign 4
inline__P6888_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6888_args@fn
inline__P6888_args:
    .section code
inline__P6888:
inline__P6888_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6888_locals:
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_imageFillRect__P1935
_proccall142:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.ret.6888:
    @stackempty locals
    movs r0, #0
.final_0_7:
inline__P6888_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function main.ts(26,54): inline
    ;
    .object inline__P6894 "main.ts(26,54): inline"
inline__P6894_pre:
    .section code
    .balign 4
inline__P6894_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6894_args@fn
inline__P6894_args:
    .section code
inline__P6894:
inline__P6894_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6894_locals:
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #33
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    bl helpers_imageDrawRect__P1938
_proccall143:
    add sp, #4*12 ; pop locals 12
    @stackempty locals
.ret.6894:
    @stackempty locals
    movs r0, #0
.final_0_8:
inline__P6894_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function main.ts(30,56): inline
    ;
    .object inline__P6910 "main.ts(30,56): inline"
inline__P6910_pre:
    .section code
    .balign 4
inline__P6910_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6910_args@fn
inline__P6910_args:
    .section code
inline__P6910:
inline__P6910_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6910_locals:
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #101
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #33
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    bl helpers_imageDrawCircle__P1939
_proccall144:
    add sp, #4*10 ; pop locals 10
    @stackempty locals
.ret.6910:
    @stackempty locals
    movs r0, #0
.final_0_9:
inline__P6910_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function main.ts(34,56): inline
    ;
    .object inline__P6928 "main.ts(34,56): inline"
inline__P6928_pre:
    .section code
    .balign 4
inline__P6928_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6928_args@fn
inline__P6928_args:
    .section code
inline__P6928:
inline__P6928_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6928_locals:
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #33
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    bl helpers_imageDrawLine__P1937
_proccall145:
    add sp, #4*12 ; pop locals 12
    @stackempty locals
.ret.6928:
    @stackempty locals
    movs r0, #0
.final_0_10:
inline__P6928_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function main.ts(38,57): inline
    ;
    .object inline__P6952 "main.ts(38,57): inline"
inline__P6952_pre:
    .section code
    .balign 4
inline__P6952_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6952_args@fn
inline__P6952_args:
    .section code
inline__P6952:
inline__P6952_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6952_locals:
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #33
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.6952:
    @stackempty locals
    movs r0, #0
.final_0_11:
inline__P6952_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_53:
 .word game_GameOverConfig__C2945_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(165,5): helpers.imageDrawLine
    ;
    .object helpers_imageDrawLine__P1937 "screen---st7735/image.ts(165,5): helpers.imageDrawLine"
helpers_imageDrawLine__P1937_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawLine__P1937:
helpers_imageDrawLine__P1937_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageDrawLine__P1937_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_pack__P4526
_proccall146:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl helpers_pack__P4526
_proccall147:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_drawLine
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.1937:
    @stackempty locals
    movs r0, #0
.final_0_12:
helpers_imageDrawLine__P1937_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(131,5): helpers.pack
    ;
    .object helpers_pack__P4526 "screen---st7735/image.ts(131,5): helpers.pack"
helpers_pack__P4526_pre:
    .section code
    .balign 4
    .section code
helpers_pack__P4526:
helpers_pack__P4526_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_pack__P4526_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #234
    lsls r0, r0, #8
    adds r0, #97
    push {r0} ; proc-arg
    ldr r0, _ldlit_55 ; -59999      
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall148:
    add sp, #4*3 ; pop locals 3
    ldr r1, _ldlit_56 ; 131071      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #234
    lsls r0, r0, #8
    adds r0, #97
    push {r0} ; proc-arg
    ldr r0, _ldlit_55 ; -59999      
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall149:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    movs r1, #33
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_orrs
    add sp, #4*2 ; pop locals 2
.ret.4526:
    @stackempty locals
.final_0_13:
helpers_pack__P4526_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(529,5): Math.clamp
    ;
    .object Math_clamp__P127 "base/pxt-helpers.ts(529,5): Math.clamp"
Math_clamp__P127_pre:
    .section code
    .balign 4
    .section code
Math_clamp__P127:
Math_clamp__P127_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_clamp__P127_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall150:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall151:
    add sp, #4*2 ; pop locals 2
.ret.127:
    @stackempty locals
.final_0_14:
Math_clamp__P127_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(559,5): Math.max
    ;
    .object Math_max__P130 "base/pxt-helpers.ts(559,5): Math.max"
Math_max__P130_pre:
    .section code
    .balign 4
    .section code
Math_max__P130:
Math_max__P130_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_max__P130_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_ge
    beq .else_0_15      
.jmpz152:
    ldr r0, [sp, args@0]
    b .ret.130      
.else_0_15:
.afterif_1_15:
    ldr r0, [sp, args@1]
.ret.130:
    @stackempty locals
.final_2_15:
Math_max__P130_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(569,5): Math.min
    ;
    .object Math_min__P131 "base/pxt-helpers.ts(569,5): Math.min"
Math_min__P131_pre:
    .section code
    .balign 4
    .section code
Math_min__P131:
Math_min__P131_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_min__P131_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_le
    beq .else_0_16      
.jmpz153:
    ldr r0, [sp, args@0]
    b .ret.131      
.else_0_16:
.afterif_1_16:
    ldr r0, [sp, args@1]
.ret.131:
    @stackempty locals
.final_2_16:
Math_min__P131_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(168,5): helpers.imageDrawRect
    ;
    .object helpers_imageDrawRect__P1938 "screen---st7735/image.ts(168,5): helpers.imageDrawRect"
helpers_imageDrawRect__P1938_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawRect__P1938:
helpers_imageDrawRect__P1938_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageDrawRect__P1938_locals:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_17      
.jmpz154:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_17      
.lazySkip_2_17:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_17:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_17      
.jmpz155:
    b .ret.1938      
.else_0_17:
.afterif_3_17:
    ldr r0, [sp, args@3]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, args@4]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, args@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imageDrawLine__P1937
_proccall156:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawLine__P1937
_proccall157:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imageDrawLine__P1937
_proccall158:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawLine__P1937
_proccall159:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
.ret.1938:
    @stackempty locals
    movs r0, #0
.final_4_17:
helpers_imageDrawRect__P1938_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function main.ts(3,1): clear
    ;
    .object clear__P4321 "main.ts(3,1): clear"
clear__P4321_pre:
    .section code
    .balign 4
    .section code
clear__P4321:
clear__P4321_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
clear__P4321_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.7103:
    ldr r0, [sp, locals@0]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #65
    bl _cmp_lt
    beq .brk.7103      
.jmpz160:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.7106:
    ldr r0, [sp, locals@1]
    movs r1, #241
    bl _cmp_lt
    beq .brk.7106      
.jmpz161:
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_13
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.7106:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.7106      
.brk.7106:
.cont.7103:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.7103      
.brk.7103:
.ret.4321:
    @stackempty locals
    movs r0, #0
.final_0_18:
    add sp, #4*2 ; pop locals 2
clear__P4321_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(124,9): controller.Button.onEvent
    ;
    .object controller_Button_onEvent__P2171 "game/controllerbutton.ts(124,9): controller.Button.onEvent"
controller_Button_onEvent__P2171_pre:
    .section code
    .balign 4
controller_Button_onEvent__P2171_args:
    cmp r4, #3
    bge controller_Button_onEvent__P2171_nochk
    push {lr}
    bl _expand_args_3_14
    bl controller_Button_onEvent__P2171_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
controller_Button_onEvent__P2171:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_onEvent__P2171_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
controller_Button_onEvent__P2171_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_getOrCreateHandlerForEvent__P4604_nochk
_proccall162:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _inst_controller_ButtonHandler__C2158_validate_16
    str r1, [r0, #8]
    @stackempty locals
.ret.2171:
    @stackempty locals
    movs r0, #0
.final_0_19:
    add sp, #4*1 ; pop locals 1
controller_Button_onEvent__P2171_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(251,9): controller.Button.getOrCreateHandlerForEvent
    ;
    .object controller_Button_getOrCreateHandlerForEvent__P4604 "game/controllerbutton.ts(251,9): controller.Button.getOrCreateHandlerForEvent"
controller_Button_getOrCreateHandlerForEvent__P4604_pre:
    .section code
    .balign 4
controller_Button_getOrCreateHandlerForEvent__P4604_args:
    cmp r4, #2
    bge controller_Button_getOrCreateHandlerForEvent__P4604_nochk
    push {lr}
    bl _expand_args_2_17
    bl controller_Button_getOrCreateHandlerForEvent__P4604_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button_getOrCreateHandlerForEvent__P4604:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_getOrCreateHandlerForEvent__P4604_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button_getOrCreateHandlerForEvent__P4604_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_handlerState__P4599_nochk
_proccall164:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz163
    b .else_0_20      
.object PUSH
.balign 4
_ldlit_55:
 .word -59999
_ldlit_56:
 .word 131071
.object POP
.jmpz163:
    ldr r0, _ldlit_58 ; controller_ButtonEventHandlerState__C2160_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_ButtonEventHandlerState_constructor__P2161
_proccall165:
    add sp, #4*2 ; pop locals 2
    bl game_currentScene__P2968
_proccall166:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_20:
.afterif_1_20:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_handlerState__P4599_nochk
_proccall167:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2160_validate_19
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_20      
.jmpz168:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_controller_ButtonEventHandlerState__C2160_validate_19
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_20:
.afterif_3_20:
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2160_validate_19
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.7155:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7155      
.jmpz169:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    bl _inst_controller_ButtonHandler__C2158_validate_16
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_4_20      
.jmpz170:
    ldr r0, [sp, locals@1]
    b .ret.4604      
.else_4_20:
.afterif_5_20:
.cont.7155:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.7155      
.brk.7155:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #2
    ldr r1, _ldlit_59 ; controller_Button_getOrCreateHandlerForEvent_inline__P7165_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl control_onEvent__P391
_proccall171:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, _ldlit_60 ; controller_ButtonHandler__C2158_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_ButtonHandler_constructor__P2159
_proccall172:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2160_validate_19
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@4]
.ret.4604:
    @stackempty locals
.final_6_20:
    add sp, #4*5 ; pop locals 5
controller_Button_getOrCreateHandlerForEvent__P4604_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(266,45): controller.Button.getOrCreateHandlerForEvent.inline
    ;
    .object controller_Button_getOrCreateHandlerForEvent_inline__P7165 "game/controllerbutton.ts(266,45): controller.Button.getOrCreateHandlerForEvent.inline"
controller_Button_getOrCreateHandlerForEvent_inline__P7165_pre:
    .section code
    .balign 4
controller_Button_getOrCreateHandlerForEvent_inline__P7165_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Button_getOrCreateHandlerForEvent_inline__P7165_args@fn
controller_Button_getOrCreateHandlerForEvent_inline__P7165_args:
    .section code
controller_Button_getOrCreateHandlerForEvent_inline__P7165:
controller_Button_getOrCreateHandlerForEvent_inline__P7165_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_getOrCreateHandlerForEvent_inline__P7165_locals:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl controller_Button_runButtonEvents__P4603_nochk
_proccall173:
    add sp, #4*2 ; pop locals 2
.ret.7165:
    @stackempty locals
    movs r0, #0
.final_0_21:
controller_Button_getOrCreateHandlerForEvent_inline__P7165_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(45,9): controller.ButtonHandler.constructor
    ;
    .object controller_ButtonHandler_constructor__P2159 "game/controllerbutton.ts(45,9): controller.ButtonHandler.constructor"
controller_ButtonHandler_constructor__P2159_pre:
    .section code
    .balign 4
    .section code
controller_ButtonHandler_constructor__P2159:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_ButtonHandler__C2158_validate_16
    mov lr, r7
controller_ButtonHandler_constructor__P2159_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_ButtonHandler_constructor__P2159_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    movs r0, #0
.ret.2159:
    @stackempty locals
.final_0_22:
controller_ButtonHandler_constructor__P2159_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(237,9): controller.Button.runButtonEvents
    ;
    .object controller_Button_runButtonEvents__P4603 "game/controllerbutton.ts(237,9): controller.Button.runButtonEvents"
controller_Button_runButtonEvents__P4603_pre:
    .section code
    .balign 4
controller_Button_runButtonEvents__P4603_args:
    cmp r4, #2
    bge controller_Button_runButtonEvents__P4603_nochk
    push {lr}
    bl _expand_args_2_17
    bl controller_Button_runButtonEvents__P4603_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button_runButtonEvents__P4603:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_runButtonEvents__P4603_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button_runButtonEvents__P4603_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_handlerState__P4599_nochk
_proccall174:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_23      
.jmpz175:
    b .ret.4603      
.else_0_23:
.afterif_1_23:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_getOrCreateHandlerForEvent__P4604_nochk
_proccall176:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_controller_ButtonHandler__C2158_validate_16
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_23      
.jmpz177:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #82
    bl _ifacecall1__20
_proccall178:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_23:
.afterif_3_23:
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2160_validate_19
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_23      
.jmpz179:
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2160_validate_19
    ldr r0, [r0, #12]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.7199:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7199      
.jmpz180:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_controller_ButtonHandler__C2158_validate_16
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_7_23      
.jmpz181:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_23      
.lazySkip_7_23:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_controller_ButtonHandler__C2158_validate_16
    ldr r0, [r0, #8]
.lazy_6_23:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_23      
.jmpz182:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #82
    bl _ifacecall1__20
_proccall183:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_8_23      
.object PUSH
.balign 4
_ldlit_58:
 .word controller_ButtonEventHandlerState__C2160_VT
_ldlit_59:
 .word controller_Button_getOrCreateHandlerForEvent_inline__P7165_Lit
_ldlit_60:
 .word controller_ButtonHandler__C2158_VT
.object POP
.else_5_23:
.afterif_8_23:
.cont.7199:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.7199      
.brk.7199:
    movs r0, #0
    str r0, [sp, locals@3]
.else_4_23:
.afterif_9_23:
.ret.4603:
    @stackempty locals
    movs r0, #0
.final_10_23:
    add sp, #4*5 ; pop locals 5
controller_Button_runButtonEvents__P4603_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(10,5): control.onEvent
    ;
    .object control_onEvent__P391 "base/eventcontext.ts(10,5): control.onEvent"
control_onEvent__P391_pre:
    .section code
    .balign 4
    .section code
control_onEvent__P391:
control_onEvent__P391_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control_onEvent__P391_locals:
    bl control_eventContext__P408
_proccall184:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_24      
.jmpz185:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_1_24      
.else_0_24:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventContext_registerHandler__P405
_proccall186:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.afterif_1_24:
.ret.391:
    @stackempty locals
    movs r0, #0
.final_2_24:
    add sp, #4*1 ; pop locals 1
control_onEvent__P391_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(174,9): control.EventContext.registerHandler
    ;
    .object control_EventContext_registerHandler__P405 "base/eventcontext.ts(174,9): control.EventContext.registerHandler"
control_EventContext_registerHandler__P405_pre:
    .section code
    .balign 4
control_EventContext_registerHandler__P405_args:
    cmp r4, #5
    bge control_EventContext_registerHandler__P405_nochk
    push {lr}
    bl _expand_args_5_22
    bl control_EventContext_registerHandler__P405_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
control_EventContext_registerHandler__P405:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_registerHandler__P405_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerHandler__P405_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7239:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7239      
.jmpz187:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_control_EventHandler__C4402_validate_24
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_25      
.jmpz188:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_25      
.lazySkip_2_25:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_control_EventHandler__C4402_validate_24
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_25:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_25      
.jmpz189:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@4]
    bl _inst_control_EventHandler__C4402_validate_24
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@3]
    bl _inst_control_EventHandler__C4402_validate_24
    str r1, [r0, #12]
    @stackempty locals
    b .ret.405      
.else_0_25:
.afterif_3_25:
.cont.7239:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.7239      
.brk.7239:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, _ldlit_62 ; control_EventHandler__C4402_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*4] ; tmpref @1
    push {r0} ; proc-arg
    bl control_EventHandler_constructor__P4405
_proccall190:
    add sp, #4*5 ; pop locals 5
    pop {r0} ; tmpref @1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl control_EventHandler_register__P4403
_proccall191:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.405:
    @stackempty locals
    movs r0, #0
.final_4_25:
    add sp, #4*4 ; pop locals 4
control_EventContext_registerHandler__P405_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(31,9): control.EventHandler.register
    ;
    .object control_EventHandler_register__P4403 "base/eventcontext.ts(31,9): control.EventHandler.register"
control_EventHandler_register__P4403_pre:
    .section code
    .balign 4
control_EventHandler_register__P4403_args:
    cmp r4, #1
    bge control_EventHandler_register__P4403_nochk
    push {lr}
    bl _expand_args_1_10
    bl control_EventHandler_register__P4403_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventHandler_register__P4403:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventHandler__C4402_validate_24
    mov lr, r7
control_EventHandler_register__P4403_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_register__P4403_locals:
    movs r0, #1
    ldr r1, _ldlit_63 ; control_EventHandler_register_inline__P7278_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.4403:
    @stackempty locals
    movs r0, #0
.final_0_26:
control_EventHandler_register__P4403_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(32,59): control.EventHandler.register.inline
    ;
    .object control_EventHandler_register_inline__P7278 "base/eventcontext.ts(32,59): control.EventHandler.register.inline"
control_EventHandler_register_inline__P7278_pre:
    .section code
    .balign 4
control_EventHandler_register_inline__P7278_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_EventHandler_register_inline__P7278_args@fn
control_EventHandler_register_inline__P7278_args:
    .section code
control_EventHandler_register_inline__P7278:
control_EventHandler_register_inline__P7278_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_register_inline__P7278_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_27      
.jmpz192:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    movs r1, #154
    bl _ifacecall1__20
_proccall193:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_27:
.afterif_1_27:
.ret.7278:
    @stackempty locals
    movs r0, #0
.final_2_27:
control_EventHandler_register_inline__P7278_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(24,9): control.EventHandler.constructor
    ;
    .object control_EventHandler_constructor__P4405 "base/eventcontext.ts(24,9): control.EventHandler.constructor"
control_EventHandler_constructor__P4405_pre:
    .section code
    .balign 4
    .section code
control_EventHandler_constructor__P4405:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventHandler__C4402_validate_24
    mov lr, r7
control_EventHandler_constructor__P4405_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_constructor__P4405_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    movs r0, #0
.ret.4405:
    @stackempty locals
.final_0_28:
control_EventHandler_constructor__P4405_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(214,5): control.eventContext
    ;
    .object control_eventContext__P408 "base/eventcontext.ts(214,5): control.eventContext"
control_eventContext__P408_pre:
    .section code
    .balign 4
    .section code
control_eventContext__P408:
control_eventContext__P408_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_eventContext__P408_locals:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_29      
.jmpz194:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_29      
.condexprz_0_29:
    movs r0, #0
.condexprfin_1_29:
; jmp value (already in r0)
.ret.408:
    @stackempty locals
.final_2_29:
control_eventContext__P408_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(49,9): controller.ButtonEventHandlerState.constructor
    ;
    .object controller_ButtonEventHandlerState_constructor__P2161 "game/controllerbutton.ts(49,9): controller.ButtonEventHandlerState.constructor"
controller_ButtonEventHandlerState_constructor__P2161_pre:
    .section code
    .balign 4
    .section code
controller_ButtonEventHandlerState_constructor__P2161:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_ButtonEventHandlerState__C2160_validate_19
    mov lr, r7
controller_ButtonEventHandlerState_constructor__P2161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_ButtonEventHandlerState_constructor__P2161_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    movs r0, #0
.ret.2161:
    @stackempty locals
.final_0_30:
controller_ButtonEventHandlerState_constructor__P2161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(67,9): controller.Button.handlerState
    ;
    .object controller_Button_handlerState__P4599 "game/controllerbutton.ts(67,9): controller.Button.handlerState"
controller_Button_handlerState__P4599_pre:
    .section code
    .balign 4
controller_Button_handlerState__P4599_args:
    cmp r4, #1
    bge controller_Button_handlerState__P4599_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Button_handlerState__P4599_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_handlerState__P4599:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_handlerState__P4599_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button_handlerState__P4599_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    bl game_currentScene__P2968
_proccall195:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #84]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7304:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7304      
.jmpz196:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2160_validate_19
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_31      
.jmpz197:
    ldr r0, [sp, locals@0]
    b .ret.4599      
.else_0_31:
.afterif_1_31:
.cont.7304:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.7304      
.brk.7304:
    movs r0, #0
    str r0, [sp, locals@1]
    movs r0, #0
.ret.4599:
    @stackempty locals
.final_2_31:
    add sp, #4*3 ; pop locals 3
controller_Button_handlerState__P4599_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function main.ts(11,1): draw
    ;
    .object draw__P4322 "main.ts(11,1): draw"
draw__P4322_pre:
    .section code
    .balign 4
    .section code
draw__P4322:
draw__P4322_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
draw__P4322_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl sprites_create__P2250
_proccall198:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.ret.4322:
    @stackempty locals
    movs r0, #0
.final_0_32:
    add sp, #4*1 ; pop locals 1
draw__P4322_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprites.ts(36,5): sprites.create
    ;
    .object sprites_create__P2250 "game/sprites.ts(36,5): sprites.create"
sprites_create__P2250_pre:
    .section code
    .balign 4
    .section code
sprites_create__P2250:
sprites_create__P2250_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_create__P2250_locals:
    bl game_currentScene__P2968
_proccall199:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_64 ; Sprite__C2314_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_constructor__P2361
_proccall200:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_setKind__P2381
_proccall201:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_PhysicsEngine__C2484_25
_proccall202:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_65 ; forEach_inline__P7335_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #1
    ldr r1, _ldlit_66 ; sprites_create_inline__P7342_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #44]
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall203:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall204:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
.ret.2250:
    @stackempty locals
.final_0_33:
    add sp, #4*2 ; pop locals 2
sprites_create__P2250_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprites.ts(44,21): forEach.inline
    ;
    .object forEach_inline__P7335 "game/sprites.ts(44,21): forEach.inline"
forEach_inline__P7335_pre:
    .section code
    .balign 4
forEach_inline__P7335_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P7335_args@fn
forEach_inline__P7335_args:
    cmp r4, #1
    bge forEach_inline__P7335_nochk
    push {lr}
    bl _expand_args_1_10
    bl forEach_inline__P7335_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_62:
 .word control_EventHandler__C4402_VT
_ldlit_63:
 .word control_EventHandler_register_inline__P7278_Lit
_ldlit_64:
 .word Sprite__C2314_VT
_ldlit_65:
 .word forEach_inline__P7335_Lit
_ldlit_66:
 .word sprites_create_inline__P7342_Lit
.object POP
    .section code
forEach_inline__P7335:
forEach_inline__P7335_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P7335_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.7335:
    @stackempty locals
.final_0_34:
forEach_inline__P7335_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprites.ts(45,22): sprites.create.inline
    ;
    .object sprites_create_inline__P7342 "game/sprites.ts(45,22): sprites.create.inline"
sprites_create_inline__P7342_pre:
    .section code
    .balign 4
sprites_create_inline__P7342_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word sprites_create_inline__P7342_args@fn
sprites_create_inline__P7342_args:
    cmp r4, #1
    bge sprites_create_inline__P7342_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_create_inline__P7342_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_create_inline__P7342:
sprites_create_inline__P7342_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_create_inline__P7342_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #154
    bl _ifacecall2__27
_proccall205:
    add sp, #4*2 ; pop locals 2
.ret.7342:
    @stackempty locals
    movs r0, #0
.final_0_35:
sprites_create_inline__P7342_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(262,5): helpers.arrayFilter
    ;
    .object helpers_arrayFilter__P110 "base/pxt-helpers.ts(262,5): helpers.arrayFilter"
helpers_arrayFilter__P110_pre:
    .section code
    .balign 4
    .section code
helpers_arrayFilter__P110:
helpers_arrayFilter__P110_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayFilter__P110_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7357:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.7357      
.jmpz206:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_36      
.jmpz207:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_36:
.afterif_1_36:
.cont.7357:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.7357      
.brk.7357:
    ldr r0, [sp, locals@0]
.ret.110:
    @stackempty locals
.final_2_36:
    add sp, #4*4 ; pop locals 4
helpers_arrayFilter__P110_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(255,5): helpers.arrayForEach
    ;
    .object helpers_arrayForEach__P109 "base/pxt-helpers.ts(255,5): helpers.arrayForEach"
helpers_arrayForEach__P109_pre:
    .section code
    .balign 4
    .section code
helpers_arrayForEach__P109:
helpers_arrayForEach__P109_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayForEach__P109_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.7380:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.7380      
.jmpz209:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.7380:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.7380      
.brk.7380:
.ret.109:
    @stackempty locals
    movs r0, #0
.final_0_37:
    add sp, #4*2 ; pop locals 2
helpers_arrayForEach__P109_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(9,5): PhysicsEngine.addSprite
    ;
    .object PhysicsEngine_addSprite__P2486 "game/physics.ts(9,5): PhysicsEngine.addSprite"
PhysicsEngine_addSprite__P2486_pre:
    .section code
    .balign 4
PhysicsEngine_addSprite__P2486_args:
    cmp r4, #2
    bge PhysicsEngine_addSprite__P2486_nochk
    push {lr}
    bl _expand_args_2_17
    bl PhysicsEngine_addSprite__P2486_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
PhysicsEngine_addSprite__P2486:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2484_validate_29
    mov lr, r7
PhysicsEngine_addSprite__P2486_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_addSprite__P2486_locals:
.ret.2486:
    @stackempty locals
    movs r0, #0
.final_0_38:
PhysicsEngine_addSprite__P2486_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(465,5): Sprite.setKind
    ;
    .object Sprite_setKind__P2381 "game/sprite.ts(465,5): Sprite.setKind"
Sprite_setKind__P2381_pre:
    .section code
    .balign 4
Sprite_setKind__P2381_args:
    cmp r4, #2
    bge Sprite_setKind__P2381_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_setKind__P2381_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_setKind__P2381:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_setKind__P2381_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_setKind__P2381_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_39      
.jmpz211:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_39      
.lazySkip_2_39:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_1_39:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_39      
.jmpz212:
    b .ret.2381      
.else_0_39:
.afterif_3_39:
    bl game_currentScene__P2968
_proccall213:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #24]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_39      
.jmpz214:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_39      
.lazySkip_6_39:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
.lazy_5_39:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_39      
.jmpz215:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteSet_remove__P2443
_proccall216:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_39:
.afterif_7_39:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_ge
    beq .else_8_39      
.jmpz217:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_9_39      
.jmpz218:
    ldr r0, _ldlit_68 ; sprites_SpriteSet__C2436_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl sprites_SpriteSet_constructor__P2438
_proccall219:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_32
    bl _pxt_map_set
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_9_39:
.afterif_10_39:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteSet_add__P2441
_proccall220:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_8_39:
.afterif_11_39:
    bl game_currentScene__P2968
_proccall221:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #52]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_39      
.jmpz222:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    bl _conv_32
    bl _pxt_map_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_12_39:
.afterif_13_39:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #112]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #64]
    @stackempty locals
.ret.2381:
    @stackempty locals
    movs r0, #0
.final_14_39:
    add sp, #4*2 ; pop locals 2
Sprite_setKind__P2381_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(42,9): sprites.SpriteSet.add
    ;
    .object sprites_SpriteSet_add__P2441 "game/spriteset.ts(42,9): sprites.SpriteSet.add"
sprites_SpriteSet_add__P2441_pre:
    .section code
    .balign 4
sprites_SpriteSet_add__P2441_args:
    cmp r4, #2
    bge sprites_SpriteSet_add__P2441_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_SpriteSet_add__P2441_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteSet_add__P2441:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2436_validate_33
    mov lr, r7
sprites_SpriteSet_add__P2441_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_add__P2441_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_40      
.jmpz223:
    movs r0, #10
    b .ret.2441      
.else_0_40:
.afterif_1_40:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteSet_contains__P2444_nochk
_proccall225:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_40      
.jmpz224:
    movs r0, #10
    b .ret.2441      
.else_2_40:
.afterif_3_40:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
.ret.2441:
    @stackempty locals
.final_4_40:
sprites_SpriteSet_add__P2441_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(80,9): sprites.SpriteSet.contains
    ;
    .object sprites_SpriteSet_contains__P2444 "game/spriteset.ts(80,9): sprites.SpriteSet.contains"
sprites_SpriteSet_contains__P2444_pre:
    .section code
    .balign 4
sprites_SpriteSet_contains__P2444_args:
    cmp r4, #2
    bge sprites_SpriteSet_contains__P2444_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_SpriteSet_contains__P2444_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteSet_contains__P2444:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2436_validate_33
    mov lr, r7
sprites_SpriteSet_contains__P2444_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_contains__P2444_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.ret.2444:
    @stackempty locals
.final_0_41:
sprites_SpriteSet_contains__P2444_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(20,9): sprites.SpriteSet.constructor
    ;
    .object sprites_SpriteSet_constructor__P2438 "game/spriteset.ts(20,9): sprites.SpriteSet.constructor"
sprites_SpriteSet_constructor__P2438_pre:
    .section code
    .balign 4
    .section code
sprites_SpriteSet_constructor__P2438:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2436_validate_33
    mov lr, r7
sprites_SpriteSet_constructor__P2438_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_constructor__P2438_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2438:
    @stackempty locals
.final_0_42:
sprites_SpriteSet_constructor__P2438_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(67,9): sprites.SpriteSet.remove
    ;
    .object sprites_SpriteSet_remove__P2443 "game/spriteset.ts(67,9): sprites.SpriteSet.remove"
sprites_SpriteSet_remove__P2443_pre:
    .section code
    .balign 4
sprites_SpriteSet_remove__P2443_args:
    cmp r4, #2
    bge sprites_SpriteSet_remove__P2443_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_SpriteSet_remove__P2443_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteSet_remove__P2443:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2436_validate_33
    mov lr, r7
sprites_SpriteSet_remove__P2443_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
sprites_SpriteSet_remove__P2443_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_0_43      
.jmpz226:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySplice__P100
_proccall227:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #66
    b .ret.2443      
.else_0_43:
.afterif_1_43:
    movs r0, #10
.ret.2443:
    @stackempty locals
.final_2_43:
    add sp, #4*1 ; pop locals 1
sprites_SpriteSet_remove__P2443_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(138,5): helpers.arraySplice
    ;
    .object helpers_arraySplice__P100 "base/pxt-helpers.ts(138,5): helpers.arraySplice"
helpers_arraySplice__P100_pre:
    .section code
    .balign 4
    .section code
helpers_arraySplice__P100:
helpers_arraySplice__P100_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_arraySplice__P100_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_44      
.jmpz228:
    b .ret.100      
.else_0_44:
.afterif_1_44:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.7497:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    beq .brk.7497      
.jmpz229:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_34
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.7497:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.7497      
.brk.7497:
.ret.100:
    @stackempty locals
    movs r0, #0
.final_2_44:
    add sp, #4*1 ; pop locals 1
helpers_arraySplice__P100_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_68:
 .word sprites_SpriteSet__C2436_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(279,5): Sprite.constructor
    ;
    .object Sprite_constructor__P2361 "game/sprite.ts(279,5): Sprite.constructor"
Sprite_constructor__P2361_pre:
    .section code
    .balign 4
    .section code
Sprite_constructor__P2361:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_constructor__P2361_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_constructor__P2361_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_constructor__P2072
_proccall230:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall231:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall232:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2332_nochk
_proccall233:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2334_nochk
_proccall234:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ax__P2336_nochk
_proccall235:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ay__P2338_nochk
_proccall236:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_fx__P2340_nochk
_proccall237:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_fy__P2342_nochk
_proccall238:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    str r1, [r0, #48]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #116]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_setImage__P2364_nochk
_proccall239:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_setKind__P2381_nochk
_proccall240:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #68]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #108]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2361:
    @stackempty locals
.final_0_45:
Sprite_constructor__P2361_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(333,5): Sprite.setImage
    ;
    .object Sprite_setImage__P2364 "game/sprite.ts(333,5): Sprite.setImage"
Sprite_setImage__P2364_pre:
    .section code
    .balign 4
Sprite_setImage__P2364_args:
    cmp r4, #2
    bge Sprite_setImage__P2364_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_setImage__P2364_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_setImage__P2364:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_setImage__P2364_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_setImage__P2364_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_46      
.jmpz241:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_46      
.lazySkip_2_46:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_1_46:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_46      
.jmpz242:
    b .ret.2364      
.else_0_46:
.afterif_3_46:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #88]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #56
    bl _classCall_Sprite__C2314_this_35
_proccall243:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2364:
    @stackempty locals
    movs r0, #0
.final_4_46:
Sprite_setImage__P2364_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(364,5): Sprite.recalcSize
    ;
    .object Sprite_recalcSize__P4623 "game/sprite.ts(364,5): Sprite.recalcSize"
Sprite_recalcSize__P4623_pre:
    .section code
    .balign 4
Sprite_recalcSize__P4623_args:
    cmp r4, #1
    bge Sprite_recalcSize__P4623_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_recalcSize__P4623_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_recalcSize__P4623:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_recalcSize__P4623_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_recalcSize__P4623_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2343_nochk
_proccall244:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall245:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #52]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2345_nochk
_proccall246:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall247:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #56]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_resetHitbox__P2366_nochk
_proccall248:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4623:
    @stackempty locals
    movs r0, #0
.final_0_47:
Sprite_recalcSize__P4623_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(343,5): Sprite.resetHitbox
    ;
    .object Sprite_resetHitbox__P2366 "game/sprite.ts(343,5): Sprite.resetHitbox"
Sprite_resetHitbox__P2366_pre:
    .section code
    .balign 4
Sprite_resetHitbox__P2366_args:
    cmp r4, #1
    bge Sprite_resetHitbox__P2366_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_resetHitbox__P2366_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_resetHitbox__P2366:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_resetHitbox__P2366_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_resetHitbox__P2366_locals:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #104]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2314_this_35
_proccall249:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2366:
    @stackempty locals
    movs r0, #0
.final_0_48:
Sprite_resetHitbox__P2366_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(348,5): Sprite.setHitbox
    ;
    .object Sprite_setHitbox__P2367 "game/sprite.ts(348,5): Sprite.setHitbox"
Sprite_setHitbox__P2367_pre:
    .section code
    .balign 4
Sprite_setHitbox__P2367_args:
    cmp r4, #1
    bge Sprite_setHitbox__P2367_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_setHitbox__P2367_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_setHitbox__P2367:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_setHitbox__P2367_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_setHitbox__P2367_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_49      
.jmpz250:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_updateIfInvalid__P2197
_proccall251:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_49      
.else_0_49:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_calculateHitBox__P2199
_proccall252:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_49:
.ret.2367:
    @stackempty locals
    movs r0, #0
.final_2_49:
Sprite_setHitbox__P2367_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(104,5): game.calculateHitBox
    ;
    .object game_calculateHitBox__P2199 "game/hitbox.ts(104,5): game.calculateHitBox"
game_calculateHitBox__P2199_pre:
    .section code
    .balign 4
    .section code
game_calculateHitBox__P2199:
game_calculateHitBox__P2199_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
game_calculateHitBox__P2199_locals:
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_50      
.jmpz253:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_50      
.lazySkip_2_50:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_isValid__P2195
_proccall254:
    add sp, #4*1 ; pop locals 1
.lazy_1_50:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_50      
.jmpz255:
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    b .ret.2199      
.else_0_50:
.afterif_3_50:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; the one arg
    bl Fx8__P149
_proccall256:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; the one arg
    bl Fx8__P149
_proccall257:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.7641:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7641      
.jmpz258:
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@8]
    @stackempty locals
.fortop.7648:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7648      
.jmpz259:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_50      
.jmpz260:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall261:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall262:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall263:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall264:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
.else_4_50:
.afterif_5_50:
.cont.7648:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    ldr r0, [sp, locals@8]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    push {r0}; tmpstore @1
    str r0, [sp, locals@8]
    pop {r0} ; tmpref @1
    @stackempty locals
    b .fortop.7648      
.brk.7648:
.cont.7641:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@6]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    push {r0}; tmpstore @1
    str r0, [sp, locals@6]
    pop {r0} ; tmpref @1
    @stackempty locals
    b .fortop.7641      
.brk.7641:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall265:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall266:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall267:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall268:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #44]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #48]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, _ldlit_70 ; game_Hitbox__C2183_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, _ldlit_71 ; -511      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r1, _ldlit_71 ; -511      
    bl _numops_ands
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; tmpref @1
    push {r0} ; proc-arg
    bl game_Hitbox_constructor__P2190
_proccall269:
    add sp, #4*11 ; pop locals 11
    pop {r0} ; tmpref @1
.ret.2199:
    @stackempty locals
.final_6_50:
    add sp, #4*11 ; pop locals 11
game_calculateHitBox__P2199_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(10,9): game.Hitbox.constructor
    ;
    .object game_Hitbox_constructor__P2190 "game/hitbox.ts(10,9): game.Hitbox.constructor"
game_Hitbox_constructor__P2190_pre:
    .section code
    .balign 4
    .section code
game_Hitbox_constructor__P2190:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2183_validate_36
    mov lr, r7
game_Hitbox_constructor__P2190_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_constructor__P2190_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_calcDimensionalHash__P2365
_proccall270:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.2190:
    @stackempty locals
.final_0_52:
game_Hitbox_constructor__P2190_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(339,5): Sprite.calcDimensionalHash
    ;
    .object Sprite_calcDimensionalHash__P2365 "game/sprite.ts(339,5): Sprite.calcDimensionalHash"
Sprite_calcDimensionalHash__P2365_pre:
    .section code
    .balign 4
Sprite_calcDimensionalHash__P2365_args:
    cmp r4, #1
    bge Sprite_calcDimensionalHash__P2365_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_calcDimensionalHash__P2365_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_calcDimensionalHash__P2365:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_calcDimensionalHash__P2365_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_calcDimensionalHash__P2365_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::revision
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    movs r0, #17
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall271:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    mov r3, r0
    movs r0, #33
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall272:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2365:
    @stackempty locals
.final_0_53:
Sprite_calcDimensionalHash__P2365_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(18,5): Fx.toIntShifted
    ;
    .object Fx_toIntShifted__P156 "base/fixed.ts(18,5): Fx.toIntShifted"
Fx_toIntShifted__P156_pre:
    .section code
    .balign 4
    .section code
Fx_toIntShifted__P156:
Fx_toIntShifted__P156_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_toIntShifted__P156_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #17
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
.ret.156:
    @stackempty locals
.final_0_54:
Fx_toIntShifted__P156_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(30,5): Fx.mul
    ;
    .object Fx_mul__P160 "base/fixed.ts(30,5): Fx.mul"
Fx_mul__P160_pre:
    .section code
    .balign 4
    .section code
Fx_mul__P160:
Fx_mul__P160_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_mul__P160_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::imul
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.ret.160:
    @stackempty locals
.final_0_56:
Fx_mul__P160_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(57,5): Fx.max
    ;
    .object Fx_max__P167 "base/fixed.ts(57,5): Fx.max"
Fx_max__P167_pre:
    .section code
    .balign 4
    .section code
Fx_max__P167:
Fx_max__P167_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_max__P167_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .else_0_58      
.jmpz273:
    ldr r0, [sp, args@0]
    b .ret.167      
    b .afterif_1_58      
.else_0_58:
    ldr r0, [sp, args@1]
    b .ret.167      
.afterif_1_58:
    movs r0, #0
.ret.167:
    @stackempty locals
.final_2_58:
Fx_max__P167_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(51,5): Fx.min
    ;
    .object Fx_min__P166 "base/fixed.ts(51,5): Fx.min"
Fx_min__P166_pre:
    .section code
    .balign 4
    .section code
Fx_min__P166:
Fx_min__P166_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_min__P166_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_lt
    beq .else_0_59      
.jmpz274:
    ldr r0, [sp, args@0]
    b .ret.166      
    b .afterif_1_59      
.else_0_59:
    ldr r0, [sp, args@1]
    b .ret.166      
.afterif_1_59:
    movs r0, #0
.ret.166:
    @stackempty locals
.final_2_59:
Fx_min__P166_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(323,5): Sprite.image
    ;
    .object Sprite_image__P2363 "game/sprite.ts(323,5): Sprite.image"
Sprite_image__P2363_pre:
    .section code
    .balign 4
Sprite_image__P2363_args:
    cmp r4, #1
    bge Sprite_image__P2363_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_image__P2363_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_image__P2363:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_image__P2363_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_image__P2363_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
.ret.2363:
    @stackempty locals
.final_0_60:
Sprite_image__P2363_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(41,9): game.Hitbox.isValid
    ;
    .object game_Hitbox_isValid__P2195 "game/hitbox.ts(41,9): game.Hitbox.isValid"
game_Hitbox_isValid__P2195_pre:
    .section code
    .balign 4
game_Hitbox_isValid__P2195_args:
    cmp r4, #1
    bge game_Hitbox_isValid__P2195_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_Hitbox_isValid__P2195_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_isValid__P2195:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2183_validate_36
    mov lr, r7
game_Hitbox_isValid__P2195_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_isValid__P2195_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl Sprite_calcDimensionalHash__P2365
_proccall275:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.2195:
    @stackempty locals
.final_0_61:
game_Hitbox_isValid__P2195_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(49,9): game.Hitbox.updateIfInvalid
    ;
    .object game_Hitbox_updateIfInvalid__P2197 "game/hitbox.ts(49,9): game.Hitbox.updateIfInvalid"
game_Hitbox_updateIfInvalid__P2197_pre:
    .section code
    .balign 4
game_Hitbox_updateIfInvalid__P2197_args:
    cmp r4, #1
    bge game_Hitbox_updateIfInvalid__P2197_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_Hitbox_updateIfInvalid__P2197_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_updateIfInvalid__P2197:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2183_validate_36
    mov lr, r7
game_Hitbox_updateIfInvalid__P2197_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
game_Hitbox_updateIfInvalid__P2197_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_isValid__P2195_nochk
_proccall277:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_62      
.jmpz276:
    b .ret.2197      
    b .afterif_1_62      
.object PUSH
.balign 4
_ldlit_70:
 .word game_Hitbox__C2183_VT
_ldlit_71:
 .word -511
.object POP
.else_0_62:
.afterif_1_62:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl game_calculateHitBox__P2199
_proccall278:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@2]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #12]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #16]
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@5]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@6]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall279:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@7]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall280:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@6]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall281:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@8]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall282:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@9]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_gt
    beq .else_2_62      
.jmpz283:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@5]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_62:
.afterif_3_62:
    ldr r0, [sp, locals@10]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_gt
    beq .else_4_62      
.jmpz284:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@6]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_62:
.afterif_5_62:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2197:
    @stackempty locals
    movs r0, #0
.final_6_62:
    add sp, #4*11 ; pop locals 11
game_Hitbox_updateIfInvalid__P2197_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(45,5): Fx.abs
    ;
    .object Fx_abs__P165 "base/fixed.ts(45,5): Fx.abs"
Fx_abs__P165_pre:
    .section code
    .balign 4
    .section code
Fx_abs__P165:
Fx_abs__P165_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_abs__P165_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_63      
.jmpz285:
    movs r0, #1
    ldr r1, [sp, args@0]
    bl _numops_subs
    b .ret.165      
    b .afterif_1_63      
.else_0_63:
    ldr r0, [sp, args@0]
    b .ret.165      
.afterif_1_63:
    movs r0, #0
.ret.165:
    @stackempty locals
.final_2_63:
Fx_abs__P165_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(210,5): Sprite.sy
    ;
    .object Sprite_sy__P2345 "game/sprite.ts(210,5): Sprite.sy"
Sprite_sy__P2345_pre:
    .section code
    .balign 4
Sprite_sy__P2345_args:
    cmp r4, #1
    bge Sprite_sy__P2345_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_sy__P2345_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_sy__P2345:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_sy__P2345_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_sy__P2345_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2345:
    @stackempty locals
.final_0_64:
Sprite_sy__P2345_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(197,5): Sprite.sx
    ;
    .object Sprite_sx__P2343 "game/sprite.ts(197,5): Sprite.sx"
Sprite_sx__P2343_pre:
    .section code
    .balign 4
Sprite_sx__P2343_args:
    cmp r4, #1
    bge Sprite_sx__P2343_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_sx__P2343_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_sx__P2343:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_sx__P2343_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_sx__P2343_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2343:
    @stackempty locals
.final_0_66:
Sprite_sx__P2343_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(192,5): Sprite.fy
    ;
    .object Sprite_fy__P2342 "game/sprite.ts(192,5): Sprite.fy"
Sprite_fy__P2342_pre:
    .section code
    .balign 4
Sprite_fy__P2342_args:
    cmp r4, #2
    bge Sprite_fy__P2342_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_fy__P2342_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_fy__P2342:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_fy__P2342_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fy__P2342_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall286:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall287:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2342:
    @stackempty locals
    movs r0, #0
.final_0_67:
Sprite_fy__P2342_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(187,5): Sprite.fy
    ;
    .object Sprite_fy__P2341 "game/sprite.ts(187,5): Sprite.fy"
Sprite_fy__P2341_pre:
    .section code
    .balign 4
Sprite_fy__P2341_args:
    cmp r4, #1
    bge Sprite_fy__P2341_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_fy__P2341_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_fy__P2341:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_fy__P2341_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fy__P2341_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2341:
    @stackempty locals
.final_0_68:
Sprite_fy__P2341_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(182,5): Sprite.fx
    ;
    .object Sprite_fx__P2340 "game/sprite.ts(182,5): Sprite.fx"
Sprite_fx__P2340_pre:
    .section code
    .balign 4
Sprite_fx__P2340_args:
    cmp r4, #2
    bge Sprite_fx__P2340_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_fx__P2340_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_fx__P2340:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_fx__P2340_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fx__P2340_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall288:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall289:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2340:
    @stackempty locals
    movs r0, #0
.final_0_69:
Sprite_fx__P2340_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(177,5): Sprite.fx
    ;
    .object Sprite_fx__P2339 "game/sprite.ts(177,5): Sprite.fx"
Sprite_fx__P2339_pre:
    .section code
    .balign 4
Sprite_fx__P2339_args:
    cmp r4, #1
    bge Sprite_fx__P2339_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_fx__P2339_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_fx__P2339:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_fx__P2339_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fx__P2339_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2339:
    @stackempty locals
.final_0_70:
Sprite_fx__P2339_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(171,5): Sprite.ay
    ;
    .object Sprite_ay__P2338 "game/sprite.ts(171,5): Sprite.ay"
Sprite_ay__P2338_pre:
    .section code
    .balign 4
Sprite_ay__P2338_args:
    cmp r4, #2
    bge Sprite_ay__P2338_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_ay__P2338_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_ay__P2338:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_ay__P2338_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ay__P2338_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall290:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2338:
    @stackempty locals
    movs r0, #0
.final_0_71:
Sprite_ay__P2338_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(166,5): Sprite.ay
    ;
    .object Sprite_ay__P2337 "game/sprite.ts(166,5): Sprite.ay"
Sprite_ay__P2337_pre:
    .section code
    .balign 4
Sprite_ay__P2337_args:
    cmp r4, #1
    bge Sprite_ay__P2337_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_ay__P2337_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_ay__P2337:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_ay__P2337_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ay__P2337_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2337:
    @stackempty locals
.final_0_72:
Sprite_ay__P2337_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(160,5): Sprite.ax
    ;
    .object Sprite_ax__P2336 "game/sprite.ts(160,5): Sprite.ax"
Sprite_ax__P2336_pre:
    .section code
    .balign 4
Sprite_ax__P2336_args:
    cmp r4, #2
    bge Sprite_ax__P2336_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_ax__P2336_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_ax__P2336:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_ax__P2336_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ax__P2336_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall291:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2336:
    @stackempty locals
    movs r0, #0
.final_0_73:
Sprite_ax__P2336_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(155,5): Sprite.ax
    ;
    .object Sprite_ax__P2335 "game/sprite.ts(155,5): Sprite.ax"
Sprite_ax__P2335_pre:
    .section code
    .balign 4
Sprite_ax__P2335_args:
    cmp r4, #1
    bge Sprite_ax__P2335_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_ax__P2335_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_ax__P2335:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_ax__P2335_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ax__P2335_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2335:
    @stackempty locals
.final_0_74:
Sprite_ax__P2335_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(149,5): Sprite.vy
    ;
    .object Sprite_vy__P2334 "game/sprite.ts(149,5): Sprite.vy"
Sprite_vy__P2334_pre:
    .section code
    .balign 4
Sprite_vy__P2334_args:
    cmp r4, #2
    bge Sprite_vy__P2334_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_vy__P2334_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_vy__P2334:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_vy__P2334_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vy__P2334_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall292:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2334:
    @stackempty locals
    movs r0, #0
.final_0_75:
Sprite_vy__P2334_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(144,5): Sprite.vy
    ;
    .object Sprite_vy__P2333 "game/sprite.ts(144,5): Sprite.vy"
Sprite_vy__P2333_pre:
    .section code
    .balign 4
Sprite_vy__P2333_args:
    cmp r4, #1
    bge Sprite_vy__P2333_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_vy__P2333_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_vy__P2333:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_vy__P2333_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vy__P2333_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2333:
    @stackempty locals
.final_0_76:
Sprite_vy__P2333_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(138,5): Sprite.vx
    ;
    .object Sprite_vx__P2332 "game/sprite.ts(138,5): Sprite.vx"
Sprite_vx__P2332_pre:
    .section code
    .balign 4
Sprite_vx__P2332_args:
    cmp r4, #2
    bge Sprite_vx__P2332_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_vx__P2332_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_vx__P2332:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_vx__P2332_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vx__P2332_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall293:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2332:
    @stackempty locals
    movs r0, #0
.final_0_77:
Sprite_vx__P2332_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(133,5): Sprite.vx
    ;
    .object Sprite_vx__P2331 "game/sprite.ts(133,5): Sprite.vx"
Sprite_vx__P2331_pre:
    .section code
    .balign 4
Sprite_vx__P2331_args:
    cmp r4, #1
    bge Sprite_vx__P2331_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_vx__P2331_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_vx__P2331:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_vx__P2331_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vx__P2331_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2331:
    @stackempty locals
.final_0_78:
Sprite_vx__P2331_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(16,9): sprites.BaseSprite.constructor
    ;
    .object sprites_BaseSprite_constructor__P2072 "game/basesprite.ts(16,9): sprites.BaseSprite.constructor"
sprites_BaseSprite_constructor__P2072_pre:
    .section code
    .balign 4
    .section code
sprites_BaseSprite_constructor__P2072:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2070_validate_38
    mov lr, r7
sprites_BaseSprite_constructor__P2072_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite_constructor__P2072_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_z__P2075_nochk
_proccall294:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2968
_proccall295:
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_Scene_addSprite__P2842
_proccall296:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2072:
    @stackempty locals
.final_0_79:
sprites_BaseSprite_constructor__P2072_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(199,9): scene.Scene.addSprite
    ;
    .object scene_Scene_addSprite__P2842 "game/scene.ts(199,9): scene.Scene.addSprite"
scene_Scene_addSprite__P2842_pre:
    .section code
    .balign 4
scene_Scene_addSprite__P2842_args:
    cmp r4, #2
    bge scene_Scene_addSprite__P2842_nochk
    push {lr}
    bl _expand_args_2_17
    bl scene_Scene_addSprite__P2842_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Scene_addSprite__P2842:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2816_validate_18
    mov lr, r7
scene_Scene_addSprite__P2842_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_addSprite__P2842_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #20]
    push {r0}; tmpstore @3
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    pop {r0} ; tmpref @3
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #164
    bl _ifacecall2_set_39
_proccall297:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2842:
    @stackempty locals
    movs r0, #0
.final_0_80:
scene_Scene_addSprite__P2842_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(31,9): sprites.BaseSprite.z
    ;
    .object sprites_BaseSprite_z__P2075 "game/basesprite.ts(31,9): sprites.BaseSprite.z"
sprites_BaseSprite_z__P2075_pre:
    .section code
    .balign 4
sprites_BaseSprite_z__P2075_args:
    cmp r4, #2
    bge sprites_BaseSprite_z__P2075_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_BaseSprite_z__P2075_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_BaseSprite_z__P2075:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2070_validate_38
    mov lr, r7
sprites_BaseSprite_z__P2075_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite_z__P2075_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_0_81      
.jmpz298:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    bl game_currentScene__P2968
_proccall299:
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #36]
    movs r1, #3
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_scene_Scene__C2816_validate_18
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_81:
.afterif_1_81:
.ret.2075:
    @stackempty locals
    movs r0, #0
.final_2_81:
sprites_BaseSprite_z__P2075_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(27,9): sprites.BaseSprite.z
    ;
    .object sprites_BaseSprite_z__P2074 "game/basesprite.ts(27,9): sprites.BaseSprite.z"
sprites_BaseSprite_z__P2074_pre:
    .section code
    .balign 4
sprites_BaseSprite_z__P2074_args:
    cmp r4, #1
    bge sprites_BaseSprite_z__P2074_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_BaseSprite_z__P2074_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_BaseSprite_z__P2074:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2070_validate_38
    mov lr, r7
sprites_BaseSprite_z__P2074_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite_z__P2074_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2074:
    @stackempty locals
.final_0_82:
sprites_BaseSprite_z__P2074_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(178,5): helpers.imageDrawCircle
    ;
    .object helpers_imageDrawCircle__P1939 "screen---st7735/image.ts(178,5): helpers.imageDrawCircle"
helpers_imageDrawCircle__P1939_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawCircle__P1939:
helpers_imageDrawCircle__P1939_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_imageDrawCircle__P1939_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, args@3]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_83      
.jmpz300:
    b .ret.1939      
.else_0_83:
.afterif_1_83:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@3]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #7
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
.cont.8062:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_ge
    bne .jmpz301
    b .brk.8062      
.jmpz301:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #1
    bl _cmp_gt
    beq .else_2_83      
.jmpz302:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #21
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    b .afterif_3_83      
.else_2_83:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #13
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
.afterif_3_83:
    b .cont.8062      
.brk.8062:
.ret.1939:
    @stackempty locals
    movs r0, #0
.final_4_83:
    add sp, #4*3 ; pop locals 3
helpers_imageDrawCircle__P1939_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(159,5): helpers.imageFillRect
    ;
    .object helpers_imageFillRect__P1935 "screen---st7735/image.ts(159,5): helpers.imageFillRect"
helpers_imageFillRect__P1935_pre:
    .section code
    .balign 4
    .section code
helpers_imageFillRect__P1935:
helpers_imageFillRect__P1935_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageFillRect__P1935_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_pack__P4526
_proccall303:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl helpers_pack__P4526
_proccall304:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_fillRect
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.1935:
    @stackempty locals
    movs r0, #0
.final_0_84:
helpers_imageFillRect__P1935_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(125,5): game.eventContext
    ;
    .object game_eventContext__P2971 "game/game.ts(125,5): game.eventContext"
game_eventContext__P2971_pre:
    .section code
    .balign 4
    .section code
game_eventContext__P2971:
game_eventContext__P2971_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_eventContext__P2971_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl game_init__P4823
_proccall305:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #4]
.ret.2971:
    @stackempty locals
.final_0_85:
game_eventContext__P2971_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(130,5): game.init
    ;
    .object game_init__P4823 "game/game.ts(130,5): game.init"
game_init__P4823_pre:
    .section code
    .balign 4
    .section code
game_init__P4823:
game_init__P4823_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_init__P4823_locals:
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_86      
.jmpz306:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_86      
.lazySkip_2_86:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
.lazy_1_86:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_86      
.jmpz307:
    ldr r0, _ldlit_73 ; scene_Scene__C2816_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    bl control_pushEventContext__P409
_proccall308:
    mov r3, r0
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_Scene_constructor__P2838
_proccall309:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_86:
.afterif_3_86:
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl scene_Scene_init__P2839
_proccall310:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4823:
    @stackempty locals
    movs r0, #0
.final_4_86:
game_init__P4823_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(127,9): scene.Scene.init
    ;
    .object scene_Scene_init__P2839 "game/scene.ts(127,9): scene.Scene.init"
scene_Scene_init__P2839_pre:
    .section code
    .balign 4
scene_Scene_init__P2839_args:
    cmp r4, #1
    bge scene_Scene_init__P2839_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Scene_init__P2839_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_init__P2839:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2816_validate_18
    mov lr, r7
scene_Scene_init__P2839_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init__P2839_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_87      
.jmpz311:
    b .ret.2839      
.else_0_87:
.afterif_1_87:
    bl power_poke__P1910
_proccall312:
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_74 ; scene_Scene_init_inline__P8222_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #17
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall313:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_75 ; controller__moveSprites__P2109_Lit      
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall314:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_76 ; scene_Scene_init_inline__P8246_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #31
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall315:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_77 ; scene_Scene_init_inline__P8259_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #111
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall316:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_78 ; scene_Scene_init_inline__P8280_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #181
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall317:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_79 ; scene_Scene_init_inline__P8288_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall318:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_80 ; control___screen_update__P1970_Lit      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall319:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    bl multiplayer_initServer__P3356
_proccall320:
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_81 ; scene_Scene_init_inline__P8318_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall321:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2839:
    @stackempty locals
    movs r0, #0
.final_2_87:
scene_Scene_init__P2839_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(134,73): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8222 "game/scene.ts(134,73): scene.Scene.init.inline"
scene_Scene_init_inline__P8222_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8222_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8222_args@fn
scene_Scene_init_inline__P8222_args:
    .section code
scene_Scene_init_inline__P8222:
scene_Scene_init_inline__P8222_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8222_locals:
    ldr r0, [r5, #4*3]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    bl _inst_control_EventContext__C395_validate_23
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #88]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller___update__P2140
_proccall322:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.8222:
    @stackempty locals
    movs r0, #0
.final_0_88:
scene_Scene_init_inline__P8222_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(143,70): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8246 "game/scene.ts(143,70): scene.Scene.init.inline"
scene_Scene_init_inline__P8246_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8246_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8246_args@fn
scene_Scene_init_inline__P8246_args:
    .section code
scene_Scene_init_inline__P8246:
scene_Scene_init_inline__P8246_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8246_locals:
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #52
    bl _classCall_PhysicsEngine__C2484_25
_proccall323:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.8246:
    @stackempty locals
    movs r0, #0
.final_0_89:
scene_Scene_init_inline__P8246_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(152,80): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8259 "game/scene.ts(152,80): scene.Scene.init.inline"
scene_Scene_init_inline__P8259_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8259_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8259_args@fn
scene_Scene_init_inline__P8259_args:
    .section code
scene_Scene_init_inline__P8259:
scene_Scene_init_inline__P8259_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Scene_init_inline__P8259_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    bl scene_Camera_update__P2771
_proccall324:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #16]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.8270:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8270      
.jmpz325:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r1, #4
    bl _ifacecall3__40
_proccall326:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.8270:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.8270      
.brk.8270:
    movs r0, #0
    str r0, [sp, locals@2]
.ret.8259:
    @stackempty locals
    movs r0, #0
.final_0_90:
    add sp, #4*4 ; pop locals 4
scene_Scene_init_inline__P8259_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_73:
 .word scene_Scene__C2816_VT
_ldlit_74:
 .word scene_Scene_init_inline__P8222_Lit
_ldlit_75:
 .word controller__moveSprites__P2109_Lit
_ldlit_76:
 .word scene_Scene_init_inline__P8246_Lit
_ldlit_77:
 .word scene_Scene_init_inline__P8259_Lit
_ldlit_78:
 .word scene_Scene_init_inline__P8280_Lit
_ldlit_79:
 .word scene_Scene_init_inline__P8288_Lit
_ldlit_80:
 .word control___screen_update__P1970_Lit
_ldlit_81:
 .word scene_Scene_init_inline__P8318_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(163,77): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8280 "game/scene.ts(163,77): scene.Scene.init.inline"
scene_Scene_init_inline__P8280_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8280_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8280_args@fn
scene_Scene_init_inline__P8280_args:
    .section code
scene_Scene_init_inline__P8280:
scene_Scene_init_inline__P8280_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8280_locals:
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl scene_Scene_render__P2844_nochk
_proccall327:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.8280:
    @stackempty locals
    movs r0, #0
.final_0_91:
scene_Scene_init_inline__P8280_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(168,81): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8288 "game/scene.ts(168,81): scene.Scene.init.inline"
scene_Scene_init_inline__P8288_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8288_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8288_args@fn
scene_Scene_init_inline__P8288_args:
    .section code
scene_Scene_init_inline__P8288:
scene_Scene_init_inline__P8288_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8288_locals:
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_92      
.jmpz328:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_92      
.lazySkip_2_92:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_1_92:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_92      
.jmpz329:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_83 ; _str43      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    push {r1}
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_92:
.afterif_3_92:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_92      
.jmpz331:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #28]
    push {r0} ; the one arg
    movs r1, #48
    bl _classCall_PhysicsEngine__C2484_25
_proccall332:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_92:
.afterif_5_92:
    bl game_consoleOverlay_draw__P3095
_proccall333:
    @stackempty locals
    bl power_checkDeepSleep__P1911
_proccall334:
    @stackempty locals
.ret.8288:
    @stackempty locals
    movs r0, #0
.final_6_92:
scene_Scene_init_inline__P8288_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(185,40): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8318 "game/scene.ts(185,40): scene.Scene.init.inline"
scene_Scene_init_inline__P8318_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8318_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8318_args@fn
scene_Scene_init_inline__P8318_args:
    cmp r4, #1
    bge scene_Scene_init_inline__P8318_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Scene_init_inline__P8318_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_init_inline__P8318:
scene_Scene_init_inline__P8318_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8318_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
.ret.8318:
    @stackempty locals
    movs r0, #0
.final_0_93:
scene_Scene_init_inline__P8318_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(28,5): multiplayer.initServer
    ;
    .object multiplayer_initServer__P3356 "game/multiplayer.ts(28,5): multiplayer.initServer"
multiplayer_initServer__P3356_pre:
    .section code
    .balign 4
    .section code
multiplayer_initServer__P3356:
multiplayer_initServer__P3356_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_initServer__P3356_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl multiplayer::getOrigin
    ldr r1, _ldlit_84 ; _str85      
    bl _cmp_eqq
    beq .else_0_94      
.jmpz336:
    bl game_eventContext__P2971
_proccall337:
    mov r3, r0
    ldr r0, _ldlit_85 ; multiplayer_initServer_inline__P8326_Lit      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall338:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_94:
.afterif_1_94:
.ret.3356:
    @stackempty locals
    movs r0, #0
.final_2_94:
multiplayer_initServer__P3356_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(30,94): multiplayer.initServer.inline
    ;
    .object multiplayer_initServer_inline__P8326 "game/multiplayer.ts(30,94): multiplayer.initServer.inline"
multiplayer_initServer_inline__P8326_pre:
    .section code
    .balign 4
multiplayer_initServer_inline__P8326_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word multiplayer_initServer_inline__P8326_args@fn
multiplayer_initServer_inline__P8326_args:
    .section code
multiplayer_initServer_inline__P8326:
multiplayer_initServer_inline__P8326_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_initServer_inline__P8326_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl multiplayer::getOrigin
    ldr r1, _ldlit_84 ; _str85      
    bl _cmp_eqq
    beq .else_0_95      
.jmpz339:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl multiplayer::postImage
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_95:
.afterif_1_95:
.ret.8326:
    @stackempty locals
    movs r0, #0
.final_2_95:
multiplayer_initServer_inline__P8326_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function power/power.ts(37,5): power.checkDeepSleep
    ;
    .object power_checkDeepSleep__P1911 "power/power.ts(37,5): power.checkDeepSleep"
power_checkDeepSleep__P1911_pre:
    .section code
    .balign 4
    .section code
power_checkDeepSleep__P1911:
power_checkDeepSleep__P1911_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
power_checkDeepSleep__P1911_locals:
    bl power_init__P4516
_proccall340:
    @stackempty locals
    movs r0, #188
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_96      
.jmpz341:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_96      
.lazySkip_1_96:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_96:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_96      
.jmpz342:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_96      
.lazySkip_3_96:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_2_96:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_96      
.jmpz343:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_96      
.lazySkip_6_96:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_5_96:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_96      
.jmpz344:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_96      
.lazySkip_8_96:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl control::isUSBInitialized
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_7_96:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_96      
.jmpz345:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::deepSleep
    @stackempty locals
.else_4_96:
.afterif_9_96:
.ret.1911:
    @stackempty locals
    movs r0, #0
.final_10_96:
    add sp, #4*2 ; pop locals 2
power_checkDeepSleep__P1911_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function power/power.ts(58,5): power.init
    ;
    .object power_init__P4516 "power/power.ts(58,5): power.init"
power_init__P4516_pre:
    .section code
    .balign 4
    .section code
power_init__P4516:
power_init__P4516_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
power_init__P4516_locals:
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_97      
.jmpz346:
    b .ret.4516      
.else_0_97:
.afterif_1_97:
    movs r0, #212
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getConfig
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #192
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_97      
.jmpz347:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_97      
.lazySkip_4_97:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, _ldlit_86 ; 600001      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_3_97:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_97      
.jmpz348:
    ldr r0, _ldlit_86 ; 600001      
    movs r1, #192
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_2_97:
.afterif_5_97:
.ret.4516:
    @stackempty locals
    movs r0, #0
.final_6_97:
power_init__P4516_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(45,5): game.consoleOverlay.draw
    ;
    .object game_consoleOverlay_draw__P3095 "game/console.ts(45,5): game.consoleOverlay.draw"
game_consoleOverlay_draw__P3095_pre:
    .section code
    .balign 4
    .section code
game_consoleOverlay_draw__P3095:
game_consoleOverlay_draw__P3095_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
game_consoleOverlay_draw__P3095_locals:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_98      
.jmpz349:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_98      
.object PUSH
.balign 4
_ldlit_83:
 .word _str43
_ldlit_84:
 .word _str85
_ldlit_85:
 .word multiplayer_initServer_inline__P8326_Lit
_ldlit_86:
 .word 600001
.object POP
.lazySkip_2_98:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    bl scene_systemMenu_isVisible__P3076
_proccall350:
.lazy_1_98:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_98      
.jmpz351:
    b .ret.3095      
.else_0_98:
.afterif_3_98:
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall352:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_98      
.jmpz353:
    ldr r0, [sp, locals@0]
    b .condexprfin_5_98      
.condexprz_4_98:
    movs r0, #1
.condexprfin_5_98:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #5
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8392:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz354
    b .brk.8392      
.jmpz354:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_88 ; _str76      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_ge
    bne .jmpz355
    b .else_6_98      
.jmpz355:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_88 ; _str76      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_stringSplit__P122
_proccall356:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.8413:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz357
    b .brk.8413      
.jmpz357:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    movs r0, #200
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r0, #200
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall358:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    mov r1, r0
    movs r0, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imagePrint__P1967
_proccall359:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@8]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
.cont.8413:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.8413      
.brk.8413:
    movs r0, #0
    str r0, [sp, locals@6]
    b .afterif_7_98      
.else_6_98:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r1}
    movs r0, #9
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl helpers_imagePrint__P1967
_proccall360:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.afterif_7_98:
.cont.8392:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.8392      
.brk.8392:
.ret.3095:
    @stackempty locals
    movs r0, #0
.final_8_98:
    add sp, #4*9 ; pop locals 9
game_consoleOverlay_draw__P3095_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(214,5): helpers.imagePrint
    ;
    .object helpers_imagePrint__P1967 "screen---st7735/text.ts(214,5): helpers.imagePrint"
helpers_imagePrint__P1967_pre:
    .section code
    .balign 4
    .section code
helpers_imagePrint__P1967:
helpers_imagePrint__P1967_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_imagePrint__P1967_locals:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, args@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_99      
.jmpz361:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl image_getFontForText__P1954
_proccall362:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@5]
    @stackempty locals
.else_0_99:
.afterif_1_99:
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_99      
.jmpz363:
    movs r0, #3
    str r0, [sp, args@4]
    @stackempty locals
.else_2_99:
.afterif_3_99:
    ldr r0, [sp, args@2]
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #211
    bl _ifacecall1_get_8
_proccall365:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_99      
.jmpz364:
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #211
    bl _ifacecall1_get_8
_proccall366:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_5_99      
.condexprz_4_99:
    movs r0, #3
    b .condexprfin_5_99      
.object PUSH
.balign 4
_ldlit_88:
 .word _str76
.object POP
.condexprfin_5_99:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall367:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall368:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    movs r1, #15
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #7
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #5
    ldr r1, [sp, locals@6]
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #109
    bl _ifacecall1_get_8
_proccall369:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _cmp_eq
    beq .else_6_99      
.jmpz370:
    movs r0, #17
    ldr r1, [sp, locals@6]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r1, #1
    movs r2, #135
    bl _pxt_buffer_set
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r1, #3
    movs r2, #1
    bl _pxt_buffer_set
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_46
    movs r1, #5
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_46
    movs r1, #9
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_6_99:
.afterif_7_99:
.cont.8548:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz371
    b .brk.8548      
.jmpz371:
    movs r0, #1
    str r0, [sp, locals@11]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, args@6]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_99      
.jmpz372:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_99      
.lazySkip_10_99:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
.lazy_9_99:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_99      
.jmpz373:
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r1, #177
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall374:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r1, #179
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall375:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@12]
    @stackempty locals
.else_8_99:
.afterif_11_99:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_47
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, locals@13]
    movs r1, #21
    bl _cmp_eq
    beq .else_12_99      
.jmpz376:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall377:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    str r0, [sp, args@2]
    @stackempty locals
.else_12_99:
.afterif_13_99:
    ldr r0, [sp, locals@13]
    movs r1, #65
    bl _cmp_lt
    beq .else_14_99      
.jmpz378:
    b .cont.8548      
.else_14_99:
.afterif_15_99:
    movs r0, #1
    str r0, [sp, locals@14]
    @stackempty locals
    ldr r0, [sp, locals@9]
    str r0, [sp, locals@15]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, locals@13]
    movs r1, #65
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@17]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    bl _conv_48
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@13]
    bl _cmp_eq
    beq .else_16_99      
.jmpz379:
    ldr r0, [sp, locals@17]
    str r0, [sp, locals@16]
    @stackempty locals
    b .afterif_17_99      
.else_16_99:
.cont.8604:
    ldr r0, [sp, locals@14]
    ldr r1, [sp, locals@15]
    bl _cmp_le
    beq .brk.8604      
.jmpz380:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    ldr r1, [sp, locals@14]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@18]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_48
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@19]
    @stackempty locals
    ldr r0, [sp, locals@19]
    ldr r1, [sp, locals@13]
    bl _cmp_eq
    beq .else_18_99      
.jmpz381:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@16]
    @stackempty locals
    b .brk.8604      
.else_18_99:
.afterif_19_99:
    ldr r0, [sp, locals@19]
    ldr r1, [sp, locals@13]
    bl _cmp_lt
    beq .else_20_99      
.jmpz382:
    ldr r0, [sp, locals@18]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@14]
    @stackempty locals
    b .afterif_21_99      
.else_20_99:
    ldr r0, [sp, locals@18]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@15]
    @stackempty locals
.afterif_21_99:
    b .cont.8604      
.brk.8604:
.afterif_17_99:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _cmp_eq
    beq .else_22_99      
.jmpz383:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_49
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_50
    movs r1, #8
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@11]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r1, [sp, locals@12]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imageDrawIcon__P1934
_proccall384:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall385:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_23_99      
.else_22_99:
    ldr r0, [sp, locals@16]
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@16]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@20]
    @stackempty locals
.fortop.8670:
    ldr r0, [sp, locals@20]
    ldr r1, [sp, locals@3]
    bl _cmp_lt
    bne .jmpz386
    b .brk.8670      
.jmpz386:
    movs r0, #1
    str r0, [sp, locals@21]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@22]
    @stackempty locals
    ldr r0, [sp, locals@16]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@16]
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@23]
    @stackempty locals
.cont.8680:
    ldr r0, [sp, locals@21]
    ldr r1, [sp, locals@4]
    bl _cmp_lt
    bne .jmpz387
    b .brk.8680      
.jmpz387:
    ldr r0, [sp, locals@22]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_eq
    beq .else_24_99      
.jmpz388:
    ldr r0, [sp, locals@16]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@16]
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@23]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@22]
    @stackempty locals
.else_24_99:
.afterif_25_99:
    movs r0, #1
    str r0, [sp, locals@24]
    @stackempty locals
.cont.8691:
    ldr r0, [sp, locals@23]
    ldr r1, [sp, locals@22]
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.8691      
.jmpz389:
    ldr r0, [sp, locals@24]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@24]
    @stackempty locals
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@22]
    @stackempty locals
    b .cont.8691      
.brk.8691:
    ldr r0, [sp, locals@24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_26_99      
.jmpz390:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@21]
    ldr r1, [sp, locals@12]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageFillRect__P1935
_proccall391:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
    ldr r0, [sp, locals@21]
    ldr r1, [sp, locals@24]
    bl _numops_adds
    str r0, [sp, locals@21]
    @stackempty locals
    b .afterif_27_99      
.else_26_99:
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@22]
    @stackempty locals
    ldr r0, [sp, locals@21]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@21]
    @stackempty locals
.afterif_27_99:
    b .cont.8680      
.brk.8680:
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.cont.8670:
    ldr r0, [sp, locals@20]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@20]
    @stackempty locals
    b .fortop.8670      
.brk.8670:
.afterif_23_99:
    b .cont.8548      
.brk.8548:
.ret.1967:
    @stackempty locals
    movs r0, #0
.final_28_99:
    add sp, #4*25 ; pop locals 25
helpers_imagePrint__P1967_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(156,5): helpers.imageDrawIcon
    ;
    .object helpers_imageDrawIcon__P1934 "screen---st7735/image.ts(156,5): helpers.imageDrawIcon"
helpers_imageDrawIcon__P1934_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawIcon__P1934:
helpers_imageDrawIcon__P1934_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageDrawIcon__P1934_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_pack__P4526
_proccall392:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_51
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_drawIcon
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.1934:
    @stackempty locals
    movs r0, #0
.final_0_100:
helpers_imageDrawIcon__P1934_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(137,5): image.getFontForText
    ;
    .object image_getFontForText__P1954 "screen---st7735/text.ts(137,5): image.getFontForText"
image_getFontForText__P1954_pre:
    .section code
    .balign 4
    .section code
image_getFontForText__P1954:
image_getFontForText__P1954_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
image_getFontForText__P1954_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.8760:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.8760      
.jmpz393:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_47
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    movs r1, #64
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_gt
    beq .else_0_101      
.jmpz394:
    movs r0, #208
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .ret.1954      
.else_0_101:
.afterif_1_101:
.cont.8760:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.8760      
.brk.8760:
    movs r0, #212
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.1954:
    @stackempty locals
.final_2_101:
    add sp, #4*1 ; pop locals 1
image_getFontForText__P1954_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(435,5): helpers.stringSplit
    ;
    .object helpers_stringSplit__P122 "base/pxt-helpers.ts(435,5): helpers.stringSplit"
helpers_stringSplit__P122_pre:
    .section code
    .balign 4
    .section code
helpers_stringSplit__P122:
helpers_stringSplit__P122_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_stringSplit__P122_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_102      
.jmpz395:
    ldr r0, _ldlit_90 ; 1073741825      
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_1_102      
.else_0_102:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_102      
.jmpz396:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_3_102      
.else_2_102:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_3_102:
.afterif_1_102:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_eq
    beq .else_4_102      
.jmpz397:
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_4_102:
.afterif_5_102:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_102      
.jmpz398:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_6_102:
.afterif_7_102:
    ldr r0, [sp, locals@2]
    movs r1, #1
    bl _cmp_eq
    beq .else_8_102      
.jmpz399:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P4333
_proccall400:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_9_102      
.jmpz401:
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_9_102:
.afterif_10_102:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_8_102:
.afterif_11_102:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.cont.8826:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@2]
    bl _cmp_neq
    beq .brk.8826      
.jmpz402:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P4333
_proccall403:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    movs r1, #1
    bl _cmp_lt
    beq .else_12_102      
.jmpz404:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_13_102      
.else_12_102:
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@3]
    bl _cmp_eq
    beq .else_14_102      
.jmpz405:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_15_102      
.else_14_102:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P119
_proccall406:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@1]
    bl _cmp_eq
    beq .else_16_102      
.jmpz407:
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_16_102:
.afterif_17_102:
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.afterif_15_102:
.afterif_13_102:
    b .cont.8826      
.brk.8826:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P119
_proccall408:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.122:
    @stackempty locals
.final_18_102:
    add sp, #4*9 ; pop locals 9
helpers_stringSplit__P122_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(385,5): helpers.stringSlice
    ;
    .object helpers_stringSlice__P119 "base/pxt-helpers.ts(385,5): helpers.stringSlice"
helpers_stringSlice__P119_pre:
    .section code
    .balign 4
    .section code
helpers_stringSlice__P119:
helpers_stringSlice__P119_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_stringSlice__P119_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_103      
.jmpz409:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall410:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_0_103:
.afterif_1_103:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_2_103      
.jmpz411:
    ldr r0, [sp, locals@0]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_3_103      
.else_2_103:
    ldr r0, [sp, args@2]
    movs r1, #6
    bl _cmp_eqq
    beq .else_4_103      
.jmpz412:
    movs r0, #1
    str r0, [sp, args@2]
    @stackempty locals
.else_4_103:
.afterif_5_103:
.afterif_3_103:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_6_103      
.jmpz413:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_6_103:
.afterif_7_103:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_52
    mov r7, sp
    str r7, [r6, #4]
    bl String_::substr
    add sp, #4*3 ; pop locals 3
.ret.119:
    @stackempty locals
.final_8_103:
    add sp, #4*1 ; pop locals 1
helpers_stringSlice__P119_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(481,5): helpers.splitMatch
    ;
    .object helpers_splitMatch__P4333 "base/pxt-helpers.ts(481,5): helpers.splitMatch"
helpers_splitMatch__P4333_pre:
    .section code
    .balign 4
    .section code
helpers_splitMatch__P4333:
helpers_splitMatch__P4333_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_splitMatch__P4333_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_0_104      
.jmpz414:
    movs r0, #1
    negs r0, r0
    b .ret.4333      
.else_0_104:
.afterif_1_104:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8918:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.8918      
.jmpz415:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_47
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_47
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_2_104      
.jmpz416:
    movs r0, #1
    negs r0, r0
    b .ret.4333      
.else_2_104:
.afterif_3_104:
.cont.8918:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.8918      
.brk.8918:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
.ret.4333:
    @stackempty locals
.final_4_104:
    add sp, #4*3 ; pop locals 3
helpers_splitMatch__P4333_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_90:
 .word 1073741825
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(396,5): scene.systemMenu.isVisible
    ;
    .object scene_systemMenu_isVisible__P3076 "game/systemmenu.ts(396,5): scene.systemMenu.isVisible"
scene_systemMenu_isVisible__P3076_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_isVisible__P3076:
scene_systemMenu_isVisible__P3076_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_isVisible__P3076_locals:
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3076:
    @stackempty locals
.final_0_105:
scene_systemMenu_isVisible__P3076_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(16,5): PhysicsEngine.draw
    ;
    .object PhysicsEngine_draw__P2489 "game/physics.ts(16,5): PhysicsEngine.draw"
PhysicsEngine_draw__P2489_pre:
    .section code
    .balign 4
PhysicsEngine_draw__P2489_args:
    cmp r4, #1
    bge PhysicsEngine_draw__P2489_nochk
    push {lr}
    bl _expand_args_1_10
    bl PhysicsEngine_draw__P2489_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
PhysicsEngine_draw__P2489:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2484_validate_29
    mov lr, r7
PhysicsEngine_draw__P2489_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_draw__P2489_locals:
.ret.2489:
    @stackempty locals
    movs r0, #0
.final_0_106:
PhysicsEngine_draw__P2489_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(227,9): scene.Scene.render
    ;
    .object scene_Scene_render__P2844 "game/scene.ts(227,9): scene.Scene.render"
scene_Scene_render__P2844_pre:
    .section code
    .balign 4
scene_Scene_render__P2844_args:
    cmp r4, #1
    bge scene_Scene_render__P2844_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Scene_render__P2844_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_render__P2844:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2816_validate_18
    mov lr, r7
scene_Scene_render__P2844_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Scene_render__P2844_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_107      
.jmpz417:
    b .ret.2844      
.else_0_107:
.afterif_1_107:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #5
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_107      
.jmpz418:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_107      
.lazySkip_4_107:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
.lazy_3_107:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_107      
.jmpz419:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    push {r0} ; the one arg
    bl scene_Scene_render__P2844
_proccall420:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_5_107      
.else_2_107:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl scene_Background_draw__P2651
_proccall421:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_5_107:
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_107      
.jmpz422:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r3, r0
    ldr r0, _ldlit_92 ; scene_Scene_render_inline__P8975_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySort__P105
_proccall423:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    movs r1, #3
    negs r1, r1
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_6_107:
.afterif_7_107:
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9000:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.9000      
.jmpz424:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #1
    bl _ifacecall2__27
_proccall425:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.9000:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.9000      
.brk.9000:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    movs r1, #9
    negs r1, r1
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2844:
    @stackempty locals
    movs r0, #0
.final_8_107:
    add sp, #4*3 ; pop locals 3
scene_Scene_render__P2844_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(241,38): scene.Scene.render.inline
    ;
    .object scene_Scene_render_inline__P8975 "game/scene.ts(241,38): scene.Scene.render.inline"
scene_Scene_render_inline__P8975_pre:
    .section code
    .balign 4
scene_Scene_render_inline__P8975_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_render_inline__P8975_args@fn
scene_Scene_render_inline__P8975_args:
    cmp r4, #2
    bge scene_Scene_render_inline__P8975_nochk
    push {lr}
    bl _expand_args_2_17
    bl scene_Scene_render_inline__P8975_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Scene_render_inline__P8975:
scene_Scene_render_inline__P8975_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_render_inline__P8975_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #105
    bl _ifacecall1_get_8
_proccall427:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #105
    bl _ifacecall1_get_8
_proccall428:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_108      
.jmpz426:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_108      
.lazySkip_1_108:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #164
    bl _ifacecall1_get_8
_proccall429:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #164
    bl _ifacecall1_get_8
_proccall430:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.lazy_0_108:
; jmp value (already in r0)
.ret.8975:
    @stackempty locals
.final_2_108:
scene_Scene_render_inline__P8975_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(208,5): helpers.arraySort
    ;
    .object helpers_arraySort__P105 "base/pxt-helpers.ts(208,5): helpers.arraySort"
helpers_arraySort__P105_pre:
    .section code
    .balign 4
    .section code
helpers_arraySort__P105:
helpers_arraySort__P105_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arraySort__P105_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_109      
.jmpz431:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_109      
.lazySkip_2_109:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_109:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_109      
.jmpz432:
    ldr r0, _ldlit_93 ; helpers_arraySort_inline__P9020_Lit      
    str r0, [sp, args@1]
    @stackempty locals
.else_0_109:
.afterif_3_109:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_sortHelper__P4331
_proccall433:
    add sp, #4*2 ; pop locals 2
.ret.105:
    @stackempty locals
.final_4_109:
helpers_arraySort__P105_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(210,26): helpers.arraySort.inline
    ;
    .object helpers_arraySort_inline__P9020 "base/pxt-helpers.ts(210,26): helpers.arraySort.inline"
helpers_arraySort_inline__P9020_pre:
    .section code
    .balign 4
helpers_arraySort_inline__P9020_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word helpers_arraySort_inline__P9020_args@fn
helpers_arraySort_inline__P9020_args:
    cmp r4, #2
    bge helpers_arraySort_inline__P9020_nochk
    push {lr}
    bl _expand_args_2_17
    bl helpers_arraySort_inline__P9020_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
helpers_arraySort_inline__P9020:
helpers_arraySort_inline__P9020_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySort_inline__P9020_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_110      
.jmpz434:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_110      
.lazySkip_2_110:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
.lazy_1_110:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_110      
.jmpz435:
    movs r0, #1
    b .ret.9020      
    b .afterif_3_110      
.else_0_110:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_110      
.jmpz436:
    movs r0, #3
    b .ret.9020      
    b .afterif_5_110      
.else_4_110:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_110      
.jmpz437:
    movs r0, #1
    negs r0, r0
    b .ret.9020      
.else_6_110:
.afterif_7_110:
.afterif_5_110:
.afterif_3_110:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_110      
.jmpz438:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_110      
.lazySkip_10_110:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
.lazy_9_110:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_110      
.jmpz439:
    movs r0, #1
    b .ret.9020      
    b .afterif_11_110      
.else_8_110:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_110      
.jmpz440:
    movs r0, #3
    b .ret.9020      
    b .afterif_13_110      
.else_12_110:
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz441
    b .else_14_110      
.object PUSH
.balign 4
_ldlit_92:
 .word scene_Scene_render_inline__P8975_Lit
_ldlit_93:
 .word helpers_arraySort_inline__P9020_Lit
.object POP
.jmpz441:
    movs r0, #1
    negs r0, r0
    b .ret.9020      
.else_14_110:
.afterif_15_110:
.afterif_13_110:
.afterif_11_110:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_53
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_53
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.9020:
    @stackempty locals
.final_16_110:
    add sp, #4*4 ; pop locals 4
helpers_arraySort_inline__P9020_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(192,5): helpers.sortHelper
    ;
    .object helpers_sortHelper__P4331 "base/pxt-helpers.ts(192,5): helpers.sortHelper"
helpers_sortHelper__P4331_pre:
    .section code
    .balign 4
    .section code
helpers_sortHelper__P4331:
helpers_sortHelper__P4331_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_sortHelper__P4331_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_111      
.jmpz442:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_111      
.lazySkip_2_111:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_111:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_111      
.jmpz443:
    ldr r0, [sp, args@0]
    b .ret.4331      
.else_0_111:
.afterif_3_111:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9082:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9082      
.jmpz444:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9090:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9090      
.jmpz445:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    movs r1, #1
    bl _cmp_gt
    beq .else_4_111      
.jmpz446:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_swap__P4330
_proccall448:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_111:
.afterif_5_111:
.cont.9090:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9090      
.brk.9090:
.cont.9082:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9082      
.brk.9082:
    ldr r0, [sp, args@0]
.ret.4331:
    @stackempty locals
.final_6_111:
    add sp, #4*3 ; pop locals 3
helpers_sortHelper__P4331_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(186,5): helpers.swap
    ;
    .object helpers_swap__P4330 "base/pxt-helpers.ts(186,5): helpers.swap"
helpers_swap__P4330_pre:
    .section code
    .balign 4
    .section code
helpers_swap__P4330:
helpers_swap__P4330_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_swap__P4330_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4330:
    @stackempty locals
    movs r0, #0
.final_0_112:
    add sp, #4*1 ; pop locals 1
helpers_swap__P4330_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(49,9): scene.Background.draw
    ;
    .object scene_Background_draw__P2651 "game/background.ts(49,9): scene.Background.draw"
scene_Background_draw__P2651_pre:
    .section code
    .balign 4
scene_Background_draw__P2651_args:
    cmp r4, #1
    bge scene_Background_draw__P2651_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Background_draw__P2651_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Background_draw__P2651:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Background__C2642_validate_54
    mov lr, r7
scene_Background_draw__P2651_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Background_draw__P2651_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_55
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::fill
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_113      
.jmpz449:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_56
    movs r2, #0
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_113:
.afterif_1_113:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_113      
.jmpz450:
    movs r0, #1
    ldr r1, _ldlit_95 ; scene_Background_draw_inline__P9144_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall451:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_113:
.afterif_3_113:
.ret.2651:
    @stackempty locals
    movs r0, #0
.final_4_113:
scene_Background_draw__P2651_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(54,38): scene.Background.draw.inline
    ;
    .object scene_Background_draw_inline__P9144 "game/background.ts(54,38): scene.Background.draw.inline"
scene_Background_draw_inline__P9144_pre:
    .section code
    .balign 4
scene_Background_draw_inline__P9144_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Background_draw_inline__P9144_args@fn
scene_Background_draw_inline__P9144_args:
    cmp r4, #1
    bge scene_Background_draw_inline__P9144_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Background_draw_inline__P9144_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Background_draw_inline__P9144:
scene_Background_draw_inline__P9144_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Background_draw_inline__P9144_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_scene_BackgroundLayer__C2652_validate_58
    ldr r0, [r0, #4]
    mov r1, r0
    movs r0, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_scene_BackgroundLayer__C2652_validate_58
    ldr r0, [r0, #4]
    mov r1, r0
    movs r0, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_BackgroundLayer_draw__P2660
_proccall452:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.9144:
    @stackempty locals
    movs r0, #0
.final_0_114:
    add sp, #4*2 ; pop locals 2
scene_Background_draw_inline__P9144_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(100,9): scene.BackgroundLayer.draw
    ;
    .object scene_BackgroundLayer_draw__P2660 "game/background.ts(100,9): scene.BackgroundLayer.draw"
scene_BackgroundLayer_draw__P2660_pre:
    .section code
    .balign 4
scene_BackgroundLayer_draw__P2660_args:
    cmp r4, #3
    bge scene_BackgroundLayer_draw__P2660_nochk
    push {lr}
    bl _expand_args_3_14
    bl scene_BackgroundLayer_draw__P2660_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
scene_BackgroundLayer_draw__P2660:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_BackgroundLayer__C2652_validate_58
    mov lr, r7
scene_BackgroundLayer_draw__P2660_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_BackgroundLayer_draw__P2660_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_115      
.jmpz453:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_115      
.lazySkip_2_115:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_115:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_115      
.jmpz454:
    b .ret.2660      
.else_0_115:
.afterif_3_115:
    movs r0, #1
    ldr r1, [sp, args@1]
    bl _numops_subs
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    ldr r1, [sp, args@2]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz455
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_115      
.jmpz455:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz456
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_115      
.jmpz456:
    pop {r0} ; tmpref @1
    b .brk.9200      
.switch_4_115:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    b .brk.9200      
.switch_5_115:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
.brk.9200:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #9
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz457
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_115      
.jmpz457:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz458
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_115      
.jmpz458:
    pop {r0} ; tmpref @1
    b .brk.9219      
.switch_6_115:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    b .brk.9219      
.switch_7_115:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
.brk.9219:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _cmp_lt
    beq .else_8_115      
.jmpz459:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
.else_8_115:
.afterif_9_115:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_lt
    beq .else_10_115      
.jmpz460:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    b .afterif_11_115      
.object PUSH
.balign 4
_ldlit_95:
 .word scene_Background_draw_inline__P9144_Lit
.object POP
.else_10_115:
.afterif_11_115:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.cont.9266:
    ldr r0, [sp, locals@6]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    bne .jmpz461
    b .brk.9266      
.jmpz461:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@7]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall462:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@4]
    str r0, [sp, locals@10]
    @stackempty locals
.cont.9284:
    ldr r0, [sp, locals@9]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9284      
.jmpz463:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@11]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@10]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall464:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, locals@10]
    ldr r1, [sp, locals@12]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_12_115      
.jmpz465:
    ldr r0, [sp, locals@12]
    b .condexprfin_13_115      
.condexprz_12_115:
    ldr r0, [sp, locals@0]
.condexprfin_13_115:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@9]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    b .cont.9284      
.brk.9284:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@8]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_14_115      
.jmpz466:
    ldr r0, [sp, locals@8]
    b .condexprfin_15_115      
.condexprz_14_115:
    ldr r0, [sp, locals@1]
.condexprfin_15_115:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@6]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@6]
    @stackempty locals
    b .cont.9266      
.brk.9266:
.ret.2660:
    @stackempty locals
    movs r0, #0
.final_16_115:
    add sp, #4*13 ; pop locals 13
scene_BackgroundLayer_draw__P2660_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(84,9): scene.Camera.update
    ;
    .object scene_Camera_update__P2771 "game/camera.ts(84,9): scene.Camera.update"
scene_Camera_update__P2771_pre:
    .section code
    .balign 4
scene_Camera_update__P2771_args:
    cmp r4, #1
    bge scene_Camera_update__P2771_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Camera_update__P2771_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_update__P2771:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_update__P2771_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Camera_update__P2771_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_116      
.jmpz467:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_x__P2327
_proccall468:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_y__P2329
_proccall469:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_x__P2327
_proccall470:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_Camera_offsetX__P2760_nochk
_proccall471:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_y__P2329
_proccall472:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_Camera_offsetY__P2762_nochk
_proccall473:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_116:
.afterif_1_116:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    movs r1, #0
    bl _cmp_neqq
    bne .jmpz474
    b .else_2_116      
.jmpz474:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_ge
    add sp, #4*2 ; pop locals 2
    beq .else_3_116      
.jmpz475:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #32]
    @stackempty locals
    b .afterif_4_116      
.else_3_116:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, _ldlit_97 ; _dbl42      
    bl _cmp_ge
    beq .else_5_116      
.jmpz476:
    movs r0, #3
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall477:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
.else_5_116:
.afterif_6_116:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::random
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::random
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #12]
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_4_116:
.else_2_116:
.afterif_7_116:
.ret.2771:
    @stackempty locals
    movs r0, #0
.final_8_116:
    add sp, #4*6 ; pop locals 6
scene_Camera_update__P2771_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(40,9): scene.Camera.offsetY
    ;
    .object scene_Camera_offsetY__P2762 "game/camera.ts(40,9): scene.Camera.offsetY"
scene_Camera_offsetY__P2762_pre:
    .section code
    .balign 4
scene_Camera_offsetY__P2762_args:
    cmp r4, #2
    bge scene_Camera_offsetY__P2762_nochk
    push {lr}
    bl _expand_args_2_17
    bl scene_Camera_offsetY__P2762_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Camera_offsetY__P2762:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_offsetY__P2762_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_Camera_offsetY__P2762_locals:
    bl game_currentScene__P2968
_proccall478:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_117      
.jmpz479:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_117      
.lazySkip_2_117:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl tiles_TileMap_enabled__P2720
_proccall480:
    add sp, #4*1 ; pop locals 1
.lazy_1_117:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_117      
.jmpz481:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMap_offsetY__P2715
_proccall482:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_117      
.else_0_117:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_117:
.ret.2762:
    @stackempty locals
    movs r0, #0
.final_4_117:
    add sp, #4*1 ; pop locals 1
scene_Camera_offsetY__P2762_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(330,9): tiles.TileMap.offsetY
    ;
    .object tiles_TileMap_offsetY__P2715 "game/tilemap.ts(330,9): tiles.TileMap.offsetY"
tiles_TileMap_offsetY__P2715_pre:
    .section code
    .balign 4
tiles_TileMap_offsetY__P2715_args:
    cmp r4, #2
    bge tiles_TileMap_offsetY__P2715_nochk
    push {lr}
    bl _expand_args_2_17
    bl tiles_TileMap_offsetY__P2715_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_offsetY__P2715:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_offsetY__P2715_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_offsetY__P2715_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaHeight__P2717_nochk
_proccall483:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall484:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall485:
    add sp, #4*3 ; pop locals 3
.ret.2715:
    @stackempty locals
.final_0_118:
tiles_TileMap_offsetY__P2715_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(338,9): tiles.TileMap.areaHeight
    ;
    .object tiles_TileMap_areaHeight__P2717 "game/tilemap.ts(338,9): tiles.TileMap.areaHeight"
tiles_TileMap_areaHeight__P2717_pre:
    .section code
    .balign 4
tiles_TileMap_areaHeight__P2717_args:
    cmp r4, #1
    bge tiles_TileMap_areaHeight__P2717_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_TileMap_areaHeight__P2717_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_areaHeight__P2717:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_areaHeight__P2717_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_areaHeight__P2717_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_119      
.jmpz486:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_119      
.condexprz_0_119:
    movs r0, #1
.condexprfin_1_119:
; jmp value (already in r0)
.ret.2717:
    @stackempty locals
.final_2_119:
tiles_TileMap_areaHeight__P2717_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(311,9): tiles.TileMap.scale
    ;
    .object tiles_TileMap_scale__P2711 "game/tilemap.ts(311,9): tiles.TileMap.scale"
tiles_TileMap_scale__P2711_pre:
    .section code
    .balign 4
tiles_TileMap_scale__P2711_args:
    cmp r4, #1
    bge tiles_TileMap_scale__P2711_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_TileMap_scale__P2711_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_scale__P2711:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_scale__P2711_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_scale__P2711_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2711:
    @stackempty locals
.final_0_120:
tiles_TileMap_scale__P2711_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(219,9): tiles.TileMapData.height
    ;
    .object tiles_TileMapData_height__P2693 "game/tilemap.ts(219,9): tiles.TileMapData.height"
tiles_TileMapData_height__P2693_pre:
    .section code
    .balign 4
tiles_TileMapData_height__P2693_args:
    cmp r4, #1
    bge tiles_TileMapData_height__P2693_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_TileMapData_height__P2693_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMapData_height__P2693:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2690_validate_61
    mov lr, r7
tiles_TileMapData_height__P2693_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_height__P2693_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
.ret.2693:
    @stackempty locals
.final_0_121:
tiles_TileMapData_height__P2693_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(352,9): tiles.TileMap.enabled
    ;
    .object tiles_TileMap_enabled__P2720 "game/tilemap.ts(352,9): tiles.TileMap.enabled"
tiles_TileMap_enabled__P2720_pre:
    .section code
    .balign 4
tiles_TileMap_enabled__P2720_args:
    cmp r4, #1
    bge tiles_TileMap_enabled__P2720_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_TileMap_enabled__P2720_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_enabled__P2720:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_enabled__P2720_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_enabled__P2720_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2720:
    @stackempty locals
.final_0_122:
tiles_TileMap_enabled__P2720_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(37,9): scene.Camera.offsetY
    ;
    .object scene_Camera_offsetY__P2761 "game/camera.ts(37,9): scene.Camera.offsetY"
scene_Camera_offsetY__P2761_pre:
    .section code
    .balign 4
scene_Camera_offsetY__P2761_args:
    cmp r4, #1
    bge scene_Camera_offsetY__P2761_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Camera_offsetY__P2761_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_offsetY__P2761:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_offsetY__P2761_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_offsetY__P2761_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2761:
    @stackempty locals
.final_0_123:
scene_Camera_offsetY__P2761_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(29,9): scene.Camera.offsetX
    ;
    .object scene_Camera_offsetX__P2760 "game/camera.ts(29,9): scene.Camera.offsetX"
scene_Camera_offsetX__P2760_pre:
    .section code
    .balign 4
scene_Camera_offsetX__P2760_args:
    cmp r4, #2
    bge scene_Camera_offsetX__P2760_nochk
    push {lr}
    bl _expand_args_2_17
    bl scene_Camera_offsetX__P2760_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_97:
 .word _dbl42
.object POP
    .section code
scene_Camera_offsetX__P2760:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_offsetX__P2760_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_Camera_offsetX__P2760_locals:
    bl game_currentScene__P2968
_proccall487:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_124      
.jmpz488:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_124      
.lazySkip_2_124:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl tiles_TileMap_enabled__P2720
_proccall489:
    add sp, #4*1 ; pop locals 1
.lazy_1_124:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_124      
.jmpz490:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMap_offsetX__P2714
_proccall491:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_124      
.else_0_124:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_124:
.ret.2760:
    @stackempty locals
    movs r0, #0
.final_4_124:
    add sp, #4*1 ; pop locals 1
scene_Camera_offsetX__P2760_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(326,9): tiles.TileMap.offsetX
    ;
    .object tiles_TileMap_offsetX__P2714 "game/tilemap.ts(326,9): tiles.TileMap.offsetX"
tiles_TileMap_offsetX__P2714_pre:
    .section code
    .balign 4
tiles_TileMap_offsetX__P2714_args:
    cmp r4, #2
    bge tiles_TileMap_offsetX__P2714_nochk
    push {lr}
    bl _expand_args_2_17
    bl tiles_TileMap_offsetX__P2714_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_offsetX__P2714:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_offsetX__P2714_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_offsetX__P2714_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaWidth__P2716_nochk
_proccall492:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall493:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall494:
    add sp, #4*3 ; pop locals 3
.ret.2714:
    @stackempty locals
.final_0_125:
tiles_TileMap_offsetX__P2714_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(334,9): tiles.TileMap.areaWidth
    ;
    .object tiles_TileMap_areaWidth__P2716 "game/tilemap.ts(334,9): tiles.TileMap.areaWidth"
tiles_TileMap_areaWidth__P2716_pre:
    .section code
    .balign 4
tiles_TileMap_areaWidth__P2716_args:
    cmp r4, #1
    bge tiles_TileMap_areaWidth__P2716_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_TileMap_areaWidth__P2716_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_areaWidth__P2716:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_areaWidth__P2716_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_areaWidth__P2716_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_126      
.jmpz495:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_126      
.condexprz_0_126:
    movs r0, #1
.condexprfin_1_126:
; jmp value (already in r0)
.ret.2716:
    @stackempty locals
.final_2_126:
tiles_TileMap_areaWidth__P2716_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(215,9): tiles.TileMapData.width
    ;
    .object tiles_TileMapData_width__P2692 "game/tilemap.ts(215,9): tiles.TileMapData.width"
tiles_TileMapData_width__P2692_pre:
    .section code
    .balign 4
tiles_TileMapData_width__P2692_args:
    cmp r4, #1
    bge tiles_TileMapData_width__P2692_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_TileMapData_width__P2692_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMapData_width__P2692:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2690_validate_61
    mov lr, r7
tiles_TileMapData_width__P2692_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_width__P2692_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
.ret.2692:
    @stackempty locals
.final_0_127:
tiles_TileMapData_width__P2692_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(26,9): scene.Camera.offsetX
    ;
    .object scene_Camera_offsetX__P2759 "game/camera.ts(26,9): scene.Camera.offsetX"
scene_Camera_offsetX__P2759_pre:
    .section code
    .balign 4
scene_Camera_offsetX__P2759_args:
    cmp r4, #1
    bge scene_Camera_offsetX__P2759_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Camera_offsetX__P2759_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_offsetX__P2759:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_offsetX__P2759_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_offsetX__P2759_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2759:
    @stackempty locals
.final_0_128:
scene_Camera_offsetX__P2759_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(122,5): Sprite.y
    ;
    .object Sprite_y__P2329 "game/sprite.ts(122,5): Sprite.y"
Sprite_y__P2329_pre:
    .section code
    .balign 4
Sprite_y__P2329_args:
    cmp r4, #1
    bge Sprite_y__P2329_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_y__P2329_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_y__P2329:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_y__P2329_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_y__P2329_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    mov r3, r0
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_div__P162
_proccall496:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2329:
    @stackempty locals
.final_0_129:
Sprite_y__P2329_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(36,5): Fx.div
    ;
    .object Fx_div__P162 "base/fixed.ts(36,5): Fx.div"
Fx_div__P162_pre:
    .section code
    .balign 4
    .section code
Fx_div__P162:
Fx_div__P162_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_div__P162_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.162:
    @stackempty locals
.final_0_130:
Fx_div__P162_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(111,5): Sprite.x
    ;
    .object Sprite_x__P2327 "game/sprite.ts(111,5): Sprite.x"
Sprite_x__P2327_pre:
    .section code
    .balign 4
Sprite_x__P2327_args:
    cmp r4, #1
    bge Sprite_x__P2327_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_x__P2327_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_x__P2327:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_x__P2327_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_x__P2327_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_div__P162
_proccall497:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2327:
    @stackempty locals
.final_0_131:
Sprite_x__P2327_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(19,5): PhysicsEngine.move
    ;
    .object PhysicsEngine_move__P2490 "game/physics.ts(19,5): PhysicsEngine.move"
PhysicsEngine_move__P2490_pre:
    .section code
    .balign 4
PhysicsEngine_move__P2490_args:
    cmp r4, #2
    bge PhysicsEngine_move__P2490_nochk
    push {lr}
    bl _expand_args_2_17
    bl PhysicsEngine_move__P2490_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
PhysicsEngine_move__P2490:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2484_validate_29
    mov lr, r7
PhysicsEngine_move__P2490_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_move__P2490_locals:
.ret.2490:
    @stackempty locals
    movs r0, #0
.final_0_132:
PhysicsEngine_move__P2490_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(44,5): controller._moveSprites
    ;
    .object controller__moveSprites__P2109 "game/controller.ts(44,5): controller._moveSprites"
controller__moveSprites__P2109_pre:
    .section code
    .balign 4
controller__moveSprites__P2109_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller__moveSprites__P2109_args@fn
controller__moveSprites__P2109_args:
    .section code
controller__moveSprites__P2109:
controller__moveSprites__P2109_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__moveSprites__P2109_locals:
    @stackempty locals
    bl controller_players__P2105
_proccall498:
    mov r3, r0
    ldr r0, _ldlit_99 ; controller__moveSprites_inline__P9581_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall499:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2109:
    @stackempty locals
    movs r0, #0
.final_0_133:
controller__moveSprites__P2109_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(47,27): controller._moveSprites.inline
    ;
    .object controller__moveSprites_inline__P9581 "game/controller.ts(47,27): controller._moveSprites.inline"
controller__moveSprites_inline__P9581_pre:
    .section code
    .balign 4
controller__moveSprites_inline__P9581_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller__moveSprites_inline__P9581_args@fn
controller__moveSprites_inline__P9581_args:
    cmp r4, #1
    bge controller__moveSprites_inline__P9581_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller__moveSprites_inline__P9581_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller__moveSprites_inline__P9581:
controller__moveSprites_inline__P9581_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__moveSprites_inline__P9581_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller___preUpdate__P2137
_proccall500:
    add sp, #4*1 ; pop locals 1
.ret.9581:
    @stackempty locals
    movs r0, #0
.final_0_134:
controller__moveSprites_inline__P9581_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(302,9): controller.Controller.__preUpdate
    ;
    .object controller_Controller___preUpdate__P2137 "game/controller.ts(302,9): controller.Controller.__preUpdate"
controller_Controller___preUpdate__P2137_pre:
    .section code
    .balign 4
controller_Controller___preUpdate__P2137_args:
    cmp r4, #1
    bge controller_Controller___preUpdate__P2137_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller___preUpdate__P2137_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___preUpdate__P2137:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller___preUpdate__P2137_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Controller___preUpdate__P2137_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller__controlledSprites__P2115_nochk
_proccall502:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_135      
.jmpz501:
    b .ret.2137      
.else_0_135:
.afterif_1_135:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    movs r1, #10
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_135      
.jmpz503:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_right__P2120_nochk
_proccall504:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2176
_proccall505:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_left__P2119_nochk
_proccall506:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2176
_proccall507:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_down__P2122_nochk
_proccall508:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2176
_proccall509:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_up__P2121_nochk
_proccall510:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2176
_proccall511:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_135      
.else_2_135:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_right__P2120_nochk
_proccall513:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2164_63
_proccall514:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_135      
.jmpz512:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_5_135      
.condexprz_4_135:
    movs r0, #1
.condexprfin_5_135:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_left__P2119_nochk
_proccall516:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2164_63
_proccall517:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_6_135      
.jmpz515:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_7_135      
.condexprz_6_135:
    movs r0, #1
.condexprfin_7_135:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    ldr r1, [sp, #4*1] ; tmpref @2
    bl _numops_subs
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_down__P2122_nochk
_proccall519:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2164_63
_proccall520:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_135      
.jmpz518:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_9_135      
.condexprz_8_135:
    movs r0, #1
.condexprfin_9_135:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_up__P2121_nochk
_proccall522:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2164_63
_proccall523:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_10_135      
.jmpz521:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_11_135      
.condexprz_10_135:
    movs r0, #1
.condexprfin_11_135:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    ldr r1, [sp, #4*1] ; tmpref @2
    bl _numops_subs
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.afterif_3_135:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    ldr r1, _ldlit_100 ; 131073      
    bl _cmp_gt
    bne .jmpz524
    b .else_12_135      
.object PUSH
.balign 4
_ldlit_99:
 .word controller__moveSprites_inline__P9581_Lit
_ldlit_100:
 .word 131073
.object POP
.jmpz524:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_102 ; 131073      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::sqrt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_12_135:
.afterif_13_135:
    movs r0, #5
    ldr r1, _ldlit_103 ; controller_Controller___preUpdate_inline__P9661_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller__controlledSprites__P2115_nochk
_proccall525:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall526:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_135      
.jmpz527:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller__controlledSprites__P2115_nochk
_proccall528:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, _ldlit_104 ; controller_Controller___preUpdate_inline__P9718_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall529:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl controller_Controller__controlledSprites__P2116_nochk
_proccall530:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_14_135:
.afterif_15_135:
.ret.2137:
    @stackempty locals
    movs r0, #0
.final_16_135:
    add sp, #4*7 ; pop locals 7
controller_Controller___preUpdate__P2137_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(333,45): controller.Controller.__preUpdate.inline
    ;
    .object controller_Controller___preUpdate_inline__P9661 "game/controller.ts(333,45): controller.Controller.__preUpdate.inline"
controller_Controller___preUpdate_inline__P9661_pre:
    .section code
    .balign 4
controller_Controller___preUpdate_inline__P9661_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Controller___preUpdate_inline__P9661_args@fn
controller_Controller___preUpdate_inline__P9661_args:
    cmp r4, #1
    bge controller_Controller___preUpdate_inline__P9661_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller___preUpdate_inline__P9661_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___preUpdate_inline__P9661:
controller_Controller___preUpdate_inline__P9661_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Controller___preUpdate_inline__P9661_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; the one arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #11
    bl _ifacecall1_get_8
_proccall531:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    ldr r0, [sp, #4*0] ; tmpref @1
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #89
    bl _ifacecall1_get_8
_proccall532:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    ldr r0, [sp, #0]      
    movs r1, #173
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall533:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_136      
.jmpz534:
    ldr r0, [r5, #4*3]
    movs r1, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    b .ret.9661      
.else_0_136:
.afterif_1_136:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_136      
.jmpz535:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_136      
.jmpz536:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    @stackempty locals
.else_3_136:
.afterif_4_136:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_136      
.jmpz537:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    @stackempty locals
.else_5_136:
.afterif_6_136:
.else_2_136:
.afterif_7_136:
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_136      
.jmpz538:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_136      
.lazySkip_10_136:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
.lazy_9_136:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz539
    b .else_8_136      
.jmpz539:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_13_136      
.jmpz540:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_12_136      
.lazySkip_13_136:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
.lazy_12_136:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_136      
.jmpz541:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall542:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall543:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_14_136      
.else_11_136:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_136      
.jmpz544:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall545:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_16_136      
.else_15_136:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz546
    b .else_17_136      
.object PUSH
.balign 4
_ldlit_102:
 .word 131073
_ldlit_103:
 .word controller_Controller___preUpdate_inline__P9661_Lit
_ldlit_104:
 .word controller_Controller___preUpdate_inline__P9718_Lit
.object POP
.jmpz546:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall547:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_17_136:
.afterif_18_136:
.afterif_16_136:
.afterif_14_136:
    ldr r0, [sp, args@0]
    movs r1, #66
    bl _inst_scene_SpriteHandler__C2785_validate_26
    str r1, [r0, #4]
    @stackempty locals
    b .afterif_19_136      
.else_8_136:
    ldr r0, [sp, args@0]
    movs r1, #10
    bl _inst_scene_SpriteHandler__C2785_validate_26
    str r1, [r0, #4]
    @stackempty locals
.afterif_19_136:
.ret.9661:
    @stackempty locals
    movs r0, #0
.final_20_136:
    add sp, #4*3 ; pop locals 3
controller_Controller___preUpdate_inline__P9661_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(365,29): controller.Controller.__preUpdate.inline
    ;
    .object controller_Controller___preUpdate_inline__P9718 "game/controller.ts(365,29): controller.Controller.__preUpdate.inline"
controller_Controller___preUpdate_inline__P9718_pre:
    .section code
    .balign 4
controller_Controller___preUpdate_inline__P9718_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Controller___preUpdate_inline__P9718_args@fn
controller_Controller___preUpdate_inline__P9718_args:
    cmp r4, #1
    bge controller_Controller___preUpdate_inline__P9718_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller___preUpdate_inline__P9718_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___preUpdate_inline__P9718:
controller_Controller___preUpdate_inline__P9718_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller___preUpdate_inline__P9718_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #8]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.9718:
    @stackempty locals
.final_0_137:
controller_Controller___preUpdate_inline__P9718_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(82,9): controller.Controller._controlledSprites
    ;
    .object controller_Controller__controlledSprites__P2116 "game/controller.ts(82,9): controller.Controller._controlledSprites"
controller_Controller__controlledSprites__P2116_pre:
    .section code
    .balign 4
controller_Controller__controlledSprites__P2116_args:
    cmp r4, #2
    bge controller_Controller__controlledSprites__P2116_nochk
    push {lr}
    bl _expand_args_2_17
    bl controller_Controller__controlledSprites__P2116_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller__controlledSprites__P2116:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller__controlledSprites__P2116_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller__controlledSprites__P2116_locals:
    bl game_currentScene__P2968
_proccall548:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2116:
    @stackempty locals
    movs r0, #0
.final_0_138:
controller_Controller__controlledSprites__P2116_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(33,5): Fx.imul
    ;
    .object Fx_imul__P161 "base/fixed.ts(33,5): Fx.imul"
Fx_imul__P161_pre:
    .section code
    .balign 4
    .section code
Fx_imul__P161:
Fx_imul__P161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_imul__P161_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::imul
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.161:
    @stackempty locals
.final_0_139:
Fx_imul__P161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(186,9): controller.Button.isPressed
    ;
    .object controller_Button_isPressed__P2175 "game/controllerbutton.ts(186,9): controller.Button.isPressed"
controller_Button_isPressed__P2175_pre:
    .section code
    .balign 4
controller_Button_isPressed__P2175_args:
    cmp r4, #1
    bge controller_Button_isPressed__P2175_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Button_isPressed__P2175_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_isPressed__P2175:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_isPressed__P2175_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_isPressed__P2175_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.2175:
    @stackempty locals
.final_0_140:
controller_Button_isPressed__P2175_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(114,9): controller.Controller.up
    ;
    .object controller_Controller_up__P2121 "game/controller.ts(114,9): controller.Controller.up"
controller_Controller_up__P2121_pre:
    .section code
    .balign 4
controller_Controller_up__P2121_args:
    cmp r4, #1
    bge controller_Controller_up__P2121_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller_up__P2121_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_up__P2121:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller_up__P2121_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_up__P2121_locals:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4596_nochk
_proccall549:
    add sp, #4*2 ; pop locals 2
.ret.2121:
    @stackempty locals
.final_0_141:
controller_Controller_up__P2121_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(192,9): controller.Controller.button
    ;
    .object controller_Controller_button__P4596 "game/controller.ts(192,9): controller.Controller.button"
controller_Controller_button__P4596_pre:
    .section code
    .balign 4
controller_Controller_button__P4596_args:
    cmp r4, #2
    bge controller_Controller_button__P4596_nochk
    push {lr}
    bl _expand_args_2_17
    bl controller_Controller_button__P4596_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller_button__P4596:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller_button__P4596_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_button__P4596_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.ret.4596:
    @stackempty locals
.final_0_142:
controller_Controller_button__P4596_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(122,9): controller.Controller.down
    ;
    .object controller_Controller_down__P2122 "game/controller.ts(122,9): controller.Controller.down"
controller_Controller_down__P2122_pre:
    .section code
    .balign 4
controller_Controller_down__P2122_args:
    cmp r4, #1
    bge controller_Controller_down__P2122_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller_down__P2122_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_down__P2122:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller_down__P2122_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_down__P2122_locals:
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4596_nochk
_proccall550:
    add sp, #4*2 ; pop locals 2
.ret.2122:
    @stackempty locals
.final_0_143:
controller_Controller_down__P2122_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(98,9): controller.Controller.left
    ;
    .object controller_Controller_left__P2119 "game/controller.ts(98,9): controller.Controller.left"
controller_Controller_left__P2119_pre:
    .section code
    .balign 4
controller_Controller_left__P2119_args:
    cmp r4, #1
    bge controller_Controller_left__P2119_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller_left__P2119_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_left__P2119:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller_left__P2119_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_left__P2119_locals:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4596_nochk
_proccall551:
    add sp, #4*2 ; pop locals 2
.ret.2119:
    @stackempty locals
.final_0_144:
controller_Controller_left__P2119_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(106,9): controller.Controller.right
    ;
    .object controller_Controller_right__P2120 "game/controller.ts(106,9): controller.Controller.right"
controller_Controller_right__P2120_pre:
    .section code
    .balign 4
controller_Controller_right__P2120_args:
    cmp r4, #1
    bge controller_Controller_right__P2120_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller_right__P2120_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_right__P2120:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller_right__P2120_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_right__P2120_locals:
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4596_nochk
_proccall552:
    add sp, #4*2 ; pop locals 2
.ret.2120:
    @stackempty locals
.final_0_145:
controller_Controller_right__P2120_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(193,9): controller.Button.pressureLevel
    ;
    .object controller_Button_pressureLevel__P2176 "game/controllerbutton.ts(193,9): controller.Button.pressureLevel"
controller_Button_pressureLevel__P2176_pre:
    .section code
    .balign 4
controller_Button_pressureLevel__P2176_args:
    cmp r4, #1
    bge controller_Button_pressureLevel__P2176_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Button_pressureLevel__P2176_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_pressureLevel__P2176:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_pressureLevel__P2176_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_pressureLevel__P2176_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceDalVersion
    ldr r1, _ldlit_106 ; _str31      
    bl _cmp_eq
    beq .else_0_146      
.jmpz553:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_Sprite__C2314_this_35
_proccall555:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_146      
.jmpz554:
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_2_146      
.condexprz_1_146:
    movs r0, #1
.condexprfin_2_146:
; jmp value (already in r0)
    b .ret.2176      
    b .afterif_3_146      
.else_0_146:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_45
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::pressureLevelByButtonId
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    b .ret.2176      
.afterif_3_146:
    movs r0, #0
.ret.2176:
    @stackempty locals
.final_4_146:
controller_Button_pressureLevel__P2176_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(78,9): controller.Controller._controlledSprites
    ;
    .object controller_Controller__controlledSprites__P2115 "game/controller.ts(78,9): controller.Controller._controlledSprites"
controller_Controller__controlledSprites__P2115_pre:
    .section code
    .balign 4
controller_Controller__controlledSprites__P2115_args:
    cmp r4, #1
    bge controller_Controller__controlledSprites__P2115_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller__controlledSprites__P2115_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller__controlledSprites__P2115:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller__controlledSprites__P2115_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller__controlledSprites__P2115_locals:
    bl game_currentScene__P2968
_proccall556:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.ret.2115:
    @stackempty locals
.final_0_147:
controller_Controller__controlledSprites__P2115_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(30,5): controller.players
    ;
    .object controller_players__P2105 "game/controller.ts(30,5): controller.players"
controller_players__P2105_pre:
    .section code
    .balign 4
    .section code
controller_players__P2105:
controller_players__P2105_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_players__P2105_locals:
    bl controller__player1__P2104
_proccall557:
    @stackempty locals
    ldr r0, _ldlit_107 ; controller_players_inline__P9789_Lit      
    push {r0} ; proc-arg
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall558:
    add sp, #4*2 ; pop locals 2
.ret.2105:
    @stackempty locals
.final_0_148:
controller_players__P2105_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(32,32): controller.players.inline
    ;
    .object controller_players_inline__P9789 "game/controller.ts(32,32): controller.players.inline"
controller_players_inline__P9789_pre:
    .section code
    .balign 4
controller_players_inline__P9789_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_players_inline__P9789_args@fn
controller_players_inline__P9789_args:
    cmp r4, #1
    bge controller_players_inline__P9789_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_players_inline__P9789_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_players_inline__P9789:
controller_players_inline__P9789_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_players_inline__P9789_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.9789:
    @stackempty locals
.final_0_149:
controller_players_inline__P9789_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(24,5): controller._player1
    ;
    .object controller__player1__P2104 "game/controller.ts(24,5): controller._player1"
controller__player1__P2104_pre:
    .section code
    .balign 4
    .section code
controller__player1__P2104:
controller__player1__P2104_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__player1__P2104_locals:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_150      
.jmpz559:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_150      
.lazySkip_2_150:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_150:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_150      
.jmpz560:
    ldr r0, _ldlit_108 ; controller_Controller__C2110_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #224
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Controller_constructor__P2114
_proccall561:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_0_150:
.afterif_3_150:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.2104:
    @stackempty locals
.final_4_150:
controller__player1__P2104_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(59,9): controller.Controller.constructor
    ;
    .object controller_Controller_constructor__P2114 "game/controller.ts(59,9): controller.Controller.constructor"
controller_Controller_constructor__P2114_pre:
    .section code
    .balign 4
    .section code
controller_Controller_constructor__P2114:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller_constructor__P2114_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Controller_constructor__P2114_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_151      
.jmpz562:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    b .afterif_1_151      
.else_0_151:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #15
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9845:
    ldr r0, [sp, locals@1]
    movs r1, #15
    bl _cmp_lt
    bne .jmpz563
    b .brk.9845      
.object PUSH
.balign 4
_ldlit_106:
 .word _str31
_ldlit_107:
 .word controller_players_inline__P9789_Lit
_ldlit_108:
 .word controller_Controller__C2110_VT
.object POP
.jmpz563:
    ldr r0, _ldlit_110 ; controller_Button__C2164_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2170
_proccall564:
    add sp, #4*3 ; pop locals 3
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.9845:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9845      
.brk.9845:
.afterif_1_151:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9862:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9862      
.jmpz565:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@0]
    bl _inst_controller_Button__C2164_validate_15
    str r1, [r0, #4]
    @stackempty locals
.cont.9862:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9862      
.brk.9862:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_addController__P4595
_proccall566:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.2114:
    @stackempty locals
.final_2_151:
    add sp, #4*3 ; pop locals 3
controller_Controller_constructor__P2114_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(17,5): controller.addController
    ;
    .object controller_addController__P4595 "game/controller.ts(17,5): controller.addController"
controller_addController__P4595_pre:
    .section code
    .balign 4
    .section code
controller_addController__P4595:
controller_addController__P4595_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_addController__P4595_locals:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_152      
.jmpz567:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #220
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_152:
.afterif_1_152:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_controller_Controller__C2110_validate_62
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4595:
    @stackempty locals
    movs r0, #0
.final_2_152:
controller_addController__P4595_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(72,9): control.EventContext.deltaTime
    ;
    .object control_EventContext_deltaTime__P400 "base/eventcontext.ts(72,9): control.EventContext.deltaTime"
control_EventContext_deltaTime__P400_pre:
    .section code
    .balign 4
control_EventContext_deltaTime__P400_args:
    cmp r4, #1
    bge control_EventContext_deltaTime__P400_nochk
    push {lr}
    bl _expand_args_1_10
    bl control_EventContext_deltaTime__P400_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_deltaTime__P400:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_deltaTime__P400_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventContext_deltaTime__P400_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.400:
    @stackempty locals
.final_0_153:
control_EventContext_deltaTime__P400_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(386,5): controller.__update
    ;
    .object controller___update__P2140 "game/controller.ts(386,5): controller.__update"
controller___update__P2140_pre:
    .section code
    .balign 4
    .section code
controller___update__P2140:
controller___update__P2140_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
controller___update__P2140_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_111 ; controller___update_inline__P9899_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    bl controller_players__P2105
_proccall568:
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall569:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2140:
    @stackempty locals
    movs r0, #0
.final_0_154:
    add sp, #4*1 ; pop locals 1
controller___update__P2140_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(388,27): controller.__update.inline
    ;
    .object controller___update_inline__P9899 "game/controller.ts(388,27): controller.__update.inline"
controller___update_inline__P9899_pre:
    .section code
    .balign 4
controller___update_inline__P9899_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller___update_inline__P9899_args@fn
controller___update_inline__P9899_args:
    cmp r4, #1
    bge controller___update_inline__P9899_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller___update_inline__P9899_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller___update_inline__P9899:
controller___update_inline__P9899_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller___update_inline__P9899_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller___update__P2138
_proccall570:
    add sp, #4*2 ; pop locals 2
.ret.9899:
    @stackempty locals
    movs r0, #0
.final_0_155:
controller___update_inline__P9899_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(368,9): controller.Controller.__update
    ;
    .object controller_Controller___update__P2138 "game/controller.ts(368,9): controller.Controller.__update"
controller_Controller___update__P2138_pre:
    .section code
    .balign 4
controller_Controller___update__P2138_args:
    cmp r4, #2
    bge controller_Controller___update__P2138_nochk
    push {lr}
    bl _expand_args_2_17
    bl controller_Controller___update__P2138_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller___update__P2138:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller___update__P2138_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller___update__P2138_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r1, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, args@1]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_112 ; controller_Controller___update_inline__P9912_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall571:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2138:
    @stackempty locals
    movs r0, #0
.final_0_156:
controller_Controller___update__P2138_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(370,34): controller.Controller.__update.inline
    ;
    .object controller_Controller___update_inline__P9912 "game/controller.ts(370,34): controller.Controller.__update.inline"
controller_Controller___update_inline__P9912_pre:
    .section code
    .balign 4
controller_Controller___update_inline__P9912_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Controller___update_inline__P9912_args@fn
controller_Controller___update_inline__P9912_args:
    cmp r4, #1
    bge controller_Controller___update_inline__P9912_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller___update_inline__P9912_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___update_inline__P9912:
controller_Controller___update_inline__P9912_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller___update_inline__P9912_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl controller_Button___update__P2178
_proccall572:
    add sp, #4*2 ; pop locals 2
.ret.9912:
    @stackempty locals
    movs r0, #0
.final_0_157:
controller_Controller___update_inline__P9912_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(218,9): controller.Button.__update
    ;
    .object controller_Button___update__P2178 "game/controllerbutton.ts(218,9): controller.Button.__update"
controller_Button___update__P2178_pre:
    .section code
    .balign 4
controller_Button___update__P2178_args:
    cmp r4, #2
    bge controller_Button___update__P2178_nochk
    push {lr}
    bl _expand_args_2_17
    bl controller_Button___update__P2178_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button___update__P2178:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button___update__P2178_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button___update__P2178_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_158      
.jmpz573:
    b .ret.2178      
.else_0_158:
.afterif_1_158:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    movs r1, #0
    bl _cmp_eqq
    beq .condexprz_2_158      
.jmpz574:
    movs r0, #228
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .condexprfin_3_158      
.condexprz_2_158:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    b .condexprfin_3_158      
.object PUSH
.balign 4
_ldlit_110:
 .word controller_Button__C2164_VT
_ldlit_111:
 .word controller___update_inline__P9899_Lit
_ldlit_112:
 .word controller_Controller___update_inline__P9912_Lit
.object POP
.condexprfin_3_158:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    movs r1, #0
    bl _cmp_eqq
    beq .condexprz_4_158      
.jmpz575:
    movs r0, #232
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .condexprfin_5_158      
.condexprz_4_158:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
.condexprfin_5_158:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .else_6_158      
.jmpz576:
    b .ret.2178      
.else_6_158:
.afterif_7_158:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_8_158      
.jmpz577:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_raiseButtonRepeat__P4602_nochk
_proccall578:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@2]
    str r1, [r0, #28]
    @stackempty locals
.else_8_158:
.afterif_9_158:
.ret.2178:
    @stackempty locals
    movs r0, #0
.final_10_158:
    add sp, #4*3 ; pop locals 3
controller_Button___update__P2178_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(111,9): controller.Button.raiseButtonRepeat
    ;
    .object controller_Button_raiseButtonRepeat__P4602 "game/controllerbutton.ts(111,9): controller.Button.raiseButtonRepeat"
controller_Button_raiseButtonRepeat__P4602_pre:
    .section code
    .balign 4
controller_Button_raiseButtonRepeat__P4602_args:
    cmp r4, #1
    bge controller_Button_raiseButtonRepeat__P4602_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Button_raiseButtonRepeat__P4602_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_raiseButtonRepeat__P4602:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_raiseButtonRepeat__P4602_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_raiseButtonRepeat__P4602_locals:
    movs r0, #236
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_159      
.jmpz579:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #6
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_159      
.else_0_159:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #7
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_159:
.ret.4602:
    @stackempty locals
    movs r0, #0
.final_2_159:
controller_Button_raiseButtonRepeat__P4602_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(148,9): control.EventContext.registerFrameHandler
    ;
    .object control_EventContext_registerFrameHandler__P403 "base/eventcontext.ts(148,9): control.EventContext.registerFrameHandler"
control_EventContext_registerFrameHandler__P403_pre:
    .section code
    .balign 4
control_EventContext_registerFrameHandler__P403_args:
    cmp r4, #3
    bge control_EventContext_registerFrameHandler__P403_nochk
    push {lr}
    bl _expand_args_3_14
    bl control_EventContext_registerFrameHandler__P403_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
control_EventContext_registerFrameHandler__P403:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_registerFrameHandler__P403_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerFrameHandler__P403_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_160      
.jmpz580:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl control_EventContext_registerFrameCallbacks__P4408_nochk
_proccall581:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_160:
.afterif_1_160:
    ldr r0, _ldlit_114 ; control_FrameCallback__C392_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@1]
    bl _inst_control_FrameCallback__C392_validate_65
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _inst_control_FrameCallback__C392_validate_65
    str r1, [r0, #8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10003:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10003      
.jmpz582:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_control_FrameCallback__C392_validate_65
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .else_2_160      
.jmpz583:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_66
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::insertAt
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.403      
.else_2_160:
.afterif_3_160:
.cont.10003:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10003      
.brk.10003:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.403:
    @stackempty locals
.final_4_160:
    add sp, #4*2 ; pop locals 2
control_EventContext_registerFrameHandler__P403_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(110,9): control.EventContext.registerFrameCallbacks
    ;
    .object control_EventContext_registerFrameCallbacks__P4408 "base/eventcontext.ts(110,9): control.EventContext.registerFrameCallbacks"
control_EventContext_registerFrameCallbacks__P4408_pre:
    .section code
    .balign 4
control_EventContext_registerFrameCallbacks__P4408_args:
    cmp r4, #1
    bge control_EventContext_registerFrameCallbacks__P4408_nochk
    push {lr}
    bl _expand_args_1_10
    bl control_EventContext_registerFrameCallbacks__P4408_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_registerFrameCallbacks__P4408:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_registerFrameCallbacks__P4408_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerFrameCallbacks__P4408_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_161      
.jmpz584:
    b .ret.4408      
.else_0_161:
.afterif_1_161:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_115 ; control_EventContext_registerFrameCallbacks_inline__P10040_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4408:
    @stackempty locals
    movs r0, #0
.final_2_161:
    add sp, #4*1 ; pop locals 1
control_EventContext_registerFrameCallbacks__P4408_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(114,35): control.EventContext.registerFrameCallbacks.inline
    ;
    .object control_EventContext_registerFrameCallbacks_inline__P10040 "base/eventcontext.ts(114,35): control.EventContext.registerFrameCallbacks.inline"
control_EventContext_registerFrameCallbacks_inline__P10040_pre:
    .section code
    .balign 4
control_EventContext_registerFrameCallbacks_inline__P10040_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_EventContext_registerFrameCallbacks_inline__P10040_args@fn
control_EventContext_registerFrameCallbacks_inline__P10040_args:
    .section code
control_EventContext_registerFrameCallbacks_inline__P10040:
control_EventContext_registerFrameCallbacks_inline__P10040_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerFrameCallbacks_inline__P10040_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_162      
.jmpz585:
    movs r0, #1
    ldr r1, _ldlit_116 ; control_EventContext_registerFrameCallbacks_inline__P10046_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl pauseUntil__P367
_proccall586:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_162:
.afterif_1_162:
    ldr r0, [r5, #4*3]
    movs r1, #66
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.10065:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .brk.10065      
.jmpz587:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl control_EventContext_runCallbacks__P4407_nochk
_proccall588:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl pause__P413
_proccall589:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.10065      
.brk.10065:
    ldr r0, [r5, #4*3]
    movs r1, #10
    str r1, [r0, #40]
    @stackempty locals
.ret.10040:
    @stackempty locals
    movs r0, #0
.final_2_162:
    add sp, #4*1 ; pop locals 1
control_EventContext_registerFrameCallbacks_inline__P10040_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(118,32): control.EventContext.registerFrameCallbacks.inline
    ;
    .object control_EventContext_registerFrameCallbacks_inline__P10046 "base/eventcontext.ts(118,32): control.EventContext.registerFrameCallbacks.inline"
control_EventContext_registerFrameCallbacks_inline__P10046_pre:
    .section code
    .balign 4
control_EventContext_registerFrameCallbacks_inline__P10046_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_EventContext_registerFrameCallbacks_inline__P10046_args@fn
control_EventContext_registerFrameCallbacks_inline__P10046_args:
    .section code
control_EventContext_registerFrameCallbacks_inline__P10046:
control_EventContext_registerFrameCallbacks_inline__P10046_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventContext_registerFrameCallbacks_inline__P10046_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.10046:
    @stackempty locals
.final_0_163:
control_EventContext_registerFrameCallbacks_inline__P10046_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(76,9): control.EventContext.runCallbacks
    ;
    .object control_EventContext_runCallbacks__P4407 "base/eventcontext.ts(76,9): control.EventContext.runCallbacks"
control_EventContext_runCallbacks__P4407_pre:
    .section code
    .balign 4
control_EventContext_runCallbacks__P4407_args:
    cmp r4, #1
    bge control_EventContext_runCallbacks__P4407_nochk
    push {lr}
    bl _expand_args_1_10
    bl control_EventContext_runCallbacks__P4407_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_runCallbacks__P4407:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_runCallbacks__P4407_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_runCallbacks__P4407_locals:
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #32]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.10093:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.10093      
.jmpz590:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #154
    bl _ifacecall1__20
_proccall591:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.10093:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.10093      
.object PUSH
.balign 4
_ldlit_114:
 .word control_FrameCallback__C392_VT
_ldlit_115:
 .word control_EventContext_registerFrameCallbacks_inline__P10040_Lit
_ldlit_116:
 .word control_EventContext_registerFrameCallbacks_inline__P10046_Lit
.object POP
.brk.10093:
    movs r0, #0
    str r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_164      
.jmpz592:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_164      
.lazySkip_2_164:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #61
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_164:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz593
    b .else_0_164      
.jmpz593:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@4]
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_118 ; _str12      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    movs r1, #180
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, locals@7]
    movs r1, #199
    bl _cmp_lt
    beq .else_3_164      
.jmpz594:
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_119 ; _str13      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    movs r1, #180
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_3_164:
.afterif_4_164:
    mov r7, sp
    str r7, [r6, #4]
    bl control::profilingEnabled
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_164      
.jmpz595:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_120 ; _str14      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_121 ; _str15      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_122 ; _str16      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_123 ; _str17      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::gc
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::dumpPerfCounters
    @stackempty locals
.else_5_164:
.afterif_6_164:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
.else_0_164:
.afterif_7_164:
    movs r0, #41
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #3
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall596:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
.ret.4407:
    @stackempty locals
.final_8_164:
    add sp, #4*9 ; pop locals 9
control_EventContext_runCallbacks__P4407_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(74,1): pauseUntil
    ;
    .object pauseUntil__P367 "base/poll.ts(74,1): pauseUntil"
pauseUntil__P367_pre:
    .section code
    .balign 4
    .section code
pauseUntil__P367:
pauseUntil__P367_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pauseUntil__P367_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_165      
.jmpz597:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_165      
.lazySkip_2_165:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
.lazy_1_165:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_165      
.jmpz599:
    b .ret.367      
.else_0_165:
.afterif_3_165:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_165      
.jmpz600:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
.else_4_165:
.afterif_5_165:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl control___queuePollEvent__P366
_proccall601:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.367:
    @stackempty locals
    movs r0, #0
.final_6_165:
pauseUntil__P367_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(40,5): control.__queuePollEvent
    ;
    .object control___queuePollEvent__P366 "base/poll.ts(40,5): control.__queuePollEvent"
control___queuePollEvent__P366_pre:
    .section code
    .balign 4
    .section code
control___queuePollEvent__P366:
control___queuePollEvent__P366_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control___queuePollEvent__P366_locals:
    ldr r0, _ldlit_124 ; control_PollEvent__C4381_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    ldr r0, [sp, #4*11] ; tmpref @1
    push {r0} ; proc-arg
    bl control_PollEvent_constructor__P4382
_proccall602:
    add sp, #4*12 ; pop locals 12
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_166      
.jmpz603:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    ldr r0, _ldlit_125 ; control_pollEvents__P4385_Lit      
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_166      
.else_0_166:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_166:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz604
    b .else_2_166      
.object PUSH
.balign 4
_ldlit_118:
 .word _str12
_ldlit_119:
 .word _str13
_ldlit_120:
 .word _str14
_ldlit_121:
 .word _str15
_ldlit_122:
 .word _str16
_ldlit_123:
 .word _str17
_ldlit_124:
 .word control_PollEvent__C4381_VT
_ldlit_125:
 .word control_pollEvents__P4385_Lit
.object POP
.jmpz604:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl control_onEvent__P391
_proccall605:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_3_166      
.else_2_166:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_166:
.ret.366:
    @stackempty locals
    movs r0, #0
.final_4_166:
    add sp, #4*1 ; pop locals 1
control___queuePollEvent__P366_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(21,5): control.pollEvents
    ;
    .object control_pollEvents__P4385 "base/poll.ts(21,5): control.pollEvents"
control_pollEvents__P4385_pre:
    .section code
    .balign 4
control_pollEvents__P4385_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_pollEvents__P4385_args@fn
control_pollEvents__P4385_args:
    .section code
control_pollEvents__P4385:
control_pollEvents__P4385_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_pollEvents__P4385_locals:
.cont.10260:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_gt
    bne .jmpz606
    b .brk.10260      
.jmpz606:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10267:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz607
    b .brk.10267      
.jmpz607:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #101
    bl _ifacecall1__20
_proccall609:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_167      
.jmpz608:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_167      
.lazySkip_2_167:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_167      
.jmpz610:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_167      
.lazySkip_4_167:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_3_167:
; jmp value (already in r0)
.lazy_1_167:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_167      
.jmpz611:
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4381_validate_67
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_167      
.jmpz612:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl helpers_arraySplice__P100
_proccall613:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
.else_5_167:
.afterif_6_167:
.else_0_167:
.afterif_7_167:
.cont.10267:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10267      
.brk.10267:
    movs r0, #101
    push {r0} ; proc-arg
    bl pause__P413
_proccall614:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.10260      
.brk.10260:
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
.ret.4385:
    @stackempty locals
    movs r0, #0
.final_8_167:
    add sp, #4*3 ; pop locals 3
control_pollEvents__P4385_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(9,9): control.PollEvent.constructor
    ;
    .object control_PollEvent_constructor__P4382 "base/poll.ts(9,9): control.PollEvent.constructor"
control_PollEvent_constructor__P4382_pre:
    .section code
    .balign 4
    .section code
control_PollEvent_constructor__P4382:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_PollEvent__C4381_validate_67
    mov lr, r7
control_PollEvent_constructor__P4382_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_PollEvent_constructor__P4382_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@6]
    str r1, [r0, #24]
    @stackempty locals
    movs r0, #0
.ret.4382:
    @stackempty locals
.final_0_168:
control_PollEvent_constructor__P4382_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function power/power.ts(27,5): power.poke
    ;
    .object power_poke__P1910 "power/power.ts(27,5): power.poke"
power_poke__P1910_pre:
    .section code
    .balign 4
    .section code
power_poke__P1910:
power_poke__P1910_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
power_poke__P1910_locals:
    bl power_init__P4516
_proccall615:
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    movs r1, #188
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.1910:
    @stackempty locals
    movs r0, #0
.final_0_169:
power_poke__P1910_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(221,5): control.pushEventContext
    ;
    .object control_pushEventContext__P409 "base/eventcontext.ts(221,5): control.pushEventContext"
control_pushEventContext__P409_pre:
    .section code
    .balign 4
    .section code
control_pushEventContext__P409:
control_pushEventContext__P409_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_pushEventContext__P409_locals:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_170      
.jmpz616:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #164
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_170:
.afterif_1_170:
    bl control_eventContext__P408
_proccall617:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_170      
.jmpz618:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventContext_unregister__P402
_proccall619:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_170:
.afterif_3_170:
    ldr r0, _ldlit_127 ; control_EventContext__C395_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl control_EventContext_constructor__P399
_proccall620:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
.ret.409:
    @stackempty locals
.final_4_170:
    add sp, #4*2 ; pop locals 2
control_pushEventContext__P409_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(60,9): control.EventContext.constructor
    ;
    .object control_EventContext_constructor__P399 "base/eventcontext.ts(60,9): control.EventContext.constructor"
control_EventContext_constructor__P399_pre:
    .section code
    .balign 4
    .section code
control_EventContext_constructor__P399:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_constructor__P399_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventContext_constructor__P399_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #36]
    @stackempty locals
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_171      
.jmpz621:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    movs r1, #180
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_171:
.afterif_1_171:
    movs r0, #0
.ret.399:
    @stackempty locals
.final_2_171:
control_EventContext_constructor__P399_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(142,9): control.EventContext.unregister
    ;
    .object control_EventContext_unregister__P402 "base/eventcontext.ts(142,9): control.EventContext.unregister"
control_EventContext_unregister__P402_pre:
    .section code
    .balign 4
control_EventContext_unregister__P402_args:
    cmp r4, #1
    bge control_EventContext_unregister__P402_nochk
    push {lr}
    bl _expand_args_1_10
    bl control_EventContext_unregister__P402_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_unregister__P402:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_unregister__P402_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_unregister__P402_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.10384:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.10384      
.jmpz622:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventHandler_unregister__P4404
_proccall623:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.10384:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.10384      
.brk.10384:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #12]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.402:
    @stackempty locals
    movs r0, #0
.final_0_172:
    add sp, #4*3 ; pop locals 3
control_EventContext_unregister__P402_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(37,9): control.EventHandler.unregister
    ;
    .object control_EventHandler_unregister__P4404 "base/eventcontext.ts(37,9): control.EventHandler.unregister"
control_EventHandler_unregister__P4404_pre:
    .section code
    .balign 4
control_EventHandler_unregister__P4404_args:
    cmp r4, #1
    bge control_EventHandler_unregister__P4404_nochk
    push {lr}
    bl _expand_args_1_10
    bl control_EventHandler_unregister__P4404_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventHandler_unregister__P4404:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventHandler__C4402_validate_24
    mov lr, r7
control_EventHandler_unregister__P4404_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_unregister__P4404_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, _ldlit_128 ; control_doNothing__P4406_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.4404:
    @stackempty locals
    movs r0, #0
.final_0_173:
control_EventHandler_unregister__P4404_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(42,5): control.doNothing
    ;
    .object control_doNothing__P4406 "base/eventcontext.ts(42,5): control.doNothing"
control_doNothing__P4406_pre:
    .section code
    .balign 4
control_doNothing__P4406_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_doNothing__P4406_args@fn
control_doNothing__P4406_args:
    .section code
control_doNothing__P4406:
control_doNothing__P4406_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_doNothing__P4406_locals:
.ret.4406:
    @stackempty locals
    movs r0, #0
.final_0_174:
control_doNothing__P4406_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_127:
 .word control_EventContext__C395_VT
_ldlit_128:
 .word control_doNothing__P4406_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(106,9): scene.Scene.constructor
    ;
    .object scene_Scene_constructor__P2838 "game/scene.ts(106,9): scene.Scene.constructor"
scene_Scene_constructor__P2838_pre:
    .section code
    .balign 4
    .section code
scene_Scene_constructor__P2838:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2816_validate_18
    mov lr, r7
scene_Scene_constructor__P2838_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_constructor__P2838_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #96]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, _ldlit_130 ; ArcadePhysicsEngine__C2500_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_constructor__P2501
_proccall624:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, _ldlit_131 ; scene_Camera__C2754_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl scene_Camera_constructor__P2758
_proccall625:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #32]
    @stackempty locals
    ldr r0, _ldlit_132 ; scene_Background__C2642_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_Background_constructor__P2646
_proccall626:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #52]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #56]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #64]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #68]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #84]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #88]
    @stackempty locals
    movs r0, #0
.ret.2838:
    @stackempty locals
.final_0_175:
scene_Scene_constructor__P2838_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(21,9): scene.Background.constructor
    ;
    .object scene_Background_constructor__P2646 "game/background.ts(21,9): scene.Background.constructor"
scene_Background_constructor__P2646_pre:
    .section code
    .balign 4
    .section code
scene_Background_constructor__P2646:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Background__C2642_validate_54
    mov lr, r7
scene_Background_constructor__P2646_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Background_constructor__P2646_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2646:
    @stackempty locals
.final_0_176:
scene_Background_constructor__P2646_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(18,9): scene.Camera.constructor
    ;
    .object scene_Camera_constructor__P2758 "game/camera.ts(18,9): scene.Camera.constructor"
scene_Camera_constructor__P2758_pre:
    .section code
    .balign 4
    .section code
scene_Camera_constructor__P2758:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_constructor__P2758_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_constructor__P2758_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.2758:
    @stackempty locals
.final_0_177:
scene_Camera_constructor__P2758_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(59,5): ArcadePhysicsEngine.constructor
    ;
    .object ArcadePhysicsEngine_constructor__P2501 "game/physics.ts(59,5): ArcadePhysicsEngine.constructor"
ArcadePhysicsEngine_constructor__P2501_pre:
    .section code
    .balign 4
    .section code
ArcadePhysicsEngine_constructor__P2501:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_constructor__P2501_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_constructor__P2501_locals:
    movs r0, #0
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_133 ; sprites_SpriteMap__C2419_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl sprites_SpriteMap_constructor__P2420
_proccall627:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_maxSpeed__P2503_nochk
_proccall628:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_maxStep__P2507_nochk
_proccall629:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_minStep__P2505_nochk
_proccall630:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2501:
    @stackempty locals
.final_0_178:
ArcadePhysicsEngine_constructor__P2501_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(81,5): ArcadePhysicsEngine.minStep
    ;
    .object ArcadePhysicsEngine_minStep__P2505 "game/physics.ts(81,5): ArcadePhysicsEngine.minStep"
ArcadePhysicsEngine_minStep__P2505_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_minStep__P2505_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_minStep__P2505_nochk
    push {lr}
    bl _expand_args_2_17
    bl ArcadePhysicsEngine_minStep__P2505_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_minStep__P2505:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_minStep__P2505_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_minStep__P2505_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall631:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2505:
    @stackempty locals
    movs r0, #0
.final_0_179:
ArcadePhysicsEngine_minStep__P2505_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(77,5): ArcadePhysicsEngine.minStep
    ;
    .object ArcadePhysicsEngine_minStep__P2504 "game/physics.ts(77,5): ArcadePhysicsEngine.minStep"
ArcadePhysicsEngine_minStep__P2504_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_minStep__P2504_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_minStep__P2504_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_minStep__P2504_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_minStep__P2504:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_minStep__P2504_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_minStep__P2504_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall632:
    add sp, #4*1 ; pop locals 1
.ret.2504:
    @stackempty locals
.final_0_180:
ArcadePhysicsEngine_minStep__P2504_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(75,5): Fx.toInt
    ;
    .object Fx_toInt__P172 "base/fixed.ts(75,5): Fx.toInt"
Fx_toInt__P172_pre:
    .section code
    .balign 4
    .section code
Fx_toInt__P172:
Fx_toInt__P172_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_toInt__P172_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.ret.172:
    @stackempty locals
.final_0_181:
Fx_toInt__P172_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(89,5): ArcadePhysicsEngine.maxStep
    ;
    .object ArcadePhysicsEngine_maxStep__P2507 "game/physics.ts(89,5): ArcadePhysicsEngine.maxStep"
ArcadePhysicsEngine_maxStep__P2507_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxStep__P2507_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_maxStep__P2507_nochk
    push {lr}
    bl _expand_args_2_17
    bl ArcadePhysicsEngine_maxStep__P2507_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_maxStep__P2507:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_maxStep__P2507_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxStep__P2507_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall633:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2507:
    @stackempty locals
    movs r0, #0
.final_0_182:
ArcadePhysicsEngine_maxStep__P2507_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(85,5): ArcadePhysicsEngine.maxStep
    ;
    .object ArcadePhysicsEngine_maxStep__P2506 "game/physics.ts(85,5): ArcadePhysicsEngine.maxStep"
ArcadePhysicsEngine_maxStep__P2506_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxStep__P2506_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_maxStep__P2506_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_maxStep__P2506_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_maxStep__P2506:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_maxStep__P2506_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxStep__P2506_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall634:
    add sp, #4*1 ; pop locals 1
.ret.2506:
    @stackempty locals
.final_0_183:
ArcadePhysicsEngine_maxStep__P2506_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_130:
 .word ArcadePhysicsEngine__C2500_VT
_ldlit_131:
 .word scene_Camera__C2754_VT
_ldlit_132:
 .word scene_Background__C2642_VT
_ldlit_133:
 .word sprites_SpriteMap__C2419_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(72,5): ArcadePhysicsEngine.maxSpeed
    ;
    .object ArcadePhysicsEngine_maxSpeed__P2503 "game/physics.ts(72,5): ArcadePhysicsEngine.maxSpeed"
ArcadePhysicsEngine_maxSpeed__P2503_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxSpeed__P2503_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_maxSpeed__P2503_nochk
    push {lr}
    bl _expand_args_2_17
    bl ArcadePhysicsEngine_maxSpeed__P2503_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_maxSpeed__P2503:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_maxSpeed__P2503_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxSpeed__P2503_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall635:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2503:
    @stackempty locals
    movs r0, #0
.final_0_184:
ArcadePhysicsEngine_maxSpeed__P2503_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(68,5): ArcadePhysicsEngine.maxSpeed
    ;
    .object ArcadePhysicsEngine_maxSpeed__P2502 "game/physics.ts(68,5): ArcadePhysicsEngine.maxSpeed"
ArcadePhysicsEngine_maxSpeed__P2502_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxSpeed__P2502_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_maxSpeed__P2502_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_maxSpeed__P2502_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_maxSpeed__P2502:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_maxSpeed__P2502_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxSpeed__P2502_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall636:
    add sp, #4*1 ; pop locals 1
.ret.2502:
    @stackempty locals
.final_0_186:
ArcadePhysicsEngine_maxSpeed__P2502_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(9,9): sprites.SpriteMap.constructor
    ;
    .object sprites_SpriteMap_constructor__P2420 "game/spritemap.ts(9,9): sprites.SpriteMap.constructor"
sprites_SpriteMap_constructor__P2420_pre:
    .section code
    .balign 4
    .section code
sprites_SpriteMap_constructor__P2420:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_constructor__P2420_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteMap_constructor__P2420_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2420:
    @stackempty locals
.final_0_187:
sprites_SpriteMap_constructor__P2420_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(288,5): controller.pauseUntilAnyButtonIsPressed
    ;
    .object controller_pauseUntilAnyButtonIsPressed__P2180 "game/controllerbutton.ts(288,5): controller.pauseUntilAnyButtonIsPressed"
controller_pauseUntilAnyButtonIsPressed__P2180_pre:
    .section code
    .balign 4
controller_pauseUntilAnyButtonIsPressed__P2180_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_pauseUntilAnyButtonIsPressed__P2180_args@fn
controller_pauseUntilAnyButtonIsPressed__P2180_args:
    .section code
controller_pauseUntilAnyButtonIsPressed__P2180:
controller_pauseUntilAnyButtonIsPressed__P2180_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_pauseUntilAnyButtonIsPressed__P2180_locals:
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #1
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    @stackempty locals
.ret.2180:
    @stackempty locals
    movs r0, #0
.final_0_189:
controller_pauseUntilAnyButtonIsPressed__P2180_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(116,5): game.setWaitAnyButton
    ;
    .object game_setWaitAnyButton__P2969 "game/game.ts(116,5): game.setWaitAnyButton"
game_setWaitAnyButton__P2969_pre:
    .section code
    .balign 4
    .section code
game_setWaitAnyButton__P2969:
game_setWaitAnyButton__P2969_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_setWaitAnyButton__P2969_locals:
    ldr r0, [sp, args@0]
    movs r1, #240
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.2969:
    @stackempty locals
    movs r0, #0
.final_0_190:
game_setWaitAnyButton__P2969_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(45,9): Math.FastRandom.constructor
    ;
    .object Math_FastRandom_constructor__P3029 "game/mathUtil.ts(45,9): Math.FastRandom.constructor"
Math_FastRandom_constructor__P3029_pre:
    .section code
    .balign 4
    .section code
Math_FastRandom_constructor__P3029:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3027_validate_70
    mov lr, r7
Math_FastRandom_constructor__P3029_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_constructor__P3029_locals:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_191      
.jmpz637:
    movs r0, #3
    ldr r1, _ldlit_135 ; 131071      
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    str r0, [sp, args@1]
    @stackempty locals
.else_0_191:
.afterif_1_191:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.3029:
    @stackempty locals
.final_2_191:
Math_FastRandom_constructor__P3029_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(27,5): game.consoleOverlay.listener
    ;
    .object game_consoleOverlay_listener__P5149 "game/console.ts(27,5): game.consoleOverlay.listener"
game_consoleOverlay_listener__P5149_pre:
    .section code
    .balign 4
game_consoleOverlay_listener__P5149_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_consoleOverlay_listener__P5149_args@fn
game_consoleOverlay_listener__P5149_args:
    cmp r4, #2
    bge game_consoleOverlay_listener__P5149_nochk
    push {lr}
    bl _expand_args_2_17
    bl game_consoleOverlay_listener__P5149_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
game_consoleOverlay_listener__P5149:
game_consoleOverlay_listener__P5149_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_consoleOverlay_listener__P5149_locals:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_192      
.jmpz638:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_192      
.lazySkip_2_192:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_192:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_192      
.jmpz639:
    b .ret.5149      
.else_0_192:
.afterif_3_192:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_136 ; _str1      
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_stringSplit__P122
_proccall640:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_137 ; forEach_inline__P10586_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall641:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, _ldlit_138 ; game_consoleOverlay_listener_inline__P10591_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall642:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r7, [r6, #0]
    ldr r1, [r7, #120]
    bl _cmp_gt
    beq .else_4_192      
.jmpz643:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r7, [r6, #0]
    ldr r1, [r7, #120]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arraySplice__P100
_proccall644:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_192:
.afterif_5_192:
.ret.5149:
    @stackempty locals
    movs r0, #0
.final_6_192:
game_consoleOverlay_listener__P5149_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(33,21): forEach.inline
    ;
    .object forEach_inline__P10586 "game/console.ts(33,21): forEach.inline"
forEach_inline__P10586_pre:
    .section code
    .balign 4
forEach_inline__P10586_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P10586_args@fn
forEach_inline__P10586_args:
    cmp r4, #1
    bge forEach_inline__P10586_nochk
    push {lr}
    bl _expand_args_1_10
    bl forEach_inline__P10586_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P10586:
forEach_inline__P10586_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P10586_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.10586:
    @stackempty locals
.final_0_193:
forEach_inline__P10586_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(34,22): game.consoleOverlay.listener.inline
    ;
    .object game_consoleOverlay_listener_inline__P10591 "game/console.ts(34,22): game.consoleOverlay.listener.inline"
game_consoleOverlay_listener_inline__P10591_pre:
    .section code
    .balign 4
game_consoleOverlay_listener_inline__P10591_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_consoleOverlay_listener_inline__P10591_args@fn
game_consoleOverlay_listener_inline__P10591_args:
    cmp r4, #1
    bge game_consoleOverlay_listener_inline__P10591_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_consoleOverlay_listener_inline__P10591_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_consoleOverlay_listener_inline__P10591:
game_consoleOverlay_listener_inline__P10591_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_consoleOverlay_listener_inline__P10591_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.10594:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10594      
.jmpz645:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #128
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSlice__P119
_proccall646:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.10594:
    ldr r0, [sp, locals@0]
    movs r1, #128
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.10594      
.brk.10594:
.ret.10591:
    @stackempty locals
    movs r0, #0
.final_0_194:
    add sp, #4*1 ; pop locals 1
game_consoleOverlay_listener_inline__P10591_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(122,5): console.addListener
    ;
    .object console_addListener__P383 "base/console.ts(122,5): console.addListener"
console_addListener__P383_pre:
    .section code
    .balign 4
    .section code
console_addListener__P383:
console_addListener__P383_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_addListener__P383_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_195      
.jmpz647:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_195      
.lazySkip_2_195:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_195:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_195      
.jmpz648:
    b .ret.383      
.else_0_195:
.afterif_3_195:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.383:
    @stackempty locals
    movs r0, #0
.final_4_195:
console_addListener__P383_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(26,9): listeners.inline
    ;
    .object listeners_inline__P4387 "base/console.ts(26,9): listeners.inline"
listeners_inline__P4387_pre:
    .section code
    .balign 4
listeners_inline__P4387_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word listeners_inline__P4387_args@fn
listeners_inline__P4387_args:
    cmp r4, #2
    bge listeners_inline__P4387_nochk
    push {lr}
    bl _expand_args_2_17
    bl listeners_inline__P4387_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
listeners_inline__P4387:
listeners_inline__P4387_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
listeners_inline__P4387_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_71
    mov r7, sp
    str r7, [r6, #4]
    bl control::__log
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4387:
    @stackempty locals
    movs r0, #0
.final_0_196:
listeners_inline__P4387_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_135:
 .word 131071
_ldlit_136:
 .word _str1
_ldlit_137:
 .word forEach_inline__P10586_Lit
_ldlit_138:
 .word game_consoleOverlay_listener_inline__P10591_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/targetoverrides.ts(39,5): _screen_internal.createScreen
    ;
    .object _screen_internal_createScreen__P2013 "screen---st7735/targetoverrides.ts(39,5): _screen_internal.createScreen"
_screen_internal_createScreen__P2013_pre:
    .section code
    .balign 4
    .section code
_screen_internal_createScreen__P2013:
_screen_internal_createScreen__P2013_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
_screen_internal_createScreen__P2013_locals:
    movs r0, #160
    movs r1, #120
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #8
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setupScreenStatusBar
    @stackempty locals
    movs r0, #160
    movs r1, #8
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateScreenStatusBar
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_140 ; _screen_internal_createScreen_inline__P10663_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control___screen_setupUpdate__P1971
_proccall649:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_141 ; _screen_internal_createScreen_inline__P10668_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    pop {r0} ; tmpref @1
    movs r1, #176
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2013:
    @stackempty locals
.final_0_197:
    add sp, #4*2 ; pop locals 2
_screen_internal_createScreen__P2013_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/targetoverrides.ts(46,38): _screen_internal.createScreen.inline
    ;
    .object _screen_internal_createScreen_inline__P10663 "screen---st7735/targetoverrides.ts(46,38): _screen_internal.createScreen.inline"
_screen_internal_createScreen_inline__P10663_pre:
    .section code
    .balign 4
_screen_internal_createScreen_inline__P10663_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _screen_internal_createScreen_inline__P10663_args@fn
_screen_internal_createScreen_inline__P10663_args:
    .section code
_screen_internal_createScreen_inline__P10663:
_screen_internal_createScreen_inline__P10663_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_screen_internal_createScreen_inline__P10663_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateScreen
    add sp, #4*1 ; pop locals 1
.ret.10663:
    @stackempty locals
    movs r0, #0
.final_0_198:
_screen_internal_createScreen_inline__P10663_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/targetoverrides.ts(47,40): _screen_internal.createScreen.inline
    ;
    .object _screen_internal_createScreen_inline__P10668 "screen---st7735/targetoverrides.ts(47,40): _screen_internal.createScreen.inline"
_screen_internal_createScreen_inline__P10668_pre:
    .section code
    .balign 4
_screen_internal_createScreen_inline__P10668_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _screen_internal_createScreen_inline__P10668_args@fn
_screen_internal_createScreen_inline__P10668_args:
    cmp r4, #1
    bge _screen_internal_createScreen_inline__P10668_nochk
    push {lr}
    bl _expand_args_1_10
    bl _screen_internal_createScreen_inline__P10668_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
_screen_internal_createScreen_inline__P10668:
_screen_internal_createScreen_inline__P10668_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_screen_internal_createScreen_inline__P10668_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_7
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::fill
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl helpers_imagePrint__P1967
_proccall650:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateScreenStatusBar
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateStats
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.10668:
    @stackempty locals
    movs r0, #0
.final_0_199:
_screen_internal_createScreen_inline__P10668_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/frame.ts(11,5): control.__screen.setupUpdate
    ;
    .object control___screen_setupUpdate__P1971 "screen---st7735/frame.ts(11,5): control.__screen.setupUpdate"
control___screen_setupUpdate__P1971_pre:
    .section code
    .balign 4
    .section code
control___screen_setupUpdate__P1971:
control___screen_setupUpdate__P1971_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control___screen_setupUpdate__P1971_locals:
    movs r0, #66
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #248
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.1971:
    @stackempty locals
    movs r0, #0
.final_0_200:
control___screen_setupUpdate__P1971_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(383,5): scene.systemMenu.register
    ;
    .object scene_systemMenu_register__P3074 "game/systemmenu.ts(383,5): scene.systemMenu.register"
scene_systemMenu_register__P3074_pre:
    .section code
    .balign 4
scene_systemMenu_register__P3074_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_register__P3074_args@fn
scene_systemMenu_register__P3074_args:
    .section code
scene_systemMenu_register__P3074:
scene_systemMenu_register__P3074_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_register__P3074_locals:
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_201      
.jmpz652:
    b .ret.3074      
.else_0_201:
.afterif_1_201:
    ldr r0, _ldlit_142 ; scene_systemMenu_showSystemMenu__P3075_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #224
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall653:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3074:
    @stackempty locals
    movs r0, #0
.final_2_201:
scene_systemMenu_register__P3074_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(389,5): scene.systemMenu.showSystemMenu
    ;
    .object scene_systemMenu_showSystemMenu__P3075 "game/systemmenu.ts(389,5): scene.systemMenu.showSystemMenu"
scene_systemMenu_showSystemMenu__P3075_pre:
    .section code
    .balign 4
scene_systemMenu_showSystemMenu__P3075_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_showSystemMenu__P3075_args@fn
scene_systemMenu_showSystemMenu__P3075_args:
    .section code
scene_systemMenu_showSystemMenu__P3075:
scene_systemMenu_showSystemMenu__P3075_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_showSystemMenu__P3075_locals:
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_202      
.jmpz654:
    b .ret.3075      
.else_0_202:
.afterif_1_202:
    bl game_pushScene__P2972
_proccall655:
    @stackempty locals
    ldr r0, _ldlit_143 ; scene_systemMenu_PauseMenu__C3063_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_144 ; scene_systemMenu_buildOptionList__P3071_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_constructor__P3064
_proccall656:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #216
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_show__P3065
_proccall657:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3075:
    @stackempty locals
    movs r0, #0
.final_2_202:
scene_systemMenu_showSystemMenu__P3075_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(124,9): scene.systemMenu.PauseMenu.show
    ;
    .object scene_systemMenu_PauseMenu_show__P3065 "game/systemmenu.ts(124,9): scene.systemMenu.PauseMenu.show"
scene_systemMenu_PauseMenu_show__P3065_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show__P3065_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_show__P3065_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_systemMenu_PauseMenu_show__P3065_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_show__P3065:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3063_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_show__P3065_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_PauseMenu_show__P3065_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #147
    bl _ifacecall1__20
_proccall658:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10724:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz659
    b .brk.10724      
.object PUSH
.balign 4
_ldlit_140:
 .word _screen_internal_createScreen_inline__P10663_Lit
_ldlit_141:
 .word _screen_internal_createScreen_inline__P10668_Lit
_ldlit_142:
 .word scene_systemMenu_showSystemMenu__P3075_Lit
_ldlit_143:
 .word scene_systemMenu_PauseMenu__C3063_VT
_ldlit_144:
 .word scene_systemMenu_buildOptionList__P3071_Lit
.object POP
.jmpz659:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_show__P3057
_proccall660:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_MenuOption_setTheme__P3060
_proccall661:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #228
    bl _ifacecall1_get_8
_proccall662:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall663:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #87
    bl _ifacecall1_get_8
_proccall664:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #86
    bl _ifacecall1_get_8
_proccall665:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #89
    bl _ifacecall1_get_8
_proccall666:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall667:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #87
    bl _ifacecall1_get_8
_proccall668:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #86
    bl _ifacecall1_get_8
_proccall669:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl scene_systemMenu_MenuOption_position__P3058
_proccall670:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.10724:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10724      
.brk.10724:
    movs r0, #10
    push {r0} ; proc-arg
    bl controller__setUserEventsEnabled__P2181
_proccall671:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_146 ; scene_systemMenu_PauseMenu_show_inline__P10785_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall672:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_147 ; scene_systemMenu_PauseMenu_show_inline__P10805_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall673:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_148 ; scene_systemMenu_PauseMenu_show_inline__P10834_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall674:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_149 ; scene_systemMenu_PauseMenu_show_inline__P10839_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #224
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall675:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_150 ; scene_systemMenu_PauseMenu_show_inline__P10844_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall676:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_151 ; scene_systemMenu_PauseMenu_show_inline__P10856_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall677:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_152 ; scene_systemMenu_PauseMenu_show_inline__P10865_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall678:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_153 ; scene_systemMenu_PauseMenu_show_inline__P10881_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2171
_proccall679:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_154 ; scene_systemMenu_PauseMenu_show_inline__P10893_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl game_onShade__P2985
_proccall680:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_setSelection__P3067_nochk
_proccall681:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3065:
    @stackempty locals
    movs r0, #0
.final_0_203:
    add sp, #4*2 ; pop locals 2
scene_systemMenu_PauseMenu_show__P3065_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(141,51): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10785 "game/systemmenu.ts(141,51): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10785_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10785_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10785_args@fn
scene_systemMenu_PauseMenu_show_inline__P10785_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10785:
scene_systemMenu_PauseMenu_show_inline__P10785_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10785_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_204      
.jmpz682:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_204      
.lazySkip_2_204:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_204:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_204      
.jmpz683:
    b .ret.10785      
.else_0_204:
.afterif_3_204:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3061
_proccall684:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10785:
    @stackempty locals
    movs r0, #0
.final_4_204:
scene_systemMenu_PauseMenu_show_inline__P10785_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(146,49): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10805 "game/systemmenu.ts(146,49): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10805_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10805_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10805_args@fn
scene_systemMenu_PauseMenu_show_inline__P10805_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10805:
scene_systemMenu_PauseMenu_show_inline__P10805_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10805_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_205      
.jmpz685:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_205      
.lazySkip_2_205:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_205:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_205      
.jmpz686:
    b .ret.10805      
.else_0_205:
.afterif_3_205:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3061
_proccall687:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_scene_systemMenu_MenuOption__C3055_validate_73
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.10805:
    @stackempty locals
    movs r0, #0
.final_4_205:
scene_systemMenu_PauseMenu_show_inline__P10805_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(152,51): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10834 "game/systemmenu.ts(152,51): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10834_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10834_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10834_args@fn
scene_systemMenu_PauseMenu_show_inline__P10834_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10834:
scene_systemMenu_PauseMenu_show_inline__P10834_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10834_locals:
    bl scene_systemMenu_closeMenu__P3070
_proccall688:
    @stackempty locals
.ret.10834:
    @stackempty locals
    movs r0, #0
.final_0_206:
scene_systemMenu_PauseMenu_show_inline__P10834_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_146:
 .word scene_systemMenu_PauseMenu_show_inline__P10785_Lit
_ldlit_147:
 .word scene_systemMenu_PauseMenu_show_inline__P10805_Lit
_ldlit_148:
 .word scene_systemMenu_PauseMenu_show_inline__P10834_Lit
_ldlit_149:
 .word scene_systemMenu_PauseMenu_show_inline__P10839_Lit
_ldlit_150:
 .word scene_systemMenu_PauseMenu_show_inline__P10844_Lit
_ldlit_151:
 .word scene_systemMenu_PauseMenu_show_inline__P10856_Lit
_ldlit_152:
 .word scene_systemMenu_PauseMenu_show_inline__P10865_Lit
_ldlit_153:
 .word scene_systemMenu_PauseMenu_show_inline__P10881_Lit
_ldlit_154:
 .word scene_systemMenu_PauseMenu_show_inline__P10893_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(156,54): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10839 "game/systemmenu.ts(156,54): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10839_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10839_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10839_args@fn
scene_systemMenu_PauseMenu_show_inline__P10839_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10839:
scene_systemMenu_PauseMenu_show_inline__P10839_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10839_locals:
    bl scene_systemMenu_closeMenu__P3070
_proccall689:
    @stackempty locals
.ret.10839:
    @stackempty locals
    movs r0, #0
.final_0_207:
scene_systemMenu_PauseMenu_show_inline__P10839_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(160,52): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10844 "game/systemmenu.ts(160,52): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10844_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10844_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10844_args@fn
scene_systemMenu_PauseMenu_show_inline__P10844_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10844:
scene_systemMenu_PauseMenu_show_inline__P10844_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10844_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall690:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall691:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3067_nochk
_proccall692:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10844:
    @stackempty locals
    movs r0, #0
.final_0_208:
scene_systemMenu_PauseMenu_show_inline__P10844_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(164,54): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10856 "game/systemmenu.ts(164,54): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10856_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10856_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10856_args@fn
scene_systemMenu_PauseMenu_show_inline__P10856_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10856:
scene_systemMenu_PauseMenu_show_inline__P10856_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10856_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    movs r1, #3
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall693:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3067_nochk
_proccall694:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10856:
    @stackempty locals
    movs r0, #0
.final_0_209:
scene_systemMenu_PauseMenu_show_inline__P10856_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(168,54): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10865 "game/systemmenu.ts(168,54): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10865_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10865_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10865_args@fn
scene_systemMenu_PauseMenu_show_inline__P10865_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10865:
scene_systemMenu_PauseMenu_show_inline__P10865_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10865_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall695:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall696:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3067_nochk
_proccall697:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10865:
    @stackempty locals
    movs r0, #0
.final_0_210:
scene_systemMenu_PauseMenu_show_inline__P10865_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(172,55): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10881 "game/systemmenu.ts(172,55): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10881_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10881_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10881_args@fn
scene_systemMenu_PauseMenu_show_inline__P10881_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10881:
scene_systemMenu_PauseMenu_show_inline__P10881_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10881_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall698:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3067_nochk
_proccall699:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10881:
    @stackempty locals
    movs r0, #0
.final_0_211:
scene_systemMenu_PauseMenu_show_inline__P10881_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(176,26): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10893 "game/systemmenu.ts(176,26): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10893_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10893_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10893_args@fn
scene_systemMenu_PauseMenu_show_inline__P10893_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10893:
scene_systemMenu_PauseMenu_show_inline__P10893_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10893_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_onUpdate__P3066_nochk
_proccall700:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_drawText__P3068_nochk
_proccall701:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.10893:
    @stackempty locals
    movs r0, #0
.final_0_212:
scene_systemMenu_PauseMenu_show_inline__P10893_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(225,9): scene.systemMenu.PauseMenu.drawText
    ;
    .object scene_systemMenu_PauseMenu_drawText__P3068 "game/systemmenu.ts(225,9): scene.systemMenu.PauseMenu.drawText"
scene_systemMenu_PauseMenu_drawText__P3068_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_drawText__P3068_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_drawText__P3068_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_systemMenu_PauseMenu_drawText__P3068_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_drawText__P3068:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3063_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_drawText__P3068_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_drawText__P3068_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_213      
.jmpz702:
    b .ret.3068      
.else_0_213:
.afterif_1_213:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #89
    bl _ifacecall1_get_8
_proccall703:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #31
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    bl helpers_imageFillRect__P1935
_proccall704:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #160
    bl _ifacecall1_get_8
_proccall705:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #159
    bl _ifacecall1_get_8
_proccall706:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl helpers_imagePrintCenter__P1966
_proccall707:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #169
    bl _ifacecall1_get_8
_proccall708:
    add sp, #4*1 ; pop locals 1
    movs r1, #7
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #169
    bl _ifacecall1_get_8
_proccall709:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #13
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    movs r0, #31
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    movs r0, #1
    push {r0} ; proc-arg
    push {r4}
    bl helpers_imageFillRect__P1935
_proccall710:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #228
    bl _ifacecall1_get_8
_proccall711:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #169
    bl _ifacecall1_get_8
_proccall712:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #228
    bl _ifacecall1_get_8
_proccall713:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #168
    bl _ifacecall1_get_8
_proccall714:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall715:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageFillRect__P1935
_proccall716:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r1, #150
    bl _ifacecall1__20
_proccall717:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #169
    bl _ifacecall1_get_8
_proccall718:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #168
    bl _ifacecall1_get_8
_proccall719:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    movs r0, #31
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imagePrintCenter__P1966
_proccall720:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.3068:
    @stackempty locals
    movs r0, #0
.final_2_213:
scene_systemMenu_PauseMenu_drawText__P3068_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(207,5): helpers.imagePrintCenter
    ;
    .object helpers_imagePrintCenter__P1966 "screen---st7735/text.ts(207,5): helpers.imagePrintCenter"
helpers_imagePrintCenter__P1966_pre:
    .section code
    .balign 4
    .section code
helpers_imagePrintCenter__P1966:
helpers_imagePrintCenter__P1966_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_imagePrintCenter__P1966_locals:
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_214      
.jmpz721:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl image_getFontForText__P1954
_proccall722:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@4]
    @stackempty locals
.else_0_214:
.afterif_1_214:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall723:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_imagePrint__P1967
_proccall724:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.ret.1966:
    @stackempty locals
    movs r0, #0
.final_2_214:
    add sp, #4*2 ; pop locals 2
helpers_imagePrintCenter__P1966_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(184,9): scene.systemMenu.PauseMenu.onUpdate
    ;
    .object scene_systemMenu_PauseMenu_onUpdate__P3066 "game/systemmenu.ts(184,9): scene.systemMenu.PauseMenu.onUpdate"
scene_systemMenu_PauseMenu_onUpdate__P3066_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_onUpdate__P3066_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_onUpdate__P3066_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_systemMenu_PauseMenu_onUpdate__P3066_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_onUpdate__P3066:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3063_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_onUpdate__P3066_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_PauseMenu_onUpdate__P3066_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #245
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.11007:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.11007      
.jmpz725:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall726:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, _ldlit_156 ; _dbl50      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::sin
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_MenuOption_setOffset__P3059
_proccall727:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.11007:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.11007      
.brk.11007:
    bl game_currentScene__P2968
_proccall728:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .else_0_215      
.jmpz729:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_1_215      
.else_0_215:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_2_215      
.jmpz730:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_3_215      
.else_2_215:
    b .ret.3066      
.afterif_3_215:
.afterif_1_215:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Math_abs__P128
_proccall732:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _cmp_lt
    beq .else_4_215      
.jmpz731:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_215:
.afterif_5_215:
    bl game_currentScene__P2968
_proccall733:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_Camera_offsetY__P2762
_proccall734:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3066:
    @stackempty locals
    movs r0, #0
.final_6_215:
    add sp, #4*3 ; pop locals 3
scene_systemMenu_PauseMenu_onUpdate__P3066_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(540,5): Math.abs
    ;
    .object Math_abs__P128 "base/pxt-helpers.ts(540,5): Math.abs"
Math_abs__P128_pre:
    .section code
    .balign 4
    .section code
Math_abs__P128:
Math_abs__P128_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_abs__P128_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_0_216      
.jmpz735:
    movs r0, #1
    ldr r1, [sp, args@0]
    bl _numops_subs
    b .condexprfin_1_216      
.condexprz_0_216:
    ldr r0, [sp, args@0]
.condexprfin_1_216:
; jmp value (already in r0)
.ret.128:
    @stackempty locals
.final_2_216:
Math_abs__P128_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(62,9): scene.systemMenu.MenuOption.setOffset
    ;
    .object scene_systemMenu_MenuOption_setOffset__P3059 "game/systemmenu.ts(62,9): scene.systemMenu.MenuOption.setOffset"
scene_systemMenu_MenuOption_setOffset__P3059_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_setOffset__P3059_args:
    cmp r4, #2
    bge scene_systemMenu_MenuOption_setOffset__P3059_nochk
    push {lr}
    bl _expand_args_2_17
    bl scene_systemMenu_MenuOption_setOffset__P3059_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_MenuOption_setOffset__P3059:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3055_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_setOffset__P3059_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_setOffset__P3059_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2377
_proccall736:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_y__P2329
_proccall737:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_y__P2330
_proccall738:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3059:
    @stackempty locals
    movs r0, #0
.final_0_217:
scene_systemMenu_MenuOption_setOffset__P3059_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(127,5): Sprite.y
    ;
    .object Sprite_y__P2330 "game/sprite.ts(127,5): Sprite.y"
Sprite_y__P2330_pre:
    .section code
    .balign 4
Sprite_y__P2330_args:
    cmp r4, #2
    bge Sprite_y__P2330_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_y__P2330_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_y__P2330:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_y__P2330_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_y__P2330_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2371_nochk
_proccall739:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2377_nochk
_proccall740:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2330:
    @stackempty locals
    movs r0, #0
.final_0_218:
Sprite_y__P2330_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(381,5): Sprite.height
    ;
    .object Sprite_height__P2371 "game/sprite.ts(381,5): Sprite.height"
Sprite_height__P2371_pre:
    .section code
    .balign 4
Sprite_height__P2371_args:
    cmp r4, #1
    bge Sprite_height__P2371_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_height__P2371_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_height__P2371:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_height__P2371_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_height__P2371_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2371:
    @stackempty locals
.final_0_219:
Sprite_height__P2371_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(422,5): Sprite.top
    ;
    .object Sprite_top__P2377 "game/sprite.ts(422,5): Sprite.top"
Sprite_top__P2377_pre:
    .section code
    .balign 4
Sprite_top__P2377_args:
    cmp r4, #2
    bge Sprite_top__P2377_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_top__P2377_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_top__P2377:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_top__P2377_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite_top__P2377_locals:
    bl game_currentScene__P2968
_proccall741:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #28]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall742:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @4
    ldr r0, [sp, #4*1] ; tmpref @3
    pop {r1} ; tmpref @4
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    movs r1, #44
    bl _classCall_PhysicsEngine__C2484_25
_proccall743:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.2377:
    @stackempty locals
    movs r0, #0
.final_0_220:
    add sp, #4*1 ; pop locals 1
Sprite_top__P2377_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(14,5): PhysicsEngine.moveSprite
    ;
    .object PhysicsEngine_moveSprite__P2488 "game/physics.ts(14,5): PhysicsEngine.moveSprite"
PhysicsEngine_moveSprite__P2488_pre:
    .section code
    .balign 4
PhysicsEngine_moveSprite__P2488_args:
    cmp r4, #4
    bge PhysicsEngine_moveSprite__P2488_nochk
    push {lr}
    bl _expand_args_4_74
    bl PhysicsEngine_moveSprite__P2488_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
PhysicsEngine_moveSprite__P2488:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2484_validate_29
    mov lr, r7
PhysicsEngine_moveSprite__P2488_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_moveSprite__P2488_locals:
.ret.2488:
    @stackempty locals
    movs r0, #0
.final_0_221:
PhysicsEngine_moveSprite__P2488_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(417,5): Sprite.top
    ;
    .object Sprite_top__P2376 "game/sprite.ts(417,5): Sprite.top"
Sprite_top__P2376_pre:
    .section code
    .balign 4
Sprite_top__P2376_args:
    cmp r4, #1
    bge Sprite_top__P2376_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_top__P2376_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_156:
 .word _dbl50
.object POP
    .section code
Sprite_top__P2376:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_top__P2376_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_top__P2376_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2376:
    @stackempty locals
.final_0_222:
Sprite_top__P2376_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(439,5): game.onShade
    ;
    .object game_onShade__P2985 "game/game.ts(439,5): game.onShade"
game_onShade__P2985_pre:
    .section code
    .balign 4
    .section code
game_onShade__P2985:
game_onShade__P2985_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_onShade__P2985_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl game_init__P4823
_proccall744:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_223      
.jmpz745:
    b .ret.2985      
.else_0_223:
.afterif_1_223:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #161
    push {r0} ; proc-arg
    bl scene_createRenderable__P2778
_proccall746:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2985:
    @stackempty locals
    movs r0, #0
.final_2_223:
game_onShade__P2985_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(25,5): scene.createRenderable
    ;
    .object scene_createRenderable__P2778 "game/renderable.ts(25,5): scene.createRenderable"
scene_createRenderable__P2778_pre:
    .section code
    .balign 4
    .section code
scene_createRenderable__P2778:
scene_createRenderable__P2778_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_createRenderable__P2778_locals:
    ldr r0, _ldlit_158 ; scene_Renderable__C2773_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_224      
.jmpz747:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_224      
.lazySkip_1_224:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_159 ; renderable_inline__P11152_Lit      
.lazy_0_224:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*4] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_Renderable_constructor__P2774
_proccall748:
    add sp, #4*5 ; pop locals 5
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2778:
    @stackempty locals
.final_2_224:
    add sp, #4*1 ; pop locals 1
scene_createRenderable__P2778_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(32,33): renderable.inline
    ;
    .object renderable_inline__P11152 "game/renderable.ts(32,33): renderable.inline"
renderable_inline__P11152_pre:
    .section code
    .balign 4
renderable_inline__P11152_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word renderable_inline__P11152_args@fn
renderable_inline__P11152_args:
    .section code
renderable_inline__P11152:
renderable_inline__P11152_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
renderable_inline__P11152_locals:
    movs r0, #66
.ret.11152:
    @stackempty locals
.final_0_225:
renderable_inline__P11152_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(3,9): scene.Renderable.constructor
    ;
    .object scene_Renderable_constructor__P2774 "game/renderable.ts(3,9): scene.Renderable.constructor"
scene_Renderable_constructor__P2774_pre:
    .section code
    .balign 4
    .section code
scene_Renderable_constructor__P2774:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Renderable__C2773_validate_75
    mov lr, r7
scene_Renderable_constructor__P2774_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Renderable_constructor__P2774_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #16]
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_constructor__P2072
_proccall749:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2774:
    @stackempty locals
.final_0_226:
scene_Renderable_constructor__P2774_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(209,9): scene.systemMenu.PauseMenu.setSelection
    ;
    .object scene_systemMenu_PauseMenu_setSelection__P3067 "game/systemmenu.ts(209,9): scene.systemMenu.PauseMenu.setSelection"
scene_systemMenu_PauseMenu_setSelection__P3067_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_setSelection__P3067_args:
    cmp r4, #2
    bge scene_systemMenu_PauseMenu_setSelection__P3067_nochk
    push {lr}
    bl _expand_args_2_17
    bl scene_systemMenu_PauseMenu_setSelection__P3067_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_setSelection__P3067:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3063_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_setSelection__P3067_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_setSelection__P3067_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_227      
.jmpz750:
    b .ret.3067      
.else_0_227:
.afterif_1_227:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_227      
.jmpz751:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #5
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3061
_proccall752:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_227:
.afterif_3_227:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_227      
.jmpz753:
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_controller_Button__C2164_63
_proccall755:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_5_227      
.jmpz754:
    movs r0, #3
    b .condexprfin_6_227      
.condexprz_5_227:
    movs r0, #1
.condexprfin_6_227:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3061
_proccall756:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_227:
.afterif_7_227:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_updateScrollTarget__P5071_nochk
_proccall757:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3067:
    @stackempty locals
    movs r0, #0
.final_8_227:
scene_systemMenu_PauseMenu_setSelection__P3067_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(251,9): scene.systemMenu.PauseMenu.updateScrollTarget
    ;
    .object scene_systemMenu_PauseMenu_updateScrollTarget__P5071 "game/systemmenu.ts(251,9): scene.systemMenu.PauseMenu.updateScrollTarget"
scene_systemMenu_PauseMenu_updateScrollTarget__P5071_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_updateScrollTarget__P5071_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_updateScrollTarget__P5071_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_systemMenu_PauseMenu_updateScrollTarget__P5071_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_updateScrollTarget__P5071:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3063_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_updateScrollTarget__P5071_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_PauseMenu_updateScrollTarget__P5071_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall758:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_228      
.jmpz759:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_228      
.lazySkip_2_228:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_1_228:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_228      
.jmpz760:
    b .ret.5071      
.else_0_228:
.afterif_3_228:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_4_228      
.jmpz761:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_5_228      
.else_4_228:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_5_228:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #86
    bl _ifacecall1_get_8
_proccall762:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #87
    bl _ifacecall1_get_8
_proccall763:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5071:
    @stackempty locals
    movs r0, #0
.final_6_228:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_PauseMenu_updateScrollTarget__P5071_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(321,5): scene.systemMenu.closeMenu
    ;
    .object scene_systemMenu_closeMenu__P3070 "game/systemmenu.ts(321,5): scene.systemMenu.closeMenu"
scene_systemMenu_closeMenu__P3070_pre:
    .section code
    .balign 4
scene_systemMenu_closeMenu__P3070_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_closeMenu__P3070_args@fn
scene_systemMenu_closeMenu__P3070_args:
    .section code
scene_systemMenu_closeMenu__P3070:
scene_systemMenu_closeMenu__P3070_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_closeMenu__P3070_locals:
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz764
    b .else_0_229      
.object PUSH
.balign 4
_ldlit_158:
 .word scene_Renderable__C2773_VT
_ldlit_159:
 .word renderable_inline__P11152_Lit
.object POP
.jmpz764:
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_dispose__P3069
_proccall765:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    movs r1, #216
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    bl controller__setUserEventsEnabled__P2181
_proccall766:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl game_popScene__P2973
_proccall767:
    @stackempty locals
.else_0_229:
.afterif_1_229:
.ret.3070:
    @stackempty locals
    movs r0, #0
.final_2_229:
scene_systemMenu_closeMenu__P3070_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(150,5): game.popScene
    ;
    .object game_popScene__P2973 "game/game.ts(150,5): game.popScene"
game_popScene__P2973_pre:
    .section code
    .balign 4
    .section code
game_popScene__P2973:
game_popScene__P2973_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_popScene__P2973_locals:
    bl game_currentScene__P2968
_proccall768:
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_230      
.jmpz769:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_230      
.lazySkip_2_230:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_1_230:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_230      
.jmpz770:
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl control_popEventContext__P410
_proccall771:
    @stackempty locals
    b .afterif_3_230      
.else_0_230:
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_230      
.jmpz772:
    bl control_popEventContext__P410
_proccall773:
    @stackempty locals
    movs r0, #0
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_4_230:
.afterif_5_230:
.afterif_3_230:
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_230      
.jmpz774:
    bl particles_enableAll__P3151
_proccall775:
    @stackempty locals
.else_6_230:
.afterif_7_230:
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_230      
.jmpz776:
    movs r0, #1
    ldr r1, _ldlit_161 ; game_popScene_inline__P11262_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall777:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_8_230:
.afterif_9_230:
.ret.2973:
    @stackempty locals
    movs r0, #0
.final_10_230:
    add sp, #4*1 ; pop locals 1
game_popScene__P2973_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(166,39): game.popScene.inline
    ;
    .object game_popScene_inline__P11262 "game/game.ts(166,39): game.popScene.inline"
game_popScene_inline__P11262_pre:
    .section code
    .balign 4
game_popScene_inline__P11262_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_popScene_inline__P11262_args@fn
game_popScene_inline__P11262_args:
    cmp r4, #1
    bge game_popScene_inline__P11262_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_popScene_inline__P11262_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_popScene_inline__P11262:
game_popScene_inline__P11262_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_popScene_inline__P11262_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
.ret.11262:
    @stackempty locals
    movs r0, #0
.final_0_231:
game_popScene_inline__P11262_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(414,5): particles.enableAll
    ;
    .object particles_enableAll__P3151 "game/particles.ts(414,5): particles.enableAll"
particles_enableAll__P3151_pre:
    .section code
    .balign 4
    .section code
particles_enableAll__P3151:
particles_enableAll__P3151_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_enableAll__P3151_locals:
    bl particles_particleSources__P5165
_proccall779:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_232      
.jmpz780:
    ldr r0, _ldlit_162 ; particles_enableAll_inline__P11272_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall781:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_pruneParticles__P5161
_proccall782:
    @stackempty locals
.else_0_232:
.afterif_1_232:
.ret.3151:
    @stackempty locals
    movs r0, #0
.final_2_232:
    add sp, #4*1 ; pop locals 1
particles_enableAll__P3151_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(417,29): particles.enableAll.inline
    ;
    .object particles_enableAll_inline__P11272 "game/particles.ts(417,29): particles.enableAll.inline"
particles_enableAll_inline__P11272_pre:
    .section code
    .balign 4
particles_enableAll_inline__P11272_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_enableAll_inline__P11272_args@fn
particles_enableAll_inline__P11272_args:
    cmp r4, #1
    bge particles_enableAll_inline__P11272_nochk
    push {lr}
    bl _expand_args_1_10
    bl particles_enableAll_inline__P11272_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_enableAll_inline__P11272:
particles_enableAll_inline__P11272_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_enableAll_inline__P11272_locals:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3132
_proccall783:
    add sp, #4*2 ; pop locals 2
    movs r0, #66
.ret.11272:
    @stackempty locals
.final_0_233:
particles_enableAll_inline__P11272_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(328,5): particles.pruneParticles
    ;
    .object particles_pruneParticles__P5161 "game/particles.ts(328,5): particles.pruneParticles"
particles_pruneParticles__P5161_pre:
    .section code
    .balign 4
particles_pruneParticles__P5161_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_pruneParticles__P5161_args@fn
particles_pruneParticles__P5161_args:
    .section code
particles_pruneParticles__P5161:
particles_pruneParticles__P5161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_pruneParticles__P5161_locals:
    bl particles_particleSources__P5165
_proccall784:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_234      
.jmpz785:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arraySlice__P115
_proccall786:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_163 ; particles_pruneParticles_inline__P11286_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall787:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_234:
.afterif_1_234:
.ret.5161:
    @stackempty locals
    movs r0, #0
.final_2_234:
    add sp, #4*1 ; pop locals 1
particles_pruneParticles__P5161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(330,63): particles.pruneParticles.inline
    ;
    .object particles_pruneParticles_inline__P11286 "game/particles.ts(330,63): particles.pruneParticles.inline"
particles_pruneParticles_inline__P11286_pre:
    .section code
    .balign 4
particles_pruneParticles_inline__P11286_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_pruneParticles_inline__P11286_args@fn
particles_pruneParticles_inline__P11286_args:
    cmp r4, #1
    bge particles_pruneParticles_inline__P11286_nochk
    push {lr}
    bl _expand_args_1_10
    bl particles_pruneParticles_inline__P11286_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_pruneParticles_inline__P11286:
particles_pruneParticles_inline__P11286_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_pruneParticles_inline__P11286_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource__prune__P3127
_proccall788:
    add sp, #4*1 ; pop locals 1
.ret.11286:
    @stackempty locals
    movs r0, #0
.final_0_235:
particles_pruneParticles_inline__P11286_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(167,9): particles.ParticleSource._prune
    ;
    .object particles_ParticleSource__prune__P3127 "game/particles.ts(167,9): particles.ParticleSource._prune"
particles_ParticleSource__prune__P3127_pre:
    .section code
    .balign 4
particles_ParticleSource__prune__P3127_args:
    cmp r4, #1
    bge particles_ParticleSource__prune__P3127_nochk
    push {lr}
    bl _expand_args_1_10
    bl particles_ParticleSource__prune__P3127_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource__prune__P3127:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource__prune__P3127_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource__prune__P3127_locals:
.cont.11291:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_236      
.jmpz789:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_236      
.lazySkip_1_236:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_0_236:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.11291      
.jmpz790:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .cont.11291      
.brk.11291:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #5
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_236      
.jmpz791:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_236      
.lazySkip_4_236:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_3_236:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_236      
.jmpz792:
    bl game_currentScene__P2968
_proccall793:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_236      
.jmpz794:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.else_5_236:
.afterif_6_236:
    bl particles_particleSources__P5165
_proccall795:
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_236      
.jmpz796:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_236      
.lazySkip_9_236:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_8_236:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_236      
.jmpz797:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.else_7_236:
.afterif_10_236:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_236:
.afterif_11_236:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    str r0, [sp, locals@2]
    @stackempty locals
.cont.11343:
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .jmpz798
    b .lazySkip_13_236      
.object PUSH
.balign 4
_ldlit_161:
 .word game_popScene_inline__P11262_Lit
_ldlit_162:
 .word particles_enableAll_inline__P11272_Lit
_ldlit_163:
 .word particles_pruneParticles_inline__P11286_Lit
.object POP
.jmpz798:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_12_236      
.lazySkip_13_236:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #24]
.lazy_12_236:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.11343      
.jmpz799:
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #24]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_le
    beq .else_14_236      
.jmpz800:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #24]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_15_236      
.else_14_236:
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #24]
    str r0, [sp, locals@2]
    @stackempty locals
.afterif_15_236:
    b .cont.11343      
.brk.11343:
.ret.3127:
    @stackempty locals
    movs r0, #0
.final_16_236:
    add sp, #4*3 ; pop locals 3
particles_ParticleSource__prune__P3127_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(304,5): helpers.arraySlice
    ;
    .object helpers_arraySlice__P115 "base/pxt-helpers.ts(304,5): helpers.arraySlice"
helpers_arraySlice__P115_pre:
    .section code
    .balign 4
    .section code
helpers_arraySlice__P115:
helpers_arraySlice__P115_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySlice__P115_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_237      
.jmpz801:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
    b .afterif_1_237      
.else_0_237:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_237      
.jmpz802:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall803:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_2_237:
.afterif_3_237:
.afterif_1_237:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_4_237      
.jmpz804:
    ldr r0, [sp, locals@0]
    b .ret.115      
.else_4_237:
.afterif_5_237:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_237      
.jmpz805:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_7_237      
.else_6_237:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_8_237      
.jmpz806:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_8_237:
.afterif_9_237:
.afterif_7_237:
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_10_237      
.jmpz807:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
.else_10_237:
.afterif_11_237:
    ldr r0, [sp, args@1]
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.11394:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    beq .brk.11394      
.jmpz808:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.11394:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.11394      
.brk.11394:
    ldr r0, [sp, locals@0]
.ret.115:
    @stackempty locals
.final_12_237:
    add sp, #4*3 ; pop locals 3
helpers_arraySlice__P115_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(224,9): particles.ParticleSource.enabled
    ;
    .object particles_ParticleSource_enabled__P3132 "game/particles.ts(224,9): particles.ParticleSource.enabled"
particles_ParticleSource_enabled__P3132_pre:
    .section code
    .balign 4
particles_ParticleSource_enabled__P3132_args:
    cmp r4, #2
    bge particles_ParticleSource_enabled__P3132_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ParticleSource_enabled__P3132_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_enabled__P3132:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_enabled__P3132_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_enabled__P3132_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3131_nochk
_proccall810:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_238      
.jmpz809:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_238      
.jmpz811:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_orrs
    b .condexprfin_2_238      
.condexprz_1_238:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_eors
.condexprfin_2_238:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #36]
    @stackempty locals
.else_0_238:
.afterif_3_238:
.ret.3132:
    @stackempty locals
    movs r0, #0
.final_4_238:
particles_ParticleSource_enabled__P3132_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(217,9): particles.ParticleSource.enabled
    ;
    .object particles_ParticleSource_enabled__P3131 "game/particles.ts(217,9): particles.ParticleSource.enabled"
particles_ParticleSource_enabled__P3131_pre:
    .section code
    .balign 4
particles_ParticleSource_enabled__P3131_args:
    cmp r4, #1
    bge particles_ParticleSource_enabled__P3131_nochk
    push {lr}
    bl _expand_args_1_10
    bl particles_ParticleSource_enabled__P3131_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource_enabled__P3131:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_enabled__P3131_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_enabled__P3131_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3131:
    @stackempty locals
.final_0_239:
particles_ParticleSource_enabled__P3131_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(422,5): particles.particleSources
    ;
    .object particles_particleSources__P5165 "game/particles.ts(422,5): particles.particleSources"
particles_particleSources__P5165_pre:
    .section code
    .balign 4
    .section code
particles_particleSources__P5165:
particles_particleSources__P5165_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_particleSources__P5165_locals:
    bl game_currentScene__P2968
_proccall812:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #72]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5165:
    @stackempty locals
.final_0_240:
    add sp, #4*1 ; pop locals 1
particles_particleSources__P5165_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(237,5): control.popEventContext
    ;
    .object control_popEventContext__P410 "base/eventcontext.ts(237,5): control.popEventContext"
control_popEventContext__P410_pre:
    .section code
    .balign 4
    .section code
control_popEventContext__P410:
control_popEventContext__P410_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_popEventContext__P410_locals:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_241      
.jmpz813:
    b .ret.410      
.else_0_241:
.afterif_1_241:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_241      
.jmpz814:
    b .ret.410      
.else_2_241:
.afterif_3_241:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventContext_unregister__P402
_proccall815:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_241      
.jmpz816:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl control_EventContext_register__P401
_proccall817:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_5_241      
.else_4_241:
    movs r0, #0
    movs r1, #164
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.afterif_5_241:
.ret.410:
    @stackempty locals
    movs r0, #0
.final_6_241:
    add sp, #4*2 ; pop locals 2
control_popEventContext__P410_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(136,9): control.EventContext.register
    ;
    .object control_EventContext_register__P401 "base/eventcontext.ts(136,9): control.EventContext.register"
control_EventContext_register__P401_pre:
    .section code
    .balign 4
control_EventContext_register__P401_args:
    cmp r4, #1
    bge control_EventContext_register__P401_nochk
    push {lr}
    bl _expand_args_1_10
    bl control_EventContext_register__P401_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_register__P401:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_register__P401_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_register__P401_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.11464:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.11464      
.jmpz818:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventHandler_register__P4403
_proccall819:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.11464:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.11464      
.brk.11464:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl control_EventContext_registerFrameCallbacks__P4408_nochk
_proccall820:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.401:
    @stackempty locals
    movs r0, #0
.final_0_242:
    add sp, #4*3 ; pop locals 3
control_EventContext_register__P401_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(244,9): scene.systemMenu.PauseMenu.dispose
    ;
    .object scene_systemMenu_PauseMenu_dispose__P3069 "game/systemmenu.ts(244,9): scene.systemMenu.PauseMenu.dispose"
scene_systemMenu_PauseMenu_dispose__P3069_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_dispose__P3069_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_dispose__P3069_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_systemMenu_PauseMenu_dispose__P3069_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_dispose__P3069:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3063_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_dispose__P3069_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_dispose__P3069_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_243      
.jmpz821:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_165 ; scene_systemMenu_PauseMenu_dispose_inline__P11474_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall822:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #4]
    @stackempty locals
.else_0_243:
.afterif_1_243:
.ret.3069:
    @stackempty locals
    movs r0, #0
.final_2_243:
scene_systemMenu_PauseMenu_dispose__P3069_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(246,38): scene.systemMenu.PauseMenu.dispose.inline
    ;
    .object scene_systemMenu_PauseMenu_dispose_inline__P11474 "game/systemmenu.ts(246,38): scene.systemMenu.PauseMenu.dispose.inline"
scene_systemMenu_PauseMenu_dispose_inline__P11474_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_dispose_inline__P11474_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_dispose_inline__P11474_args@fn
scene_systemMenu_PauseMenu_dispose_inline__P11474_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_dispose_inline__P11474_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_systemMenu_PauseMenu_dispose_inline__P11474_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_dispose_inline__P11474:
scene_systemMenu_PauseMenu_dispose_inline__P11474_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_dispose_inline__P11474_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_dispose__P3062
_proccall823:
    add sp, #4*1 ; pop locals 1
.ret.11474:
    @stackempty locals
    movs r0, #0
.final_0_244:
scene_systemMenu_PauseMenu_dispose_inline__P11474_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(78,9): scene.systemMenu.MenuOption.dispose
    ;
    .object scene_systemMenu_MenuOption_dispose__P3062 "game/systemmenu.ts(78,9): scene.systemMenu.MenuOption.dispose"
scene_systemMenu_MenuOption_dispose__P3062_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_dispose__P3062_args:
    cmp r4, #1
    bge scene_systemMenu_MenuOption_dispose__P3062_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_systemMenu_MenuOption_dispose__P3062_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_MenuOption_dispose__P3062:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3055_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_dispose__P3062_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_dispose__P3062_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_245      
.jmpz824:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_destroy__P2401
_proccall825:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_destroy__P2401
_proccall826:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #8]
    @stackempty locals
.else_0_245:
.afterif_1_245:
.ret.3062:
    @stackempty locals
    movs r0, #0
.final_2_245:
scene_systemMenu_MenuOption_dispose__P3062_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(857,5): Sprite.destroy
    ;
    .object Sprite_destroy__P2401 "game/sprite.ts(857,5): Sprite.destroy"
Sprite_destroy__P2401_pre:
    .section code
    .balign 4
Sprite_destroy__P2401_args:
    cmp r4, #3
    bge Sprite_destroy__P2401_nochk
    push {lr}
    bl _expand_args_3_14
    bl Sprite_destroy__P2401_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite_destroy__P2401:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_destroy__P2401_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_destroy__P2401_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_246      
.jmpz827:
    b .ret.2401      
.else_0_246:
.afterif_1_246:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_246      
.jmpz828:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl effects_ParticleEffect_destroy__P3233
_proccall829:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_3_246      
.else_2_246:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite__destroyCore__P2402_nochk
_proccall830:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_246:
.ret.2401:
    @stackempty locals
    movs r0, #0
.final_4_246:
Sprite_destroy__P2401_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(868,5): Sprite._destroyCore
    ;
    .object Sprite__destroyCore__P2402 "game/sprite.ts(868,5): Sprite._destroyCore"
Sprite__destroyCore__P2402_pre:
    .section code
    .balign 4
Sprite__destroyCore__P2402_args:
    cmp r4, #1
    bge Sprite__destroyCore__P2402_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite__destroyCore__P2402_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite__destroyCore__P2402:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite__destroyCore__P2402_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite__destroyCore__P2402_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    bl game_currentScene__P2968
_proccall831:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_247      
.jmpz832:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_247      
.lazySkip_2_247:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
.lazy_1_247:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_247      
.jmpz833:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteSet_remove__P2443
_proccall834:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_247:
.afterif_3_247:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #40
    bl _classCall_PhysicsEngine__C2484_25
_proccall835:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #120]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_247      
.jmpz836:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #115
    bl _ifacecall1__20
_proccall837:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_247:
.afterif_5_247:
    movs r0, #1
    ldr r1, _ldlit_166 ; forEach_inline__P11556_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #1
    ldr r1, _ldlit_167 ; Sprite__destroyCore_inline__P11562_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #40]
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall838:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall839:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2402:
    @stackempty locals
    movs r0, #0
.final_6_247:
    add sp, #4*1 ; pop locals 1
Sprite__destroyCore__P2402_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(878,21): forEach.inline
    ;
    .object forEach_inline__P11556 "game/sprite.ts(878,21): forEach.inline"
forEach_inline__P11556_pre:
    .section code
    .balign 4
forEach_inline__P11556_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P11556_args@fn
forEach_inline__P11556_args:
    cmp r4, #1
    bge forEach_inline__P11556_nochk
    push {lr}
    bl _expand_args_1_10
    bl forEach_inline__P11556_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P11556:
forEach_inline__P11556_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P11556_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.11556:
    @stackempty locals
.final_0_248:
forEach_inline__P11556_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(879,22): Sprite._destroyCore.inline
    ;
    .object Sprite__destroyCore_inline__P11562 "game/sprite.ts(879,22): Sprite._destroyCore.inline"
Sprite__destroyCore_inline__P11562_pre:
    .section code
    .balign 4
Sprite__destroyCore_inline__P11562_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word Sprite__destroyCore_inline__P11562_args@fn
Sprite__destroyCore_inline__P11562_args:
    cmp r4, #1
    bge Sprite__destroyCore_inline__P11562_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite__destroyCore_inline__P11562_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite__destroyCore_inline__P11562:
Sprite__destroyCore_inline__P11562_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite__destroyCore_inline__P11562_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #154
    bl _ifacecall2__27
_proccall840:
    add sp, #4*2 ; pop locals 2
    b .ret.11562      
.object PUSH
.balign 4
_ldlit_165:
 .word scene_systemMenu_PauseMenu_dispose_inline__P11474_Lit
_ldlit_166:
 .word forEach_inline__P11556_Lit
_ldlit_167:
 .word Sprite__destroyCore_inline__P11562_Lit
.object POP
.ret.11562:
    @stackempty locals
    movs r0, #0
.final_0_249:
Sprite__destroyCore_inline__P11562_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(11,5): PhysicsEngine.removeSprite
    ;
    .object PhysicsEngine_removeSprite__P2487 "game/physics.ts(11,5): PhysicsEngine.removeSprite"
PhysicsEngine_removeSprite__P2487_pre:
    .section code
    .balign 4
PhysicsEngine_removeSprite__P2487_args:
    cmp r4, #2
    bge PhysicsEngine_removeSprite__P2487_nochk
    push {lr}
    bl _expand_args_2_17
    bl PhysicsEngine_removeSprite__P2487_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
PhysicsEngine_removeSprite__P2487:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2484_validate_29
    mov lr, r7
PhysicsEngine_removeSprite__P2487_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_removeSprite__P2487_locals:
.ret.2487:
    @stackempty locals
    movs r0, #0
.final_0_250:
PhysicsEngine_removeSprite__P2487_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(454,5): Sprite.kind
    ;
    .object Sprite_kind__P2380 "game/sprite.ts(454,5): Sprite.kind"
Sprite_kind__P2380_pre:
    .section code
    .balign 4
Sprite_kind__P2380_args:
    cmp r4, #1
    bge Sprite_kind__P2380_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_kind__P2380_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_kind__P2380:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_kind__P2380_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_kind__P2380_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
.ret.2380:
    @stackempty locals
.final_0_251:
Sprite_kind__P2380_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(42,9): effects.ParticleEffect.destroy
    ;
    .object effects_ParticleEffect_destroy__P3233 "game/particleeffects.ts(42,9): effects.ParticleEffect.destroy"
effects_ParticleEffect_destroy__P3233_pre:
    .section code
    .balign 4
effects_ParticleEffect_destroy__P3233_args:
    cmp r4, #4
    bge effects_ParticleEffect_destroy__P3233_nochk
    push {lr}
    bl _expand_args_4_74
    bl effects_ParticleEffect_destroy__P3233_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
effects_ParticleEffect_destroy__P3233:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ParticleEffect__C3230_validate_78
    mov lr, r7
effects_ParticleEffect_destroy__P3233_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ParticleEffect_destroy__P3233_locals:
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #56
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_setFlag__P2392
_proccall841:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    movs r0, #6
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    push {r4}
    bl effects_ParticleEffect_start__P3232_nochk
_proccall842:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_252      
.jmpz843:
    ldr r0, [sp, args@2]
    b .condexprfin_1_252      
.condexprz_0_252:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.condexprfin_1_252:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    pop {r1} ; tmpref @1
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #65
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl effects_ImageEffect_applyTo__P3260
_proccall844:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3233:
    @stackempty locals
    movs r0, #0
.final_2_252:
effects_ParticleEffect_destroy__P3233_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(61,50): dissolve.inline
    ;
    .object dissolve_inline__P11602 "game/effects.ts(61,50): dissolve.inline"
dissolve_inline__P11602_pre:
    .section code
    .balign 4
dissolve_inline__P11602_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word dissolve_inline__P11602_args@fn
dissolve_inline__P11602_args:
    cmp r4, #2
    bge dissolve_inline__P11602_nochk
    push {lr}
    bl _expand_args_2_17
    bl dissolve_inline__P11602_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
dissolve_inline__P11602:
dissolve_inline__P11602_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
dissolve_inline__P11602_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #11
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.11613:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_gt
    beq .brk.11613      
.jmpz845:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3031
_proccall846:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3031
_proccall847:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Math_FastRandom_randomRange__P3031
_proccall848:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Math_FastRandom_randomRange__P3031
_proccall849:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_imageDrawRect__P1938
_proccall850:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.cont.11613:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.11613      
.brk.11613:
.ret.11602:
    @stackempty locals
    movs r0, #0
.final_0_253:
    add sp, #4*5 ; pop locals 5
dissolve_inline__P11602_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(63,9): Math.FastRandom.randomRange
    ;
    .object Math_FastRandom_randomRange__P3031 "game/mathUtil.ts(63,9): Math.FastRandom.randomRange"
Math_FastRandom_randomRange__P3031_pre:
    .section code
    .balign 4
Math_FastRandom_randomRange__P3031_args:
    cmp r4, #3
    bge Math_FastRandom_randomRange__P3031_nochk
    push {lr}
    bl _expand_args_3_14
    bl Math_FastRandom_randomRange__P3031_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Math_FastRandom_randomRange__P3031:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3027_validate_70
    mov lr, r7
Math_FastRandom_randomRange__P3031_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_randomRange__P3031_locals:
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .condexprz_0_254      
.jmpz851:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_FastRandom_next__P3030_nochk
_proccall852:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_254      
.condexprz_0_254:
    movs r0, #1
.condexprfin_1_254:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    pop {r1} ; tmpref @1
    bl _numops_adds
.ret.3031:
    @stackempty locals
.final_2_254:
Math_FastRandom_randomRange__P3031_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(54,9): Math.FastRandom.next
    ;
    .object Math_FastRandom_next__P3030 "game/mathUtil.ts(54,9): Math.FastRandom.next"
Math_FastRandom_next__P3030_pre:
    .section code
    .balign 4
Math_FastRandom_next__P3030_args:
    cmp r4, #1
    bge Math_FastRandom_next__P3030_nochk
    push {lr}
    bl _expand_args_1_10
    bl Math_FastRandom_next__P3030_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Math_FastRandom_next__P3030:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3027_validate_70
    mov lr, r7
Math_FastRandom_next__P3030_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_next__P3030_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_ands
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    ldr r1, _ldlit_169 ; 92161      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_eors
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
.ret.3030:
    @stackempty locals
.final_0_255:
Math_FastRandom_next__P3030_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(11,9): effects.ImageEffect.constructor
    ;
    .object effects_ImageEffect_constructor__P3259 "game/effects.ts(11,9): effects.ImageEffect.constructor"
effects_ImageEffect_constructor__P3259_pre:
    .section code
    .balign 4
    .section code
effects_ImageEffect_constructor__P3259:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ImageEffect__C3258_validate_79
    mov lr, r7
effects_ImageEffect_constructor__P3259_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ImageEffect_constructor__P3259_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, _ldlit_170 ; Math_FastRandom__C3027_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Math_FastRandom_constructor__P3029
_proccall853:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.3259:
    @stackempty locals
.final_0_256:
effects_ImageEffect_constructor__P3259_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(22,9): effects.ImageEffect.applyTo
    ;
    .object effects_ImageEffect_applyTo__P3260 "game/effects.ts(22,9): effects.ImageEffect.applyTo"
effects_ImageEffect_applyTo__P3260_pre:
    .section code
    .balign 4
effects_ImageEffect_applyTo__P3260_args:
    cmp r4, #2
    bge effects_ImageEffect_applyTo__P3260_nochk
    push {lr}
    bl _expand_args_2_17
    bl effects_ImageEffect_applyTo__P3260_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
effects_ImageEffect_applyTo__P3260:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ImageEffect__C3258_validate_79
    mov lr, r7
effects_ImageEffect_applyTo__P3260_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
effects_ImageEffect_applyTo__P3260_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_257      
.jmpz854:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_257      
.lazySkip_2_257:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    ldr r0, [r0, #88]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_257:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_257      
.jmpz855:
    b .ret.3260      
.else_0_257:
.afterif_3_257:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::clone
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl effects_ImageEffect_change__P3261_nochk
_proccall856:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_setImage__P2364
_proccall857:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3260:
    @stackempty locals
    movs r0, #0
.final_4_257:
    add sp, #4*1 ; pop locals 1
effects_ImageEffect_applyTo__P3260_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(33,9): effects.ImageEffect.change
    ;
    .object effects_ImageEffect_change__P3261 "game/effects.ts(33,9): effects.ImageEffect.change"
effects_ImageEffect_change__P3261_pre:
    .section code
    .balign 4
effects_ImageEffect_change__P3261_args:
    cmp r4, #2
    bge effects_ImageEffect_change__P3261_nochk
    push {lr}
    bl _expand_args_2_17
    bl effects_ImageEffect_change__P3261_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
effects_ImageEffect_change__P3261:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ImageEffect__C3258_validate_79
    mov lr, r7
effects_ImageEffect_change__P3261_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ImageEffect_change__P3261_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    movs r1, #130
    bl _ifacecall3__40
_proccall858:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3261:
    @stackempty locals
    movs r0, #0
.final_0_258:
effects_ImageEffect_change__P3261_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(27,9): effects.ParticleEffect.start
    ;
    .object effects_ParticleEffect_start__P3232 "game/particleeffects.ts(27,9): effects.ParticleEffect.start"
effects_ParticleEffect_start__P3232_pre:
    .section code
    .balign 4
effects_ParticleEffect_start__P3232_args:
    cmp r4, #5
    bge effects_ParticleEffect_start__P3232_nochk
    push {lr}
    bl _expand_args_5_22
    bl effects_ParticleEffect_start__P3232_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
effects_ParticleEffect_start__P3232:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ParticleEffect__C3230_validate_78
    mov lr, r7
effects_ParticleEffect_start__P3232_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
effects_ParticleEffect_start__P3232_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_259      
.jmpz859:
    b .ret.3232      
.else_0_259:
.afterif_1_259:
    ldr r0, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_259      
.jmpz860:
    ldr r0, [sp, args@3]
    b .condexprfin_3_259      
.condexprz_2_259:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.condexprfin_3_259:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #49
    bl _ifacecall3__40
_proccall861:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl particles_ParticleSource_setRelativeToCamera__P3130
_proccall862:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_259      
.jmpz863:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    beq .condexprz_5_259      
.jmpz864:
    ldr r0, [sp, args@2]
    b .condexprfin_6_259      
.condexprz_5_259:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
.condexprfin_6_259:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    pop {r1} ; tmpref @1
    bl _inst_particles_ParticleSource__C3119_validate_76
    str r1, [r0, #24]
    @stackempty locals
.else_4_259:
.afterif_7_259:
.ret.3232:
    @stackempty locals
    movs r0, #0
.final_8_259:
    add sp, #4*1 ; pop locals 1
effects_ParticleEffect_start__P3232_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(212,9): particles.ParticleSource.setRelativeToCamera
    ;
    .object particles_ParticleSource_setRelativeToCamera__P3130 "game/particles.ts(212,9): particles.ParticleSource.setRelativeToCamera"
particles_ParticleSource_setRelativeToCamera__P3130_pre:
    .section code
    .balign 4
particles_ParticleSource_setRelativeToCamera__P3130_args:
    cmp r4, #2
    bge particles_ParticleSource_setRelativeToCamera__P3130_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ParticleSource_setRelativeToCamera__P3130_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setRelativeToCamera__P3130:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_setRelativeToCamera__P3130_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setRelativeToCamera__P3130_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_260      
.jmpz865:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #28]
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_1_260      
.else_0_260:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_260:
.ret.3130:
    @stackempty locals
    movs r0, #0
.final_2_260:
particles_ParticleSource_setRelativeToCamera__P3130_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(677,5): Sprite.setFlag
    ;
    .object Sprite_setFlag__P2392 "game/sprite.ts(677,5): Sprite.setFlag"
Sprite_setFlag__P2392_pre:
    .section code
    .balign 4
Sprite_setFlag__P2392_args:
    cmp r4, #3
    bge Sprite_setFlag__P2392_nochk
    push {lr}
    bl _expand_args_3_14
    bl Sprite_setFlag__P2392_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite_setFlag__P2392:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_setFlag__P2392_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_setFlag__P2392_locals:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz866
    b .else_0_261      
.object PUSH
.balign 4
_ldlit_169:
 .word 92161
_ldlit_170:
 .word Math_FastRandom__C3027_VT
.object POP
.jmpz866:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #116]
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_1_261      
.else_0_261:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_261:
.ret.2392:
    @stackempty locals
    movs r0, #0
.final_2_261:
Sprite_setFlag__P2392_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(72,9): scene.systemMenu.MenuOption.setState
    ;
    .object scene_systemMenu_MenuOption_setState__P3061 "game/systemmenu.ts(72,9): scene.systemMenu.MenuOption.setState"
scene_systemMenu_MenuOption_setState__P3061_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_setState__P3061_args:
    cmp r4, #2
    bge scene_systemMenu_MenuOption_setState__P3061_nochk
    push {lr}
    bl _expand_args_2_17
    bl scene_systemMenu_MenuOption_setState__P3061_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_MenuOption_setState__P3061:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3055_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_setState__P3061_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_setState__P3061_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_0_262      
.jmpz867:
    b .ret.3061      
.else_0_262:
.afterif_1_262:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_updateCard__P5070_nochk
_proccall868:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3061:
    @stackempty locals
    movs r0, #0
.final_2_262:
scene_systemMenu_MenuOption_setState__P3061_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(87,9): scene.systemMenu.MenuOption.updateCard
    ;
    .object scene_systemMenu_MenuOption_updateCard__P5070 "game/systemmenu.ts(87,9): scene.systemMenu.MenuOption.updateCard"
scene_systemMenu_MenuOption_updateCard__P5070_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_updateCard__P5070_args:
    cmp r4, #1
    bge scene_systemMenu_MenuOption_updateCard__P5070_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_systemMenu_MenuOption_updateCard__P5070_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_MenuOption_updateCard__P5070:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3055_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_updateCard__P5070_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_updateCard__P5070_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_263      
.jmpz869:
    b .ret.5070      
.else_0_263:
.afterif_1_263:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz870
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_263      
.jmpz870:
    movs r0, #1
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz871
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_263      
.jmpz871:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz872
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_263      
.jmpz872:
    pop {r0} ; tmpref @1
    b .brk.11801      
.switch_2_263:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #71
    bl _ifacecall1_get_8
_proccall873:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_setImage__P2364
_proccall874:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.11801      
.switch_3_263:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #35
    lsls r1, r1, #3
    bl _ifacecall1_get_8
_proccall875:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_setImage__P2364
_proccall876:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.11801      
.switch_4_263:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #56
    bl _ifacecall1_get_8
_proccall877:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_setImage__P2364
_proccall878:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.brk.11801:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_x__P2327
_proccall879:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_x__P2328
_proccall880:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_y__P2329
_proccall881:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_y__P2330
_proccall882:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5070:
    @stackempty locals
    movs r0, #0
.final_5_263:
scene_systemMenu_MenuOption_updateCard__P5070_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(116,5): Sprite.x
    ;
    .object Sprite_x__P2328 "game/sprite.ts(116,5): Sprite.x"
Sprite_x__P2328_pre:
    .section code
    .balign 4
Sprite_x__P2328_args:
    cmp r4, #2
    bge Sprite_x__P2328_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_x__P2328_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_x__P2328:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_x__P2328_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_x__P2328_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2370_nochk
_proccall883:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_left__P2373_nochk
_proccall884:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2328:
    @stackempty locals
    movs r0, #0
.final_0_264:
Sprite_x__P2328_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(376,5): Sprite.width
    ;
    .object Sprite_width__P2370 "game/sprite.ts(376,5): Sprite.width"
Sprite_width__P2370_pre:
    .section code
    .balign 4
Sprite_width__P2370_args:
    cmp r4, #1
    bge Sprite_width__P2370_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_width__P2370_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_width__P2370:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_width__P2370_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_width__P2370_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2370:
    @stackempty locals
.final_0_265:
Sprite_width__P2370_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(392,5): Sprite.left
    ;
    .object Sprite_left__P2373 "game/sprite.ts(392,5): Sprite.left"
Sprite_left__P2373_pre:
    .section code
    .balign 4
Sprite_left__P2373_args:
    cmp r4, #2
    bge Sprite_left__P2373_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_left__P2373_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_left__P2373:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_left__P2373_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite_left__P2373_locals:
    bl game_currentScene__P2968
_proccall885:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #28]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall886:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @4
    ldr r0, [sp, #4*1] ; tmpref @3
    pop {r1} ; tmpref @4
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #1
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    movs r1, #44
    bl _classCall_PhysicsEngine__C2484_25
_proccall887:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.2373:
    @stackempty locals
    movs r0, #0
.final_0_266:
    add sp, #4*1 ; pop locals 1
Sprite_left__P2373_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(387,5): Sprite.left
    ;
    .object Sprite_left__P2372 "game/sprite.ts(387,5): Sprite.left"
Sprite_left__P2372_pre:
    .section code
    .balign 4
Sprite_left__P2372_args:
    cmp r4, #1
    bge Sprite_left__P2372_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_left__P2372_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_left__P2372:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_left__P2372_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_left__P2372_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2372:
    @stackempty locals
.final_0_267:
Sprite_left__P2372_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(292,5): controller._setUserEventsEnabled
    ;
    .object controller__setUserEventsEnabled__P2181 "game/controllerbutton.ts(292,5): controller._setUserEventsEnabled"
controller__setUserEventsEnabled__P2181_pre:
    .section code
    .balign 4
    .section code
controller__setUserEventsEnabled__P2181:
controller__setUserEventsEnabled__P2181_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__setUserEventsEnabled__P2181_locals:
    ldr r0, [sp, args@0]
    movs r1, #236
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.2181:
    @stackempty locals
    movs r0, #0
.final_0_268:
controller__setUserEventsEnabled__P2181_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(52,9): scene.systemMenu.MenuOption.position
    ;
    .object scene_systemMenu_MenuOption_position__P3058 "game/systemmenu.ts(52,9): scene.systemMenu.MenuOption.position"
scene_systemMenu_MenuOption_position__P3058_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_position__P3058_args:
    cmp r4, #3
    bge scene_systemMenu_MenuOption_position__P3058_nochk
    push {lr}
    bl _expand_args_3_14
    bl scene_systemMenu_MenuOption_position__P3058_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
scene_systemMenu_MenuOption_position__P3058:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3055_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_position__P3058_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_position__P3058_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_left__P2373
_proccall888:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_top__P2377
_proccall889:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_x__P2327
_proccall890:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_x__P2328
_proccall891:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_y__P2329
_proccall892:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_y__P2330
_proccall893:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3058:
    @stackempty locals
    movs r0, #0
.final_0_269:
scene_systemMenu_MenuOption_position__P3058_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(67,9): scene.systemMenu.MenuOption.setTheme
    ;
    .object scene_systemMenu_MenuOption_setTheme__P3060 "game/systemmenu.ts(67,9): scene.systemMenu.MenuOption.setTheme"
scene_systemMenu_MenuOption_setTheme__P3060_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_setTheme__P3060_args:
    cmp r4, #2
    bge scene_systemMenu_MenuOption_setTheme__P3060_nochk
    push {lr}
    bl _expand_args_2_17
    bl scene_systemMenu_MenuOption_setTheme__P3060_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_MenuOption_setTheme__P3060:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3055_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_setTheme__P3060_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_setTheme__P3060_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_updateCard__P5070_nochk
_proccall894:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3060:
    @stackempty locals
    movs r0, #0
.final_0_270:
scene_systemMenu_MenuOption_setTheme__P3060_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(42,9): scene.systemMenu.MenuOption.show
    ;
    .object scene_systemMenu_MenuOption_show__P3057 "game/systemmenu.ts(42,9): scene.systemMenu.MenuOption.show"
scene_systemMenu_MenuOption_show__P3057_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_show__P3057_args:
    cmp r4, #1
    bge scene_systemMenu_MenuOption_show__P3057_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_systemMenu_MenuOption_show__P3057_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_MenuOption_show__P3057:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3055_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_show__P3057_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_show__P3057_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_271      
.jmpz895:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #71
    bl _ifacecall1_get_8
_proccall896:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_271      
.condexprz_0_271:
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
.condexprfin_1_271:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl sprites_create__P2250
_proccall897:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #105
    bl _ifacecall2_set_39
_proccall898:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_create__P2250
_proccall899:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    movs r0, #5
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #105
    bl _ifacecall2_set_39
_proccall900:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #5
    str r1, [r0, #16]
    @stackempty locals
.ret.3057:
    @stackempty locals
    movs r0, #0
.final_2_271:
scene_systemMenu_MenuOption_show__P3057_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(335,5): scene.systemMenu.buildOptionList
    ;
    .object scene_systemMenu_buildOptionList__P3071 "game/systemmenu.ts(335,5): scene.systemMenu.buildOptionList"
scene_systemMenu_buildOptionList__P3071_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList__P3071_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList__P3071_args@fn
scene_systemMenu_buildOptionList__P3071_args:
    .section code
scene_systemMenu_buildOptionList__P3071:
scene_systemMenu_buildOptionList__P3071_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_buildOptionList__P3071_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_172 ; scene_systemMenu_MenuOption__C3055_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_173 ; scene_systemMenu_volumeDown__P5074_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_174 ; scene_systemMenu_buildOptionList_inline__P11936_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #92]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3056
_proccall901:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_172 ; scene_systemMenu_MenuOption__C3055_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_175 ; scene_systemMenu_volumeUp__P5073_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_176 ; scene_systemMenu_buildOptionList_inline__P11950_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #80]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3056
_proccall902:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setScreenBrightnessSupported
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_272      
.jmpz903:
    ldr r0, _ldlit_172 ; scene_systemMenu_MenuOption__C3055_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_177 ; scene_systemMenu_brightnessDown__P5076_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_178 ; scene_systemMenu_buildOptionList_inline__P11966_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3056
_proccall904:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_172 ; scene_systemMenu_MenuOption__C3055_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_179 ; scene_systemMenu_brightnessUp__P5075_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_180 ; scene_systemMenu_buildOptionList_inline__P11981_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #104]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3056
_proccall905:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_272:
.afterif_1_272:
    ldr r0, _ldlit_172 ; scene_systemMenu_MenuOption__C3055_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_181 ; scene_systemMenu_toggleStats__P5078_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_182 ; scene_systemMenu_buildOptionList_inline__P11996_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3056
_proccall906:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_172 ; scene_systemMenu_MenuOption__C3055_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_183 ; scene_systemMenu_toggleConsole__P5079_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_184 ; scene_systemMenu_buildOptionList_inline__P12005_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3056
_proccall907:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_172 ; scene_systemMenu_MenuOption__C3055_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_185 ; scene_systemMenu_sleep__P5080_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_186 ; scene_systemMenu_buildOptionList_inline__P12014_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #96]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3056
_proccall908:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #33
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_272      
.jmpz909:
    movs r0, #33
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayConcat__P113
_proccall910:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_2_272:
.afterif_3_272:
    ldr r0, _ldlit_172 ; scene_systemMenu_MenuOption__C3055_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_187 ; scene_systemMenu_closeMenu__P3070_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_188 ; scene_systemMenu_buildOptionList_inline__P12027_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3056
_proccall911:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3071:
    @stackempty locals
.final_4_272:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_buildOptionList__P3071_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(338,55): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P11936 "game/systemmenu.ts(338,55): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P11936_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P11936_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P11936_args@fn
scene_systemMenu_buildOptionList_inline__P11936_args:
    .section code
scene_systemMenu_buildOptionList_inline__P11936:
scene_systemMenu_buildOptionList_inline__P11936_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P11936_locals:
    bl music_volume__P1618
_proccall912:
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_189 ; _str54      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_190 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.11936:
    @stackempty locals
.final_0_273:
scene_systemMenu_buildOptionList_inline__P11936_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(339,53): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P11950 "game/systemmenu.ts(339,53): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P11950_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P11950_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P11950_args@fn
scene_systemMenu_buildOptionList_inline__P11950_args:
    .section code
scene_systemMenu_buildOptionList_inline__P11950:
scene_systemMenu_buildOptionList_inline__P11950_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P11950_locals:
    bl music_volume__P1618
_proccall913:
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_191 ; _str55      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_190 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.11950:
    @stackempty locals
.final_0_274:
scene_systemMenu_buildOptionList_inline__P11950_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(341,63): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P11966 "game/systemmenu.ts(341,63): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P11966_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P11966_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P11966_args@fn
scene_systemMenu_buildOptionList_inline__P11966_args:
    .section code
scene_systemMenu_buildOptionList_inline__P11966:
scene_systemMenu_buildOptionList_inline__P11966_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P11966_locals:
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_192 ; _str56      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_190 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.11966:
    @stackempty locals
.final_0_275:
scene_systemMenu_buildOptionList_inline__P11966_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(342,61): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P11981 "game/systemmenu.ts(342,61): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P11981_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P11981_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P11981_args@fn
scene_systemMenu_buildOptionList_inline__P11981_args:
    .section code
scene_systemMenu_buildOptionList_inline__P11981:
scene_systemMenu_buildOptionList_inline__P11981_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P11981_locals:
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_193 ; _str57      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_190 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.11981:
    @stackempty locals
.final_0_276:
scene_systemMenu_buildOptionList_inline__P11981_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(344,49): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P11996 "game/systemmenu.ts(344,49): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P11996_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P11996_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P11996_args@fn
scene_systemMenu_buildOptionList_inline__P11996_args:
    .section code
scene_systemMenu_buildOptionList_inline__P11996:
scene_systemMenu_buildOptionList_inline__P11996_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P11996_locals:
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_277      
.jmpz914:
    ldr r0, _ldlit_194 ; _str58      
    b .condexprfin_1_277      
.condexprz_0_277:
    ldr r0, _ldlit_195 ; _str59      
.condexprfin_1_277:
; jmp value (already in r0)
.ret.11996:
    @stackempty locals
.final_2_277:
scene_systemMenu_buildOptionList_inline__P11996_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_172:
 .word scene_systemMenu_MenuOption__C3055_VT
_ldlit_173:
 .word scene_systemMenu_volumeDown__P5074_Lit
_ldlit_174:
 .word scene_systemMenu_buildOptionList_inline__P11936_Lit
_ldlit_175:
 .word scene_systemMenu_volumeUp__P5073_Lit
_ldlit_176:
 .word scene_systemMenu_buildOptionList_inline__P11950_Lit
_ldlit_177:
 .word scene_systemMenu_brightnessDown__P5076_Lit
_ldlit_178:
 .word scene_systemMenu_buildOptionList_inline__P11966_Lit
_ldlit_179:
 .word scene_systemMenu_brightnessUp__P5075_Lit
_ldlit_180:
 .word scene_systemMenu_buildOptionList_inline__P11981_Lit
_ldlit_181:
 .word scene_systemMenu_toggleStats__P5078_Lit
_ldlit_182:
 .word scene_systemMenu_buildOptionList_inline__P11996_Lit
_ldlit_183:
 .word scene_systemMenu_toggleConsole__P5079_Lit
_ldlit_184:
 .word scene_systemMenu_buildOptionList_inline__P12005_Lit
_ldlit_185:
 .word scene_systemMenu_sleep__P5080_Lit
_ldlit_186:
 .word scene_systemMenu_buildOptionList_inline__P12014_Lit
_ldlit_187:
 .word scene_systemMenu_closeMenu__P3070_Lit
_ldlit_188:
 .word scene_systemMenu_buildOptionList_inline__P12027_Lit
_ldlit_189:
 .word _str54
_ldlit_190:
 .word _str34
_ldlit_191:
 .word _str55
_ldlit_192:
 .word _str56
_ldlit_193:
 .word _str57
_ldlit_194:
 .word _str58
_ldlit_195:
 .word _str59
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(345,51): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12005 "game/systemmenu.ts(345,51): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12005_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12005_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12005_args@fn
scene_systemMenu_buildOptionList_inline__P12005_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12005:
scene_systemMenu_buildOptionList_inline__P12005_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12005_locals:
    bl game_consoleOverlay_isVisible__P3092
_proccall916:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_278      
.jmpz915:
    ldr r0, _ldlit_197 ; _str60      
    b .condexprfin_1_278      
.condexprz_0_278:
    ldr r0, _ldlit_198 ; _str61      
.condexprfin_1_278:
; jmp value (already in r0)
.ret.12005:
    @stackempty locals
.final_2_278:
scene_systemMenu_buildOptionList_inline__P12005_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(346,49): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12014 "game/systemmenu.ts(346,49): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12014_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12014_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12014_args@fn
scene_systemMenu_buildOptionList_inline__P12014_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12014:
scene_systemMenu_buildOptionList_inline__P12014_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12014_locals:
    ldr r0, _ldlit_199 ; _str62      
.ret.12014:
    @stackempty locals
.final_0_279:
scene_systemMenu_buildOptionList_inline__P12014_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(352,54): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12027 "game/systemmenu.ts(352,54): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12027_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12027_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12027_args@fn
scene_systemMenu_buildOptionList_inline__P12027_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12027:
scene_systemMenu_buildOptionList_inline__P12027_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12027_locals:
    ldr r0, _ldlit_200 ; _str63      
.ret.12027:
    @stackempty locals
.final_0_280:
scene_systemMenu_buildOptionList_inline__P12027_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(289,5): helpers.arrayConcat
    ;
    .object helpers_arrayConcat__P113 "base/pxt-helpers.ts(289,5): helpers.arrayConcat"
helpers_arrayConcat__P113_pre:
    .section code
    .balign 4
    .section code
helpers_arrayConcat__P113:
helpers_arrayConcat__P113_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayConcat__P113_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.12036:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12036      
.jmpz917:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.12036:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.12036      
.brk.12036:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #0
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@5]
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.12043:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12043      
.jmpz918:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.12043:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    b .fortop.12043      
.brk.12043:
    movs r0, #0
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@0]
.ret.113:
    @stackempty locals
.final_0_281:
    add sp, #4*7 ; pop locals 7
helpers_arrayConcat__P113_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(317,5): scene.systemMenu.sleep
    ;
    .object scene_systemMenu_sleep__P5080 "game/systemmenu.ts(317,5): scene.systemMenu.sleep"
scene_systemMenu_sleep__P5080_pre:
    .section code
    .balign 4
scene_systemMenu_sleep__P5080_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_sleep__P5080_args@fn
scene_systemMenu_sleep__P5080_args:
    .section code
scene_systemMenu_sleep__P5080:
scene_systemMenu_sleep__P5080_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_sleep__P5080_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::deepSleep
    @stackempty locals
.ret.5080:
    @stackempty locals
    movs r0, #0
.final_0_282:
scene_systemMenu_sleep__P5080_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(308,5): scene.systemMenu.toggleConsole
    ;
    .object scene_systemMenu_toggleConsole__P5079 "game/systemmenu.ts(308,5): scene.systemMenu.toggleConsole"
scene_systemMenu_toggleConsole__P5079_pre:
    .section code
    .balign 4
scene_systemMenu_toggleConsole__P5079_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_toggleConsole__P5079_args@fn
scene_systemMenu_toggleConsole__P5079_args:
    .section code
scene_systemMenu_toggleConsole__P5079:
scene_systemMenu_toggleConsole__P5079_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_toggleConsole__P5079_locals:
    bl game_consoleOverlay_isVisible__P3092
_proccall920:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_283      
.jmpz919:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #10
    push {r0} ; proc-arg
    bl game_consoleOverlay_setVisible__P3094
_proccall921:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_283      
.else_0_283:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    bl game_consoleOverlay_setVisible__P3094
_proccall922:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_201 ; _str53      
    push {r0} ; proc-arg
    bl console_log__P380
_proccall923:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_283:
.ret.5079:
    @stackempty locals
    movs r0, #0
.final_2_283:
scene_systemMenu_toggleConsole__P5079_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(59,5): console.log
    ;
    .object console_log__P380 "base/console.ts(59,5): console.log"
console_log__P380_pre:
    .section code
    .balign 4
    .section code
console_log__P380:
console_log__P380_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_log__P380_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    bl console_add__P376
_proccall924:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.380:
    @stackempty locals
    movs r0, #0
.final_0_284:
console_log__P380_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(29,5): console.add
    ;
    .object console_add__P376 "base/console.ts(29,5): console.add"
console_add__P376_pre:
    .section code
    .balign 4
    .section code
console_add__P376:
console_add__P376_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_add__P376_locals:
    ldr r0, [sp, args@0]
    movs r1, #67
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _cmp_lt
    beq .else_0_285      
.jmpz925:
    b .ret.376      
.else_0_285:
.afterif_1_285:
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl console_inspect__P382
_proccall926:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_202 ; _str1      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.12075:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.12075      
.jmpz927:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    push {r3} ; the one arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.12075:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.12075      
.brk.12075:
.ret.376:
    @stackempty locals
    movs r0, #0
.final_2_285:
    add sp, #4*2 ; pop locals 2
console_add__P376_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(82,5): console.inspect
    ;
    .object console_inspect__P382 "base/console.ts(82,5): console.inspect"
console_inspect__P382_pre:
    .section code
    .balign 4
    .section code
console_inspect__P382:
console_inspect__P382_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_inspect__P382_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_203 ; _str2      
    bl _cmp_eq
    beq .else_0_286      
.jmpz929:
    ldr r0, [sp, args@0]
    b .ret.382      
    b .afterif_1_286      
.else_0_286:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_204 ; _str3      
    bl _cmp_eq
    beq .else_2_286      
.jmpz930:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    b .ret.382      
    b .afterif_3_286      
.else_2_286:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::isArray
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_286      
.jmpz931:
    ldr r0, [sp, args@0]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, args@1]
    bl _cmp_le
    bne .jmpz932
    b .else_5_286      
.object PUSH
.balign 4
_ldlit_197:
 .word _str60
_ldlit_198:
 .word _str61
_ldlit_199:
 .word _str62
_ldlit_200:
 .word _str63
_ldlit_201:
 .word _str53
_ldlit_202:
 .word _str1
_ldlit_203:
 .word _str2
_ldlit_204:
 .word _str3
.object POP
.jmpz932:
    ldr r0, _ldlit_206 ; _str0      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayJoin__P103
_proccall933:
    add sp, #4*2 ; pop locals 2
    b .ret.382      
    b .afterif_6_286      
.else_5_286:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P115
_proccall934:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_206 ; _str0      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayJoin__P103
_proccall935:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_207 ; _str4      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.382      
.afterif_6_286:
    b .afterif_7_286      
.else_4_286:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_53
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_208 ; _str5      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_286      
.jmpz936:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_286      
.lazySkip_10_286:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_209 ; _str6      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_9_286:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_286      
.jmpz937:
    ldr r0, [sp, locals@1]
    b .ret.382      
.else_8_286:
.afterif_11_286:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::keysOf
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_286      
.jmpz938:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P115
_proccall939:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
.else_12_286:
.afterif_13_286:
    movs r0, #1
    ldr r1, _ldlit_210 ; console_inspect_inline__P12150_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_14_286      
.jmpz940:
    ldr r0, _ldlit_211 ; _str10      
    b .condexprfin_15_286      
.condexprz_14_286:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_15_286:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arrayReduce__P112
_proccall941:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*4 ; pop locals 4
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_212 ; _str7      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_213 ; _str11      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.382      
.afterif_7_286:
.afterif_3_286:
.afterif_1_286:
    movs r0, #0
.ret.382:
    @stackempty locals
.final_16_286:
    add sp, #4*4 ; pop locals 4
console_inspect__P382_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(109,21): console.inspect.inline
    ;
    .object console_inspect_inline__P12150 "base/console.ts(109,21): console.inspect.inline"
console_inspect_inline__P12150_pre:
    .section code
    .balign 4
console_inspect_inline__P12150_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word console_inspect_inline__P12150_args@fn
console_inspect_inline__P12150_args:
    cmp r4, #2
    bge console_inspect_inline__P12150_nochk
    push {lr}
    bl _expand_args_2_17
    bl console_inspect_inline__P12150_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
console_inspect_inline__P12150:
console_inspect_inline__P12150_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_inspect_inline__P12150_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_214 ; _str8      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_215 ; _str9      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.12150:
    @stackempty locals
.final_0_287:
console_inspect_inline__P12150_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(281,5): helpers.arrayReduce
    ;
    .object helpers_arrayReduce__P112 "base/pxt-helpers.ts(281,5): helpers.arrayReduce"
helpers_arrayReduce__P112_pre:
    .section code
    .balign 4
    .section code
helpers_arrayReduce__P112:
helpers_arrayReduce__P112_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayReduce__P112_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.12181:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.12181      
.jmpz942:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    ldr r0, [sp, #4*3] ; estack
    bl _lambda_call3_80
    add sp, #4*4 ; pop locals 4
    str r0, [sp, args@2]
    @stackempty locals
.cont.12181:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.12181      
.brk.12181:
    ldr r0, [sp, args@2]
.ret.112:
    @stackempty locals
.final_0_288:
    add sp, #4*2 ; pop locals 2
helpers_arrayReduce__P112_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(158,5): helpers.arrayJoin
    ;
    .object helpers_arrayJoin__P103 "base/pxt-helpers.ts(158,5): helpers.arrayJoin"
helpers_arrayJoin__P103_pre:
    .section code
    .balign 4
    .section code
helpers_arrayJoin__P103:
helpers_arrayJoin__P103_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayJoin__P103_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_289      
.jmpz944:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_289      
.lazySkip_2_289:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_1_289:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_289      
.jmpz945:
    ldr r0, _ldlit_206 ; _str0      
    str r0, [sp, args@1]
    @stackempty locals
    b .afterif_3_289      
.object PUSH
.balign 4
_ldlit_206:
 .word _str0
_ldlit_207:
 .word _str4
_ldlit_208:
 .word _str5
_ldlit_209:
 .word _str6
_ldlit_210:
 .word console_inspect_inline__P12150_Lit
_ldlit_211:
 .word _str10
_ldlit_212:
 .word _str7
_ldlit_213:
 .word _str11
_ldlit_214:
 .word _str8
_ldlit_215:
 .word _str9
.object POP
.else_0_289:
.afterif_3_289:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.12210:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.12210      
.jmpz946:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_289      
.jmpz947:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_289      
.lazySkip_6_289:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
.lazy_5_289:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_289      
.jmpz948:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_4_289:
.afterif_7_289:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_11_289      
.jmpz949:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_289      
.lazySkip_11_289:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_10_289:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_289      
.jmpz950:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    b .condexprfin_9_289      
.condexprz_8_289:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.condexprfin_9_289:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12210:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.12210      
.brk.12210:
    ldr r0, [sp, locals@0]
.ret.103:
    @stackempty locals
.final_12_289:
    add sp, #4*3 ; pop locals 3
helpers_arrayJoin__P103_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(20,5): game.consoleOverlay.setVisible
    ;
    .object game_consoleOverlay_setVisible__P3094 "game/console.ts(20,5): game.consoleOverlay.setVisible"
game_consoleOverlay_setVisible__P3094_pre:
    .section code
    .balign 4
    .section code
game_consoleOverlay_setVisible__P3094:
game_consoleOverlay_setVisible__P3094_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_consoleOverlay_setVisible__P3094_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_290      
.jmpz951:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_290      
.jmpz952:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .condexprfin_2_290      
.condexprz_1_290:
    movs r0, #0
.condexprfin_2_290:
; jmp value (already in r0)
    movs r1, #196
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_290:
.afterif_3_290:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_neqq
    beq .else_4_290      
.jmpz953:
    ldr r0, [sp, args@1]
    movs r1, #204
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_4_290:
.afterif_5_290:
.ret.3094:
    @stackempty locals
    movs r0, #0
.final_6_290:
game_consoleOverlay_setVisible__P3094_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(12,5): game.consoleOverlay.isVisible
    ;
    .object game_consoleOverlay_isVisible__P3092 "game/console.ts(12,5): game.consoleOverlay.isVisible"
game_consoleOverlay_isVisible__P3092_pre:
    .section code
    .balign 4
    .section code
game_consoleOverlay_isVisible__P3092:
game_consoleOverlay_isVisible__P3092_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_consoleOverlay_isVisible__P3092_locals:
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3092:
    @stackempty locals
.final_0_291:
game_consoleOverlay_isVisible__P3092_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(301,5): scene.systemMenu.toggleStats
    ;
    .object scene_systemMenu_toggleStats__P5078 "game/systemmenu.ts(301,5): scene.systemMenu.toggleStats"
scene_systemMenu_toggleStats__P5078_pre:
    .section code
    .balign 4
scene_systemMenu_toggleStats__P5078_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_toggleStats__P5078_args@fn
scene_systemMenu_toggleStats__P5078_args:
    .section code
scene_systemMenu_toggleStats__P5078:
scene_systemMenu_toggleStats__P5078_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_toggleStats__P5078_locals:
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    movs r1, #172
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_292      
.jmpz954:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_292      
.lazySkip_2_292:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_1_292:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_292      
.jmpz955:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    push {r1}
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_292:
.afterif_3_292:
.ret.5078:
    @stackempty locals
    movs r0, #0
.final_4_292:
scene_systemMenu_toggleStats__P5078_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(286,5): scene.systemMenu.brightnessUp
    ;
    .object scene_systemMenu_brightnessUp__P5075 "game/systemmenu.ts(286,5): scene.systemMenu.brightnessUp"
scene_systemMenu_brightnessUp__P5075_pre:
    .section code
    .balign 4
scene_systemMenu_brightnessUp__P5075_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_brightnessUp__P5075_args@fn
scene_systemMenu_brightnessUp__P5075_args:
    .section code
scene_systemMenu_brightnessUp__P5075:
scene_systemMenu_brightnessUp__P5075_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_brightnessUp__P5075_locals:
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #11
    bl _numops_adds
    push {r0} ; the one arg
    bl scene_systemMenu_setScreenBrightness__P5077
_proccall957:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5075:
    @stackempty locals
    movs r0, #0
.final_0_293:
scene_systemMenu_brightnessUp__P5075_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(294,5): scene.systemMenu.setScreenBrightness
    ;
    .object scene_systemMenu_setScreenBrightness__P5077 "game/systemmenu.ts(294,5): scene.systemMenu.setScreenBrightness"
scene_systemMenu_setScreenBrightness__P5077_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_setScreenBrightness__P5077:
scene_systemMenu_setScreenBrightness__P5077_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_setScreenBrightness__P5077_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl helpers_setScreenBrightness__P1942
_proccall958:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; the one arg
    ldr r0, _ldlit_217 ; _str52      
    push {r0} ; proc-arg
    bl settings_writeNumber__P2039
_proccall959:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5077:
    @stackempty locals
    movs r0, #0
.final_0_294:
scene_systemMenu_setScreenBrightness__P5077_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(90,5): settings.writeNumber
    ;
    .object settings_writeNumber__P2039 "settings/settings.ts(90,5): settings.writeNumber"
settings_writeNumber__P2039_pre:
    .section code
    .balign 4
    .section code
settings_writeNumber__P2039:
settings_writeNumber__P2039_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeNumber__P2039_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl msgpack_packNumberArray__P184
_proccall960:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2036
_proccall961:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2039:
    @stackempty locals
    movs r0, #0
.final_0_295:
settings_writeNumber__P2039_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(118,5): msgpack.packNumberArray
    ;
    .object msgpack_packNumberArray__P184 "base/buffer.ts(118,5): msgpack.packNumberArray"
msgpack_packNumberArray__P184_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberArray__P184:
msgpack_packNumberArray__P184_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberArray__P184_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.12296:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12296      
.jmpz962:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #6
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4347
_proccall963:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12296:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.12296      
.brk.12296:
    movs r0, #0
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.12312:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12312      
.jmpz964:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4347
_proccall965:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12312:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.12312      
.brk.12312:
    movs r0, #0
    str r0, [sp, locals@6]
    ldr r0, [sp, locals@4]
.ret.184:
    @stackempty locals
.final_0_296:
    add sp, #4*8 ; pop locals 8
msgpack_packNumberArray__P184_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(57,5): msgpack.packNumberCore
    ;
    .object msgpack_packNumberCore__P4347 "base/buffer.ts(57,5): msgpack.packNumberCore"
msgpack_packNumberCore__P4347_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberCore__P4347:
msgpack_packNumberCore__P4347_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberCore__P4347_locals:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_297      
.jmpz966:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_297      
.lazySkip_2_297:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_297:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_297      
.jmpz967:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_297      
.jmpz968:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_297      
.lazySkip_5_297:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_4_297:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_297      
.jmpz969:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_297      
.jmpz970:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_81
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_6_297:
.afterif_7_297:
    movs r0, #3
    b .ret.4347      
    b .afterif_8_297      
.else_3_297:
    movs r0, #1
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_9_297      
.jmpz971:
    ldr r0, [sp, args@2]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _cmp_le
    beq .else_10_297      
.jmpz972:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_11_297      
.else_10_297:
    ldr r0, [sp, args@2]
    ldr r1, _ldlit_218 ; 131071      
    bl _cmp_le
    beq .else_12_297      
.jmpz973:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_13_297      
.else_12_297:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_13_297:
.afterif_11_297:
    b .afterif_14_297      
.else_9_297:
    movs r0, #253
    negs r0, r0
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_15_297      
.jmpz974:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_16_297      
.else_15_297:
    ldr r0, _ldlit_219 ; -65533      
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_17_297      
.jmpz975:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_18_297      
.else_17_297:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_18_297:
.afterif_16_297:
.afterif_14_297:
.afterif_8_297:
.else_0_297:
.afterif_19_297:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_tagFormat__P4346
_proccall976:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz977
    b .else_20_297      
.object PUSH
.balign 4
_ldlit_217:
 .word _str52
_ldlit_218:
 .word 131071
_ldlit_219:
 .word -65533
.object POP
.jmpz977:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_81
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_82
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_20_297:
.afterif_21_297:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P175
_proccall978:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
.ret.4347:
    @stackempty locals
.final_22_297:
    add sp, #4*2 ; pop locals 2
msgpack_packNumberCore__P4347_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(3,5): pins.sizeOf
    ;
    .object pins_sizeOf__P175 "base/buffer.ts(3,5): pins.sizeOf"
pins_sizeOf__P175_pre:
    .section code
    .balign 4
    .section code
pins_sizeOf__P175:
pins_sizeOf__P175_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pins_sizeOf__P175_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Buffer_sizeOfNumberFormat__P215
_proccall979:
    add sp, #4*1 ; pop locals 1
.ret.175:
    @stackempty locals
.final_0_298:
pins_sizeOf__P175_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(509,5): Buffer.sizeOfNumberFormat
    ;
    .object Buffer_sizeOfNumberFormat__P215 "base/buffer.ts(509,5): Buffer.sizeOfNumberFormat"
Buffer_sizeOfNumberFormat__P215_pre:
    .section code
    .balign 4
    .section code
Buffer_sizeOfNumberFormat__P215:
Buffer_sizeOfNumberFormat__P215_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Buffer_sizeOfNumberFormat__P215_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz980
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_299      
.jmpz980:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz981
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_299      
.jmpz981:
    movs r0, #13
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz982
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_299      
.jmpz982:
    movs r0, #15
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz983
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_299      
.jmpz983:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz984
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_299      
.jmpz984:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz985
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_299      
.jmpz985:
    movs r0, #17
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz986
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_299      
.jmpz986:
    movs r0, #19
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz987
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_299      
.jmpz987:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz988
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_8_299      
.jmpz988:
    movs r0, #21
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz989
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_9_299      
.jmpz989:
    movs r0, #25
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz990
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_10_299      
.jmpz990:
    movs r0, #23
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz991
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_11_299      
.jmpz991:
    movs r0, #31
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz992
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_12_299      
.jmpz992:
    movs r0, #27
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz993
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_299      
.jmpz993:
    movs r0, #33
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz994
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_299      
.jmpz994:
    movs r0, #29
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz995
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_299      
.jmpz995:
    pop {r0} ; tmpref @1
    b .brk.12388      
.switch_0_299:
.switch_1_299:
.switch_2_299:
.switch_3_299:
    movs r0, #3
    b .ret.215      
.switch_4_299:
.switch_5_299:
.switch_6_299:
.switch_7_299:
    movs r0, #5
    b .ret.215      
.switch_8_299:
.switch_9_299:
.switch_10_299:
.switch_11_299:
.switch_12_299:
.switch_13_299:
    movs r0, #9
    b .ret.215      
.switch_14_299:
.switch_15_299:
    movs r0, #17
    b .ret.215      
.brk.12388:
    movs r0, #1
.ret.215:
    @stackempty locals
.final_16_299:
Buffer_sizeOfNumberFormat__P215_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(43,5): msgpack.tagFormat
    ;
    .object msgpack_tagFormat__P4346 "base/buffer.ts(43,5): msgpack.tagFormat"
msgpack_tagFormat__P4346_pre:
    .section code
    .balign 4
    .section code
msgpack_tagFormat__P4346:
msgpack_tagFormat__P4346_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
msgpack_tagFormat__P4346_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz996
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_300      
.jmpz996:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz997
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_300      
.jmpz997:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz998
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_300      
.jmpz998:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz999
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_300      
.jmpz999:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1000
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_300      
.jmpz1000:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1001
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_300      
.jmpz1001:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1002
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_300      
.jmpz1002:
    pop {r0} ; tmpref @1
    b .switch_7_300      
.switch_0_300:
    movs r0, #33
    b .ret.4346      
.switch_1_300:
    movs r0, #15
    b .ret.4346      
.switch_2_300:
    movs r0, #19
    b .ret.4346      
.switch_3_300:
    movs r0, #25
    b .ret.4346      
.switch_4_300:
    movs r0, #13
    b .ret.4346      
.switch_5_300:
    movs r0, #17
    b .ret.4346      
.switch_6_300:
    movs r0, #21
    b .ret.4346      
.switch_7_300:
    movs r0, #6
    b .ret.4346      
.brk.12407:
    movs r0, #0
.ret.4346:
    @stackempty locals
.final_8_300:
msgpack_tagFormat__P4346_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(64,5): settings.writeBuffer
    ;
    .object settings_writeBuffer__P2036 "settings/settings.ts(64,5): settings.writeBuffer"
settings_writeBuffer__P2036_pre:
    .section code
    .balign 4
    .section code
settings_writeBuffer__P2036:
settings_writeBuffer__P2036_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeBuffer__P2036_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_83
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_set
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_301      
.jmpz1003:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    movs r0, #115
    lsls r0, r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_301:
.afterif_1_301:
.ret.2036:
    @stackempty locals
    movs r0, #0
.final_2_301:
settings_writeBuffer__P2036_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(239,5): helpers.setScreenBrightness
    ;
    .object helpers_setScreenBrightness__P1942 "screen---st7735/image.ts(239,5): helpers.setScreenBrightness"
helpers_setScreenBrightness__P1942_pre:
    .section code
    .balign 4
    .section code
helpers_setScreenBrightness__P1942:
helpers_setScreenBrightness__P1942_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_setScreenBrightness__P1942_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1004:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #17
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setScreenBrightness
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.1942:
    @stackempty locals
    movs r0, #0
.final_0_302:
helpers_setScreenBrightness__P1942_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(290,5): scene.systemMenu.brightnessDown
    ;
    .object scene_systemMenu_brightnessDown__P5076 "game/systemmenu.ts(290,5): scene.systemMenu.brightnessDown"
scene_systemMenu_brightnessDown__P5076_pre:
    .section code
    .balign 4
scene_systemMenu_brightnessDown__P5076_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_brightnessDown__P5076_args@fn
scene_systemMenu_brightnessDown__P5076_args:
    .section code
scene_systemMenu_brightnessDown__P5076:
scene_systemMenu_brightnessDown__P5076_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_brightnessDown__P5076_locals:
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #11
    bl _numops_subs
    push {r0} ; the one arg
    bl scene_systemMenu_setScreenBrightness__P5077
_proccall1005:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5076:
    @stackempty locals
    movs r0, #0
.final_0_303:
scene_systemMenu_brightnessDown__P5076_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(272,5): scene.systemMenu.volumeUp
    ;
    .object scene_systemMenu_volumeUp__P5073 "game/systemmenu.ts(272,5): scene.systemMenu.volumeUp"
scene_systemMenu_volumeUp__P5073_pre:
    .section code
    .balign 4
scene_systemMenu_volumeUp__P5073_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_volumeUp__P5073_args@fn
scene_systemMenu_volumeUp__P5073_args:
    .section code
scene_systemMenu_volumeUp__P5073:
scene_systemMenu_volumeUp__P5073_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_volumeUp__P5073_locals:
    bl music_volume__P1618
_proccall1006:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #65
    bl _numops_adds
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl scene_systemMenu_setVolume__P5072
_proccall1007:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5073:
    @stackempty locals
    movs r0, #0
.final_0_305:
    add sp, #4*3 ; pop locals 3
scene_systemMenu_volumeUp__P5073_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(266,5): scene.systemMenu.setVolume
    ;
    .object scene_systemMenu_setVolume__P5072 "game/systemmenu.ts(266,5): scene.systemMenu.setVolume"
scene_systemMenu_setVolume__P5072_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_setVolume__P5072:
scene_systemMenu_setVolume__P5072_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_setVolume__P5072_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl music_setVolume__P1617
_proccall1008:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #113
    push {r0} ; proc-arg
    bl music_playTone__P1619
_proccall1009:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, _ldlit_221 ; _str51      
    push {r0} ; proc-arg
    bl settings_writeNumber__P2039
_proccall1010:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5072:
    @stackempty locals
    movs r0, #0
.final_0_306:
scene_systemMenu_setVolume__P5072_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(85,5): music.playTone
    ;
    .object music_playTone__P1619 "mixer---nrf52/melody.ts(85,5): music.playTone"
music_playTone__P1619_pre:
    .section code
    .balign 4
    .section code
music_playTone__P1619:
music_playTone__P1619_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_playTone__P1619_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r1, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, args@1]
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _cmp_eq
    beq .else_0_307      
.jmpz1011:
    ldr r0, [sp, args@1]
    ldr r1, _ldlit_222 ; 172800001      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
.else_0_307:
.afterif_1_307:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #15
    lsls r1, r1, #8
    adds r1, #161
    bl _cmp_le
    beq .else_2_307      
.jmpz1012:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    bl music_playNoteCore__P4446
_proccall1013:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; the one arg
    bl pause__P413
_proccall1014:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_3_307      
.else_2_307:
    movs r0, #69
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #3
    bl _numops_adds
    push {r0}; tmpstore @1
    movs r1, #69
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_223 ; music_playTone_inline__P12485_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_307:
.ret.1619:
    @stackempty locals
    movs r0, #0
.final_4_307:
    add sp, #4*1 ; pop locals 1
music_playTone__P1619_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(94,35): music.playTone.inline
    ;
    .object music_playTone_inline__P12485 "mixer---nrf52/melody.ts(94,35): music.playTone.inline"
music_playTone_inline__P12485_pre:
    .section code
    .balign 4
music_playTone_inline__P12485_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word music_playTone_inline__P12485_args@fn
music_playTone_inline__P12485_args:
    .section code
music_playTone_inline__P12485:
music_playTone_inline__P12485_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
music_playTone_inline__P12485_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12489:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    movs r0, #69
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_308      
.jmpz1015:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_308      
.lazySkip_1_308:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_0_308:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.12489      
.jmpz1016:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_min__P131
_proccall1017:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    ldr r1, [sp, locals@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_subs
    mov r3, r0
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl music_playNoteCore__P4446
_proccall1018:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _cmp_eq
    beq .else_2_308      
.jmpz1019:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    push {r0} ; the one arg
    bl pause__P413
_proccall1020:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_3_308      
.else_2_308:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    movs r1, #201
    bl _numops_subs
    push {r0} ; the one arg
    bl pause__P413
_proccall1021:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_308:
    b .cont.12489      
.brk.12489:
.ret.12485:
    @stackempty locals
    movs r0, #0
.final_4_308:
    add sp, #4*4 ; pop locals 4
music_playTone_inline__P12485_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(67,5): music.playNoteCore
    ;
    .object music_playNoteCore__P4446 "mixer---nrf52/melody.ts(67,5): music.playNoteCore"
music_playNoteCore__P4446_pre:
    .section code
    .balign 4
    .section code
music_playNoteCore__P4446:
music_playNoteCore__P4446_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_playNoteCore__P4446_locals:
    movs r0, #12
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl music_volume__P1618
_proccall1022:
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    push {r3}
    movs r0, #1
    push {r0} ; proc-arg
    push {r4}
    bl music_addNote__P1633
_proccall1023:
    add sp, #4*9 ; pop locals 9
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_84
    mov r7, sp
    str r7, [r6, #4]
    bl music::queuePlayInstructions
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4446:
    @stackempty locals
    movs r0, #0
.final_0_309:
    add sp, #4*1 ; pop locals 1
music_playNoteCore__P4446_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(323,5): music.addNote
    ;
    .object music_addNote__P1633 "mixer---nrf52/melody.ts(323,5): music.addNote"
music_addNote__P1633_pre:
    .section code
    .balign 4
    .section code
music_addNote__P1633:
music_addNote__P1633_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_addNote__P1633_locals:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    bne .jmpz1024
    b .else_0_310      
.object PUSH
.balign 4
_ldlit_221:
 .word _str51
_ldlit_222:
 .word 172800001
_ldlit_223:
 .word music_playTone_inline__P12485_Lit
.object POP
.jmpz1024:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_48
    movs r1, #2
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #13
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #13
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #17
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #13
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #21
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@8]
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #25
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
.else_0_310:
.afterif_1_310:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_48
    movs r1, #2
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
.ret.1633:
    @stackempty locals
.final_2_310:
music_addNote__P1633_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(52,5): music.setVolume
    ;
    .object music_setVolume__P1617 "mixer---nrf52/melody.ts(52,5): music.setVolume"
music_setVolume__P1617_pre:
    .section code
    .balign 4
    .section code
music_setVolume__P1617:
music_setVolume__P1617_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_setVolume__P1617_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1025:
    add sp, #4*3 ; pop locals 3
    movs r1, #35
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #35
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #1
    bl _cmp_gt
    beq .condexprz_0_311      
.jmpz1026:
    movs r0, #3
    b .condexprfin_1_311      
.condexprz_0_311:
    movs r0, #1
.condexprfin_1_311:
; jmp value (already in r0)
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl music::enableAmp
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.1617:
    @stackempty locals
    movs r0, #0
.final_2_311:
music_setVolume__P1617_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(279,5): scene.systemMenu.volumeDown
    ;
    .object scene_systemMenu_volumeDown__P5074 "game/systemmenu.ts(279,5): scene.systemMenu.volumeDown"
scene_systemMenu_volumeDown__P5074_pre:
    .section code
    .balign 4
scene_systemMenu_volumeDown__P5074_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_volumeDown__P5074_args@fn
scene_systemMenu_volumeDown__P5074_args:
    .section code
scene_systemMenu_volumeDown__P5074:
scene_systemMenu_volumeDown__P5074_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_volumeDown__P5074_locals:
    bl music_volume__P1618
_proccall1027:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_312      
.jmpz1028:
    ldr r0, [sp, locals@1]
    b .condexprfin_1_312      
.condexprz_0_312:
    movs r0, #65
.condexprfin_1_312:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    pop {r1} ; tmpref @1
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl scene_systemMenu_setVolume__P5072
_proccall1029:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5074:
    @stackempty locals
    movs r0, #0
.final_2_312:
    add sp, #4*3 ; pop locals 3
scene_systemMenu_volumeDown__P5074_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(62,5): music.volume
    ;
    .object music_volume__P1618 "mixer---nrf52/melody.ts(62,5): music.volume"
music_volume__P1618_pre:
    .section code
    .balign 4
    .section code
music_volume__P1618:
music_volume__P1618_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_volume__P1618_locals:
    bl music_initVolume__P4445
_proccall1030:
    @stackempty locals
    movs r0, #35
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.1618:
    @stackempty locals
.final_0_313:
music_volume__P1618_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(34,5): music.initVolume
    ;
    .object music_initVolume__P4445 "mixer---nrf52/melody.ts(34,5): music.initVolume"
music_initVolume__P4445_pre:
    .section code
    .balign 4
    .section code
music_initVolume__P4445:
music_initVolume__P4445_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_initVolume__P4445_locals:
    movs r0, #35
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #6
    bl _cmp_eqq
    beq .else_0_314      
.jmpz1031:
    movs r0, #1
    movs r1, #35
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #59
    movs r1, #128
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getConfig
    bl _numops_fromInt
    push {r0} ; the one arg
    bl music_setVolume__P1617
_proccall1032:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_314:
.afterif_1_314:
.ret.4445:
    @stackempty locals
    movs r0, #0
.final_2_314:
music_initVolume__P4445_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(39,9): scene.systemMenu.MenuOption.constructor
    ;
    .object scene_systemMenu_MenuOption_constructor__P3056 "game/systemmenu.ts(39,9): scene.systemMenu.MenuOption.constructor"
scene_systemMenu_MenuOption_constructor__P3056_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_MenuOption_constructor__P3056:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3055_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_constructor__P3056_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_constructor__P3056_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #28]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #32]
    movs r0, #0
.ret.3056:
    @stackempty locals
.final_0_315:
scene_systemMenu_MenuOption_constructor__P3056_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(117,9): scene.systemMenu.PauseMenu.constructor
    ;
    .object scene_systemMenu_PauseMenu_constructor__P3064 "game/systemmenu.ts(117,9): scene.systemMenu.PauseMenu.constructor"
scene_systemMenu_PauseMenu_constructor__P3064_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_PauseMenu_constructor__P3064:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3063_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_constructor__P3064_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_constructor__P3064_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #28]
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_316      
.jmpz1033:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_316      
.lazySkip_1_316:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_buildMenuTheme__P3072
_proccall1034:
    add sp, #4*4 ; pop locals 4
.lazy_0_316:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #0
.ret.3064:
    @stackempty locals
.final_2_316:
scene_systemMenu_PauseMenu_constructor__P3064_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(357,5): scene.systemMenu.buildMenuTheme
    ;
    .object scene_systemMenu_buildMenuTheme__P3072 "game/systemmenu.ts(357,5): scene.systemMenu.buildMenuTheme"
scene_systemMenu_buildMenuTheme__P3072_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_buildMenuTheme__P3072:
scene_systemMenu_buildMenuTheme__P3072_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_buildMenuTheme__P3072_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_317      
.jmpz1035:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_317      
.lazySkip_1_317:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #212
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_0_317:
; jmp value (already in r0)
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_317      
.jmpz1036:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_317      
.lazySkip_3_317:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl image_doubledFont__P1955
_proccall1037:
    add sp, #4*1 ; pop locals 1
.lazy_2_317:
; jmp value (already in r0)
    str r0, [sp, args@3]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #86
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #87
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #88
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #228
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #168
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #159
    ldr r2, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1038:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #89
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1039:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #5
    bl _numops_subs
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #169
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #160
    ldr r2, _ldlit_225 ; _str64      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #35
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    ldr r2, [r7, #72]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #56
    ldr r7, [r6, #0]
    ldr r2, [r7, #76]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #71
    ldr r7, [r6, #0]
    ldr r2, [r7, #68]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
.ret.3072:
    @stackempty locals
.final_4_317:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_buildMenuTheme__P3072_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(147,5): image.doubledFont
    ;
    .object image_doubledFont__P1955 "screen---st7735/text.ts(147,5): image.doubledFont"
image_doubledFont__P1955_pre:
    .section code
    .balign 4
    .section code
image_doubledFont__P1955:
image_doubledFont__P1955_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
image_doubledFont__P1955_locals:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl image_scaledFont__P1956
_proccall1040:
    add sp, #4*2 ; pop locals 2
.ret.1955:
    @stackempty locals
.final_0_318:
image_doubledFont__P1955_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(151,5): image.scaledFont
    ;
    .object image_scaledFont__P1956 "screen---st7735/text.ts(151,5): image.scaledFont"
image_scaledFont__P1956_pre:
    .section code
    .balign 4
    .section code
image_scaledFont__P1956:
image_scaledFont__P1956_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
image_scaledFont__P1956_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #5
    bl _cmp_lt
    beq .else_0_319      
.jmpz1041:
    ldr r0, [sp, args@0]
    b .ret.1956      
.else_0_319:
.afterif_1_319:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall1042:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #94
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1043:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #93
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #109
    bl _ifacecall1_get_8
_proccall1044:
    add sp, #4*1 ; pop locals 1
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #109
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #211
    bl _ifacecall1_get_8
_proccall1046:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_319      
.jmpz1045:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #211
    bl _ifacecall1_get_8
_proccall1047:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    b .condexprfin_3_319      
.condexprz_2_319:
    ldr r0, [sp, args@1]
.condexprfin_3_319:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    movs r1, #211
    pop {r2} ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
.ret.1956:
    @stackempty locals
.final_4_319:
image_scaledFont__P1956_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(137,5): game.pushScene
    ;
    .object game_pushScene__P2972 "game/game.ts(137,5): game.pushScene"
game_pushScene__P2972_pre:
    .section code
    .balign 4
    .section code
game_pushScene__P2972:
game_pushScene__P2972_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_pushScene__P2972_locals:
    bl game_currentScene__P2968
_proccall1048:
    str r0, [sp, locals@0]
    @stackempty locals
    bl particles_clearAll__P3149
_proccall1049:
    @stackempty locals
    bl particles_disableAll__P3150
_proccall1050:
    @stackempty locals
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_320      
.jmpz1051:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #252
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_320:
.afterif_1_320:
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    bl game_init__P4823
_proccall1052:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_320      
.jmpz1053:
    movs r0, #1
    ldr r1, _ldlit_226 ; game_pushScene_inline__P12778_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1054:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_320:
.afterif_3_320:
.ret.2972:
    @stackempty locals
    movs r0, #0
.final_4_320:
    add sp, #4*1 ; pop locals 1
game_pushScene__P2972_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(146,40): game.pushScene.inline
    ;
    .object game_pushScene_inline__P12778 "game/game.ts(146,40): game.pushScene.inline"
game_pushScene_inline__P12778_pre:
    .section code
    .balign 4
game_pushScene_inline__P12778_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_pushScene_inline__P12778_args@fn
game_pushScene_inline__P12778_args:
    cmp r4, #1
    bge game_pushScene_inline__P12778_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_pushScene_inline__P12778_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_pushScene_inline__P12778:
game_pushScene_inline__P12778_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_pushScene_inline__P12778_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
.ret.12778:
    @stackempty locals
    movs r0, #0
.final_0_321:
game_pushScene_inline__P12778_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(403,5): particles.disableAll
    ;
    .object particles_disableAll__P3150 "game/particles.ts(403,5): particles.disableAll"
particles_disableAll__P3150_pre:
    .section code
    .balign 4
    .section code
particles_disableAll__P3150:
particles_disableAll__P3150_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_disableAll__P3150_locals:
    bl particles_particleSources__P5165
_proccall1056:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_322      
.jmpz1057:
    ldr r0, _ldlit_227 ; particles_disableAll_inline__P12788_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1058:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_pruneParticles__P5161
_proccall1059:
    @stackempty locals
.else_0_322:
.afterif_1_322:
.ret.3150:
    @stackempty locals
    movs r0, #0
.final_2_322:
    add sp, #4*1 ; pop locals 1
particles_disableAll__P3150_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(406,29): particles.disableAll.inline
    ;
    .object particles_disableAll_inline__P12788 "game/particles.ts(406,29): particles.disableAll.inline"
particles_disableAll_inline__P12788_pre:
    .section code
    .balign 4
particles_disableAll_inline__P12788_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_disableAll_inline__P12788_args@fn
particles_disableAll_inline__P12788_args:
    cmp r4, #1
    bge particles_disableAll_inline__P12788_nochk
    push {lr}
    bl _expand_args_1_10
    bl particles_disableAll_inline__P12788_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_disableAll_inline__P12788:
particles_disableAll_inline__P12788_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_disableAll_inline__P12788_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3132
_proccall1060:
    add sp, #4*2 ; pop locals 2
    movs r0, #10
.ret.12788:
    @stackempty locals
.final_0_323:
particles_disableAll_inline__P12788_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(392,5): particles.clearAll
    ;
    .object particles_clearAll__P3149 "game/particles.ts(392,5): particles.clearAll"
particles_clearAll__P3149_pre:
    .section code
    .balign 4
    .section code
particles_clearAll__P3149:
particles_clearAll__P3149_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_clearAll__P3149_locals:
    bl particles_particleSources__P5165
_proccall1061:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_324      
.jmpz1062:
    ldr r0, _ldlit_228 ; particles_clearAll_inline__P12799_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1063:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_pruneParticles__P5161
_proccall1064:
    @stackempty locals
.else_0_324:
.afterif_1_324:
.ret.3149:
    @stackempty locals
    movs r0, #0
.final_2_324:
    add sp, #4*1 ; pop locals 1
particles_clearAll__P3149_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(395,29): particles.clearAll.inline
    ;
    .object particles_clearAll_inline__P12799 "game/particles.ts(395,29): particles.clearAll.inline"
particles_clearAll_inline__P12799_pre:
    .section code
    .balign 4
particles_clearAll_inline__P12799_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_clearAll_inline__P12799_args@fn
particles_clearAll_inline__P12799_args:
    cmp r4, #1
    bge particles_clearAll_inline__P12799_nochk
    push {lr}
    bl _expand_args_1_10
    bl particles_clearAll_inline__P12799_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_clearAll_inline__P12799:
particles_clearAll_inline__P12799_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_clearAll_inline__P12799_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_clear__P3134
_proccall1065:
    add sp, #4*1 ; pop locals 1
.ret.12799:
    @stackempty locals
    movs r0, #0
.final_0_325:
particles_clearAll_inline__P12799_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(244,9): particles.ParticleSource.clear
    ;
    .object particles_ParticleSource_clear__P3134 "game/particles.ts(244,9): particles.ParticleSource.clear"
particles_ParticleSource_clear__P3134_pre:
    .section code
    .balign 4
particles_ParticleSource_clear__P3134_args:
    cmp r4, #1
    bge particles_ParticleSource_clear__P3134_nochk
    push {lr}
    bl _expand_args_1_10
    bl particles_ParticleSource_clear__P3134_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_225:
 .word _str64
_ldlit_226:
 .word game_pushScene_inline__P12778_Lit
_ldlit_227:
 .word particles_disableAll_inline__P12788_Lit
_ldlit_228:
 .word particles_clearAll_inline__P12799_Lit
.object POP
    .section code
particles_ParticleSource_clear__P3134:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_clear__P3134_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_clear__P3134_locals:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #32]
    @stackempty locals
.ret.3134:
    @stackempty locals
    movs r0, #0
.final_0_326:
particles_ParticleSource_clear__P3134_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(406,5): scene.systemMenu.initScreen
    ;
    .object scene_systemMenu_initScreen__P5083 "game/systemmenu.ts(406,5): scene.systemMenu.initScreen"
scene_systemMenu_initScreen__P5083_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_initScreen__P5083:
scene_systemMenu_initScreen__P5083_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_initScreen__P5083_locals:
    ldr r0, _ldlit_230 ; _str52      
    push {r0} ; proc-arg
    bl settings_readNumber__P2044
_proccall1066:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_327      
.jmpz1067:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl helpers_setScreenBrightness__P1942
_proccall1068:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_327:
.afterif_1_327:
.ret.5083:
    @stackempty locals
    movs r0, #0
.final_2_327:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_initScreen__P5083_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(132,5): settings.readNumber
    ;
    .object settings_readNumber__P2044 "settings/settings.ts(132,5): settings.readNumber"
settings_readNumber__P2044_pre:
    .section code
    .balign 4
    .section code
settings_readNumber__P2044:
settings_readNumber__P2044_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
settings_readNumber__P2044_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_328      
.jmpz1069:
    movs r0, #0
    b .ret.2044      
    b .afterif_1_328      
.else_0_328:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_unpackNumberArray__P183
_proccall1070:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_328      
.jmpz1071:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_328      
.lazySkip_4_328:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
.lazy_3_328:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_328      
.jmpz1072:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    b .ret.2044      
.else_2_328:
.afterif_5_328:
    movs r0, #0
    b .ret.2044      
.afterif_1_328:
    movs r0, #0
.ret.2044:
    @stackempty locals
.final_6_328:
    add sp, #4*2 ; pop locals 2
settings_readNumber__P2044_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(92,5): msgpack.unpackNumberArray
    ;
    .object msgpack_unpackNumberArray__P183 "base/buffer.ts(92,5): msgpack.unpackNumberArray"
msgpack_unpackNumberArray__P183_pre:
    .section code
    .balign 4
    .section code
msgpack_unpackNumberArray__P183:
msgpack_unpackNumberArray__P183_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_unpackNumberArray__P183_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12841:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1073
    b .brk.12841      
.jmpz1073:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    push {r0} ; the one arg
    bl msgpack_tagFormat__P4346
_proccall1074:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #6
    bl _cmp_eqq
    beq .else_0_329      
.jmpz1075:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_48
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_329      
.jmpz1076:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_329      
.lazySkip_3_329:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_2_329:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_329      
.jmpz1077:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_4_329      
.else_1_329:
    movs r0, #6
    b .ret.183      
.afterif_4_329:
    b .afterif_5_329      
.else_0_329:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_49
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P175
_proccall1078:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.afterif_5_329:
.cont.12886:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #131
    bl _cmp_eqq
    beq .brk.12886      
.jmpz1079:
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
    b .cont.12886      
.brk.12886:
    b .cont.12841      
.brk.12841:
    ldr r0, [sp, locals@0]
.ret.183:
    @stackempty locals
.final_6_329:
    add sp, #4*3 ; pop locals 3
msgpack_unpackNumberArray__P183_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(400,5): scene.systemMenu.initVolume
    ;
    .object scene_systemMenu_initVolume__P5082 "game/systemmenu.ts(400,5): scene.systemMenu.initVolume"
scene_systemMenu_initVolume__P5082_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_initVolume__P5082:
scene_systemMenu_initVolume__P5082_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_initVolume__P5082_locals:
    ldr r0, _ldlit_231 ; _str51      
    push {r0} ; proc-arg
    bl settings_readNumber__P2044
_proccall1080:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_331      
.jmpz1081:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setVolume__P1617
_proccall1082:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_331:
.afterif_1_331:
.ret.5082:
    @stackempty locals
    movs r0, #0
.final_2_331:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_initVolume__P5082_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(34,9): game.GameOverConfig.constructor
    ;
    .object game_GameOverConfig_constructor__P2958 "game/game.ts(34,9): game.GameOverConfig.constructor"
game_GameOverConfig_constructor__P2958_pre:
    .section code
    .balign 4
    .section code
game_GameOverConfig_constructor__P2958:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_GameOverConfig__C2945_validate_86
    mov lr, r7
game_GameOverConfig_constructor__P2958_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_GameOverConfig_constructor__P2958_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_GameOverConfig_init__P2959_nochk
_proccall1083:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.2958:
    @stackempty locals
.final_0_332:
game_GameOverConfig_constructor__P2958_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(38,9): game.GameOverConfig.init
    ;
    .object game_GameOverConfig_init__P2959 "game/game.ts(38,9): game.GameOverConfig.init"
game_GameOverConfig_init__P2959_pre:
    .section code
    .balign 4
game_GameOverConfig_init__P2959_args:
    cmp r4, #1
    bge game_GameOverConfig_init__P2959_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_GameOverConfig_init__P2959_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_230:
 .word _str52
_ldlit_231:
 .word _str51
.object POP
    .section code
game_GameOverConfig_init__P2959:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_GameOverConfig__C2945_validate_86
    mov lr, r7
game_GameOverConfig_init__P2959_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_GameOverConfig_init__P2959_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #9
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #73
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #37
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_233 ; _str47      
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_234 ; _str48      
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_235 ; _str49      
    str r1, [r0, #32]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #48]
    @stackempty locals
.ret.2959:
    @stackempty locals
    movs r0, #0
.final_0_333:
game_GameOverConfig_init__P2959_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(203,9): music.Melody.constructor
    ;
    .object music_Melody_constructor__P1626 "mixer---nrf52/melody.ts(203,9): music.Melody.constructor"
music_Melody_constructor__P1626_pre:
    .section code
    .balign 4
    .section code
music_Melody_constructor__P1626:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_Melody__C1623_validate_87
    mov lr, r7
music_Melody_constructor__P1626_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_Melody_constructor__P1626_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.1626:
    @stackempty locals
.final_0_334:
music_Melody_constructor__P1626_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(73,46): melt.inline
    ;
    .object melt_inline__P12945 "game/effects.ts(73,46): melt.inline"
melt_inline__P12945_pre:
    .section code
    .balign 4
melt_inline__P12945_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word melt_inline__P12945_args@fn
melt_inline__P12945_args:
    cmp r4, #2
    bge melt_inline__P12945_nochk
    push {lr}
    bl _expand_args_2_17
    bl melt_inline__P12945_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
melt_inline__P12945:
melt_inline__P12945_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
melt_inline__P12945_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #11
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.12957:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.12957      
.jmpz1084:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3031
_proccall1085:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #7
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3031
_proccall1086:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.cont.12957:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.12957      
.brk.12957:
.ret.12945:
    @stackempty locals
    movs r0, #0
.final_0_335:
    add sp, #4*5 ; pop locals 5
melt_inline__P12945_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(192,60): confetti.inline
    ;
    .object confetti_inline__P12998 "game/particleeffects.ts(192,60): confetti.inline"
confetti_inline__P12998_pre:
    .section code
    .balign 4
confetti_inline__P12998_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word confetti_inline__P12998_args@fn
confetti_inline__P12998_args:
    cmp r4, #2
    bge confetti_inline__P12998_nochk
    push {lr}
    bl _expand_args_2_17
    bl confetti_inline__P12998_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
confetti_inline__P12998:
confetti_inline__P12998_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
confetti_inline__P12998_locals:
    ldr r0, _ldlit_236 ; particles_ConfettiFactory__C3186_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #87
    lsls r1, r1, #2
    bl _ifacecall1_get_8
_proccall1088:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_336      
.jmpz1087:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #87
    lsls r1, r1, #2
    bl _ifacecall1_get_8
_proccall1089:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_336      
.condexprz_0_336:
    movs r0, #33
.condexprfin_1_336:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl particles_ConfettiFactory_constructor__P3187
_proccall1090:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #61
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_setSpeed__P3163
_proccall1091:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_237 ; particles_ParticleSource__C3119_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl particles_ParticleSource_constructor__P3124
_proccall1092:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
.ret.12998:
    @stackempty locals
.final_2_336:
    add sp, #4*1 ; pop locals 1
confetti_inline__P12998_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(88,9): particles.ParticleSource.constructor
    ;
    .object particles_ParticleSource_constructor__P3124 "game/particles.ts(88,9): particles.ParticleSource.constructor"
particles_ParticleSource_constructor__P3124_pre:
    .section code
    .balign 4
    .section code
particles_ParticleSource_constructor__P3124:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_constructor__P3124_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource_constructor__P3124_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_constructor__P2072
_proccall1093:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_init__P5159
_proccall1094:
    @stackempty locals
    bl particles_particleSources__P5165
_proccall1095:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #19
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _cmp_ge
    beq .else_0_337      
.jmpz1096:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl particles_sortSources__P5162
_proccall1097:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayShift__P102
_proccall1098:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl particles_ParticleSource_clear__P3134
_proccall1099:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl particles_ParticleSource_destroy__P3133
_proccall1100:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_337:
.afterif_1_337:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setRate__P3136_nochk
_proccall1101:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setAcceleration__P3128_nochk
_proccall1102:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setAnchor__P3135_nochk
_proccall1103:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_337      
.jmpz1104:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_337      
.lazySkip_3_337:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #77
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .lazy_2_337      
.object PUSH
.balign 4
_ldlit_233:
 .word _str47
_ldlit_234:
 .word _str48
_ldlit_235:
 .word _str49
_ldlit_236:
 .word particles_ConfettiFactory__C3186_VT
_ldlit_237:
 .word particles_ParticleSource__C3119_VT
.object POP
.lazy_2_337:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setFactory__P3138_nochk
_proccall1105:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3132_nochk
_proccall1106:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3124:
    @stackempty locals
.final_4_337:
    add sp, #4*2 ; pop locals 2
particles_ParticleSource_constructor__P3124_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(99,9): particles.SprayFactory.constructor
    ;
    .object particles_SprayFactory_constructor__P3160 "game/particlefactories.ts(99,9): particles.SprayFactory.constructor"
particles_SprayFactory_constructor__P3160_pre:
    .section code
    .balign 4
    .section code
particles_SprayFactory_constructor__P3160:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3159_validate_88
    mov lr, r7
particles_SprayFactory_constructor__P3160_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_constructor__P3160_locals:
    movs r0, #0
    @stackempty locals
    bl particles_initTrig__P5180
_proccall1107:
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_setSpeed__P3163_nochk
_proccall1108:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_setDirection__P3164_nochk
_proccall1109:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3160:
    @stackempty locals
.final_0_338:
particles_SprayFactory_constructor__P3160_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(124,9): particles.SprayFactory.setDirection
    ;
    .object particles_SprayFactory_setDirection__P3164 "game/particlefactories.ts(124,9): particles.SprayFactory.setDirection"
particles_SprayFactory_setDirection__P3164_pre:
    .section code
    .balign 4
particles_SprayFactory_setDirection__P3164_args:
    cmp r4, #3
    bge particles_SprayFactory_setDirection__P3164_nochk
    push {lr}
    bl _expand_args_3_14
    bl particles_SprayFactory_setDirection__P3164_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
particles_SprayFactory_setDirection__P3164:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3159_validate_88
    mov lr, r7
particles_SprayFactory_setDirection__P3164_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_setDirection__P3164_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl particles_toRadians__P5185
_proccall1110:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #39
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl particles_toRadians__P5185
_proccall1111:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #39
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3164:
    @stackempty locals
    movs r0, #0
.final_0_339:
particles_SprayFactory_setDirection__P3164_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(46,5): particles.toRadians
    ;
    .object particles_toRadians__P5185 "game/particlefactories.ts(46,5): particles.toRadians"
particles_toRadians__P5185_pre:
    .section code
    .balign 4
    .section code
particles_toRadians__P5185:
particles_toRadians__P5185_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_toRadians__P5185_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_340      
.jmpz1112:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_abs__P128
_proccall1113:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #209
    bl _numops_subs
    str r0, [sp, args@0]
    @stackempty locals
    b .afterif_1_340      
.else_0_340:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@0]
    @stackempty locals
.afterif_1_340:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r1, _ldlit_239 ; _dbl79      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
.ret.5185:
    @stackempty locals
.final_2_340:
particles_toRadians__P5185_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(12,5): particles.initTrig
    ;
    .object particles_initTrig__P5180 "game/particlefactories.ts(12,5): particles.initTrig"
particles_initTrig__P5180_pre:
    .section code
    .balign 4
    .section code
particles_initTrig__P5180:
particles_initTrig__P5180_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_initTrig__P5180_locals:
    movs r0, #79
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_341      
.jmpz1114:
    movs r0, #201
    push {r0} ; proc-arg
    bl particles_cacheSin__P3153
_proccall1115:
    add sp, #4*1 ; pop locals 1
    movs r1, #79
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #201
    push {r0} ; proc-arg
    bl particles_cacheCos__P3154
_proccall1116:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    lsls r1, r1, #6
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_341:
.afterif_1_341:
.ret.5180:
    @stackempty locals
    movs r0, #0
.final_2_341:
particles_initTrig__P5180_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(36,5): particles.cacheCos
    ;
    .object particles_cacheCos__P3154 "game/particlefactories.ts(36,5): particles.cacheCos"
particles_cacheCos__P3154_pre:
    .section code
    .balign 4
    .section code
particles_cacheCos__P3154:
particles_cacheCos__P3154_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_cacheCos__P3154_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_240 ; _dbl78      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.13133:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@0]
    bl _cmp_lt
    beq .brk.13133      
.jmpz1117:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::cos
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1118:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13133:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.13133      
.brk.13133:
    ldr r0, [sp, locals@0]
.ret.3154:
    @stackempty locals
.final_0_342:
    add sp, #4*3 ; pop locals 3
particles_cacheCos__P3154_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(23,5): particles.cacheSin
    ;
    .object particles_cacheSin__P3153 "game/particlefactories.ts(23,5): particles.cacheSin"
particles_cacheSin__P3153_pre:
    .section code
    .balign 4
    .section code
particles_cacheSin__P3153:
particles_cacheSin__P3153_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_cacheSin__P3153_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_240 ; _dbl78      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.13160:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@0]
    bl _cmp_lt
    beq .brk.13160      
.jmpz1119:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::sin
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1120:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13160:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.13160      
.brk.13160:
    ldr r0, [sp, locals@0]
.ret.3153:
    @stackempty locals
.final_0_343:
    add sp, #4*3 ; pop locals 3
particles_cacheSin__P3153_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(273,9): particles.ParticleSource.setFactory
    ;
    .object particles_ParticleSource_setFactory__P3138 "game/particles.ts(273,9): particles.ParticleSource.setFactory"
particles_ParticleSource_setFactory__P3138_pre:
    .section code
    .balign 4
particles_ParticleSource_setFactory__P3138_args:
    cmp r4, #2
    bge particles_ParticleSource_setFactory__P3138_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ParticleSource_setFactory__P3138_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setFactory__P3138:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_setFactory__P3138_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setFactory__P3138_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_345      
.jmpz1121:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #44]
    @stackempty locals
.else_0_345:
.afterif_1_345:
.ret.3138:
    @stackempty locals
    movs r0, #0
.final_2_345:
particles_ParticleSource_setFactory__P3138_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(252,9): particles.ParticleSource.setAnchor
    ;
    .object particles_ParticleSource_setAnchor__P3135 "game/particles.ts(252,9): particles.ParticleSource.setAnchor"
particles_ParticleSource_setAnchor__P3135_pre:
    .section code
    .balign 4
particles_ParticleSource_setAnchor__P3135_args:
    cmp r4, #2
    bge particles_ParticleSource_setAnchor__P3135_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ParticleSource_setAnchor__P3135_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setAnchor__P3135:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_setAnchor__P3135_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setAnchor__P3135_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
.ret.3135:
    @stackempty locals
    movs r0, #0
.final_0_346:
particles_ParticleSource_setAnchor__P3135_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(195,9): particles.ParticleSource.setAcceleration
    ;
    .object particles_ParticleSource_setAcceleration__P3128 "game/particles.ts(195,9): particles.ParticleSource.setAcceleration"
particles_ParticleSource_setAcceleration__P3128_pre:
    .section code
    .balign 4
particles_ParticleSource_setAcceleration__P3128_args:
    cmp r4, #3
    bge particles_ParticleSource_setAcceleration__P3128_nochk
    push {lr}
    bl _expand_args_3_14
    bl particles_ParticleSource_setAcceleration__P3128_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
particles_ParticleSource_setAcceleration__P3128:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_setAcceleration__P3128_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setAcceleration__P3128_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1122:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1123:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #52]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3128:
    @stackempty locals
    movs r0, #0
.final_0_347:
particles_ParticleSource_setAcceleration__P3128_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(260,9): particles.ParticleSource.setRate
    ;
    .object particles_ParticleSource_setRate__P3136 "game/particles.ts(260,9): particles.ParticleSource.setRate"
particles_ParticleSource_setRate__P3136_pre:
    .section code
    .balign 4
particles_ParticleSource_setRate__P3136_args:
    cmp r4, #2
    bge particles_ParticleSource_setRate__P3136_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ParticleSource_setRate__P3136_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setRate__P3136:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_setRate__P3136_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setRate__P3136_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::ceil
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #36]
    @stackempty locals
.ret.3136:
    @stackempty locals
    movs r0, #0
.final_0_348:
particles_ParticleSource_setRate__P3136_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(234,9): particles.ParticleSource.destroy
    ;
    .object particles_ParticleSource_destroy__P3133 "game/particles.ts(234,9): particles.ParticleSource.destroy"
particles_ParticleSource_destroy__P3133_pre:
    .section code
    .balign 4
particles_ParticleSource_destroy__P3133_args:
    cmp r4, #1
    bge particles_ParticleSource_destroy__P3133_nochk
    push {lr}
    bl _expand_args_1_10
    bl particles_ParticleSource_destroy__P3133_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource_destroy__P3133:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_destroy__P3133_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_destroy__P3133_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3132_nochk
_proccall1124:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #28]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource__prune__P3127_nochk
_proccall1125:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3133:
    @stackempty locals
    movs r0, #0
.final_0_349:
particles_ParticleSource_destroy__P3133_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(154,5): helpers.arrayShift
    ;
    .object helpers_arrayShift__P102 "base/pxt-helpers.ts(154,5): helpers.arrayShift"
helpers_arrayShift__P102_pre:
    .section code
    .balign 4
    .section code
helpers_arrayShift__P102:
helpers_arrayShift__P102_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arrayShift__P102_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*1 ; pop locals 1
.ret.102:
    @stackempty locals
.final_0_350:
helpers_arrayShift__P102_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(333,5): particles.sortSources
    ;
    .object particles_sortSources__P5162 "game/particles.ts(333,5): particles.sortSources"
particles_sortSources__P5162_pre:
    .section code
    .balign 4
    .section code
particles_sortSources__P5162:
particles_sortSources__P5162_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_sortSources__P5162_locals:
    ldr r0, _ldlit_241 ; particles_sortSources_inline__P13230_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_arraySort__P105
_proccall1126:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5162:
    @stackempty locals
    movs r0, #0
.final_0_351:
particles_sortSources__P5162_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(334,22): particles.sortSources.inline
    ;
    .object particles_sortSources_inline__P13230 "game/particles.ts(334,22): particles.sortSources.inline"
particles_sortSources_inline__P13230_pre:
    .section code
    .balign 4
particles_sortSources_inline__P13230_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_sortSources_inline__P13230_args@fn
particles_sortSources_inline__P13230_args:
    cmp r4, #2
    bge particles_sortSources_inline__P13230_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_sortSources_inline__P13230_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_239:
 .word _dbl79
_ldlit_240:
 .word _dbl78
_ldlit_241:
 .word particles_sortSources_inline__P13230_Lit
.object POP
    .section code
particles_sortSources_inline__P13230:
particles_sortSources_inline__P13230_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_sortSources_inline__P13230_locals:
    ldr r0, [sp, args@0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_ParticleSource__C3119_validate_76
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_352      
.jmpz1127:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_352      
.lazySkip_1_352:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_ParticleSource__C3119_validate_76
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.lazy_0_352:
; jmp value (already in r0)
.ret.13230:
    @stackempty locals
.final_2_352:
particles_sortSources_inline__P13230_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(10,26): MAX_SOURCES.inline
    ;
    .object MAX_SOURCES_inline__P13245 "game/particles.ts(10,26): MAX_SOURCES.inline"
MAX_SOURCES_inline__P13245_pre:
    .section code
    .balign 4
MAX_SOURCES_inline__P13245_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word MAX_SOURCES_inline__P13245_args@fn
MAX_SOURCES_inline__P13245_args:
    .section code
MAX_SOURCES_inline__P13245:
MAX_SOURCES_inline__P13245_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
MAX_SOURCES_inline__P13245_locals:
    bl control_ramSize__P346
_proccall1128:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, _ldlit_243 ; 204801      
    bl _cmp_le
    beq .else_0_353      
.jmpz1129:
    movs r0, #17
    b .ret.13245      
    b .afterif_1_353      
.else_0_353:
    ldr r0, [sp, locals@0]
    ldr r1, _ldlit_244 ; 409601      
    bl _cmp_le
    beq .else_2_353      
.jmpz1130:
    movs r0, #33
    b .ret.13245      
    b .afterif_3_353      
.else_2_353:
    movs r0, #101
    b .ret.13245      
.afterif_3_353:
.afterif_1_353:
    movs r0, #0
.ret.13245:
    @stackempty locals
.final_4_353:
    add sp, #4*1 ; pop locals 1
MAX_SOURCES_inline__P13245_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/control.ts(166,5): control.ramSize
    ;
    .object control_ramSize__P346 "base/control.ts(166,5): control.ramSize"
control_ramSize__P346_pre:
    .section code
    .balign 4
    .section code
control_ramSize__P346:
control_ramSize__P346_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_ramSize__P346_locals:
    movs r0, #205
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getConfig
    bl _numops_fromInt
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_354      
.jmpz1131:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_354      
.lazySkip_1_354:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl control::_ramSize
    bl _numops_fromInt
.lazy_0_354:
; jmp value (already in r0)
.ret.346:
    @stackempty locals
.final_2_354:
control_ramSize__P346_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(305,5): particles.init
    ;
    .object particles_init__P5159 "game/particles.ts(305,5): particles.init"
particles_init__P5159_pre:
    .section code
    .balign 4
    .section code
particles_init__P5159:
particles_init__P5159_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_init__P5159_locals:
    bl game_currentScene__P2968
_proccall1132:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #72]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_355      
.jmpz1133:
    b .ret.5159      
.else_0_355:
.afterif_1_355:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_scene_Scene__C2816_validate_18
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    movs r1, #81
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_245 ; particles_updateParticles__P5160_Lit      
    push {r0} ; proc-arg
    bl game_onUpdate__P2991
_proccall1134:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_246 ; particles_pruneParticles__P5161_Lit      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #245
    push {r0} ; proc-arg
    bl game_onUpdateInterval__P2992
_proccall1135:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5159:
    @stackempty locals
    movs r0, #0
.final_2_355:
    add sp, #4*1 ; pop locals 1
particles_init__P5159_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameutil.ts(27,5): game.onUpdateInterval
    ;
    .object game_onUpdateInterval__P2992 "game/gameutil.ts(27,5): game.onUpdateInterval"
game_onUpdateInterval__P2992_pre:
    .section code
    .balign 4
    .section code
game_onUpdateInterval__P2992:
game_onUpdateInterval__P2992_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_onUpdateInterval__P2992_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_356      
.jmpz1136:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_356      
.lazySkip_2_356:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_1_356:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_356      
.jmpz1137:
    b .ret.2992      
.else_0_356:
.afterif_3_356:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_247 ; game_onUpdateInterval_inline__P13289_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    bl game_eventContext__P2971
_proccall1138:
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #39
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall1139:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2992:
    @stackempty locals
    movs r0, #0
.final_4_356:
    add sp, #4*1 ; pop locals 1
game_onUpdateInterval__P2992_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameutil.ts(30,82): game.onUpdateInterval.inline
    ;
    .object game_onUpdateInterval_inline__P13289 "game/gameutil.ts(30,82): game.onUpdateInterval.inline"
game_onUpdateInterval_inline__P13289_pre:
    .section code
    .balign 4
game_onUpdateInterval_inline__P13289_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_onUpdateInterval_inline__P13289_args@fn
game_onUpdateInterval_inline__P13289_args:
    .section code
game_onUpdateInterval_inline__P13289:
game_onUpdateInterval_inline__P13289_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_onUpdateInterval_inline__P13289_locals:
    bl game_currentScene__P2968
_proccall1140:
    ldr r0, [r0, #88]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    ldr r1, [sp, locals@0]
    bl _cmp_le
    beq .else_0_357      
.jmpz1141:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [r5, #4*4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_357:
.afterif_1_357:
.ret.13289:
    @stackempty locals
    movs r0, #0
.final_2_357:
    add sp, #4*1 ; pop locals 1
game_onUpdateInterval_inline__P13289_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(195,9): scene.Scene.millis
    ;
    .object scene_Scene_millis__P2841 "game/scene.ts(195,9): scene.Scene.millis"
scene_Scene_millis__P2841_pre:
    .section code
    .balign 4
scene_Scene_millis__P2841_args:
    cmp r4, #1
    bge scene_Scene_millis__P2841_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Scene_millis__P2841_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_millis__P2841:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2816_validate_18
    mov lr, r7
scene_Scene_millis__P2841_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_millis__P2841_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
.ret.2841:
    @stackempty locals
.final_0_358:
scene_Scene_millis__P2841_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(314,5): particles.updateParticles
    ;
    .object particles_updateParticles__P5160 "game/particles.ts(314,5): particles.updateParticles"
particles_updateParticles__P5160_pre:
    .section code
    .balign 4
particles_updateParticles__P5160_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_updateParticles__P5160_args@fn
particles_updateParticles__P5160_args:
    .section code
particles_updateParticles__P5160:
particles_updateParticles__P5160_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_updateParticles__P5160_locals:
    bl particles_particleSources__P5165
_proccall1143:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_359      
.jmpz1144:
    b .ret.5160      
.else_0_359:
.afterif_1_359:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl particles_sortSources__P5162
_proccall1145:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #81
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #81
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.13321:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.13321      
.jmpz1146:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl particles_ParticleSource__update__P3126
_proccall1147:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13321:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.13321      
.brk.13321:
.ret.5160:
    @stackempty locals
    movs r0, #0
.final_2_359:
    add sp, #4*4 ; pop locals 4
particles_updateParticles__P5160_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_243:
 .word 204801
_ldlit_244:
 .word 409601
_ldlit_245:
 .word particles_updateParticles__P5160_Lit
_ldlit_246:
 .word particles_pruneParticles__P5161_Lit
_ldlit_247:
 .word game_onUpdateInterval_inline__P13289_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(125,9): particles.ParticleSource._update
    ;
    .object particles_ParticleSource__update__P3126 "game/particles.ts(125,9): particles.ParticleSource._update"
particles_ParticleSource__update__P3126_pre:
    .section code
    .balign 4
particles_ParticleSource__update__P3126_args:
    cmp r4, #2
    bge particles_ParticleSource__update__P3126_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ParticleSource__update__P3126_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource__update__P3126:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource__update__P3126_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource__update__P3126_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_360      
.jmpz1148:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    movs r1, #1
    bl _cmp_le
    beq .else_1_360      
.jmpz1149:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_destroy__P3133_nochk
_proccall1150:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_1_360:
.afterif_2_360:
    b .afterif_3_360      
.else_0_360:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_360      
.jmpz1151:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_360      
.lazySkip_6_360:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #138
    bl _ifacecall1_get_8
_proccall1152:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.lazy_5_360:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_360      
.jmpz1153:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_360      
.lazySkip_8_360:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #138
    bl _ifacecall1_get_8
_proccall1154:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_ands
.lazy_7_360:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_360      
.jmpz1155:
    ldr r0, [sp, args@0]
    movs r1, #5
    lsls r1, r1, #8
    adds r1, #221
    str r1, [r0, #24]
    @stackempty locals
.else_4_360:
.afterif_9_360:
.afterif_3_360:
.cont.13368:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_11_360      
.jmpz1156:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_360      
.lazySkip_11_360:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3131_nochk
_proccall1157:
    add sp, #4*1 ; pop locals 1
.lazy_10_360:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.13368      
.jmpz1158:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #36
    bl _classCall_particles_ParticleFactory__C3155_89
_proccall1159:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_360      
.jmpz1160:
    b .cont.13368      
.else_12_360:
.afterif_13_360:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #32]
    @stackempty locals
    b .cont.13368      
.brk.13368:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_360      
.jmpz1161:
    b .ret.3126      
.else_14_360:
.afterif_15_360:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1162:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_16_360      
.jmpz1163:
.cont.13412:
    ldr r0, [sp, locals@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_gt
    beq .else_17_360      
.jmpz1164:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #20]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2314_this_35
_proccall1165:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_17_360:
.afterif_18_360:
    ldr r0, [sp, locals@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.13412      
.jmpz1166:
    b .cont.13412      
.brk.13412:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    b .afterif_19_360      
.else_16_360:
.cont.13428:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #20]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.13428      
.jmpz1167:
    b .cont.13428      
.brk.13428:
.afterif_19_360:
.ret.3126:
    @stackempty locals
    movs r0, #0
.final_20_360:
    add sp, #4*3 ; pop locals 3
particles_ParticleSource__update__P3126_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(278,9): particles.ParticleSource.updateParticle
    ;
    .object particles_ParticleSource_updateParticle__P5156 "game/particles.ts(278,9): particles.ParticleSource.updateParticle"
particles_ParticleSource_updateParticle__P5156_pre:
    .section code
    .balign 4
particles_ParticleSource_updateParticle__P5156_args:
    cmp r4, #3
    bge particles_ParticleSource_updateParticle__P5156_nochk
    push {lr}
    bl _expand_args_3_14
    bl particles_ParticleSource_updateParticle__P5156_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
particles_ParticleSource_updateParticle__P5156:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_updateParticle__P5156_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_updateParticle__P5156_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #21
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1168:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1169:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #4]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1170:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #8]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #16]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1171:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5156:
    @stackempty locals
    movs r0, #0
.final_0_361:
particles_ParticleSource_updateParticle__P5156_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(68,9): particles.ParticleFactory.createParticle
    ;
    .object particles_ParticleFactory_createParticle__P3157 "game/particlefactories.ts(68,9): particles.ParticleFactory.createParticle"
particles_ParticleFactory_createParticle__P3157_pre:
    .section code
    .balign 4
particles_ParticleFactory_createParticle__P3157_args:
    cmp r4, #2
    bge particles_ParticleFactory_createParticle__P3157_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ParticleFactory_createParticle__P3157_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleFactory_createParticle__P3157:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleFactory__C3155_validate_90
    mov lr, r7
particles_ParticleFactory_createParticle__P3157_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_ParticleFactory_createParticle__P3157_locals:
    ldr r0, _ldlit_249 ; particles_Particle__C3100_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #97
    bl _ifacecall1_get_8
_proccall1172:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1173:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #101
    bl _ifacecall1_get_8
_proccall1174:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1175:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #233
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3157:
    @stackempty locals
.final_0_363:
    add sp, #4*1 ; pop locals 1
particles_ParticleFactory_createParticle__P3157_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameutil.ts(14,5): game.onUpdate
    ;
    .object game_onUpdate__P2991 "game/gameutil.ts(14,5): game.onUpdate"
game_onUpdate__P2991_pre:
    .section code
    .balign 4
    .section code
game_onUpdate__P2991:
game_onUpdate__P2991_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_onUpdate__P2991_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_364      
.jmpz1176:
    b .ret.2991      
.else_0_364:
.afterif_1_364:
    bl game_eventContext__P2971
_proccall1177:
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall1178:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2991:
    @stackempty locals
    movs r0, #0
.final_2_364:
game_onUpdate__P2991_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(120,9): particles.SprayFactory.setSpeed
    ;
    .object particles_SprayFactory_setSpeed__P3163 "game/particlefactories.ts(120,9): particles.SprayFactory.setSpeed"
particles_SprayFactory_setSpeed__P3163_pre:
    .section code
    .balign 4
particles_SprayFactory_setSpeed__P3163_args:
    cmp r4, #2
    bge particles_SprayFactory_setSpeed__P3163_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_SprayFactory_setSpeed__P3163_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_SprayFactory_setSpeed__P3163:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3159_validate_88
    mov lr, r7
particles_SprayFactory_setSpeed__P3163_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_setSpeed__P3163_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1179:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3163:
    @stackempty locals
    movs r0, #0
.final_0_365:
particles_SprayFactory_setSpeed__P3163_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(248,9): particles.ConfettiFactory.constructor
    ;
    .object particles_ConfettiFactory_constructor__P3187 "game/particlefactories.ts(248,9): particles.ConfettiFactory.constructor"
particles_ConfettiFactory_constructor__P3187_pre:
    .section code
    .balign 4
    .section code
particles_ConfettiFactory_constructor__P3187:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ConfettiFactory__C3186_validate_91
    mov lr, r7
particles_ConfettiFactory_constructor__P3187_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ConfettiFactory_constructor__P3187_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, _ldlit_250 ; _hexlit80      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, _ldlit_251 ; _hexlit81      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_252 ; _hexlit82      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_253 ; _hexlit83      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_254 ; _hexlit84      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl particles_ShapeFactory_constructor__P3182
_proccall1180:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.13545:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.13545      
.jmpz1181:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl particles_ShapeFactory_addShape__P3183_nochk
_proccall1182:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13545:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.13545      
.brk.13545:
    ldr r0, [sp, args@0]
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #35
    lsls r1, r1, #8
    adds r1, #41
    str r1, [r0, #28]
    @stackempty locals
    movs r0, #0
.ret.3187:
    @stackempty locals
.final_0_366:
    add sp, #4*2 ; pop locals 2
particles_ConfettiFactory_constructor__P3187_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(226,9): particles.ShapeFactory.addShape
    ;
    .object particles_ShapeFactory_addShape__P3183 "game/particlefactories.ts(226,9): particles.ShapeFactory.addShape"
particles_ShapeFactory_addShape__P3183_pre:
    .section code
    .balign 4
particles_ShapeFactory_addShape__P3183_args:
    cmp r4, #2
    bge particles_ShapeFactory_addShape__P3183_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ShapeFactory_addShape__P3183_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ShapeFactory_addShape__P3183:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3181_validate_92
    mov lr, r7
particles_ShapeFactory_addShape__P3183_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ShapeFactory_addShape__P3183_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_367      
.jmpz1183:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_367:
.afterif_1_367:
.ret.3183:
    @stackempty locals
    movs r0, #0
.final_2_367:
particles_ShapeFactory_addShape__P3183_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_249:
 .word particles_Particle__C3100_VT
_ldlit_250:
 .word _hexlit80
_ldlit_251:
 .word _hexlit81
_ldlit_252:
 .word _hexlit82
_ldlit_253:
 .word _hexlit83
_ldlit_254:
 .word _hexlit84
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(213,9): particles.ShapeFactory.constructor
    ;
    .object particles_ShapeFactory_constructor__P3182 "game/particlefactories.ts(213,9): particles.ShapeFactory.constructor"
particles_ShapeFactory_constructor__P3182_pre:
    .section code
    .balign 4
    .section code
particles_ShapeFactory_constructor__P3182:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3181_validate_92
    mov lr, r7
particles_ShapeFactory_constructor__P3182_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ShapeFactory_constructor__P3182_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_AreaFactory_constructor__P3170
_proccall1184:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1185:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1186:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3182:
    @stackempty locals
.final_0_368:
particles_ShapeFactory_constructor__P3182_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(140,9): particles.AreaFactory.constructor
    ;
    .object particles_AreaFactory_constructor__P3170 "game/particlefactories.ts(140,9): particles.AreaFactory.constructor"
particles_AreaFactory_constructor__P3170_pre:
    .section code
    .balign 4
    .section code
particles_AreaFactory_constructor__P3170:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_AreaFactory__C3165_validate_93
    mov lr, r7
particles_AreaFactory_constructor__P3170_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_AreaFactory_constructor__P3170_locals:
    movs r0, #181
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_constructor__P3160
_proccall1187:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_369      
.jmpz1188:
    ldr r0, [sp, args@3]
    b .condexprfin_1_369      
.condexprz_0_369:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
.condexprfin_1_369:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_369      
.jmpz1189:
    ldr r0, [sp, args@4]
    b .condexprfin_3_369      
.condexprz_2_369:
    movs r0, #6
    lsls r0, r0, #8
    adds r0, #165
.condexprfin_3_369:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, _ldlit_256 ; Math_FastRandom__C3027_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Math_FastRandom_constructor__P3029
_proccall1190:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #32]
    @stackempty locals
    movs r0, #0
.ret.3170:
    @stackempty locals
.final_4_369:
particles_AreaFactory_constructor__P3170_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(82,9): effects.ScreenEffect.constructor
    ;
    .object effects_ScreenEffect_constructor__P3235 "game/particleeffects.ts(82,9): effects.ScreenEffect.constructor"
effects_ScreenEffect_constructor__P3235_pre:
    .section code
    .balign 4
    .section code
effects_ScreenEffect_constructor__P3235:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ScreenEffect__C3234_validate_94
    mov lr, r7
effects_ScreenEffect_constructor__P3235_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ScreenEffect_constructor__P3235_locals:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl effects_ParticleEffect_constructor__P3231
_proccall1191:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #0
.ret.3235:
    @stackempty locals
.final_0_370:
effects_ScreenEffect_constructor__P3235_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(14,9): effects.ParticleEffect.constructor
    ;
    .object effects_ParticleEffect_constructor__P3231 "game/particleeffects.ts(14,9): effects.ParticleEffect.constructor"
effects_ParticleEffect_constructor__P3231_pre:
    .section code
    .balign 4
    .section code
effects_ParticleEffect_constructor__P3231:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ParticleEffect__C3230_validate_78
    mov lr, r7
effects_ParticleEffect_constructor__P3231_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ParticleEffect_constructor__P3231_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #0
.ret.3231:
    @stackempty locals
.final_0_371:
effects_ParticleEffect_constructor__P3231_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(107,5): game.currentScene
    ;
    .object game_currentScene__P2968 "game/game.ts(107,5): game.currentScene"
game_currentScene__P2968_pre:
    .section code
    .balign 4
    .section code
game_currentScene__P2968:
game_currentScene__P2968_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_currentScene__P2968_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl game_init__P4823
_proccall1192:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.2968:
    @stackempty locals
.final_0_372:
game_currentScene__P2968_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(478,5): game.addScenePopHandler
    ;
    .object game_addScenePopHandler__P2988 "game/game.ts(478,5): game.addScenePopHandler"
game_addScenePopHandler__P2988_pre:
    .section code
    .balign 4
    .section code
game_addScenePopHandler__P2988:
game_addScenePopHandler__P2988_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_addScenePopHandler__P2988_locals:
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_373      
.jmpz1193:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #1
    lsls r1, r1, #8
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_373:
.afterif_1_373:
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_373      
.jmpz1194:
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_373:
.afterif_3_373:
.ret.2988:
    @stackempty locals
    movs r0, #0
.final_4_373:
game_addScenePopHandler__P2988_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(454,5): game.addScenePushHandler
    ;
    .object game_addScenePushHandler__P2986 "game/game.ts(454,5): game.addScenePushHandler"
game_addScenePushHandler__P2986_pre:
    .section code
    .balign 4
    .section code
game_addScenePushHandler__P2986:
game_addScenePushHandler__P2986_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_addScenePushHandler__P2986_locals:
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_374      
.jmpz1195:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #71
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_374:
.afterif_1_374:
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_374      
.jmpz1196:
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_374:
.afterif_3_374:
.ret.2986:
    @stackempty locals
    movs r0, #0
.final_4_374:
game_addScenePushHandler__P2986_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(5,1): Fx8
    ;
    .object Fx8__P149 "base/fixed.ts(5,1): Fx8"
Fx8__P149_pre:
    .section code
    .balign 4
    .section code
Fx8__P149:
Fx8__P149_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx8__P149_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
.ret.149:
    @stackempty locals
.final_0_375:
Fx8__P149_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritekind.ts(27,5): SpriteKind.create
    ;
    .object SpriteKind_create__P2452 "game/spritekind.ts(27,5): SpriteKind.create"
SpriteKind_create__P2452_pre:
    .section code
    .balign 4
    .section code
SpriteKind_create__P2452:
SpriteKind_create__P2452_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
SpriteKind_create__P2452_locals:
    movs r0, #41
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_376      
.jmpz1197:
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    movs r1, #41
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_376:
.afterif_1_376:
    movs r0, #41
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    movs r1, #41
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    pop {r0} ; tmpref @1
.ret.2452:
    @stackempty locals
.final_2_376:
SpriteKind_create__P2452_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(78,9): controller.Button.constructor
    ;
    .object controller_Button_constructor__P2170 "game/controllerbutton.ts(78,9): controller.Button.constructor"
controller_Button_constructor__P2170_pre:
    .section code
    .balign 4
    .section code
controller_Button_constructor__P2170:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_constructor__P2170_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_constructor__P2170_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_gt
    beq .else_0_377      
.jmpz1198:
    movs r0, #1
    ldr r1, _ldlit_257 ; controller_Button_inline__P13708_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_95
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #2
    movs r3, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_258 ; controller_Button_inline__P13715_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_95
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #3
    movs r3, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    beq .else_1_377      
.jmpz1199:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setupButton
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_377:
.afterif_2_377:
.else_0_377:
.afterif_3_377:
    movs r0, #0
.ret.2170:
    @stackempty locals
.final_4_377:
controller_Button_constructor__P2170_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(89,67): controller.Button.inline
    ;
    .object controller_Button_inline__P13708 "game/controllerbutton.ts(89,67): controller.Button.inline"
controller_Button_inline__P13708_pre:
    .section code
    .balign 4
controller_Button_inline__P13708_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Button_inline__P13708_args@fn
controller_Button_inline__P13708_args:
    .section code
controller_Button_inline__P13708:
controller_Button_inline__P13708_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_inline__P13708_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl controller_Button_setPressed__P2177_nochk
_proccall1200:
    add sp, #4*2 ; pop locals 2
.ret.13708:
    @stackempty locals
    movs r0, #0
.final_0_378:
controller_Button_inline__P13708_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(90,69): controller.Button.inline
    ;
    .object controller_Button_inline__P13715 "game/controllerbutton.ts(90,69): controller.Button.inline"
controller_Button_inline__P13715_pre:
    .section code
    .balign 4
controller_Button_inline__P13715_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Button_inline__P13715_args@fn
controller_Button_inline__P13715_args:
    .section code
controller_Button_inline__P13715:
controller_Button_inline__P13715_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_inline__P13715_locals:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl controller_Button_setPressed__P2177_nochk
_proccall1201:
    add sp, #4*2 ; pop locals 2
.ret.13715:
    @stackempty locals
    movs r0, #0
    b .final_0_379      
.object PUSH
.balign 4
_ldlit_256:
 .word Math_FastRandom__C3027_VT
_ldlit_257:
 .word controller_Button_inline__P13708_Lit
_ldlit_258:
 .word controller_Button_inline__P13715_Lit
.object POP
.final_0_379:
controller_Button_inline__P13715_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(202,9): controller.Button.setPressed
    ;
    .object controller_Button_setPressed__P2177 "game/controllerbutton.ts(202,9): controller.Button.setPressed"
controller_Button_setPressed__P2177_pre:
    .section code
    .balign 4
controller_Button_setPressed__P2177_args:
    cmp r4, #2
    bge controller_Button_setPressed__P2177_nochk
    push {lr}
    bl _expand_args_2_17
    bl controller_Button_setPressed__P2177_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button_setPressed__P2177:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_setPressed__P2177_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_setPressed__P2177_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    ldr r1, [sp, args@1]
    bl _cmp_neq
    beq .else_0_380      
.jmpz1202:
    bl power_poke__P1910
_proccall1203:
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_380      
.jmpz1204:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #66
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl controller_Controller_connected__P2131
_proccall1205:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_380:
.afterif_2_380:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_380      
.jmpz1206:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_raiseButtonDown__P4601_nochk
_proccall1207:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_4_380      
.else_3_380:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_raiseButtonUp__P4600_nochk
_proccall1208:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_4_380:
.else_0_380:
.afterif_5_380:
.ret.2177:
    @stackempty locals
    movs r0, #0
.final_6_380:
controller_Button_setPressed__P2177_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(97,9): controller.Button.raiseButtonUp
    ;
    .object controller_Button_raiseButtonUp__P4600 "game/controllerbutton.ts(97,9): controller.Button.raiseButtonUp"
controller_Button_raiseButtonUp__P4600_pre:
    .section code
    .balign 4
controller_Button_raiseButtonUp__P4600_args:
    cmp r4, #1
    bge controller_Button_raiseButtonUp__P4600_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Button_raiseButtonUp__P4600_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_raiseButtonUp__P4600:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_raiseButtonUp__P4600_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_raiseButtonUp__P4600_locals:
    movs r0, #236
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_381      
.jmpz1209:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #1
    lsls r0, r0, #11
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_381      
.else_0_381:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #4
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_381:
.ret.4600:
    @stackempty locals
    movs r0, #0
.final_2_381:
controller_Button_raiseButtonUp__P4600_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(104,9): controller.Button.raiseButtonDown
    ;
    .object controller_Button_raiseButtonDown__P4601 "game/controllerbutton.ts(104,9): controller.Button.raiseButtonDown"
controller_Button_raiseButtonDown__P4601_pre:
    .section code
    .balign 4
controller_Button_raiseButtonDown__P4601_args:
    cmp r4, #1
    bge controller_Button_raiseButtonDown__P4601_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Button_raiseButtonDown__P4601_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_raiseButtonDown__P4601:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_raiseButtonDown__P4601_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_raiseButtonDown__P4601_locals:
    movs r0, #236
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_382      
.jmpz1210:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_382      
.else_0_382:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_382:
.ret.4601:
    @stackempty locals
    movs r0, #0
.final_2_382:
controller_Button_raiseButtonDown__P4601_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(226,9): controller.Controller.connected
    ;
    .object controller_Controller_connected__P2131 "game/controller.ts(226,9): controller.Controller.connected"
controller_Controller_connected__P2131_pre:
    .section code
    .balign 4
controller_Controller_connected__P2131_args:
    cmp r4, #2
    bge controller_Controller_connected__P2131_nochk
    push {lr}
    bl _expand_args_2_17
    bl controller_Controller_connected__P2131_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller_connected__P2131:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller_connected__P2131_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_connected__P2131_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_383      
.jmpz1211:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_383      
.jmpz1212:
    movs r0, #3
    b .condexprfin_2_383      
.condexprz_1_383:
    movs r0, #5
.condexprfin_2_383:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_383:
.afterif_3_383:
.ret.2131:
    @stackempty locals
    movs r0, #0
.final_4_383:
controller_Controller_connected__P2131_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(86,9): controller.Controller.id
    ;
    .object controller_Controller_id__P2117 "game/controller.ts(86,9): controller.Controller.id"
controller_Controller_id__P2117_pre:
    .section code
    .balign 4
controller_Controller_id__P2117_args:
    cmp r4, #1
    bge controller_Controller_id__P2117_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller_id__P2117_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_id__P2117:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller_id__P2117_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_id__P2117_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
.ret.2117:
    @stackempty locals
.final_0_384:
controller_Controller_id__P2117_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(222,9): controller.Controller.connected
    ;
    .object controller_Controller_connected__P2130 "game/controller.ts(222,9): controller.Controller.connected"
controller_Controller_connected__P2130_pre:
    .section code
    .balign 4
controller_Controller_connected__P2130_args:
    cmp r4, #1
    bge controller_Controller_connected__P2130_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Controller_connected__P2130_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_connected__P2130:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2110_validate_62
    mov lr, r7
controller_Controller_connected__P2130_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_connected__P2130_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.2130:
    @stackempty locals
.final_0_385:
controller_Controller_connected__P2130_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(42,5): settings.initScopes
    ;
    .object settings_initScopes__P4568 "settings/settings.ts(42,5): settings.initScopes"
settings_initScopes__P4568_pre:
    .section code
    .balign 4
    .section code
settings_initScopes__P4568:
settings_initScopes__P4568_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_initScopes__P4568_locals:
    bl settings_runNumber__P2034
_proccall1213:
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #83
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeNumber__P2039
_proccall1214:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceSerialNumber
    bl _numops_fromInt
    ldr r1, _ldlit_260 ; _dbl26      
    bl _numops_ands
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::programName
    push {r0} ; the one arg
    bl settings_setScope__P4567
_proccall1215:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4568:
    @stackempty locals
    movs r0, #0
.final_0_386:
    add sp, #4*1 ; pop locals 1
settings_initScopes__P4568_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(32,5): settings.setScope
    ;
    .object settings_setScope__P4567 "settings/settings.ts(32,5): settings.setScope"
settings_setScope__P4567_pre:
    .section code
    .balign 4
    .section code
settings_setScope__P4567:
settings_setScope__P4567_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_setScope__P4567_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_387      
.jmpz1216:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_387      
.lazySkip_2_387:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_387:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_387      
.jmpz1217:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #154
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_387:
.afterif_3_387:
    movs r0, #21
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readString__P2042
_proccall1218:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@0]
    bl _cmp_neq
    beq .else_4_387      
.jmpz1219:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #21
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeString__P2037
_proccall1220:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_387:
.afterif_5_387:
.ret.4567:
    @stackempty locals
    movs r0, #0
.final_6_387:
    add sp, #4*1 ; pop locals 1
settings_setScope__P4567_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(76,5): settings.writeString
    ;
    .object settings_writeString__P2037 "settings/settings.ts(76,5): settings.writeString"
settings_writeString__P2037_pre:
    .section code
    .balign 4
    .section code
settings_writeString__P2037:
settings_writeString__P2037_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeString__P2037_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2036
_proccall1221:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2037:
    @stackempty locals
    movs r0, #0
.final_0_388:
settings_writeString__P2037_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(111,5): settings.readString
    ;
    .object settings_readString__P2042 "settings/settings.ts(111,5): settings.readString"
settings_readString__P2042_pre:
    .section code
    .balign 4
    .section code
settings_readString__P2042:
settings_readString__P2042_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_readString__P2042_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_44
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_389      
.jmpz1222:
    movs r0, #0
    b .ret.2042      
    b .afterif_1_389      
.else_0_389:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    b .ret.2042      
.afterif_1_389:
    movs r0, #0
.ret.2042:
    @stackempty locals
.final_2_389:
    add sp, #4*1 ; pop locals 1
settings_readString__P2042_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(28,5): settings.runNumber
    ;
    .object settings_runNumber__P2034 "settings/settings.ts(28,5): settings.runNumber"
settings_runNumber__P2034_pre:
    .section code
    .balign 4
    .section code
settings_runNumber__P2034:
settings_runNumber__P2034_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_runNumber__P2034_locals:
    movs r0, #83
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readNumber__P2044
_proccall1224:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_390      
.jmpz1223:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_390      
.lazySkip_1_390:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_390:
; jmp value (already in r0)
.ret.2034:
    @stackempty locals
.final_2_390:
settings_runNumber__P2034_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/frame.ts(5,5): control.__screen.update
    ;
    .object control___screen_update__P1970 "screen---st7735/frame.ts(5,5): control.__screen.update"
control___screen_update__P1970_pre:
    .section code
    .balign 4
control___screen_update__P1970_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control___screen_update__P1970_args@fn
control___screen_update__P1970_args:
    .section code
control___screen_update__P1970:
control___screen_update__P1970_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control___screen_update__P1970_locals:
    movs r0, #248
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_391      
.jmpz1225:
    movs r0, #248
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_391:
.afterif_1_391:
    movs r0, #66
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
.ret.1970:
    @stackempty locals
    movs r0, #0
.final_2_391:
control___screen_update__P1970_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pause.ts(8,1): pause
    ;
    .object pause__P413 "base/pause.ts(8,1): pause"
pause__P413_pre:
    .section code
    .balign 4
    .section code
pause__P413:
pause__P413_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pause__P413_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl loops::pause
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.413:
    @stackempty locals
    movs r0, #0
.final_0_392:
pause__P413_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(240,9): particles.ShapeFactory.createParticle
    ;
    .object particles_ShapeFactory_createParticle__P3185 "game/particlefactories.ts(240,9): particles.ShapeFactory.createParticle"
particles_ShapeFactory_createParticle__P3185_pre:
    .section code
    .balign 4
particles_ShapeFactory_createParticle__P3185_args:
    cmp r4, #2
    bge particles_ShapeFactory_createParticle__P3185_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ShapeFactory_createParticle__P3185_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ShapeFactory_createParticle__P3185:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3181_validate_92
    mov lr, r7
particles_ShapeFactory_createParticle__P3185_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_ShapeFactory_createParticle__P3185_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_AreaFactory_createParticle__P3171
_proccall1227:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r3, r0
    movs r0, #29
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_FastRandom_randomRange__P3031
_proccall1228:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3185:
    @stackempty locals
.final_0_393:
    add sp, #4*1 ; pop locals 1
particles_ShapeFactory_createParticle__P3185_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(149,9): particles.AreaFactory.createParticle
    ;
    .object particles_AreaFactory_createParticle__P3171 "game/particlefactories.ts(149,9): particles.AreaFactory.createParticle"
particles_AreaFactory_createParticle__P3171_pre:
    .section code
    .balign 4
particles_AreaFactory_createParticle__P3171_args:
    cmp r4, #2
    bge particles_AreaFactory_createParticle__P3171_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_AreaFactory_createParticle__P3171_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_260:
 .word _dbl26
.object POP
    .section code
particles_AreaFactory_createParticle__P3171:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_AreaFactory__C3165_validate_93
    mov lr, r7
particles_AreaFactory_createParticle__P3171_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_AreaFactory_createParticle__P3171_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_createParticle__P3161
_proccall1229:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl Math_FastRandom_randomRange__P3031
_proccall1230:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3031
_proccall1231:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1232:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #161
    bl _ifacecall1_get_8
_proccall1234:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_394      
.jmpz1233:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #161
    bl _ifacecall1_get_8
_proccall1235:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_394      
.condexprz_0_394:
    movs r0, #1
.condexprfin_1_394:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3031
_proccall1236:
    add sp, #4*3 ; pop locals 3
    ldr r1, [sp, #4*1] ; tmpref @1
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1237:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #8]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3171:
    @stackempty locals
.final_2_394:
    add sp, #4*1 ; pop locals 1
particles_AreaFactory_createParticle__P3171_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(24,5): Fx.iadd
    ;
    .object Fx_iadd__P158 "base/fixed.ts(24,5): Fx.iadd"
Fx_iadd__P158_pre:
    .section code
    .balign 4
    .section code
Fx_iadd__P158:
Fx_iadd__P158_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_iadd__P158_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@1]
    bl _numops_adds
.ret.158:
    @stackempty locals
.final_0_395:
Fx_iadd__P158_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(106,9): particles.SprayFactory.createParticle
    ;
    .object particles_SprayFactory_createParticle__P3161 "game/particlefactories.ts(106,9): particles.SprayFactory.createParticle"
particles_SprayFactory_createParticle__P3161_pre:
    .section code
    .balign 4
particles_SprayFactory_createParticle__P3161_args:
    cmp r4, #2
    bge particles_SprayFactory_createParticle__P3161_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_SprayFactory_createParticle__P3161_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_SprayFactory_createParticle__P3161:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3159_validate_88
    mov lr, r7
particles_SprayFactory_createParticle__P3161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_SprayFactory_createParticle__P3161_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleFactory_createParticle__P3157
_proccall1238:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r0, #132
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3031
_proccall1239:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #79
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall1240:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #5
    lsls r0, r0, #6
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall1241:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3100_validate_77
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3161:
    @stackempty locals
.final_0_396:
    add sp, #4*2 ; pop locals 2
particles_SprayFactory_createParticle__P3161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(318,9): music.Melody.toString
    ;
    .object music_Melody_toString__P1632 "mixer---nrf52/melody.ts(318,9): music.Melody.toString"
music_Melody_toString__P1632_pre:
    .section code
    .balign 4
music_Melody_toString__P1632_args:
    cmp r4, #1
    bge music_Melody_toString__P1632_nochk
    push {lr}
    bl _expand_args_1_10
    bl music_Melody_toString__P1632_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
music_Melody_toString__P1632:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_Melody__C1623_validate_87
    mov lr, r7
music_Melody_toString__P1632_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_Melody_toString__P1632_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.1632:
    @stackempty locals
.final_0_397:
music_Melody_toString__P1632_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(113,9): particles.ParticleSource.__draw
    ;
    .object particles_ParticleSource___draw__P3125 "game/particles.ts(113,9): particles.ParticleSource.__draw"
particles_ParticleSource___draw__P3125_pre:
    .section code
    .balign 4
particles_ParticleSource___draw__P3125_args:
    cmp r4, #2
    bge particles_ParticleSource___draw__P3125_nochk
    push {lr}
    bl _expand_args_2_17
    bl particles_ParticleSource___draw__P3125_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource___draw__P3125:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource___draw__P3125_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource___draw__P3125_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_398      
.jmpz1242:
    movs r0, #1
    b .condexprfin_1_398      
.condexprz_0_398:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1243:
    add sp, #4*1 ; pop locals 1
.condexprfin_1_398:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_398      
.jmpz1244:
    movs r0, #1
    b .condexprfin_3_398      
.condexprz_2_398:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1245:
    add sp, #4*1 ; pop locals 1
.condexprfin_3_398:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
.cont.13997:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.13997      
.jmpz1246:
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_gt
    beq .else_4_398      
.jmpz1247:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_drawParticle__P5157_nochk
_proccall1248:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_4_398:
.afterif_5_398:
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #24]
    str r0, [sp, locals@0]
    @stackempty locals
    b .cont.13997      
.brk.13997:
.ret.3125:
    @stackempty locals
    movs r0, #0
.final_6_398:
    add sp, #4*3 ; pop locals 3
particles_ParticleSource___draw__P3125_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(288,9): particles.ParticleSource.drawParticle
    ;
    .object particles_ParticleSource_drawParticle__P5157 "game/particles.ts(288,9): particles.ParticleSource.drawParticle"
particles_ParticleSource_drawParticle__P5157_pre:
    .section code
    .balign 4
particles_ParticleSource_drawParticle__P5157_args:
    cmp r4, #4
    bge particles_ParticleSource_drawParticle__P5157_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_ParticleSource_drawParticle__P5157_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_ParticleSource_drawParticle__P5157:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3119_validate_76
    mov lr, r7
particles_ParticleSource_drawParticle__P5157_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_drawParticle__P5157_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #4]
    ldr r1, [sp, args@2]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #8]
    ldr r1, [sp, args@3]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    movs r1, #40
    bl _classCall_particles_ParticleFactory__C3155_89
_proccall1249:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.5157:
    @stackempty locals
    movs r0, #0
.final_0_399:
particles_ParticleSource_drawParticle__P5157_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(86,9): particles.ParticleFactory.drawParticle
    ;
    .object particles_ParticleFactory_drawParticle__P3158 "game/particlefactories.ts(86,9): particles.ParticleFactory.drawParticle"
particles_ParticleFactory_drawParticle__P3158_pre:
    .section code
    .balign 4
particles_ParticleFactory_drawParticle__P3158_args:
    cmp r4, #4
    bge particles_ParticleFactory_drawParticle__P3158_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_ParticleFactory_drawParticle__P3158_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_ParticleFactory_drawParticle__P3158:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleFactory__C3155_validate_90
    mov lr, r7
particles_ParticleFactory_drawParticle__P3158_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleFactory_drawParticle__P3158_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1250:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1251:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3158:
    @stackempty locals
    movs r0, #0
.final_0_400:
particles_ParticleFactory_drawParticle__P3158_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(113,9): sprites.SpriteMap.toString
    ;
    .object sprites_SpriteMap_toString__P2427 "game/spritemap.ts(113,9): sprites.SpriteMap.toString"
sprites_SpriteMap_toString__P2427_pre:
    .section code
    .balign 4
sprites_SpriteMap_toString__P2427_args:
    cmp r4, #1
    bge sprites_SpriteMap_toString__P2427_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_SpriteMap_toString__P2427_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteMap_toString__P2427:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_toString__P2427_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteMap_toString__P2427_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_262 ; _str37      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r3, r0
    ldr r0, _ldlit_263 ; length_inline__P14052_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall1252:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_264 ; _str38      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.2427:
    @stackempty locals
.final_0_401:
sprites_SpriteMap_toString__P2427_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(114,75): length.inline
    ;
    .object length_inline__P14052 "game/spritemap.ts(114,75): length.inline"
length_inline__P14052_pre:
    .section code
    .balign 4
length_inline__P14052_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word length_inline__P14052_args@fn
length_inline__P14052_args:
    cmp r4, #1
    bge length_inline__P14052_nochk
    push {lr}
    bl _expand_args_1_10
    bl length_inline__P14052_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
length_inline__P14052:
length_inline__P14052_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
length_inline__P14052_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.14052:
    @stackempty locals
.final_0_402:
length_inline__P14052_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(655,5): ArcadePhysicsEngine.moveSprite
    ;
    .object ArcadePhysicsEngine_moveSprite__P2514 "game/physics.ts(655,5): ArcadePhysicsEngine.moveSprite"
ArcadePhysicsEngine_moveSprite__P2514_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_moveSprite__P2514_args:
    cmp r4, #4
    bge ArcadePhysicsEngine_moveSprite__P2514_nochk
    push {lr}
    bl _expand_args_4_74
    bl ArcadePhysicsEngine_moveSprite__P2514_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
ArcadePhysicsEngine_moveSprite__P2514:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_moveSprite__P2514_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_moveSprite__P2514_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    ldr r1, [sp, args@2]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2968
_proccall1253:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_403      
.jmpz1254:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_403      
.lazySkip_2_403:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2720
_proccall1255:
    add sp, #4*1 ; pop locals 1
.lazy_1_403:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1256
    b .else_0_403      
.jmpz1256:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1257:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1259:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_abs__P128
_proccall1260:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_403      
.jmpz1258:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_403      
.lazySkip_5_403:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1261:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_abs__P128
_proccall1262:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_4_403:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_403      
.jmpz1263:
    ldr r0, _ldlit_265 ; MovingSprite__C2498_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    ldr r0, [sp, #4*7] ; tmpref @1
    push {r0} ; proc-arg
    bl MovingSprite_constructor__P2499
_proccall1264:
    add sp, #4*8 ; pop locals 8
    pop {r0} ; tmpref @1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_tilemapCollisions__P4671_nochk
_proccall1265:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_6_403      
.else_3_403:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2731
_proccall1267:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_403      
.jmpz1266:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_403      
.lazySkip_9_403:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_canResolveClipping__P4673_nochk
_proccall1268:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_8_403:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_403      
.jmpz1269:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_10_403      
.else_7_403:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    ldr r1, _ldlit_266 ; -513      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_10_403:
.afterif_6_403:
.else_0_403:
.afterif_11_403:
.ret.2514:
    @stackempty locals
    movs r0, #0
.final_12_403:
    add sp, #4*3 ; pop locals 3
ArcadePhysicsEngine_moveSprite__P2514_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(689,5): ArcadePhysicsEngine.canResolveClipping
    ;
    .object ArcadePhysicsEngine_canResolveClipping__P4673 "game/physics.ts(689,5): ArcadePhysicsEngine.canResolveClipping"
ArcadePhysicsEngine_canResolveClipping__P4673_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_canResolveClipping__P4673_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_canResolveClipping__P4673_nochk
    push {lr}
    bl _expand_args_3_14
    bl ArcadePhysicsEngine_canResolveClipping__P4673_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
.object PUSH
.balign 4
_ldlit_262:
 .word _str37
_ldlit_263:
 .word length_inline__P14052_Lit
_ldlit_264:
 .word _str38
_ldlit_265:
 .word MovingSprite__C2498_VT
_ldlit_266:
 .word -513
.object POP
    .section code
ArcadePhysicsEngine_canResolveClipping__P4673:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_canResolveClipping__P4673_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_canResolveClipping__P4673_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_isStatic__P2368
_proccall1271:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_404      
.jmpz1270:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2314_96
_proccall1272:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_404:
.afterif_1_404:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_maxStep__P2506_nochk
_proccall1273:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191
_proccall1274:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1275:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193
_proccall1276:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1277:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192
_proccall1278:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1279:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194
_proccall1280:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1281:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@9]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_2_404      
.jmpz1282:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1283:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2731
_proccall1285:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_404      
.jmpz1284:
    movs r0, #66
    b .ret.4673      
    b .afterif_4_404      
.else_3_404:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@3]
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #16]
    @stackempty locals
.afterif_4_404:
.else_2_404:
.afterif_5_404:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@7]
    bl _numops_subs
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_6_404      
.jmpz1286:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1287:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2731
_proccall1289:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_404      
.jmpz1288:
    movs r0, #66
    b .ret.4673      
    b .afterif_8_404      
.else_7_404:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@3]
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #16]
    @stackempty locals
.afterif_8_404:
.else_6_404:
.afterif_9_404:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_10_404      
.jmpz1290:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1291:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2731
_proccall1293:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_404      
.jmpz1292:
    movs r0, #66
    b .ret.4673      
    b .afterif_12_404      
.else_11_404:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@4]
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #12]
    @stackempty locals
.afterif_12_404:
.else_10_404:
.afterif_13_404:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@5]
    bl _numops_subs
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@12]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_14_404      
.jmpz1294:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1295:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2731
_proccall1297:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_404      
.jmpz1296:
    movs r0, #66
    b .ret.4673      
    b .afterif_16_404      
.else_15_404:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@4]
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #12]
    @stackempty locals
.afterif_16_404:
.else_14_404:
.afterif_17_404:
    movs r0, #10
.ret.4673:
    @stackempty locals
.final_18_404:
    add sp, #4*13 ; pop locals 13
ArcadePhysicsEngine_canResolveClipping__P4673_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(34,9): game.Hitbox.bottom
    ;
    .object game_Hitbox_bottom__P2194 "game/hitbox.ts(34,9): game.Hitbox.bottom"
game_Hitbox_bottom__P2194_pre:
    .section code
    .balign 4
game_Hitbox_bottom__P2194_args:
    cmp r4, #1
    bge game_Hitbox_bottom__P2194_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_Hitbox_bottom__P2194_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_bottom__P2194:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2183_validate_36
    mov lr, r7
game_Hitbox_bottom__P2194_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_bottom__P2194_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192_nochk
_proccall1298:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.ret.2194:
    @stackempty locals
.final_0_405:
game_Hitbox_bottom__P2194_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(23,9): game.Hitbox.top
    ;
    .object game_Hitbox_top__P2192 "game/hitbox.ts(23,9): game.Hitbox.top"
game_Hitbox_top__P2192_pre:
    .section code
    .balign 4
game_Hitbox_top__P2192_args:
    cmp r4, #1
    bge game_Hitbox_top__P2192_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_Hitbox_top__P2192_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_top__P2192:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2183_validate_36
    mov lr, r7
game_Hitbox_top__P2192_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_top__P2192_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
.ret.2192:
    @stackempty locals
.final_0_406:
game_Hitbox_top__P2192_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(27,9): game.Hitbox.right
    ;
    .object game_Hitbox_right__P2193 "game/hitbox.ts(27,9): game.Hitbox.right"
game_Hitbox_right__P2193_pre:
    .section code
    .balign 4
game_Hitbox_right__P2193_args:
    cmp r4, #1
    bge game_Hitbox_right__P2193_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_Hitbox_right__P2193_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_right__P2193:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2183_validate_36
    mov lr, r7
game_Hitbox_right__P2193_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_right__P2193_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191_nochk
_proccall1299:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.ret.2193:
    @stackempty locals
.final_0_407:
game_Hitbox_right__P2193_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(19,9): game.Hitbox.left
    ;
    .object game_Hitbox_left__P2191 "game/hitbox.ts(19,9): game.Hitbox.left"
game_Hitbox_left__P2191_pre:
    .section code
    .balign 4
game_Hitbox_left__P2191_args:
    cmp r4, #1
    bge game_Hitbox_left__P2191_nochk
    push {lr}
    bl _expand_args_1_10
    bl game_Hitbox_left__P2191_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_left__P2191:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2183_validate_36
    mov lr, r7
game_Hitbox_left__P2191_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_left__P2191_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
.ret.2191:
    @stackempty locals
.final_0_408:
game_Hitbox_left__P2191_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(356,5): Sprite.isStatic
    ;
    .object Sprite_isStatic__P2368 "game/sprite.ts(356,5): Sprite.isStatic"
Sprite_isStatic__P2368_pre:
    .section code
    .balign 4
Sprite_isStatic__P2368_args:
    cmp r4, #1
    bge Sprite_isStatic__P2368_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_isStatic__P2368_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_isStatic__P2368:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_isStatic__P2368_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_isStatic__P2368_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::isStatic
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2368:
    @stackempty locals
.final_0_409:
Sprite_isStatic__P2368_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(535,9): tiles.TileMap.isOnWall
    ;
    .object tiles_TileMap_isOnWall__P2731 "game/tilemap.ts(535,9): tiles.TileMap.isOnWall"
tiles_TileMap_isOnWall__P2731_pre:
    .section code
    .balign 4
tiles_TileMap_isOnWall__P2731_args:
    cmp r4, #2
    bge tiles_TileMap_isOnWall__P2731_nochk
    push {lr}
    bl _expand_args_2_17
    bl tiles_TileMap_isOnWall__P2731_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_isOnWall__P2731:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_isOnWall__P2731_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMap_isOnWall__P2731_locals:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191
_proccall1300:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1301:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193
_proccall1302:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1303:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192
_proccall1304:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1305:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194
_proccall1306:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1307:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@1]
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.14365:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .brk.14365      
.jmpz1308:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.14370:
    ldr r0, [sp, locals@6]
    ldr r1, [sp, locals@4]
    bl _cmp_le
    beq .brk.14370      
.jmpz1309:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2729_nochk
_proccall1311:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_410      
.jmpz1310:
    movs r0, #66
    b .ret.2731      
.else_0_410:
.afterif_1_410:
.cont.14370:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    @stackempty locals
    b .fortop.14370      
.brk.14370:
.cont.14365:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    b .fortop.14365      
.brk.14365:
    movs r0, #10
.ret.2731:
    @stackempty locals
.final_2_410:
    add sp, #4*7 ; pop locals 7
tiles_TileMap_isOnWall__P2731_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(516,9): tiles.TileMap.isObstacle
    ;
    .object tiles_TileMap_isObstacle__P2729 "game/tilemap.ts(516,9): tiles.TileMap.isObstacle"
tiles_TileMap_isObstacle__P2729_pre:
    .section code
    .balign 4
tiles_TileMap_isObstacle__P2729_args:
    cmp r4, #3
    bge tiles_TileMap_isObstacle__P2729_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_isObstacle__P2729_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_isObstacle__P2729:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_isObstacle__P2729_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_isObstacle__P2729_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2720_nochk
_proccall1313:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_411      
.jmpz1312:
    movs r0, #10
    b .ret.2729      
.else_0_411:
.afterif_1_411:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_isOutsideMap__P2702
_proccall1315:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_411      
.jmpz1314:
    movs r0, #66
    b .ret.2729      
.else_2_411:
.afterif_3_411:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_isWall__P2701
_proccall1316:
    add sp, #4*3 ; pop locals 3
.ret.2729:
    @stackempty locals
.final_4_411:
tiles_TileMap_isObstacle__P2729_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(275,9): tiles.TileMapData.isWall
    ;
    .object tiles_TileMapData_isWall__P2701 "game/tilemap.ts(275,9): tiles.TileMapData.isWall"
tiles_TileMapData_isWall__P2701_pre:
    .section code
    .balign 4
tiles_TileMapData_isWall__P2701_args:
    cmp r4, #3
    bge tiles_TileMapData_isWall__P2701_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMapData_isWall__P2701_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMapData_isWall__P2701:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2690_validate_61
    mov lr, r7
tiles_TileMapData_isWall__P2701_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_isWall__P2701_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.ret.2701:
    @stackempty locals
.final_0_412:
tiles_TileMapData_isWall__P2701_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(279,9): tiles.TileMapData.isOutsideMap
    ;
    .object tiles_TileMapData_isOutsideMap__P2702 "game/tilemap.ts(279,9): tiles.TileMapData.isOutsideMap"
tiles_TileMapData_isOutsideMap__P2702_pre:
    .section code
    .balign 4
tiles_TileMapData_isOutsideMap__P2702_args:
    cmp r4, #3
    bge tiles_TileMapData_isOutsideMap__P2702_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMapData_isOutsideMap__P2702_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMapData_isOutsideMap__P2702:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2690_validate_61
    mov lr, r7
tiles_TileMapData_isOutsideMap__P2702_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_isOutsideMap__P2702_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_413      
.jmpz1317:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_413      
.lazySkip_1_413:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_0_413:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_413      
.jmpz1318:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_413      
.lazySkip_3_413:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_2_413:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_5_413      
.jmpz1319:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_413      
.lazySkip_5_413:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_4_413:
; jmp value (already in r0)
.ret.2702:
    @stackempty locals
.final_6_413:
tiles_TileMapData_isOutsideMap__P2702_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(380,5): ArcadePhysicsEngine.tilemapCollisions
    ;
    .object ArcadePhysicsEngine_tilemapCollisions__P4671 "game/physics.ts(380,5): ArcadePhysicsEngine.tilemapCollisions"
ArcadePhysicsEngine_tilemapCollisions__P4671_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapCollisions__P4671_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_tilemapCollisions__P4671_nochk
    push {lr}
    bl _expand_args_3_14
    bl ArcadePhysicsEngine_tilemapCollisions__P4671_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapCollisions__P4671:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_tilemapCollisions__P4671_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_tilemapCollisions__P4671_locals:
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_414      
.jmpz1320:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2731
_proccall1322:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_414      
.jmpz1321:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    ldr r1, _ldlit_268 ; -513      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_1_414:
.afterif_2_414:
.else_0_414:
.afterif_3_414:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_isStatic__P2368
_proccall1324:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_414      
.jmpz1323:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2314_96
_proccall1325:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_414:
.afterif_5_414:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    ldr r0, [r0, #4]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #72]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #76]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1326
    bb .else_6_414
.jmpz1326:
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _cmp_neqq
    bne .jmpz1327
    b .else_7_414      
.jmpz1327:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_414      
.jmpz1328:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193
_proccall1329:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    b .condexprfin_9_414      
.condexprz_8_414:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191
_proccall1330:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.condexprfin_9_414:
; jmp value (already in r0)
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1331:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192
_proccall1332:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    str r0, [sp, locals@9]
    @stackempty locals
.fortop.14511:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194
_proccall1334:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1335:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.14511      
.jmpz1333:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194
_proccall1336:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1337:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1338:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2729
_proccall1340:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_414      
.jmpz1339:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_getObstacle__P2730
_proccall1341:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@11]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_269 ; ArcadePhysicsEngine_tilemapCollisions_inline__P14543_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@11]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl helpers_arraySome__P107
_proccall1343:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_414      
.jmpz1342:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_11_414:
.afterif_12_414:
.else_10_414:
.afterif_13_414:
.cont.14511:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1344:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
    b .fortop.14511      
.brk.14511:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1345
    b .else_14_414      
.jmpz1345:
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_15_414      
.jmpz1346:
    movs r0, #5
    b .condexprfin_16_414      
.condexprz_15_414:
    movs r0, #1
.condexprfin_16_414:
; jmp value (already in r0)
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_17_414      
.jmpz1347:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1348:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    b .condexprfin_18_414      
.object PUSH
.balign 4
_ldlit_268:
 .word -513
_ldlit_269:
 .word ArcadePhysicsEngine_tilemapCollisions_inline__P14543_Lit
.object POP
.condexprz_17_414:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1349:
    add sp, #4*1 ; pop locals 1
.condexprfin_18_414:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #12]
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*2] ; tmpref @1
    pop {r1} ; tmpref @3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #12]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@14]
    movs r0, #1
    str r0, [sp, locals@15]
    @stackempty locals
.fortop.14589:
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.14589      
.jmpz1350:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@13]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_414      
.jmpz1351:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_registerObstacle__P2399
_proccall1352:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_19_414:
.afterif_20_414:
.cont.14589:
    ldr r0, [sp, locals@15]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@15]
    b .fortop.14589      
.brk.14589:
    movs r0, #0
    str r0, [sp, locals@14]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #33
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_21_414      
.jmpz1353:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_destroy__P2401
_proccall1354:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_22_414      
.else_21_414:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_25_414      
.jmpz1355:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_24_414      
.lazySkip_25_414:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_24_414:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1356
    b .else_23_414      
.jmpz1356:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #65
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1357
    b .else_26_414      
.jmpz1357:
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_29_414      
.jmpz1358:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_28_414      
.lazySkip_29_414:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2331
_proccall1359:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_28_414:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_31_414      
.jmpz1360:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_30_414      
.lazySkip_31_414:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_33_414      
.jmpz1361:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_32_414      
.lazySkip_33_414:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2331
_proccall1362:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_32_414:
; jmp value (already in r0)
.lazy_30_414:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_27_414      
.jmpz1363:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_27_414:
.afterif_34_414:
    b .afterif_35_414      
.else_26_414:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    @stackempty locals
.afterif_35_414:
    b .afterif_36_414      
.else_23_414:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1365:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1366:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1367:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1368:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_37_414      
.jmpz1364:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #16]
    @stackempty locals
.else_37_414:
.afterif_38_414:
.afterif_36_414:
.afterif_22_414:
.else_14_414:
.afterif_39_414:
.else_7_414:
.afterif_40_414:
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_neqq
    bne .jmpz1369
    b .else_41_414      
.jmpz1369:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_42_414      
.jmpz1370:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194
_proccall1371:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    b .condexprfin_43_414      
.condexprz_42_414:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192
_proccall1372:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.condexprfin_43_414:
; jmp value (already in r0)
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1373:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@17]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@18]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191
_proccall1374:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@19]
    @stackempty locals
.fortop.14699:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193
_proccall1376:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1377:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.14699      
.jmpz1375:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193
_proccall1378:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1379:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1380:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@20]
    @stackempty locals
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2729
_proccall1382:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_44_414      
.jmpz1381:
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_getObstacle__P2730
_proccall1383:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@21]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_271 ; ArcadePhysicsEngine_tilemapCollisions_inline__P14727_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@21]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    bl helpers_arraySome__P107
_proccall1385:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_45_414      
.jmpz1384:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@21]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_45_414:
.afterif_46_414:
.else_44_414:
.afterif_47_414:
.cont.14699:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1386:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@19]
    @stackempty locals
    b .fortop.14699      
.brk.14699:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1387
    b .else_48_414      
.jmpz1387:
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_49_414      
.jmpz1388:
    movs r0, #7
    b .condexprfin_50_414      
.condexprz_49_414:
    movs r0, #3
.condexprfin_50_414:
; jmp value (already in r0)
    str r0, [sp, locals@22]
    @stackempty locals
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_51_414      
.jmpz1389:
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1390:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    b .condexprfin_52_414      
.condexprz_51_414:
    ldr r0, [sp, locals@17]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1391:
    add sp, #4*1 ; pop locals 1
.condexprfin_52_414:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #16]
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*2] ; tmpref @1
    pop {r1} ; tmpref @3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@23]
    @stackempty locals
    ldr r0, [sp, locals@18]
    str r0, [sp, locals@24]
    movs r0, #1
    str r0, [sp, locals@25]
    @stackempty locals
.fortop.14773:
    ldr r0, [sp, locals@25]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@24]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.14773      
.jmpz1392:
    ldr r0, [sp, locals@24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@25]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@23]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_53_414      
.jmpz1393:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@23]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_registerObstacle__P2399
_proccall1394:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_53_414:
.afterif_54_414:
.cont.14773:
    ldr r0, [sp, locals@25]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@25]
    b .fortop.14773      
.brk.14773:
    movs r0, #0
    str r0, [sp, locals@24]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #33
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_55_414      
.jmpz1395:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_destroy__P2401
_proccall1396:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_56_414      
.else_55_414:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_59_414      
.jmpz1397:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_58_414      
.lazySkip_59_414:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_58_414:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1398
    b .else_57_414      
.jmpz1398:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #65
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1399
    b .else_60_414      
.jmpz1399:
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_63_414      
.jmpz1400:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_62_414      
.lazySkip_63_414:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2333
_proccall1401:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_62_414:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_65_414      
.jmpz1402:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_64_414      
.lazySkip_65_414:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@16]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_67_414      
.jmpz1403:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_66_414      
.object PUSH
.balign 4
_ldlit_271:
 .word ArcadePhysicsEngine_tilemapCollisions_inline__P14727_Lit
.object POP
.lazySkip_67_414:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2333
_proccall1404:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_66_414:
; jmp value (already in r0)
.lazy_64_414:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_61_414      
.jmpz1405:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #28]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_61_414:
.afterif_68_414:
    b .afterif_69_414      
.else_60_414:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    @stackempty locals
.afterif_69_414:
    b .afterif_70_414      
.else_57_414:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1407:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1408:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1409:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1410:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_71_414      
.jmpz1406:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #20]
    @stackempty locals
.else_71_414:
.afterif_72_414:
.afterif_70_414:
.afterif_56_414:
.else_48_414:
.afterif_73_414:
.else_41_414:
.afterif_74_414:
.else_6_414:
.afterif_75_414:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #12
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1411
    b .else_76_414      
.jmpz1411:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@26]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191
_proccall1412:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@27]
    @stackempty locals
.fortop.14868:
    ldr r0, [sp, locals@27]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193
_proccall1414:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1415:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1413
    b .brk.14868      
.jmpz1413:
    ldr r0, [sp, locals@27]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193
_proccall1416:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1417:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1418:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@28]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192
_proccall1419:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@29]
    @stackempty locals
.fortop.14887:
    ldr r0, [sp, locals@29]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194
_proccall1421:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1422:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1420
    b .brk.14887      
.jmpz1420:
    ldr r0, [sp, locals@29]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194
_proccall1423:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1424:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1425:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@30]
    @stackempty locals
    ldr r0, [sp, locals@30]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2729
_proccall1427:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_79_414      
.jmpz1426:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_78_414      
.lazySkip_79_414:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #16
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_78_414:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_77_414      
.jmpz1428:
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@30]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_getTile__P2722
_proccall1429:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_77_414:
.afterif_80_414:
.cont.14887:
    ldr r0, [sp, locals@29]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1430:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@29]
    @stackempty locals
    b .fortop.14887      
.brk.14887:
.cont.14868:
    ldr r0, [sp, locals@27]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1431:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@27]
    @stackempty locals
    b .fortop.14868      
.brk.14868:
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_81_414      
.jmpz1432:
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_tilemapOverlaps__P4672_nochk
_proccall1433:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_81_414:
.afterif_82_414:
.else_76_414:
.afterif_83_414:
.ret.4671:
    @stackempty locals
    movs r0, #0
.final_84_414:
    add sp, #4*31 ; pop locals 31
ArcadePhysicsEngine_tilemapCollisions__P4671_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(442,49): ArcadePhysicsEngine.tilemapCollisions.inline
    ;
    .object ArcadePhysicsEngine_tilemapCollisions_inline__P14543 "game/physics.ts(442,49): ArcadePhysicsEngine.tilemapCollisions.inline"
ArcadePhysicsEngine_tilemapCollisions_inline__P14543_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapCollisions_inline__P14543_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapCollisions_inline__P14543_args@fn
ArcadePhysicsEngine_tilemapCollisions_inline__P14543_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapCollisions_inline__P14543_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_tilemapCollisions_inline__P14543_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapCollisions_inline__P14543:
ArcadePhysicsEngine_tilemapCollisions_inline__P14543_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapCollisions_inline__P14543_locals:
    ldr r0, [sp, args@0]
    bl _inst_sprites_StaticObstacle__C2471_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    bl _inst_sprites_StaticObstacle__C2471_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.14543:
    @stackempty locals
.final_0_415:
ArcadePhysicsEngine_tilemapCollisions_inline__P14543_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(523,49): ArcadePhysicsEngine.tilemapCollisions.inline
    ;
    .object ArcadePhysicsEngine_tilemapCollisions_inline__P14727 "game/physics.ts(523,49): ArcadePhysicsEngine.tilemapCollisions.inline"
ArcadePhysicsEngine_tilemapCollisions_inline__P14727_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapCollisions_inline__P14727_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapCollisions_inline__P14727_args@fn
ArcadePhysicsEngine_tilemapCollisions_inline__P14727_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapCollisions_inline__P14727_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_tilemapCollisions_inline__P14727_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapCollisions_inline__P14727:
ArcadePhysicsEngine_tilemapCollisions_inline__P14727_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapCollisions_inline__P14727_locals:
    ldr r0, [sp, args@0]
    bl _inst_sprites_StaticObstacle__C2471_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    bl _inst_sprites_StaticObstacle__C2471_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.14727:
    @stackempty locals
.final_0_416:
ArcadePhysicsEngine_tilemapCollisions_inline__P14727_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(627,5): ArcadePhysicsEngine.tilemapOverlaps
    ;
    .object ArcadePhysicsEngine_tilemapOverlaps__P4672 "game/physics.ts(627,5): ArcadePhysicsEngine.tilemapOverlaps"
ArcadePhysicsEngine_tilemapOverlaps__P4672_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapOverlaps__P4672_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_tilemapOverlaps__P4672_nochk
    push {lr}
    bl _expand_args_3_14
    bl ArcadePhysicsEngine_tilemapOverlaps__P4672_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapOverlaps__P4672:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_tilemapOverlaps__P4672_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_tilemapOverlaps__P4672_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.14945:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1434
    b .brk.14945      
.jmpz1434:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    movs r0, #1
    ldr r1, _ldlit_273 ; ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arraySome__P107
_proccall1436:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_417      
.jmpz1435:
    b .cont.14945      
.else_0_417:
.afterif_1_417:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2968
_proccall1437:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #56]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_417      
.jmpz1438:
    movs r0, #2
    ldr r1, _ldlit_274 ; forEach_inline__P14973_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #2
    ldr r1, _ldlit_275 ; ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1439:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1440:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_417:
.afterif_3_417:
.cont.14945:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.14945      
.brk.14945:
    movs r0, #0
    str r0, [sp, locals@2]
.ret.4672:
    @stackempty locals
    movs r0, #0
.final_4_417:
    add sp, #4*5 ; pop locals 5
ArcadePhysicsEngine_tilemapOverlaps__P4672_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(631,37): ArcadePhysicsEngine.tilemapOverlaps.inline
    ;
    .object ArcadePhysicsEngine_tilemapOverlaps_inline__P14948 "game/physics.ts(631,37): ArcadePhysicsEngine.tilemapOverlaps.inline"
ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_args@fn
ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapOverlaps_inline__P14948:
ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_418      
.jmpz1441:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_418      
.lazySkip_1_418:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_0_418:
; jmp value (already in r0)
.ret.14948:
    @stackempty locals
.final_2_418:
ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(639,29): forEach.inline
    ;
    .object forEach_inline__P14973 "game/physics.ts(639,29): forEach.inline"
forEach_inline__P14973_pre:
    .section code
    .balign 4
forEach_inline__P14973_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P14973_args@fn
forEach_inline__P14973_args:
    cmp r4, #1
    bge forEach_inline__P14973_nochk
    push {lr}
    bl _expand_args_1_10
    bl forEach_inline__P14973_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P14973:
forEach_inline__P14973_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P14973_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_419      
.jmpz1442:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_419      
.lazySkip_1_419:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    bl tiles_getTileImage__P2741
_proccall1443:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_56
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::equals
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_0_419:
; jmp value (already in r0)
.ret.14973:
    @stackempty locals
.final_2_419:
forEach_inline__P14973_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(640,30): ArcadePhysicsEngine.tilemapOverlaps.inline
    ;
    .object ArcadePhysicsEngine_tilemapOverlaps_inline__P14990 "game/physics.ts(640,30): ArcadePhysicsEngine.tilemapOverlaps.inline"
ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_args@fn
ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapOverlaps_inline__P14990:
ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_locals:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #154
    bl _ifacecall3__40
_proccall1444:
    add sp, #4*3 ; pop locals 3
.ret.14990:
    @stackempty locals
    movs r0, #0
.final_0_420:
ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(674,5): tiles.getTileImage
    ;
    .object tiles_getTileImage__P2741 "game/tilemap.ts(674,5): tiles.getTileImage"
tiles_getTileImage__P2741_pre:
    .section code
    .balign 4
    .section code
tiles_getTileImage__P2741:
tiles_getTileImage__P2741_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
tiles_getTileImage__P2741_locals:
    bl game_currentScene__P2968
_proccall1445:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_421      
.jmpz1446:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_421      
.lazySkip_2_421:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_421:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_421      
.jmpz1447:
    ldr r0, _ldlit_276 ; _hexlit41      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    b .ret.2741      
.else_0_421:
.afterif_3_421:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileSet__P2677
_proccall1448:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl tiles_TileMap_getTileImage__P2732
_proccall1449:
    add sp, #4*2 ; pop locals 2
.ret.2741:
    @stackempty locals
.final_4_421:
    add sp, #4*1 ; pop locals 1
tiles_getTileImage__P2741_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(87,9): tiles.Location.tileSet
    ;
    .object tiles_Location_tileSet__P2677 "game/tilemap.ts(87,9): tiles.Location.tileSet"
tiles_Location_tileSet__P2677_pre:
    .section code
    .balign 4
tiles_Location_tileSet__P2677_args:
    cmp r4, #1
    bge tiles_Location_tileSet__P2677_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_Location_tileSet__P2677_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_tileSet__P2677:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2666_validate_99
    mov lr, r7
tiles_Location_tileSet__P2677_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_tileSet__P2677_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2668_nochk
_proccall1450:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl tiles_TileMap_getTileIndex__P2723
_proccall1451:
    add sp, #4*3 ; pop locals 3
.ret.2677:
    @stackempty locals
.final_0_422:
tiles_Location_tileSet__P2677_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_273:
 .word ArcadePhysicsEngine_tilemapOverlaps_inline__P14948_Lit
_ldlit_274:
 .word forEach_inline__P14973_Lit
_ldlit_275:
 .word ArcadePhysicsEngine_tilemapOverlaps_inline__P14990_Lit
_ldlit_276:
 .word _hexlit41
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(25,9): tiles.Location.tileMap
    ;
    .object tiles_Location_tileMap__P2668 "game/tilemap.ts(25,9): tiles.Location.tileMap"
tiles_Location_tileMap__P2668_pre:
    .section code
    .balign 4
tiles_Location_tileMap__P2668_args:
    cmp r4, #1
    bge tiles_Location_tileMap__P2668_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_Location_tileMap__P2668_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_tileMap__P2668:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2666_validate_99
    mov lr, r7
tiles_Location_tileMap__P2668_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_tileMap__P2668_locals:
    bl game_currentScene__P2968
_proccall1452:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
.ret.2668:
    @stackempty locals
.final_0_423:
tiles_Location_tileMap__P2668_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(385,9): tiles.TileMap.getTileIndex
    ;
    .object tiles_TileMap_getTileIndex__P2723 "game/tilemap.ts(385,9): tiles.TileMap.getTileIndex"
tiles_TileMap_getTileIndex__P2723_pre:
    .section code
    .balign 4
tiles_TileMap_getTileIndex__P2723_args:
    cmp r4, #3
    bge tiles_TileMap_getTileIndex__P2723_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_getTileIndex__P2723_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_getTileIndex__P2723:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_getTileIndex__P2723_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_getTileIndex__P2723_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTile__P2696
_proccall1453:
    add sp, #4*3 ; pop locals 3
.ret.2723:
    @stackempty locals
.final_0_424:
tiles_TileMap_getTileIndex__P2723_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(232,9): tiles.TileMapData.getTile
    ;
    .object tiles_TileMapData_getTile__P2696 "game/tilemap.ts(232,9): tiles.TileMapData.getTile"
tiles_TileMapData_getTile__P2696_pre:
    .section code
    .balign 4
tiles_TileMapData_getTile__P2696_args:
    cmp r4, #3
    bge tiles_TileMapData_getTile__P2696_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMapData_getTile__P2696_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMapData_getTile__P2696:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2690_validate_61
    mov lr, r7
tiles_TileMapData_getTile__P2696_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_getTile__P2696_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMapData_isOutsideMap__P2702_nochk
_proccall1455:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_425      
.jmpz1454:
    movs r0, #1
    b .ret.2696      
.else_0_425:
.afterif_1_425:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    mov r1, r0
    movs r0, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_100
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getUint8
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.2696:
    @stackempty locals
.final_2_425:
tiles_TileMapData_getTile__P2696_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(554,9): tiles.TileMap.getTileImage
    ;
    .object tiles_TileMap_getTileImage__P2732 "game/tilemap.ts(554,9): tiles.TileMap.getTileImage"
tiles_TileMap_getTileImage__P2732_pre:
    .section code
    .balign 4
tiles_TileMap_getTileImage__P2732_args:
    cmp r4, #2
    bge tiles_TileMap_getTileImage__P2732_nochk
    push {lr}
    bl _expand_args_2_17
    bl tiles_TileMap_getTileImage__P2732_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_getTileImage__P2732:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_getTileImage__P2732_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_getTileImage__P2732_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTileImage__P2699
_proccall1456:
    add sp, #4*2 ; pop locals 2
.ret.2732:
    @stackempty locals
.final_0_426:
tiles_TileMap_getTileImage__P2732_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(252,9): tiles.TileMapData.getTileImage
    ;
    .object tiles_TileMapData_getTileImage__P2699 "game/tilemap.ts(252,9): tiles.TileMapData.getTileImage"
tiles_TileMapData_getTileImage__P2699_pre:
    .section code
    .balign 4
tiles_TileMapData_getTileImage__P2699_args:
    cmp r4, #2
    bge tiles_TileMapData_getTileImage__P2699_nochk
    push {lr}
    bl _expand_args_2_17
    bl tiles_TileMapData_getTileImage__P2699_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMapData_getTileImage__P2699:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2690_validate_61
    mov lr, r7
tiles_TileMapData_getTileImage__P2699_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMapData_getTileImage__P2699_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_427      
.jmpz1457:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_427      
.jmpz1458:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_427      
.jmpz1459:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_427      
.lazySkip_4_427:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_3_427:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_427      
.jmpz1460:
    ldr r0, [sp, locals@2]
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_5_427      
.else_2_427:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_56
    movs r2, #0
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawImage
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_5_427:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_1_427:
.afterif_6_427:
.else_0_427:
.afterif_7_427:
    ldr r0, [sp, locals@1]
.ret.2699:
    @stackempty locals
.final_8_427:
    add sp, #4*3 ; pop locals 3
tiles_TileMapData_getTileImage__P2699_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(223,9): tiles.TileMapData.scale
    ;
    .object tiles_TileMapData_scale__P2694 "game/tilemap.ts(223,9): tiles.TileMapData.scale"
tiles_TileMapData_scale__P2694_pre:
    .section code
    .balign 4
tiles_TileMapData_scale__P2694_args:
    cmp r4, #1
    bge tiles_TileMapData_scale__P2694_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_TileMapData_scale__P2694_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMapData_scale__P2694:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2690_validate_61
    mov lr, r7
tiles_TileMapData_scale__P2694_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_scale__P2694_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.2694:
    @stackempty locals
.final_0_428:
tiles_TileMapData_scale__P2694_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(39,9): tiles.Location.row
    ;
    .object tiles_Location_row__P2670 "game/tilemap.ts(39,9): tiles.Location.row"
tiles_Location_row__P2670_pre:
    .section code
    .balign 4
tiles_Location_row__P2670_args:
    cmp r4, #1
    bge tiles_Location_row__P2670_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_Location_row__P2670_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_row__P2670:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2666_validate_99
    mov lr, r7
tiles_Location_row__P2670_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_row__P2670_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2670:
    @stackempty locals
.final_0_429:
tiles_Location_row__P2670_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(32,9): tiles.Location.column
    ;
    .object tiles_Location_column__P2669 "game/tilemap.ts(32,9): tiles.Location.column"
tiles_Location_column__P2669_pre:
    .section code
    .balign 4
tiles_Location_column__P2669_args:
    cmp r4, #1
    bge tiles_Location_column__P2669_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_Location_column__P2669_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_column__P2669:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2666_validate_99
    mov lr, r7
tiles_Location_column__P2669_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_column__P2669_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2669:
    @stackempty locals
.final_0_430:
tiles_Location_column__P2669_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(381,9): tiles.TileMap.getTile
    ;
    .object tiles_TileMap_getTile__P2722 "game/tilemap.ts(381,9): tiles.TileMap.getTile"
tiles_TileMap_getTile__P2722_pre:
    .section code
    .balign 4
tiles_TileMap_getTile__P2722_args:
    cmp r4, #3
    bge tiles_TileMap_getTile__P2722_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_getTile__P2722_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_getTile__P2722:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_getTile__P2722_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_getTile__P2722_locals:
    ldr r0, _ldlit_278 ; tiles_Location__C2666_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl tiles_Location_constructor__P2667
_proccall1461:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
.ret.2722:
    @stackempty locals
.final_0_431:
tiles_TileMap_getTile__P2722_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(20,9): tiles.Location.constructor
    ;
    .object tiles_Location_constructor__P2667 "game/tilemap.ts(20,9): tiles.Location.constructor"
tiles_Location_constructor__P2667_pre:
    .section code
    .balign 4
    .section code
tiles_Location_constructor__P2667:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2666_validate_99
    mov lr, r7
tiles_Location_constructor__P2667_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_constructor__P2667_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.2667:
    @stackempty locals
.final_0_432:
tiles_Location_constructor__P2667_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(548,5): Math.sign
    ;
    .object Math_sign__P129 "base/pxt-helpers.ts(548,5): Math.sign"
Math_sign__P129_pre:
    .section code
    .balign 4
    .section code
Math_sign__P129:
Math_sign__P129_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_sign__P129_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_eq
    beq .else_0_433      
.jmpz1462:
    movs r0, #1
    b .ret.129      
.else_0_433:
.afterif_1_433:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_gt
    beq .else_2_433      
.jmpz1463:
    movs r0, #3
    b .ret.129      
.else_2_433:
.afterif_3_433:
    movs r0, #1
    negs r0, r0
.ret.129:
    @stackempty locals
.final_4_433:
Math_sign__P129_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(816,5): Sprite.registerObstacle
    ;
    .object Sprite_registerObstacle__P2399 "game/sprite.ts(816,5): Sprite.registerObstacle"
Sprite_registerObstacle__P2399_pre:
    .section code
    .balign 4
Sprite_registerObstacle__P2399_args:
    cmp r4, #4
    bge Sprite_registerObstacle__P2399_nochk
    push {lr}
    bl _expand_args_4_74
    bl Sprite_registerObstacle__P2399_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
Sprite_registerObstacle__P2399:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_registerObstacle__P2399_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_registerObstacle__P2399_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    bl game_currentScene__P2968
_proccall1464:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #60]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #161
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall1465:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    bl game_currentScene__P2968
_proccall1466:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #64]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_434      
.jmpz1467:
    movs r0, #1
    ldr r1, _ldlit_279 ; forEach_inline__P15163_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #1
    ldr r1, _ldlit_280 ; Sprite_registerObstacle_inline__P15169_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1468:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1469:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_434:
.afterif_1_434:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1470
    b .else_2_434      
.jmpz1470:
    ldr r0, [sp, args@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_434      
.jmpz1471:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_434      
.lazySkip_4_434:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    bl game_currentScene__P2968
_proccall1472:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
.lazy_3_434:
; jmp value (already in r0)
    str r0, [sp, args@3]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_281 ; wallHandlersToRun_inline__P15182_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1473:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_434      
.jmpz1474:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #188
    bl _ifacecall1_get_8
_proccall1475:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #167
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall1476:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl tiles_TileMap_getTile__P2722
_proccall1477:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_282 ; Sprite_registerObstacle_inline__P15209_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1478:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_5_434:
.afterif_6_434:
.else_2_434:
.afterif_7_434:
.ret.2399:
    @stackempty locals
    movs r0, #0
.final_8_434:
    add sp, #4*4 ; pop locals 4
Sprite_registerObstacle__P2399_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(823,25): forEach.inline
    ;
    .object forEach_inline__P15163 "game/sprite.ts(823,25): forEach.inline"
forEach_inline__P15163_pre:
    .section code
    .balign 4
forEach_inline__P15163_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P15163_args@fn
forEach_inline__P15163_args:
    cmp r4, #1
    bge forEach_inline__P15163_nochk
    push {lr}
    bl _expand_args_1_10
    bl forEach_inline__P15163_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P15163:
forEach_inline__P15163_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P15163_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.15163:
    @stackempty locals
.final_0_435:
forEach_inline__P15163_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(824,26): Sprite.registerObstacle.inline
    ;
    .object Sprite_registerObstacle_inline__P15169 "game/sprite.ts(824,26): Sprite.registerObstacle.inline"
Sprite_registerObstacle_inline__P15169_pre:
    .section code
    .balign 4
Sprite_registerObstacle_inline__P15169_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word Sprite_registerObstacle_inline__P15169_args@fn
Sprite_registerObstacle_inline__P15169_args:
    cmp r4, #1
    bge Sprite_registerObstacle_inline__P15169_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_registerObstacle_inline__P15169_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_registerObstacle_inline__P15169:
Sprite_registerObstacle_inline__P15169_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_registerObstacle_inline__P15169_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #154
    bl _ifacecall2__27
_proccall1479:
    add sp, #4*2 ; pop locals 2
.ret.15169:
    @stackempty locals
    movs r0, #0
.final_0_436:
Sprite_registerObstacle_inline__P15169_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(829,25): wallHandlersToRun.inline
    ;
    .object wallHandlersToRun_inline__P15182 "game/sprite.ts(829,25): wallHandlersToRun.inline"
wallHandlersToRun_inline__P15182_pre:
    .section code
    .balign 4
wallHandlersToRun_inline__P15182_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word wallHandlersToRun_inline__P15182_args@fn
wallHandlersToRun_inline__P15182_args:
    cmp r4, #1
    bge wallHandlersToRun_inline__P15182_nochk
    push {lr}
    bl _expand_args_1_10
    bl wallHandlersToRun_inline__P15182_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
wallHandlersToRun_inline__P15182:
wallHandlersToRun_inline__P15182_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
wallHandlersToRun_inline__P15182_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.15182:
    @stackempty locals
.final_0_437:
wallHandlersToRun_inline__P15182_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_278:
 .word tiles_Location__C2666_VT
_ldlit_279:
 .word forEach_inline__P15163_Lit
_ldlit_280:
 .word Sprite_registerObstacle_inline__P15169_Lit
_ldlit_281:
 .word wallHandlersToRun_inline__P15182_Lit
_ldlit_282:
 .word Sprite_registerObstacle_inline__P15209_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(833,30): Sprite.registerObstacle.inline
    ;
    .object Sprite_registerObstacle_inline__P15209 "game/sprite.ts(833,30): Sprite.registerObstacle.inline"
Sprite_registerObstacle_inline__P15209_pre:
    .section code
    .balign 4
Sprite_registerObstacle_inline__P15209_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word Sprite_registerObstacle_inline__P15209_args@fn
Sprite_registerObstacle_inline__P15209_args:
    cmp r4, #1
    bge Sprite_registerObstacle_inline__P15209_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_registerObstacle_inline__P15209_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_registerObstacle_inline__P15209:
Sprite_registerObstacle_inline__P15209_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_registerObstacle_inline__P15209_locals:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #154
    bl _ifacecall3__40
_proccall1480:
    add sp, #4*3 ; pop locals 3
.ret.15209:
    @stackempty locals
    movs r0, #0
.final_0_438:
Sprite_registerObstacle_inline__P15209_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(239,5): helpers.arraySome
    ;
    .object helpers_arraySome__P107 "base/pxt-helpers.ts(239,5): helpers.arraySome"
helpers_arraySome__P107_pre:
    .section code
    .balign 4
    .section code
helpers_arraySome__P107:
helpers_arraySome__P107_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySome__P107_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.15221:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.15221      
.jmpz1481:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_439      
.jmpz1482:
    movs r0, #66
    b .ret.107      
.else_0_439:
.afterif_1_439:
.cont.15221:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.15221      
.brk.15221:
    movs r0, #10
.ret.107:
    @stackempty locals
.final_2_439:
    add sp, #4*2 ; pop locals 2
helpers_arraySome__P107_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(523,9): tiles.TileMap.getObstacle
    ;
    .object tiles_TileMap_getObstacle__P2730 "game/tilemap.ts(523,9): tiles.TileMap.getObstacle"
tiles_TileMap_getObstacle__P2730_pre:
    .section code
    .balign 4
tiles_TileMap_getObstacle__P2730_args:
    cmp r4, #3
    bge tiles_TileMap_getObstacle__P2730_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_getObstacle__P2730_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_getObstacle__P2730:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_getObstacle__P2730_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMap_getObstacle__P2730_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_isOutsideMap__P2702
_proccall1485:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_440      
.jmpz1484:
    movs r0, #1
    b .condexprfin_1_440      
.condexprz_0_440:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTile__P2696
_proccall1486:
    add sp, #4*3 ; pop locals 3
.condexprfin_1_440:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTileImage__P2699
_proccall1487:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, _ldlit_284 ; sprites_StaticObstacle__C2471_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    ldr r0, [sp, #4*5] ; tmpref @1
    push {r0} ; proc-arg
    bl sprites_StaticObstacle_constructor__P2477
_proccall1488:
    add sp, #4*6 ; pop locals 6
    pop {r0} ; tmpref @1
.ret.2730:
    @stackempty locals
.final_2_440:
    add sp, #4*2 ; pop locals 2
tiles_TileMap_getObstacle__P2730_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(342,9): tiles.TileMap.layer
    ;
    .object tiles_TileMap_layer__P2718 "game/tilemap.ts(342,9): tiles.TileMap.layer"
tiles_TileMap_layer__P2718_pre:
    .section code
    .balign 4
tiles_TileMap_layer__P2718_args:
    cmp r4, #1
    bge tiles_TileMap_layer__P2718_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_TileMap_layer__P2718_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_layer__P2718:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_layer__P2718_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_layer__P2718_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2718:
    @stackempty locals
.final_0_441:
tiles_TileMap_layer__P2718_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(29,9): sprites.StaticObstacle.constructor
    ;
    .object sprites_StaticObstacle_constructor__P2477 "game/obstacle.ts(29,9): sprites.StaticObstacle.constructor"
sprites_StaticObstacle_constructor__P2477_pre:
    .section code
    .balign 4
    .section code
sprites_StaticObstacle_constructor__P2477:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2471_validate_98
    mov lr, r7
sprites_StaticObstacle_constructor__P2477_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_constructor__P2477_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #0
.ret.2477:
    @stackempty locals
.final_0_442:
sprites_StaticObstacle_constructor__P2477_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(34,5): MovingSprite.constructor
    ;
    .object MovingSprite_constructor__P2499 "game/physics.ts(34,5): MovingSprite.constructor"
MovingSprite_constructor__P2499_pre:
    .section code
    .balign 4
    .section code
MovingSprite_constructor__P2499:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_MovingSprite__C2498_validate_97
    mov lr, r7
MovingSprite_constructor__P2499_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
MovingSprite_constructor__P2499_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@6]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@7]
    str r1, [r0, #28]
    movs r0, #0
.ret.2499:
    @stackempty locals
.final_0_443:
MovingSprite_constructor__P2499_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(113,5): ArcadePhysicsEngine.move
    ;
    .object ArcadePhysicsEngine_move__P2512 "game/physics.ts(113,5): ArcadePhysicsEngine.move"
ArcadePhysicsEngine_move__P2512_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_move__P2512_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_move__P2512_nochk
    push {lr}
    bl _expand_args_2_17
    bl ArcadePhysicsEngine_move__P2512_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_move__P2512:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_move__P2512_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_move__P2512_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r0, #201
    push {r0} ; proc-arg
    bl Math_min__P131
_proccall1489:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_45
    movs r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    bl game_currentScene__P2968
_proccall1490:
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_285 ; movingSprites_inline__P15309_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayMap__P106
_proccall1491:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_286 ; ArcadePhysicsEngine_move_inline__P15321_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1492:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl sprites_SpriteMap_clear__P2425
_proccall1493:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl sprites_SpriteMap_resizeBuckets__P2424
_proccall1494:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_div__P162
_proccall1495:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1496:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1497:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1498:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #48]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySlice__P115
_proccall1499:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@9]
    @stackempty locals
.fortop.15363:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_444      
.jmpz1500:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_444      
.lazySkip_1_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.lazy_0_444:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1501
    b .brk.15363      
.object PUSH
.balign 4
_ldlit_284:
 .word sprites_StaticObstacle__C2471_VT
_ldlit_285:
 .word movingSprites_inline__P15309_Lit
_ldlit_286:
 .word ArcadePhysicsEngine_move_inline__P15321_Lit
.object POP
.jmpz1501:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_eors
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@11]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@10]
    str r0, [sp, locals@13]
    movs r0, #1
    str r0, [sp, locals@14]
    @stackempty locals
.fortop.15386:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1502
    b .brk.15386      
.jmpz1502:
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #4]
    str r0, [sp, locals@15]
    @stackempty locals
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    bne .jmpz1503
    b .else_2_444      
.jmpz1503:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_eq
    beq .else_3_444      
.jmpz1504:
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #16]
    @stackempty locals
    b .afterif_4_444      
.else_3_444:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_7_444      
.jmpz1505:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_444      
.lazySkip_7_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_6_444:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_9_444      
.jmpz1506:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_444      
.lazySkip_9_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_11_444      
.jmpz1507:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_444      
.lazySkip_11_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_10_444:
; jmp value (already in r0)
.lazy_8_444:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_444      
.jmpz1508:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_5_444:
.afterif_12_444:
.afterif_4_444:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_444:
.afterif_13_444:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    bne .jmpz1509
    b .else_14_444      
.jmpz1509:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    movs r1, #1
    bl _cmp_eq
    beq .else_15_444      
.jmpz1510:
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #20]
    @stackempty locals
    b .afterif_16_444      
.else_15_444:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_19_444      
.jmpz1511:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_18_444      
.lazySkip_19_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_18_444:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_21_444      
.jmpz1512:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_20_444      
.lazySkip_21_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_23_444      
.jmpz1513:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_22_444      
.lazySkip_23_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_22_444:
; jmp value (already in r0)
.lazy_20_444:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_17_444      
.jmpz1514:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #28]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_17_444:
.afterif_24_444:
.afterif_16_444:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_14_444:
.afterif_25_444:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1516:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1517:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .condexprz_26_444      
.jmpz1515:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #16]
    b .condexprfin_27_444      
.condexprz_26_444:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #24]
.condexprfin_27_444:
; jmp value (already in r0)
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #28]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1519:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1520:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .condexprz_28_444      
.jmpz1518:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #20]
    b .condexprfin_29_444      
.condexprz_28_444:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #28]
.condexprfin_29_444:
; jmp value (already in r0)
    str r0, [sp, locals@17]
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@16]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@17]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2498_validate_97
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    ldr r1, [sp, locals@16]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@17]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_30_444      
.jmpz1521:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteMap_insertAABB__P2426
_proccall1522:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_30_444:
.afterif_31_444:
    ldr r0, [sp, locals@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_34_444      
.jmpz1523:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_33_444      
.lazySkip_34_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2720
_proccall1524:
    add sp, #4*1 ; pop locals 1
.lazy_33_444:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_32_444      
.jmpz1525:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_tilemapCollisions__P4671_nochk
_proccall1526:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_32_444:
.afterif_35_444:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #65
    bl _numops_ands
    str r0, [sp, locals@18]
    @stackempty locals
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #17
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_38_444      
.jmpz1527:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_37_444      
.lazySkip_38_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@18]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_40_444      
.jmpz1528:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_39_444      
.lazySkip_40_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_39_444:
; jmp value (already in r0)
.lazy_37_444:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_36_444      
.jmpz1529:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl ArcadePhysicsEngine_screenEdgeCollisions__P4670_nochk
_proccall1530:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_36_444:
.afterif_41_444:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1532:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_44_444      
.jmpz1531:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_43_444      
.lazySkip_44_444:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1533:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_43_444:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_42_444      
.jmpz1534:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_42_444:
.afterif_45_444:
.cont.15386:
    ldr r0, [sp, locals@14]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@14]
    b .fortop.15386      
.brk.15386:
    movs r0, #0
    str r0, [sp, locals@13]
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_spriteCollisions__P4669_nochk
_proccall1535:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.15588:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.15588      
.jmpz1536:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.15588      
.brk.15588:
.cont.15363:
    ldr r0, [sp, locals@9]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    b .fortop.15363      
.brk.15363:
.ret.2512:
    @stackempty locals
    movs r0, #0
.final_46_444:
    add sp, #4*19 ; pop locals 19
ArcadePhysicsEngine_move__P2512_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(122,18): movingSprites.inline
    ;
    .object movingSprites_inline__P15309 "game/physics.ts(122,18): movingSprites.inline"
movingSprites_inline__P15309_pre:
    .section code
    .balign 4
movingSprites_inline__P15309_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word movingSprites_inline__P15309_args@fn
movingSprites_inline__P15309_args:
    cmp r4, #1
    bge movingSprites_inline__P15309_nochk
    push {lr}
    bl _expand_args_1_10
    bl movingSprites_inline__P15309_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
movingSprites_inline__P15309:
movingSprites_inline__P15309_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
movingSprites_inline__P15309_locals:
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_createMovingSprite__P4668_nochk
_proccall1537:
    add sp, #4*4 ; pop locals 4
.ret.15309:
    @stackempty locals
.final_0_445:
movingSprites_inline__P15309_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(125,30): ArcadePhysicsEngine.move.inline
    ;
    .object ArcadePhysicsEngine_move_inline__P15321 "game/physics.ts(125,30): ArcadePhysicsEngine.move.inline"
ArcadePhysicsEngine_move_inline__P15321_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_move_inline__P15321_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_move_inline__P15321_args@fn
ArcadePhysicsEngine_move_inline__P15321_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_move_inline__P15321_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_move_inline__P15321_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_move_inline__P15321:
ArcadePhysicsEngine_move_inline__P15321_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_move_inline__P15321_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2331
_proccall1539:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_446      
.jmpz1538:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_446      
.lazySkip_2_446:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2333
_proccall1540:
    add sp, #4*1 ; pop locals 1
.lazy_1_446:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_446      
.jmpz1541:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_clearObstacles__P2398
_proccall1542:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_446:
.afterif_3_446:
.ret.15321:
    @stackempty locals
    movs r0, #0
.final_4_446:
ArcadePhysicsEngine_move_inline__P15321_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(310,5): ArcadePhysicsEngine.spriteCollisions
    ;
    .object ArcadePhysicsEngine_spriteCollisions__P4669 "game/physics.ts(310,5): ArcadePhysicsEngine.spriteCollisions"
ArcadePhysicsEngine_spriteCollisions__P4669_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_spriteCollisions__P4669_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_spriteCollisions__P4669_nochk
    push {lr}
    bl _expand_args_3_14
    bl ArcadePhysicsEngine_spriteCollisions__P4669_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
ArcadePhysicsEngine_spriteCollisions__P4669:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_spriteCollisions__P4669_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_spriteCollisions__P4669_locals:
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_447      
.jmpz1543:
    b .ret.4669      
.else_0_447:
.afterif_1_447:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.15607:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1544
    b .brk.15607      
.jmpz1544:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #4]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_447      
.jmpz1545:
    b .cont.15607      
.else_2_447:
.afterif_3_447:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl sprites_SpriteMap_overlaps__P2422
_proccall1546:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@4]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.15624:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1547
    b .brk.15624      
.jmpz1547:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@5]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_447      
.jmpz1548:
    b .cont.15624      
.else_4_447:
.afterif_5_447:
    ldr r0, [sp, locals@3]
    ldr r0, [r0, #64]
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@5]
    ldr r0, [r0, #64]
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@3]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #112]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    negs r1, r1
    bl _cmp_eqq
    beq .else_6_447      
.jmpz1549:
    b .cont.15624      
.else_6_447:
.afterif_7_447:
    ldr r0, [sp, locals@3]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .condexprz_8_447      
.jmpz1550:
    ldr r0, [sp, locals@3]
    b .condexprfin_9_447      
.condexprz_8_447:
    ldr r0, [sp, locals@5]
.condexprfin_9_447:
; jmp value (already in r0)
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    ldr r1, [sp, locals@3]
    bl _cmp_eqq
    beq .condexprz_10_447      
.jmpz1551:
    ldr r0, [sp, locals@5]
    b .condexprfin_11_447      
.condexprz_10_447:
    ldr r0, [sp, locals@3]
.condexprfin_11_447:
; jmp value (already in r0)
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@10]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    negs r1, r1
    bl _cmp_eqq
    beq .else_12_447      
.jmpz1552:
    movs r0, #2
    ldr r1, _ldlit_288 ; forEach_inline__P15671_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@9]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #5
    ldr r1, _ldlit_289 ; ArcadePhysicsEngine_spriteCollisions_inline__P15695_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #1
    ldr r2, [sp, locals@11]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #2
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #3
    ldr r2, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #4
    ldr r2, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1553:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1554:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_12_447:
.afterif_13_447:
.cont.15624:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.15624      
.brk.15624:
    movs r0, #0
    str r0, [sp, locals@6]
.cont.15607:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.15607      
.brk.15607:
    movs r0, #0
    str r0, [sp, locals@1]
.ret.4669:
    @stackempty locals
    movs r0, #0
.final_14_447:
    add sp, #4*12 ; pop locals 12
ArcadePhysicsEngine_spriteCollisions__P4669_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(336,33): forEach.inline
    ;
    .object forEach_inline__P15671 "game/physics.ts(336,33): forEach.inline"
forEach_inline__P15671_pre:
    .section code
    .balign 4
forEach_inline__P15671_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P15671_args@fn
forEach_inline__P15671_args:
    cmp r4, #1
    bge forEach_inline__P15671_nochk
    push {lr}
    bl _expand_args_1_10
    bl forEach_inline__P15671_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P15671:
forEach_inline__P15671_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P15671_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_448      
.jmpz1555:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_448      
.lazySkip_1_448:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_0_448:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_448      
.jmpz1556:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_448      
.lazySkip_3_448:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_448      
.jmpz1557:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_448      
.lazySkip_5_448:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_4_448:
; jmp value (already in r0)
.lazy_2_448:
; jmp value (already in r0)
.ret.15671:
    @stackempty locals
.final_6_448:
forEach_inline__P15671_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(339,34): ArcadePhysicsEngine.spriteCollisions.inline
    ;
    .object ArcadePhysicsEngine_spriteCollisions_inline__P15695 "game/physics.ts(339,34): ArcadePhysicsEngine.spriteCollisions.inline"
ArcadePhysicsEngine_spriteCollisions_inline__P15695_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_spriteCollisions_inline__P15695_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_spriteCollisions_inline__P15695_args@fn
ArcadePhysicsEngine_spriteCollisions_inline__P15695_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_spriteCollisions_inline__P15695_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_spriteCollisions_inline__P15695_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_spriteCollisions_inline__P15695:
ArcadePhysicsEngine_spriteCollisions_inline__P15695_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_spriteCollisions_inline__P15695_locals:
    ldr r0, [r5, #4*3]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #108]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #6
    ldr r1, _ldlit_290 ; ArcadePhysicsEngine_spriteCollisions_inline__P15705_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [r5, #4*6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [r5, #4*7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #5
    ldr r2, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.15695:
    @stackempty locals
    movs r0, #0
.final_0_449:
ArcadePhysicsEngine_spriteCollisions_inline__P15695_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(341,51): ArcadePhysicsEngine.spriteCollisions.inline
    ;
    .object ArcadePhysicsEngine_spriteCollisions_inline__P15705 "game/physics.ts(341,51): ArcadePhysicsEngine.spriteCollisions.inline"
ArcadePhysicsEngine_spriteCollisions_inline__P15705_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_spriteCollisions_inline__P15705_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_spriteCollisions_inline__P15705_args@fn
ArcadePhysicsEngine_spriteCollisions_inline__P15705_args:
    .section code
ArcadePhysicsEngine_spriteCollisions_inline__P15705:
ArcadePhysicsEngine_spriteCollisions_inline__P15705_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_spriteCollisions_inline__P15705_locals:
    ldr r0, [r5, #4*3]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_orrs
    add sp, #4*2 ; pop locals 2
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_450      
.jmpz1558:
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .condexprz_1_450      
.jmpz1559:
    ldr r0, [r5, #4*3]
    b .condexprfin_2_450      
.condexprz_1_450:
    ldr r0, [r5, #4*4]
.condexprfin_2_450:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    bl _inst_scene_SpriteHandler__C2785_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .condexprz_3_450      
.jmpz1560:
    ldr r0, [r5, #4*4]
    b .condexprfin_4_450      
.condexprz_3_450:
    ldr r0, [r5, #4*3]
.condexprfin_4_450:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    movs r1, #154
    bl _ifacecall3__40
_proccall1561:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_5_450      
.object PUSH
.balign 4
_ldlit_288:
 .word forEach_inline__P15671_Lit
_ldlit_289:
 .word ArcadePhysicsEngine_spriteCollisions_inline__P15695_Lit
_ldlit_290:
 .word ArcadePhysicsEngine_spriteCollisions_inline__P15705_Lit
.object POP
.else_0_450:
.afterif_5_450:
    ldr r0, [r5, #4*7]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #108]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*8]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.ret.15705:
    @stackempty locals
    movs r0, #0
.final_6_450:
ArcadePhysicsEngine_spriteCollisions_inline__P15705_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(31,9): sprites.SpriteMap.overlaps
    ;
    .object sprites_SpriteMap_overlaps__P2422 "game/spritemap.ts(31,9): sprites.SpriteMap.overlaps"
sprites_SpriteMap_overlaps__P2422_pre:
    .section code
    .balign 4
sprites_SpriteMap_overlaps__P2422_args:
    cmp r4, #2
    bge sprites_SpriteMap_overlaps__P2422_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_SpriteMap_overlaps__P2422_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_overlaps__P2422:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_overlaps__P2422_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_overlaps__P2422_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_neighbors__P2421_nochk
_proccall1562:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_292 ; o_inline__P15743_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1563:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
.ret.2422:
    @stackempty locals
.final_0_451:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_overlaps__P2422_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(33,32): o.inline
    ;
    .object o_inline__P15743 "game/spritemap.ts(33,32): o.inline"
o_inline__P15743_pre:
    .section code
    .balign 4
o_inline__P15743_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word o_inline__P15743_args@fn
o_inline__P15743_args:
    cmp r4, #1
    bge o_inline__P15743_nochk
    push {lr}
    bl _expand_args_1_10
    bl o_inline__P15743_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
o_inline__P15743:
o_inline__P15743_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
o_inline__P15743_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl Sprite_overlapsWith__P2393
_proccall1564:
    add sp, #4*2 ; pop locals 2
.ret.15743:
    @stackempty locals
.final_0_452:
o_inline__P15743_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(690,5): Sprite.overlapsWith
    ;
    .object Sprite_overlapsWith__P2393 "game/sprite.ts(690,5): Sprite.overlapsWith"
Sprite_overlapsWith__P2393_pre:
    .section code
    .balign 4
Sprite_overlapsWith__P2393_args:
    cmp r4, #2
    bge Sprite_overlapsWith__P2393_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_overlapsWith__P2393_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_overlapsWith__P2393:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_overlapsWith__P2393_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_overlapsWith__P2393_locals:
    @stackempty locals
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@0]
    bl _cmp_eq
    beq .else_0_453      
.jmpz1565:
    movs r0, #10
    b .ret.2393      
.else_0_453:
.afterif_1_453:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_453      
.jmpz1566:
    movs r0, #10
    b .ret.2393      
.else_2_453:
.afterif_3_453:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_453      
.jmpz1567:
    movs r0, #10
    b .ret.2393      
.else_4_453:
.afterif_5_453:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl game_Hitbox_overlapsWith__P2198
_proccall1569:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_453      
.jmpz1568:
    movs r0, #10
    b .ret.2393      
.else_6_453:
.afterif_7_453:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isScaled__P4624_nochk
_proccall1571:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_453      
.jmpz1570:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_453      
.lazySkip_10_453:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_isScaled__P4624
_proccall1572:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_9_453:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_453      
.jmpz1573:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2372_nochk
_proccall1574:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2372
_proccall1575:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2376_nochk
_proccall1576:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2376
_proccall1577:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::overlapsWith
    add sp, #4*4 ; pop locals 4
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    b .ret.2393      
    b .afterif_11_453      
.else_8_453:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2343_nochk
_proccall1579:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_14_453      
.jmpz1578:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_453      
.lazySkip_14_453:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2345_nochk
_proccall1580:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_13_453:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_16_453      
.jmpz1581:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_15_453      
.lazySkip_16_453:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sx__P2343
_proccall1582:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_15_453:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_18_453      
.jmpz1583:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_17_453      
.lazySkip_18_453:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sy__P2345
_proccall1584:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_17_453:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_453      
.jmpz1585:
    movs r0, #10
    b .ret.2393      
    b .afterif_19_453      
.object PUSH
.balign 4
_ldlit_292:
 .word o_inline__P15743_Lit
.object POP
.else_12_453:
.afterif_19_453:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2343_nochk
_proccall1587:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2345_nochk
_proccall1588:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sx__P2343
_proccall1589:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sy__P2345
_proccall1590:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .else_20_453      
.jmpz1586:
    ldr r0, [sp, args@0]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_21_453      
.else_20_453:
    ldr r0, [sp, args@1]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_21_453:
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2372
_proccall1591:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2372
_proccall1592:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2343
_proccall1593:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2376
_proccall1594:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2376
_proccall1595:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2345
_proccall1596:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_width__P2370
_proccall1597:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2343
_proccall1598:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_height__P2371
_proccall1599:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2345
_proccall1600:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    ldr r0, [sp, #4*12] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*13] ; estack
    ldr r0, [sp, #4*14] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*15] ; estack
    ldr r0, [sp, #4*16] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*17] ; estack
    ldr r0, [sp, #4*18] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*19] ; estack
    bl helpers_imageBlit__P1932
_proccall1601:
    add sp, #4*20 ; pop locals 20
    b .ret.2393      
.afterif_11_453:
    movs r0, #0
.ret.2393:
    @stackempty locals
.final_22_453:
    add sp, #4*2 ; pop locals 2
Sprite_overlapsWith__P2393_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(137,5): helpers.imageBlit
    ;
    .object helpers_imageBlit__P1932 "screen---st7735/image.ts(137,5): helpers.imageBlit"
helpers_imageBlit__P1932_pre:
    .section code
    .balign 4
    .section code
helpers_imageBlit__P1932:
helpers_imageBlit__P1932_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageBlit__P1932_locals:
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_454      
.jmpz1602:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_454      
.lazySkip_1_454:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
.lazy_0_454:
; jmp value (already in r0)
    movs r1, #85
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #3
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #5
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #7
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #9
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@7]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #11
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@8]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #13
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@9]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #15
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@10]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_454      
.jmpz1603:
    movs r0, #3
    b .condexprfin_3_454      
.condexprz_2_454:
    movs r0, #1
.condexprfin_3_454:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #17
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@11]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_454      
.jmpz1604:
    movs r0, #3
    b .condexprfin_5_454      
.condexprz_4_454:
    movs r0, #1
.condexprfin_5_454:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #19
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_101
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_blit
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.1932:
    @stackempty locals
.final_6_454:
helpers_imageBlit__P1932_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(370,5): Sprite.isScaled
    ;
    .object Sprite_isScaled__P4624 "game/sprite.ts(370,5): Sprite.isScaled"
Sprite_isScaled__P4624_pre:
    .section code
    .balign 4
Sprite_isScaled__P4624_args:
    cmp r4, #1
    bge Sprite_isScaled__P4624_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_isScaled__P4624_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_isScaled__P4624:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_isScaled__P4624_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_isScaled__P4624_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_455      
.jmpz1605:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_455      
.lazySkip_1_455:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.lazy_0_455:
; jmp value (already in r0)
.ret.4624:
    @stackempty locals
.final_2_455:
Sprite_isScaled__P4624_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(88,9): game.Hitbox.overlapsWith
    ;
    .object game_Hitbox_overlapsWith__P2198 "game/hitbox.ts(88,9): game.Hitbox.overlapsWith"
game_Hitbox_overlapsWith__P2198_pre:
    .section code
    .balign 4
game_Hitbox_overlapsWith__P2198_args:
    cmp r4, #2
    bge game_Hitbox_overlapsWith__P2198_nochk
    push {lr}
    bl _expand_args_2_17
    bl game_Hitbox_overlapsWith__P2198_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
game_Hitbox_overlapsWith__P2198:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2183_validate_36
    mov lr, r7
game_Hitbox_overlapsWith__P2198_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_overlapsWith__P2198_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_updateIfInvalid__P2197_nochk
_proccall1606:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_updateIfInvalid__P2197
_proccall1607:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191
_proccall1609:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192
_proccall1610:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2196_nochk
_proccall1611:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_456      
.jmpz1608:
    movs r0, #66
    b .ret.2198      
.else_0_456:
.afterif_1_456:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191
_proccall1613:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194
_proccall1614:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2196_nochk
_proccall1615:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_456      
.jmpz1612:
    movs r0, #66
    b .ret.2198      
.else_2_456:
.afterif_3_456:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193
_proccall1617:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192
_proccall1618:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2196_nochk
_proccall1619:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_456      
.jmpz1616:
    movs r0, #66
    b .ret.2198      
.else_4_456:
.afterif_5_456:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193
_proccall1621:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194
_proccall1622:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2196_nochk
_proccall1623:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_456      
.jmpz1620:
    movs r0, #66
    b .ret.2198      
.else_6_456:
.afterif_7_456:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191_nochk
_proccall1625:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192_nochk
_proccall1626:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2196
_proccall1627:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_456      
.jmpz1624:
    movs r0, #66
    b .ret.2198      
.else_8_456:
.afterif_9_456:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191_nochk
_proccall1629:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194_nochk
_proccall1630:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2196
_proccall1631:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_456      
.jmpz1628:
    movs r0, #66
    b .ret.2198      
.else_10_456:
.afterif_11_456:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193_nochk
_proccall1633:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192_nochk
_proccall1634:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2196
_proccall1635:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_456      
.jmpz1632:
    movs r0, #66
    b .ret.2198      
.else_12_456:
.afterif_13_456:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193_nochk
_proccall1637:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194_nochk
_proccall1638:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2196
_proccall1639:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_456      
.jmpz1636:
    movs r0, #66
    b .ret.2198      
.else_14_456:
.afterif_15_456:
    movs r0, #10
.ret.2198:
    @stackempty locals
.final_16_456:
game_Hitbox_overlapsWith__P2198_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(45,9): game.Hitbox.contains
    ;
    .object game_Hitbox_contains__P2196 "game/hitbox.ts(45,9): game.Hitbox.contains"
game_Hitbox_contains__P2196_pre:
    .section code
    .balign 4
game_Hitbox_contains__P2196_args:
    cmp r4, #3
    bge game_Hitbox_contains__P2196_nochk
    push {lr}
    bl _expand_args_3_14
    bl game_Hitbox_contains__P2196_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
game_Hitbox_contains__P2196:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2183_validate_36
    mov lr, r7
game_Hitbox_contains__P2196_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_contains__P2196_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2191_nochk
_proccall1641:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_457      
.jmpz1640:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_457      
.lazySkip_1_457:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2193_nochk
_proccall1642:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_0_457:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_457      
.jmpz1643:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_457      
.lazySkip_3_457:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2192_nochk
_proccall1644:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_2_457:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_457      
.jmpz1645:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_457      
.lazySkip_5_457:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2194_nochk
_proccall1646:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_4_457:
; jmp value (already in r0)
.ret.2196:
    @stackempty locals
.final_6_457:
game_Hitbox_contains__P2196_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(16,9): sprites.SpriteMap.neighbors
    ;
    .object sprites_SpriteMap_neighbors__P2421 "game/spritemap.ts(16,9): sprites.SpriteMap.neighbors"
sprites_SpriteMap_neighbors__P2421_pre:
    .section code
    .balign 4
sprites_SpriteMap_neighbors__P2421_args:
    cmp r4, #2
    bge sprites_SpriteMap_neighbors__P2421_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_SpriteMap_neighbors__P2421_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_neighbors__P2421:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_neighbors__P2421_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_neighbors__P2421_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #68]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2372
_proccall1647:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2376
_proccall1648:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4633_nochk
_proccall1649:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2372
_proccall1650:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_bottom__P2378
_proccall1651:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4633_nochk
_proccall1652:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_right__P2374
_proccall1653:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2376
_proccall1654:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4633_nochk
_proccall1655:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_right__P2374
_proccall1656:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_bottom__P2378
_proccall1657:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4633_nochk
_proccall1658:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2421:
    @stackempty locals
.final_0_458:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_neighbors__P2421_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(406,5): Sprite.right
    ;
    .object Sprite_right__P2374 "game/sprite.ts(406,5): Sprite.right"
Sprite_right__P2374_pre:
    .section code
    .balign 4
Sprite_right__P2374_args:
    cmp r4, #1
    bge Sprite_right__P2374_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_right__P2374_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_right__P2374:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_right__P2374_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_right__P2374_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2372_nochk
_proccall1659:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2370_nochk
_proccall1660:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2374:
    @stackempty locals
.final_0_459:
Sprite_right__P2374_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(436,5): Sprite.bottom
    ;
    .object Sprite_bottom__P2378 "game/sprite.ts(436,5): Sprite.bottom"
Sprite_bottom__P2378_pre:
    .section code
    .balign 4
Sprite_bottom__P2378_args:
    cmp r4, #1
    bge Sprite_bottom__P2378_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_bottom__P2378_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_bottom__P2378:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_bottom__P2378_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_bottom__P2378_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2376_nochk
_proccall1661:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2371_nochk
_proccall1662:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2378:
    @stackempty locals
.final_0_460:
Sprite_bottom__P2378_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(102,9): sprites.SpriteMap.mergeAtKey
    ;
    .object sprites_SpriteMap_mergeAtKey__P4633 "game/spritemap.ts(102,9): sprites.SpriteMap.mergeAtKey"
sprites_SpriteMap_mergeAtKey__P4633_pre:
    .section code
    .balign 4
sprites_SpriteMap_mergeAtKey__P4633_args:
    cmp r4, #5
    bge sprites_SpriteMap_mergeAtKey__P4633_nochk
    push {lr}
    bl _expand_args_5_22
    bl sprites_SpriteMap_mergeAtKey__P4633_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
sprites_SpriteMap_mergeAtKey__P4633:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_mergeAtKey__P4633_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_mergeAtKey__P4633_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_key__P4631_nochk
_proccall1663:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_461      
.jmpz1664:
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16061:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.16061      
.jmpz1665:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #68]
    ldr r1, [sp, args@3]
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_461      
.jmpz1666:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_461      
.lazySkip_3_461:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_2_461:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_461      
.jmpz1667:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_461:
.afterif_4_461:
.cont.16061:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.16061      
.brk.16061:
    movs r0, #0
    str r0, [sp, locals@3]
.else_0_461:
.afterif_5_461:
.ret.4633:
    @stackempty locals
    movs r0, #0
.final_6_461:
    add sp, #4*5 ; pop locals 5
sprites_SpriteMap_mergeAtKey__P4633_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(77,9): sprites.SpriteMap.key
    ;
    .object sprites_SpriteMap_key__P4631 "game/spritemap.ts(77,9): sprites.SpriteMap.key"
sprites_SpriteMap_key__P4631_pre:
    .section code
    .balign 4
sprites_SpriteMap_key__P4631_args:
    cmp r4, #3
    bge sprites_SpriteMap_key__P4631_nochk
    push {lr}
    bl _expand_args_3_14
    bl sprites_SpriteMap_key__P4631_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
sprites_SpriteMap_key__P4631:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_key__P4631_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_key__P4631_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1668:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1669:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.4631:
    @stackempty locals
.final_0_462:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_key__P4631_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(356,5): ArcadePhysicsEngine.screenEdgeCollisions
    ;
    .object ArcadePhysicsEngine_screenEdgeCollisions__P4670 "game/physics.ts(356,5): ArcadePhysicsEngine.screenEdgeCollisions"
ArcadePhysicsEngine_screenEdgeCollisions__P4670_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_screenEdgeCollisions__P4670_args:
    cmp r4, #4
    bge ArcadePhysicsEngine_screenEdgeCollisions__P4670_nochk
    push {lr}
    bl _expand_args_4_74
    bl ArcadePhysicsEngine_screenEdgeCollisions__P4670_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
ArcadePhysicsEngine_screenEdgeCollisions__P4670:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_screenEdgeCollisions__P4670_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_screenEdgeCollisions__P4670_locals:
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2498_validate_97
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_isStatic__P2368
_proccall1671:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_463      
.jmpz1670:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2314_96
_proccall1672:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_463:
.afterif_1_463:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl scene_Camera_isUpdated__P2770
_proccall1674:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_463      
.jmpz1673:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl scene_Camera_update__P2771
_proccall1675:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_463:
.afterif_3_463:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_left__P2191
_proccall1676:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_4_463      
.jmpz1677:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_left__P2372
_proccall1678:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_left__P2373
_proccall1679:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_463      
.jmpz1680:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2331
_proccall1681:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vx__P2332
_proccall1682:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_5_463:
.afterif_6_463:
    b .afterif_7_463      
.else_4_463:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_right__P2193
_proccall1683:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    movs r1, #1
    bl _cmp_gt
    beq .else_8_463      
.jmpz1684:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_right__P2374
_proccall1685:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_right__P2375
_proccall1686:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_9_463      
.jmpz1687:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2331
_proccall1688:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vx__P2332
_proccall1689:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_9_463:
.afterif_10_463:
.else_8_463:
.afterif_11_463:
.afterif_7_463:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_top__P2192
_proccall1690:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    movs r1, #1
    bl _cmp_lt
    beq .else_12_463      
.jmpz1691:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_top__P2376
_proccall1692:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2377
_proccall1693:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_13_463      
.jmpz1694:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2333
_proccall1695:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vy__P2334
_proccall1696:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_13_463:
.afterif_14_463:
    b .afterif_15_463      
.else_12_463:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_bottom__P2194
_proccall1697:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    movs r1, #1
    bl _cmp_gt
    beq .else_16_463      
.jmpz1698:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_bottom__P2378
_proccall1699:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_bottom__P2379
_proccall1700:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_17_463      
.jmpz1701:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2333
_proccall1702:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vy__P2334
_proccall1703:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_17_463:
.afterif_18_463:
.else_16_463:
.afterif_19_463:
.afterif_15_463:
.ret.4670:
    @stackempty locals
    movs r0, #0
.final_20_463:
    add sp, #4*2 ; pop locals 2
ArcadePhysicsEngine_screenEdgeCollisions__P4670_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(441,5): Sprite.bottom
    ;
    .object Sprite_bottom__P2379 "game/sprite.ts(441,5): Sprite.bottom"
Sprite_bottom__P2379_pre:
    .section code
    .balign 4
Sprite_bottom__P2379_args:
    cmp r4, #2
    bge Sprite_bottom__P2379_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_bottom__P2379_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_bottom__P2379:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_bottom__P2379_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_bottom__P2379_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2371_nochk
_proccall1704:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2377_nochk
_proccall1705:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2379:
    @stackempty locals
    movs r0, #0
.final_0_464:
Sprite_bottom__P2379_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(411,5): Sprite.right
    ;
    .object Sprite_right__P2375 "game/sprite.ts(411,5): Sprite.right"
Sprite_right__P2375_pre:
    .section code
    .balign 4
Sprite_right__P2375_args:
    cmp r4, #2
    bge Sprite_right__P2375_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_right__P2375_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_right__P2375:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_right__P2375_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_right__P2375_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2370_nochk
_proccall1706:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_left__P2373_nochk
_proccall1707:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2375:
    @stackempty locals
    movs r0, #0
.final_0_465:
Sprite_right__P2375_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(80,9): scene.Camera.isUpdated
    ;
    .object scene_Camera_isUpdated__P2770 "game/camera.ts(80,9): scene.Camera.isUpdated"
scene_Camera_isUpdated__P2770_pre:
    .section code
    .balign 4
scene_Camera_isUpdated__P2770_args:
    cmp r4, #1
    bge scene_Camera_isUpdated__P2770_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Camera_isUpdated__P2770_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_isUpdated__P2770:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_isUpdated__P2770_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_isUpdated__P2770_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_466      
.jmpz1708:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_466      
.lazySkip_1_466:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_x__P2327
_proccall1710:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_466      
.jmpz1709:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_466      
.lazySkip_3_466:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_y__P2329
_proccall1711:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_2_466:
; jmp value (already in r0)
.lazy_0_466:
; jmp value (already in r0)
.ret.2770:
    @stackempty locals
.final_4_466:
scene_Camera_isUpdated__P2770_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(92,9): sprites.SpriteMap.insertAABB
    ;
    .object sprites_SpriteMap_insertAABB__P2426 "game/spritemap.ts(92,9): sprites.SpriteMap.insertAABB"
sprites_SpriteMap_insertAABB__P2426_pre:
    .section code
    .balign 4
sprites_SpriteMap_insertAABB__P2426_args:
    cmp r4, #2
    bge sprites_SpriteMap_insertAABB__P2426_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_SpriteMap_insertAABB__P2426_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_insertAABB__P2426:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_insertAABB__P2426_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_insertAABB__P2426_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2372
_proccall1712:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2376
_proccall1713:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_width__P2370
_proccall1714:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_height__P2371
_proccall1715:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16278:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .brk.16278      
.jmpz1716:
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.16282:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@3]
    bl _cmp_le
    beq .brk.16282      
.jmpz1717:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_width__P2370
_proccall1718:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1719:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_height__P2371
_proccall1720:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1721:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_insertAtKey__P4632_nochk
_proccall1722:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.cont.16282:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    b .fortop.16282      
.brk.16282:
.cont.16278:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    b .fortop.16278      
.brk.16278:
.ret.2426:
    @stackempty locals
    movs r0, #0
.final_0_467:
    add sp, #4*6 ; pop locals 6
sprites_SpriteMap_insertAABB__P2426_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(83,9): sprites.SpriteMap.insertAtKey
    ;
    .object sprites_SpriteMap_insertAtKey__P4632 "game/spritemap.ts(83,9): sprites.SpriteMap.insertAtKey"
sprites_SpriteMap_insertAtKey__P4632_pre:
    .section code
    .balign 4
sprites_SpriteMap_insertAtKey__P4632_args:
    cmp r4, #4
    bge sprites_SpriteMap_insertAtKey__P4632_nochk
    push {lr}
    bl _expand_args_4_74
    bl sprites_SpriteMap_insertAtKey__P4632_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
sprites_SpriteMap_insertAtKey__P4632:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_insertAtKey__P4632_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_insertAtKey__P4632_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_key__P4631_nochk
_proccall1723:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_468      
.jmpz1724:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; estack
    ldr r1, [sp, #4*2] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    pop {r0} ; tmpref @3
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
.else_0_468:
.afterif_1_468:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_468      
.jmpz1725:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_468:
.afterif_3_468:
.ret.4632:
    @stackempty locals
    movs r0, #0
.final_4_468:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_insertAtKey__P4632_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(39,5): Fx.idiv
    ;
    .object Fx_idiv__P163 "base/fixed.ts(39,5): Fx.idiv"
Fx_idiv__P163_pre:
    .section code
    .balign 4
    .section code
Fx_idiv__P163:
Fx_idiv__P163_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_idiv__P163_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.163:
    @stackempty locals
.final_0_469:
Fx_idiv__P163_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(53,9): sprites.SpriteMap.resizeBuckets
    ;
    .object sprites_SpriteMap_resizeBuckets__P2424 "game/spritemap.ts(53,9): sprites.SpriteMap.resizeBuckets"
sprites_SpriteMap_resizeBuckets__P2424_pre:
    .section code
    .balign 4
sprites_SpriteMap_resizeBuckets__P2424_args:
    cmp r4, #2
    bge sprites_SpriteMap_resizeBuckets__P2424_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_SpriteMap_resizeBuckets__P2424_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_resizeBuckets__P2424:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_resizeBuckets__P2424_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_resizeBuckets__P2424_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16354:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.16354      
.jmpz1726:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_width__P2370
_proccall1728:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _cmp_gt
    beq .else_0_470      
.jmpz1727:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_width__P2370
_proccall1729:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
.else_0_470:
.afterif_1_470:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_height__P2371
_proccall1731:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_2_470      
.jmpz1730:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_height__P2371
_proccall1732:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
.else_2_470:
.afterif_3_470:
.cont.16354:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.16354      
.brk.16354:
    movs r0, #0
    str r0, [sp, locals@3]
    bl game_currentScene__P2968
_proccall1733:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_470      
.jmpz1734:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaWidth__P2716
_proccall1735:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_5_470      
.condexprz_4_470:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.condexprfin_5_470:
; jmp value (already in r0)
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_6_470      
.jmpz1736:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaHeight__P2717
_proccall1737:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_7_470      
.condexprz_6_470:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.condexprfin_7_470:
; jmp value (already in r0)
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #17
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1738:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #17
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1739:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2424:
    @stackempty locals
    movs r0, #0
.final_8_470:
    add sp, #4*8 ; pop locals 8
sprites_SpriteMap_resizeBuckets__P2424_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(73,9): sprites.SpriteMap.clear
    ;
    .object sprites_SpriteMap_clear__P2425 "game/spritemap.ts(73,9): sprites.SpriteMap.clear"
sprites_SpriteMap_clear__P2425_pre:
    .section code
    .balign 4
sprites_SpriteMap_clear__P2425_args:
    cmp r4, #1
    bge sprites_SpriteMap_clear__P2425_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_SpriteMap_clear__P2425_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteMap_clear__P2425:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_clear__P2425_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteMap_clear__P2425_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2425:
    @stackempty locals
    movs r0, #0
.final_0_471:
sprites_SpriteMap_clear__P2425_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(812,5): Sprite.clearObstacles
    ;
    .object Sprite_clearObstacles__P2398 "game/sprite.ts(812,5): Sprite.clearObstacles"
Sprite_clearObstacles__P2398_pre:
    .section code
    .balign 4
Sprite_clearObstacles__P2398_args:
    cmp r4, #1
    bge Sprite_clearObstacles__P2398_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_clearObstacles__P2398_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_clearObstacles__P2398:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_clearObstacles__P2398_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_clearObstacles__P2398_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2398:
    @stackempty locals
    movs r0, #0
.final_0_472:
Sprite_clearObstacles__P2398_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(218,5): ArcadePhysicsEngine.createMovingSprite
    ;
    .object ArcadePhysicsEngine_createMovingSprite__P4668 "game/physics.ts(218,5): ArcadePhysicsEngine.createMovingSprite"
ArcadePhysicsEngine_createMovingSprite__P4668_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_createMovingSprite__P4668_args:
    cmp r4, #4
    bge ArcadePhysicsEngine_createMovingSprite__P4668_nochk
    push {lr}
    bl _expand_args_4_74
    bl ArcadePhysicsEngine_createMovingSprite__P4668_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
ArcadePhysicsEngine_createMovingSprite__P4668:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_createMovingSprite__P4668_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_createMovingSprite__P4668_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4674_nochk
_proccall1740:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4674_nochk
_proccall1741:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #28]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_473      
.jmpz1742:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1743:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1744:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_473      
.else_0_473:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #36]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_473      
.jmpz1745:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #36]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1746:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1747:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _cmp_lt
    beq .else_3_473      
.jmpz1748:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall1749:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_4_473      
.else_3_473:
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _cmp_gt
    beq .else_5_473      
.jmpz1750:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall1751:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_6_473      
.else_5_473:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    @stackempty locals
.afterif_6_473:
.afterif_4_473:
.else_2_473:
.afterif_7_473:
.afterif_1_473:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_473      
.jmpz1752:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #32]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1753:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1754:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_9_473      
.else_8_473:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_473      
.jmpz1755:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #40]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1756:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1757:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@4]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_lt
    beq .else_11_473      
.jmpz1758:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall1759:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_12_473      
.else_11_473:
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_gt
    beq .else_13_473      
.jmpz1760:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@4]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall1761:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_14_473      
.else_13_473:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    @stackempty locals
.afterif_14_473:
.afterif_12_473:
.else_10_473:
.afterif_15_473:
.afterif_9_473:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4674_nochk
_proccall1762:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4674_nochk
_proccall1763:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1764:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1765:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@6]
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@7]
    str r0, [sp, locals@9]
    @stackempty locals
.cont.16579:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1767:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_17_473      
.jmpz1766:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_16_473      
.lazySkip_17_473:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1768:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_16_473:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.16579      
.jmpz1769:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1771:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_18_473      
.jmpz1770:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl Fx_idiv__P163
_proccall1772:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
.else_18_473:
.afterif_19_473:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1774:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_20_473      
.jmpz1773:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx_idiv__P163
_proccall1775:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
.else_20_473:
.afterif_21_473:
    b .cont.16579      
.brk.16579:
    ldr r0, _ldlit_294 ; MovingSprite__C2498_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    ldr r0, [sp, #4*7] ; tmpref @1
    push {r0} ; proc-arg
    bl MovingSprite_constructor__P2499
_proccall1776:
    add sp, #4*8 ; pop locals 8
    pop {r0} ; tmpref @1
.ret.4668:
    @stackempty locals
.final_22_473:
    add sp, #4*10 ; pop locals 10
ArcadePhysicsEngine_createMovingSprite__P4668_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(762,5): ArcadePhysicsEngine.constrain
    ;
    .object ArcadePhysicsEngine_constrain__P4674 "game/physics.ts(762,5): ArcadePhysicsEngine.constrain"
ArcadePhysicsEngine_constrain__P4674_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_constrain__P4674_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_constrain__P4674_nochk
    push {lr}
    bl _expand_args_2_17
    bl ArcadePhysicsEngine_constrain__P4674_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_constrain__P4674:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_constrain__P4674_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_constrain__P4674_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_min__P166
_proccall1777:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_max__P167
_proccall1778:
    add sp, #4*2 ; pop locals 2
.ret.4674:
    @stackempty locals
.final_0_475:
ArcadePhysicsEngine_constrain__P4674_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(230,5): helpers.arrayMap
    ;
    .object helpers_arrayMap__P106 "base/pxt-helpers.ts(230,5): helpers.arrayMap"
helpers_arrayMap__P106_pre:
    .section code
    .balign 4
    .section code
helpers_arrayMap__P106:
helpers_arrayMap__P106_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayMap__P106_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.16641:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.16641      
.jmpz1779:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.16641:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.16641      
.brk.16641:
    ldr r0, [sp, locals@0]
.ret.106:
    @stackempty locals
.final_0_476:
    add sp, #4*3 ; pop locals 3
helpers_arrayMap__P106_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(109,5): ArcadePhysicsEngine.draw
    ;
    .object ArcadePhysicsEngine_draw__P2511 "game/physics.ts(109,5): ArcadePhysicsEngine.draw"
ArcadePhysicsEngine_draw__P2511_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_draw__P2511_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_draw__P2511_nochk
    push {lr}
    bl _expand_args_1_10
    bl ArcadePhysicsEngine_draw__P2511_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_draw__P2511:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_draw__P2511_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_draw__P2511_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl sprites_SpriteMap_draw__P2423
_proccall1781:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2511:
    @stackempty locals
    movs r0, #0
.final_0_477:
ArcadePhysicsEngine_draw__P2511_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(37,9): sprites.SpriteMap.draw
    ;
    .object sprites_SpriteMap_draw__P2423 "game/spritemap.ts(37,9): sprites.SpriteMap.draw"
sprites_SpriteMap_draw__P2423_pre:
    .section code
    .balign 4
sprites_SpriteMap_draw__P2423_args:
    cmp r4, #1
    bge sprites_SpriteMap_draw__P2423_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_SpriteMap_draw__P2423_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteMap_draw__P2423:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2419_validate_69
    mov lr, r7
sprites_SpriteMap_draw__P2423_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_draw__P2423_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.16662:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1782
    b .brk.16662      
.jmpz1782:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.16667:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.16667      
.jmpz1783:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_key__P4631_nochk
_proccall1784:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_478      
.jmpz1785:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_478      
.lazySkip_2_478:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_1_478:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_478      
.jmpz1786:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawRect__P1938
_proccall1787:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
.else_0_478:
.afterif_3_478:
.cont.16667:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.16667      
.brk.16667:
.cont.16662:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.16662      
.brk.16662:
.ret.2423:
    @stackempty locals
    movs r0, #0
.final_4_478:
    add sp, #4*6 ; pop locals 6
sprites_SpriteMap_draw__P2423_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(105,5): ArcadePhysicsEngine.removeSprite
    ;
    .object ArcadePhysicsEngine_removeSprite__P2510 "game/physics.ts(105,5): ArcadePhysicsEngine.removeSprite"
ArcadePhysicsEngine_removeSprite__P2510_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_removeSprite__P2510_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_removeSprite__P2510_nochk
    push {lr}
    bl _expand_args_2_17
    bl ArcadePhysicsEngine_removeSprite__P2510_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_removeSprite__P2510:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_removeSprite__P2510_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_removeSprite__P2510_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.ret.2510:
    @stackempty locals
    movs r0, #0
.final_0_479:
ArcadePhysicsEngine_removeSprite__P2510_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(97,5): ArcadePhysicsEngine.addSprite
    ;
    .object ArcadePhysicsEngine_addSprite__P2509 "game/physics.ts(97,5): ArcadePhysicsEngine.addSprite"
ArcadePhysicsEngine_addSprite__P2509_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_addSprite__P2509_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_addSprite__P2509_nochk
    push {lr}
    bl _expand_args_2_17
    bl ArcadePhysicsEngine_addSprite__P2509_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_294:
 .word MovingSprite__C2498_VT
.object POP
    .section code
ArcadePhysicsEngine_addSprite__P2509:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2500_validate_68
    mov lr, r7
ArcadePhysicsEngine_addSprite__P2509_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_addSprite__P2509_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_11
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2968
_proccall1788:
    bl _inst_scene_Scene__C2816_validate_18
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_480      
.jmpz1789:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_480      
.lazySkip_2_480:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2731
_proccall1790:
    add sp, #4*2 ; pop locals 2
.lazy_1_480:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_480      
.jmpz1791:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2314_validate_30
    ldr r0, [r0, #116]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2314_validate_30
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_480:
.afterif_3_480:
.ret.2509:
    @stackempty locals
    movs r0, #0
.final_4_480:
    add sp, #4*1 ; pop locals 1
ArcadePhysicsEngine_addSprite__P2509_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(205,9): tiles.TileMapData.constructor
    ;
    .object tiles_TileMapData_constructor__P2691 "game/tilemap.ts(205,9): tiles.TileMapData.constructor"
tiles_TileMapData_constructor__P2691_pre:
    .section code
    .balign 4
    .section code
tiles_TileMapData_constructor__P2691:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2690_validate_61
    mov lr, r7
tiles_TileMapData_constructor__P2691_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_constructor__P2691_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMapData_scale__P2695_nochk
_proccall1792:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #4
    movs r2, #2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2691:
    @stackempty locals
.final_0_481:
tiles_TileMapData_constructor__P2691_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(227,9): tiles.TileMapData.scale
    ;
    .object tiles_TileMapData_scale__P2695 "game/tilemap.ts(227,9): tiles.TileMapData.scale"
tiles_TileMapData_scale__P2695_pre:
    .section code
    .balign 4
tiles_TileMapData_scale__P2695_args:
    cmp r4, #2
    bge tiles_TileMapData_scale__P2695_nochk
    push {lr}
    bl _expand_args_2_17
    bl tiles_TileMapData_scale__P2695_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMapData_scale__P2695:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2690_validate_61
    mov lr, r7
tiles_TileMapData_scale__P2695_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_scale__P2695_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2695:
    @stackempty locals
    movs r0, #0
.final_0_482:
tiles_TileMapData_scale__P2695_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(301,9): tiles.TileMap.constructor
    ;
    .object tiles_TileMap_constructor__P2710 "game/tilemap.ts(301,9): tiles.TileMap.constructor"
tiles_TileMap_constructor__P2710_pre:
    .section code
    .balign 4
    .section code
tiles_TileMap_constructor__P2710:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_constructor__P2710_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_constructor__P2710_locals:
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_scale__P2712_nochk
_proccall1793:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_296 ; tiles_TileMap_inline__P16784_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    bl scene_createRenderable__P2778
_proccall1794:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.2710:
    @stackempty locals
.final_0_483:
tiles_TileMap_constructor__P2710_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(307,17): tiles.TileMap.inline
    ;
    .object tiles_TileMap_inline__P16784 "game/tilemap.ts(307,17): tiles.TileMap.inline"
tiles_TileMap_inline__P16784_pre:
    .section code
    .balign 4
tiles_TileMap_inline__P16784_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word tiles_TileMap_inline__P16784_args@fn
tiles_TileMap_inline__P16784_args:
    cmp r4, #2
    bge tiles_TileMap_inline__P16784_nochk
    push {lr}
    bl _expand_args_2_17
    bl tiles_TileMap_inline__P16784_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_inline__P16784:
tiles_TileMap_inline__P16784_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_inline__P16784_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl tiles_TileMap_draw__P4744_nochk
_proccall1795:
    add sp, #4*3 ; pop locals 3
.ret.16784:
    @stackempty locals
    movs r0, #0
.final_0_484:
tiles_TileMap_inline__P16784_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(459,9): tiles.TileMap.draw
    ;
    .object tiles_TileMap_draw__P4744 "game/tilemap.ts(459,9): tiles.TileMap.draw"
tiles_TileMap_draw__P4744_pre:
    .section code
    .balign 4
tiles_TileMap_draw__P4744_args:
    cmp r4, #3
    bge tiles_TileMap_draw__P4744_nochk
    push {lr}
    bl _expand_args_3_14
    bl tiles_TileMap_draw__P4744_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_draw__P4744:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_draw__P4744_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMap_draw__P4744_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2720_nochk
_proccall1797:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_485      
.jmpz1796:
    b .ret.4744      
.else_0_485:
.afterif_1_485:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #12]
    ldr r1, [sp, locals@0]
    bl _numops_ands
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@0]
    bl _numops_ands
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall1798:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1799:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall1800:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1801:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.16861:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@4]
    bl _cmp_le
    beq .brk.16861      
.jmpz1802:
    ldr r0, [sp, locals@5]
    str r0, [sp, locals@8]
    @stackempty locals
.fortop.16866:
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@6]
    bl _cmp_le
    beq .brk.16866      
.jmpz1803:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTile__P2696
_proccall1804:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTileImage__P2699
_proccall1805:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_485      
.jmpz1806:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_2_485:
.afterif_3_485:
.cont.16866:
    ldr r0, [sp, locals@8]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@8]
    @stackempty locals
    b .fortop.16866      
.brk.16866:
.cont.16861:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .fortop.16861      
.brk.16861:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1807
    b .else_4_485      
.jmpz1807:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@11]
    @stackempty locals
.fortop.16914:
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@4]
    bl _cmp_le
    bne .jmpz1808
    b .brk.16914      
.object PUSH
.balign 4
_ldlit_296:
 .word tiles_TileMap_inline__P16784_Lit
.object POP
.jmpz1808:
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_7_485      
.jmpz1809:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_485      
.lazySkip_7_485:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_6_485:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_485      
.jmpz1810:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    movs r0, #3
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    push {r4}
    bl helpers_imageDrawLine__P1937
_proccall1811:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.else_5_485:
.afterif_8_485:
.cont.16914:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    @stackempty locals
    b .fortop.16914      
.brk.16914:
    ldr r0, [sp, locals@5]
    str r0, [sp, locals@13]
    @stackempty locals
.fortop.16945:
    ldr r0, [sp, locals@13]
    ldr r1, [sp, locals@6]
    bl _cmp_le
    beq .brk.16945      
.jmpz1812:
    ldr r0, [sp, locals@13]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@14]
    @stackempty locals
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_11_485      
.jmpz1813:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_485      
.lazySkip_11_485:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_10_485:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_9_485      
.jmpz1814:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    bl helpers_imageDrawLine__P1937
_proccall1815:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.else_9_485:
.afterif_12_485:
.cont.16945:
    ldr r0, [sp, locals@13]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@13]
    @stackempty locals
    b .fortop.16945      
.brk.16945:
.else_4_485:
.afterif_13_485:
.ret.4744:
    @stackempty locals
    movs r0, #0
.final_14_485:
    add sp, #4*15 ; pop locals 15
tiles_TileMap_draw__P4744_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(315,9): tiles.TileMap.scale
    ;
    .object tiles_TileMap_scale__P2712 "game/tilemap.ts(315,9): tiles.TileMap.scale"
tiles_TileMap_scale__P2712_pre:
    .section code
    .balign 4
tiles_TileMap_scale__P2712_args:
    cmp r4, #2
    bge tiles_TileMap_scale__P2712_nochk
    push {lr}
    bl _expand_args_2_17
    bl tiles_TileMap_scale__P2712_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_scale__P2712:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_scale__P2712_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_scale__P2712_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_486      
.jmpz1816:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_scale__P2695
_proccall1817:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_486:
.afterif_1_486:
.ret.2712:
    @stackempty locals
    movs r0, #0
.final_2_486:
tiles_TileMap_scale__P2712_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(322,9): tiles.TileMap.data
    ;
    .object tiles_TileMap_data__P2713 "game/tilemap.ts(322,9): tiles.TileMap.data"
tiles_TileMap_data__P2713_pre:
    .section code
    .balign 4
tiles_TileMap_data__P2713_args:
    cmp r4, #1
    bge tiles_TileMap_data__P2713_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_TileMap_data__P2713_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_data__P2713:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2708_validate_60
    mov lr, r7
tiles_TileMap_data__P2713_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_data__P2713_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
.ret.2713:
    @stackempty locals
.final_0_487:
tiles_TileMap_data__P2713_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(73,9): scene.BackgroundLayer.constructor
    ;
    .object scene_BackgroundLayer_constructor__P2659 "game/background.ts(73,9): scene.BackgroundLayer.constructor"
scene_BackgroundLayer_constructor__P2659_pre:
    .section code
    .balign 4
    .section code
scene_BackgroundLayer_constructor__P2659:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_BackgroundLayer__C2652_validate_58
    mov lr, r7
scene_BackgroundLayer_constructor__P2659_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_BackgroundLayer_constructor__P2659_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall1818:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #11
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1819
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_488      
.jmpz1819:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1820
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_488      
.jmpz1820:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1821
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_488      
.jmpz1821:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1822
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_488      
.jmpz1822:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1823
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_488      
.jmpz1823:
    pop {r0} ; tmpref @1
    b .brk.16999      
.switch_0_488:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #24]
    @stackempty locals
    b .brk.16999      
.switch_1_488:
.switch_2_488:
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #24]
    @stackempty locals
    b .brk.16999      
.switch_3_488:
.switch_4_488:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #24]
    @stackempty locals
.brk.16999:
    movs r0, #0
.ret.2659:
    @stackempty locals
.final_5_488:
scene_BackgroundLayer_constructor__P2659_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(52,9): scene.Camera.y
    ;
    .object scene_Camera_y__P2764 "game/camera.ts(52,9): scene.Camera.y"
scene_Camera_y__P2764_pre:
    .section code
    .balign 4
scene_Camera_y__P2764_args:
    cmp r4, #1
    bge scene_Camera_y__P2764_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Camera_y__P2764_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_y__P2764:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_y__P2764_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_y__P2764_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2764:
    @stackempty locals
.final_0_489:
scene_Camera_y__P2764_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(49,9): scene.Camera.x
    ;
    .object scene_Camera_x__P2763 "game/camera.ts(49,9): scene.Camera.x"
scene_Camera_x__P2763_pre:
    .section code
    .balign 4
scene_Camera_x__P2763_args:
    cmp r4, #1
    bge scene_Camera_x__P2763_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Camera_x__P2763_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_x__P2763:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_x__P2763_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_x__P2763_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2763:
    @stackempty locals
.final_0_490:
scene_Camera_x__P2763_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(188,9): scene.Scene.data
    ;
    .object scene_Scene_data__P2840 "game/scene.ts(188,9): scene.Scene.data"
scene_Scene_data__P2840_pre:
    .section code
    .balign 4
scene_Scene_data__P2840_args:
    cmp r4, #1
    bge scene_Scene_data__P2840_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Scene_data__P2840_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_data__P2840:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2816_validate_18
    mov lr, r7
scene_Scene_data__P2840_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_data__P2840_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
.ret.2840:
    @stackempty locals
.final_0_491:
scene_Scene_data__P2840_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(98,9): sprites.SpriteSet.toString
    ;
    .object sprites_SpriteSet_toString__P2447 "game/spriteset.ts(98,9): sprites.SpriteSet.toString"
sprites_SpriteSet_toString__P2447_pre:
    .section code
    .balign 4
sprites_SpriteSet_toString__P2447_args:
    cmp r4, #1
    bge sprites_SpriteSet_toString__P2447_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_SpriteSet_toString__P2447_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteSet_toString__P2447:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2436_validate_33
    mov lr, r7
sprites_SpriteSet_toString__P2447_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_toString__P2447_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteSet_length__P2439_nochk
_proccall1824:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_298 ; _str39      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.2447:
    @stackempty locals
.final_0_492:
sprites_SpriteSet_toString__P2447_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(27,9): sprites.SpriteSet.length
    ;
    .object sprites_SpriteSet_length__P2439 "game/spriteset.ts(27,9): sprites.SpriteSet.length"
sprites_SpriteSet_length__P2439_pre:
    .section code
    .balign 4
sprites_SpriteSet_length__P2439_args:
    cmp r4, #1
    bge sprites_SpriteSet_length__P2439_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_SpriteSet_length__P2439_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteSet_length__P2439:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2436_validate_33
    mov lr, r7
sprites_SpriteSet_length__P2439_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_length__P2439_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.2439:
    @stackempty locals
.final_0_493:
sprites_SpriteSet_length__P2439_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1064,5): Sprite.toString
    ;
    .object Sprite_toString__P2407 "game/sprite.ts(1064,5): Sprite.toString"
Sprite_toString__P2407_pre:
    .section code
    .balign 4
Sprite_toString__P2407_args:
    cmp r4, #1
    bge Sprite_toString__P2407_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_toString__P2407_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_toString__P2407:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_toString__P2407_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_toString__P2407_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_299 ; _str32      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_x__P2327_nochk
_proccall1825:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_300 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_y__P2329_nochk
_proccall1826:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_301 ; _str33      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2331_nochk
_proccall1827:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_300 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2333_nochk
_proccall1828:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_302 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.2407:
    @stackempty locals
.final_0_494:
Sprite_toString__P2407_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(629,5): Sprite.__update
    ;
    .object Sprite___update__P2389 "game/sprite.ts(629,5): Sprite.__update"
Sprite___update__P2389_pre:
    .section code
    .balign 4
Sprite___update__P2389_args:
    cmp r4, #3
    bge Sprite___update__P2389_nochk
    push {lr}
    bl _expand_args_3_14
    bl Sprite___update__P2389_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite___update__P2389:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite___update__P2389_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite___update__P2389_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #84]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_495      
.jmpz1829:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #84]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #84]
    movs r1, #1
    bl _cmp_le
    beq .else_1_495      
.jmpz1830:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite__destroyCore__P2402_nochk
_proccall1831:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_1_495:
.afterif_2_495:
.else_0_495:
.afterif_3_495:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #9
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_495      
.jmpz1832:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_495      
.lazySkip_6_495:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isOutOfScreen__P2387_nochk
_proccall1833:
    add sp, #4*2 ; pop locals 2
.lazy_5_495:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_495      
.jmpz1834:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_destroy__P2401_nochk
_proccall1835:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_495:
.afterif_7_495:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_495      
.jmpz1836:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #40
    bl _classCall_sprites_BaseSpriteSayRenderer__C2234_102
_proccall1837:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_8_495:
.afterif_9_495:
.ret.2389:
    @stackempty locals
    movs r0, #0
.final_10_495:
Sprite___update__P2389_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(10,9): sprites.BaseSpriteSayRenderer.update
    ;
    .object sprites_BaseSpriteSayRenderer_update__P2237 "game/spritesay.ts(10,9): sprites.BaseSpriteSayRenderer.update"
sprites_BaseSpriteSayRenderer_update__P2237_pre:
    .section code
    .balign 4
sprites_BaseSpriteSayRenderer_update__P2237_args:
    cmp r4, #4
    bge sprites_BaseSpriteSayRenderer_update__P2237_nochk
    push {lr}
    bl _expand_args_4_74
    bl sprites_BaseSpriteSayRenderer_update__P2237_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
sprites_BaseSpriteSayRenderer_update__P2237:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2234_validate_103
    mov lr, r7
sprites_BaseSpriteSayRenderer_update__P2237_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_update__P2237_locals:
.ret.2237:
    @stackempty locals
    movs r0, #0
.final_0_496:
sprites_BaseSpriteSayRenderer_update__P2237_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(608,5): Sprite.isOutOfScreen
    ;
    .object Sprite_isOutOfScreen__P2387 "game/sprite.ts(608,5): Sprite.isOutOfScreen"
Sprite_isOutOfScreen__P2387_pre:
    .section code
    .balign 4
Sprite_isOutOfScreen__P2387_args:
    cmp r4, #2
    bge Sprite_isOutOfScreen__P2387_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_isOutOfScreen__P2387_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_isOutOfScreen__P2387:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_isOutOfScreen__P2387_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_isOutOfScreen__P2387_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_497      
.jmpz1838:
    movs r0, #1
    b .condexprfin_1_497      
.condexprz_0_497:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #12]
.condexprfin_1_497:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_497      
.jmpz1839:
    movs r0, #1
    b .condexprfin_3_497      
.condexprz_2_497:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #16]
    b .condexprfin_3_497      
.object PUSH
.balign 4
_ldlit_298:
 .word _str39
_ldlit_299:
 .word _str32
_ldlit_300:
 .word _str0
_ldlit_301:
 .word _str33
_ldlit_302:
 .word _str34
.object POP
.condexprfin_3_497:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_right__P2374_nochk
_proccall1841:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_5_497      
.jmpz1840:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_497      
.lazySkip_5_497:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_bottom__P2378_nochk
_proccall1842:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_4_497:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_497      
.jmpz1843:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_497      
.lazySkip_7_497:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2372_nochk
_proccall1844:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_6_497:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_9_497      
.jmpz1845:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_497      
.lazySkip_9_497:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2376_nochk
_proccall1846:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_8_497:
; jmp value (already in r0)
.ret.2387:
    @stackempty locals
.final_10_497:
    add sp, #4*2 ; pop locals 2
Sprite_isOutOfScreen__P2387_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(242,5): Sprite.data
    ;
    .object Sprite_data__P2350 "game/sprite.ts(242,5): Sprite.data"
Sprite_data__P2350_pre:
    .section code
    .balign 4
Sprite_data__P2350_args:
    cmp r4, #2
    bge Sprite_data__P2350_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_data__P2350_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_data__P2350:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_data__P2350_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_data__P2350_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #60]
    @stackempty locals
.ret.2350:
    @stackempty locals
    movs r0, #0
.final_0_498:
Sprite_data__P2350_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(237,5): Sprite.data
    ;
    .object Sprite_data__P2349 "game/sprite.ts(237,5): Sprite.data"
Sprite_data__P2349_pre:
    .section code
    .balign 4
Sprite_data__P2349_args:
    cmp r4, #1
    bge Sprite_data__P2349_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite_data__P2349_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_data__P2349:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_data__P2349_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_data__P2349_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_499      
.jmpz1847:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_499:
.afterif_1_499:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
.ret.2349:
    @stackempty locals
.final_2_499:
Sprite_data__P2349_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(46,9): sprites.BaseSprite.__update
    ;
    .object sprites_BaseSprite___update__P2078 "game/basesprite.ts(46,9): sprites.BaseSprite.__update"
sprites_BaseSprite___update__P2078_pre:
    .section code
    .balign 4
sprites_BaseSprite___update__P2078_args:
    cmp r4, #3
    bge sprites_BaseSprite___update__P2078_nochk
    push {lr}
    bl _expand_args_3_14
    bl sprites_BaseSprite___update__P2078_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
sprites_BaseSprite___update__P2078:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2070_validate_38
    mov lr, r7
sprites_BaseSprite___update__P2078_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___update__P2078_locals:
.ret.2078:
    @stackempty locals
    movs r0, #0
.final_0_500:
sprites_BaseSprite___update__P2078_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(38,9): sprites.BaseSprite.__draw
    ;
    .object sprites_BaseSprite___draw__P2076 "game/basesprite.ts(38,9): sprites.BaseSprite.__draw"
sprites_BaseSprite___draw__P2076_pre:
    .section code
    .balign 4
sprites_BaseSprite___draw__P2076_args:
    cmp r4, #2
    bge sprites_BaseSprite___draw__P2076_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_BaseSprite___draw__P2076_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_BaseSprite___draw__P2076:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2070_validate_38
    mov lr, r7
sprites_BaseSprite___draw__P2076_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___draw__P2076_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_Sprite__C2314_this_35
_proccall1849:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_501      
.jmpz1848:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_Sprite__C2314_this_35
_proccall1850:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_501:
.afterif_1_501:
.ret.2076:
    @stackempty locals
    movs r0, #0
.final_2_501:
sprites_BaseSprite___draw__P2076_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(44,9): sprites.BaseSprite.__drawCore
    ;
    .object sprites_BaseSprite___drawCore__P2077 "game/basesprite.ts(44,9): sprites.BaseSprite.__drawCore"
sprites_BaseSprite___drawCore__P2077_pre:
    .section code
    .balign 4
sprites_BaseSprite___drawCore__P2077_args:
    cmp r4, #2
    bge sprites_BaseSprite___drawCore__P2077_nochk
    push {lr}
    bl _expand_args_2_17
    bl sprites_BaseSprite___drawCore__P2077_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_BaseSprite___drawCore__P2077:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2070_validate_38
    mov lr, r7
sprites_BaseSprite___drawCore__P2077_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___drawCore__P2077_locals:
.ret.2077:
    @stackempty locals
    movs r0, #0
.final_0_502:
sprites_BaseSprite___drawCore__P2077_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(23,9): sprites.BaseSprite.__visible
    ;
    .object sprites_BaseSprite___visible__P2073 "game/basesprite.ts(23,9): sprites.BaseSprite.__visible"
sprites_BaseSprite___visible__P2073_pre:
    .section code
    .balign 4
sprites_BaseSprite___visible__P2073_args:
    cmp r4, #1
    bge sprites_BaseSprite___visible__P2073_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_BaseSprite___visible__P2073_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_BaseSprite___visible__P2073:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2070_validate_38
    mov lr, r7
sprites_BaseSprite___visible__P2073_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___visible__P2073_locals:
    movs r0, #66
.ret.2073:
    @stackempty locals
.final_0_503:
sprites_BaseSprite___visible__P2073_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(441,9): controller.AnyButton.isPressed
    ;
    .object controller_AnyButton_isPressed__P4605 "game/controller.ts(441,9): controller.AnyButton.isPressed"
controller_AnyButton_isPressed__P4605_pre:
    .section code
    .balign 4
controller_AnyButton_isPressed__P4605_args:
    cmp r4, #1
    bge controller_AnyButton_isPressed__P4605_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_AnyButton_isPressed__P4605_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_AnyButton_isPressed__P4605:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_AnyButton__C4597_validate_104
    mov lr, r7
controller_AnyButton_isPressed__P4605_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_AnyButton_isPressed__P4605_locals:
    bl controller__player1__P2104
_proccall1851:
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_Controller__C2110_validate_62
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.17206:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.17206      
.jmpz1852:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_controller_Button__C2164_63
_proccall1854:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_504      
.jmpz1853:
    movs r0, #66
    b .ret.4605      
.else_0_504:
.afterif_1_504:
.cont.17206:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.17206      
.brk.17206:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #10
.ret.4605:
    @stackempty locals
.final_2_504:
    add sp, #4*4 ; pop locals 4
controller_AnyButton_isPressed__P4605_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(74,9): controller.Button.toString
    ;
    .object controller_Button_toString__P2169 "game/controllerbutton.ts(74,9): controller.Button.toString"
controller_Button_toString__P2169_pre:
    .section code
    .balign 4
controller_Button_toString__P2169_args:
    cmp r4, #1
    bge controller_Button_toString__P2169_nochk
    push {lr}
    bl _expand_args_1_10
    bl controller_Button_toString__P2169_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_toString__P2169:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2164_validate_15
    mov lr, r7
controller_Button_toString__P2169_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_toString__P2169_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_505      
.jmpz1855:
    ldr r0, _ldlit_304 ; _str29      
    b .condexprfin_1_505      
.condexprz_0_505:
    ldr r0, _ldlit_305 ; _str30      
.condexprfin_1_505:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_306 ; _str27      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_307 ; _str28      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
.ret.2169:
    @stackempty locals
.final_2_505:
controller_Button_toString__P2169_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(3,9): sprites.BaseSpriteSayRenderer.constructor
    ;
    .object sprites_BaseSpriteSayRenderer_constructor__P2235 "game/spritesay.ts(3,9): sprites.BaseSpriteSayRenderer.constructor"
sprites_BaseSpriteSayRenderer_constructor__P2235_pre:
    .section code
    .balign 4
    .section code
sprites_BaseSpriteSayRenderer_constructor__P2235:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2234_validate_103
    mov lr, r7
sprites_BaseSpriteSayRenderer_constructor__P2235_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_constructor__P2235_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    movs r0, #0
.ret.2235:
    @stackempty locals
.final_0_506:
sprites_BaseSpriteSayRenderer_constructor__P2235_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(49,9): sprites.StaticObstacle.width
    ;
    .object sprites_StaticObstacle_width__P2481 "game/obstacle.ts(49,9): sprites.StaticObstacle.width"
sprites_StaticObstacle_width__P2481_pre:
    .section code
    .balign 4
sprites_StaticObstacle_width__P2481_args:
    cmp r4, #1
    bge sprites_StaticObstacle_width__P2481_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_StaticObstacle_width__P2481_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_width__P2481:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2471_validate_98
    mov lr, r7
sprites_StaticObstacle_width__P2481_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_width__P2481_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.2481:
    @stackempty locals
.final_0_507:
sprites_StaticObstacle_width__P2481_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(45,9): sprites.StaticObstacle.height
    ;
    .object sprites_StaticObstacle_height__P2480 "game/obstacle.ts(45,9): sprites.StaticObstacle.height"
sprites_StaticObstacle_height__P2480_pre:
    .section code
    .balign 4
sprites_StaticObstacle_height__P2480_args:
    cmp r4, #1
    bge sprites_StaticObstacle_height__P2480_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_StaticObstacle_height__P2480_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_height__P2480:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2471_validate_98
    mov lr, r7
sprites_StaticObstacle_height__P2480_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_height__P2480_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.2480:
    @stackempty locals
.final_0_508:
sprites_StaticObstacle_height__P2480_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(41,9): sprites.StaticObstacle.y
    ;
    .object sprites_StaticObstacle_y__P2479 "game/obstacle.ts(41,9): sprites.StaticObstacle.y"
sprites_StaticObstacle_y__P2479_pre:
    .section code
    .balign 4
sprites_StaticObstacle_y__P2479_args:
    cmp r4, #1
    bge sprites_StaticObstacle_y__P2479_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_StaticObstacle_y__P2479_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_y__P2479:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2471_validate_98
    mov lr, r7
sprites_StaticObstacle_y__P2479_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_y__P2479_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_StaticObstacle_height__P2480_nochk
_proccall1856:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2479:
    @stackempty locals
.final_0_509:
sprites_StaticObstacle_y__P2479_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(37,9): sprites.StaticObstacle.x
    ;
    .object sprites_StaticObstacle_x__P2478 "game/obstacle.ts(37,9): sprites.StaticObstacle.x"
sprites_StaticObstacle_x__P2478_pre:
    .section code
    .balign 4
sprites_StaticObstacle_x__P2478_args:
    cmp r4, #1
    bge sprites_StaticObstacle_x__P2478_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_StaticObstacle_x__P2478_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_x__P2478:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2471_validate_98
    mov lr, r7
sprites_StaticObstacle_x__P2478_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_x__P2478_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_StaticObstacle_width__P2481_nochk
_proccall1857:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2478:
    @stackempty locals
.final_0_510:
sprites_StaticObstacle_x__P2478_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(69,9): tiles.Location.top
    ;
    .object tiles_Location_top__P2674 "game/tilemap.ts(69,9): tiles.Location.top"
tiles_Location_top__P2674_pre:
    .section code
    .balign 4
tiles_Location_top__P2674_args:
    cmp r4, #1
    bge tiles_Location_top__P2674_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_Location_top__P2674_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_top__P2674:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2666_validate_99
    mov lr, r7
tiles_Location_top__P2674_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_top__P2674_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2668_nochk
_proccall1858:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
.ret.2674:
    @stackempty locals
.final_0_511:
tiles_Location_top__P2674_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(62,9): tiles.Location.left
    ;
    .object tiles_Location_left__P2673 "game/tilemap.ts(62,9): tiles.Location.left"
tiles_Location_left__P2673_pre:
    .section code
    .balign 4
tiles_Location_left__P2673_args:
    cmp r4, #1
    bge tiles_Location_left__P2673_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_Location_left__P2673_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_left__P2673:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2666_validate_99
    mov lr, r7
tiles_Location_left__P2673_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_left__P2673_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2668_nochk
_proccall1859:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
.ret.2673:
    @stackempty locals
.final_0_512:
tiles_Location_left__P2673_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(54,9): tiles.Location.y
    ;
    .object tiles_Location_y__P2672 "game/tilemap.ts(54,9): tiles.Location.y"
tiles_Location_y__P2672_pre:
    .section code
    .balign 4
tiles_Location_y__P2672_args:
    cmp r4, #1
    bge tiles_Location_y__P2672_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_Location_y__P2672_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_y__P2672:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2666_validate_99
    mov lr, r7
tiles_Location_y__P2672_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
tiles_Location_y__P2672_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2668_nochk
_proccall1860:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2672:
    @stackempty locals
.final_0_513:
    add sp, #4*1 ; pop locals 1
tiles_Location_y__P2672_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(46,9): tiles.Location.x
    ;
    .object tiles_Location_x__P2671 "game/tilemap.ts(46,9): tiles.Location.x"
tiles_Location_x__P2671_pre:
    .section code
    .balign 4
tiles_Location_x__P2671_args:
    cmp r4, #1
    bge tiles_Location_x__P2671_nochk
    push {lr}
    bl _expand_args_1_10
    bl tiles_Location_x__P2671_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_x__P2671:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2666_validate_99
    mov lr, r7
tiles_Location_x__P2671_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
tiles_Location_x__P2671_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2668_nochk
_proccall1861:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2671:
    @stackempty locals
.final_0_514:
    add sp, #4*1 ; pop locals 1
tiles_Location_x__P2671_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(230,9): particles.ShapeFactory.drawParticle
    ;
    .object particles_ShapeFactory_drawParticle__P3184 "game/particlefactories.ts(230,9): particles.ShapeFactory.drawParticle"
particles_ShapeFactory_drawParticle__P3184_pre:
    .section code
    .balign 4
particles_ShapeFactory_drawParticle__P3184_args:
    cmp r4, #4
    bge particles_ShapeFactory_drawParticle__P3184_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_ShapeFactory_drawParticle__P3184_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
.object PUSH
.balign 4
_ldlit_304:
 .word _str29
_ldlit_305:
 .word _str30
_ldlit_306:
 .word _str27
_ldlit_307:
 .word _str28
.object POP
    .section code
particles_ShapeFactory_drawParticle__P3184:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3181_validate_92
    mov lr, r7
particles_ShapeFactory_drawParticle__P3184_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_ShapeFactory_drawParticle__P3184_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_FastRandom_pickRandom__P3032
_proccall1862:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::clone
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_105
    movs r1, #15
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::replace
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0}; tmpstore @3
    ldr r0, [sp, args@2]
    pop {r1} ; tmpref @3
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1863:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0}; tmpstore @4
    ldr r0, [sp, args@3]
    pop {r1} ; tmpref @4
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1864:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.3184:
    @stackempty locals
    movs r0, #0
.final_0_515:
    add sp, #4*1 ; pop locals 1
particles_ShapeFactory_drawParticle__P3184_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(71,9): Math.FastRandom.pickRandom
    ;
    .object Math_FastRandom_pickRandom__P3032 "game/mathUtil.ts(71,9): Math.FastRandom.pickRandom"
Math_FastRandom_pickRandom__P3032_pre:
    .section code
    .balign 4
Math_FastRandom_pickRandom__P3032_args:
    cmp r4, #2
    bge Math_FastRandom_pickRandom__P3032_nochk
    push {lr}
    bl _expand_args_2_17
    bl Math_FastRandom_pickRandom__P3032_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Math_FastRandom_pickRandom__P3032:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3027_validate_70
    mov lr, r7
Math_FastRandom_pickRandom__P3032_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_pickRandom__P3032_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_516      
.jmpz1865:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_516      
.lazySkip_2_516:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_516:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_516      
.jmpz1866:
    movs r0, #0
    b .ret.3032      
.else_0_516:
.afterif_3_516:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3031_nochk
_proccall1867:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.ret.3032:
    @stackempty locals
.final_4_516:
Math_FastRandom_pickRandom__P3032_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(159,9): particles.AreaFactory.drawParticle
    ;
    .object particles_AreaFactory_drawParticle__P3172 "game/particlefactories.ts(159,9): particles.AreaFactory.drawParticle"
particles_AreaFactory_drawParticle__P3172_pre:
    .section code
    .balign 4
particles_AreaFactory_drawParticle__P3172_args:
    cmp r4, #4
    bge particles_AreaFactory_drawParticle__P3172_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_AreaFactory_drawParticle__P3172_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_AreaFactory_drawParticle__P3172:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_AreaFactory__C3165_validate_93
    mov lr, r7
particles_AreaFactory_drawParticle__P3172_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_AreaFactory_drawParticle__P3172_locals:
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #20]
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #233
    bl _cmp_gt
    beq .condexprz_0_517      
.jmpz1868:
    movs r0, #9
    b .condexprfin_1_517      
.condexprz_0_517:
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3100_validate_77
    ldr r0, [r0, #20]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #245
    bl _cmp_gt
    beq .condexprz_2_517      
.jmpz1869:
    movs r0, #11
    b .condexprfin_3_517      
.condexprz_2_517:
    movs r0, #3
.condexprfin_3_517:
; jmp value (already in r0)
.condexprfin_1_517:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1870:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1871:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.3172:
    @stackempty locals
    movs r0, #0
.final_4_517:
    add sp, #4*1 ; pop locals 1
particles_AreaFactory_drawParticle__P3172_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(116,9): particles.SprayFactory.drawParticle
    ;
    .object particles_SprayFactory_drawParticle__P3162 "game/particlefactories.ts(116,9): particles.SprayFactory.drawParticle"
particles_SprayFactory_drawParticle__P3162_pre:
    .section code
    .balign 4
particles_SprayFactory_drawParticle__P3162_args:
    cmp r4, #4
    bge particles_SprayFactory_drawParticle__P3162_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_SprayFactory_drawParticle__P3162_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_SprayFactory_drawParticle__P3162:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3159_validate_88
    mov lr, r7
particles_SprayFactory_drawParticle__P3162_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_drawParticle__P3162_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1872:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1873:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3162:
    @stackempty locals
    movs r0, #0
.final_0_518:
particles_SprayFactory_drawParticle__P3162_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(15,9): scene.Renderable.__drawCore
    ;
    .object scene_Renderable___drawCore__P2776 "game/renderable.ts(15,9): scene.Renderable.__drawCore"
scene_Renderable___drawCore__P2776_pre:
    .section code
    .balign 4
scene_Renderable___drawCore__P2776_args:
    cmp r4, #2
    bge scene_Renderable___drawCore__P2776_nochk
    push {lr}
    bl _expand_args_2_17
    bl scene_Renderable___drawCore__P2776_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Renderable___drawCore__P2776:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Renderable__C2773_validate_75
    mov lr, r7
scene_Renderable___drawCore__P2776_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Renderable___drawCore__P2776_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #154
    bl _ifacecall3__40
_proccall1874:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2776:
    @stackempty locals
    movs r0, #0
.final_0_519:
scene_Renderable___drawCore__P2776_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(11,9): scene.Renderable.__visible
    ;
    .object scene_Renderable___visible__P2775 "game/renderable.ts(11,9): scene.Renderable.__visible"
scene_Renderable___visible__P2775_pre:
    .section code
    .balign 4
scene_Renderable___visible__P2775_args:
    cmp r4, #1
    bge scene_Renderable___visible__P2775_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Renderable___visible__P2775_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Renderable___visible__P2775:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Renderable__C2773_validate_75
    mov lr, r7
scene_Renderable___visible__P2775_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Renderable___visible__P2775_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #45
    bl _ifacecall1__20
_proccall1875:
    add sp, #4*1 ; pop locals 1
.ret.2775:
    @stackempty locals
.final_0_520:
scene_Renderable___visible__P2775_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(61,9): scene.Camera.top
    ;
    .object scene_Camera_top__P2767 "game/camera.ts(61,9): scene.Camera.top"
scene_Camera_top__P2767_pre:
    .section code
    .balign 4
scene_Camera_top__P2767_args:
    cmp r4, #1
    bge scene_Camera_top__P2767_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Camera_top__P2767_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_top__P2767:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_top__P2767_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_top__P2767_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2767:
    @stackempty locals
.final_0_521:
scene_Camera_top__P2767_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(55,9): scene.Camera.left
    ;
    .object scene_Camera_left__P2765 "game/camera.ts(55,9): scene.Camera.left"
scene_Camera_left__P2765_pre:
    .section code
    .balign 4
scene_Camera_left__P2765_args:
    cmp r4, #1
    bge scene_Camera_left__P2765_nochk
    push {lr}
    bl _expand_args_1_10
    bl scene_Camera_left__P2765_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_left__P2765:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2754_validate_57
    mov lr, r7
scene_Camera_left__P2765_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_left__P2765_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2765:
    @stackempty locals
.final_0_522:
scene_Camera_left__P2765_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(614,5): Sprite.__drawCore
    ;
    .object Sprite___drawCore__P2388 "game/sprite.ts(614,5): Sprite.__drawCore"
Sprite___drawCore__P2388_pre:
    .section code
    .balign 4
Sprite___drawCore__P2388_args:
    cmp r4, #2
    bge Sprite___drawCore__P2388_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite___drawCore__P2388_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite___drawCore__P2388:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite___drawCore__P2388_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite___drawCore__P2388_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_drawSay__P4625_nochk
_proccall1876:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isOutOfScreen__P2387_nochk
_proccall1878:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_523      
.jmpz1877:
    b .ret.2388      
.else_0_523:
.afterif_1_523:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_523      
.jmpz1879:
    movs r0, #1
    b .condexprfin_3_523      
.condexprz_2_523:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #12]
.condexprfin_3_523:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_523      
.jmpz1880:
    movs r0, #1
    b .condexprfin_5_523      
.condexprz_4_523:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2754_validate_57
    ldr r0, [r0, #16]
.condexprfin_5_523:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2372_nochk
_proccall1881:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2376_nochk
_proccall1882:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #60
    bl _classCall_Sprite__C2314_this_35
_proccall1883:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_drawDebug__P4626_nochk
_proccall1884:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.2388:
    @stackempty locals
    movs r0, #0
.final_6_523:
    add sp, #4*4 ; pop locals 4
Sprite___drawCore__P2388_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1086,5): Sprite.drawDebug
    ;
    .object Sprite_drawDebug__P4626 "game/sprite.ts(1086,5): Sprite.drawDebug"
Sprite_drawDebug__P4626_pre:
    .section code
    .balign 4
Sprite_drawDebug__P4626_args:
    cmp r4, #5
    bge Sprite_drawDebug__P4626_nochk
    push {lr}
    bl _expand_args_5_22
    bl Sprite_drawDebug__P4626_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
Sprite_drawDebug__P4626:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_drawDebug__P4626_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_drawDebug__P4626_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #129
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1885
    b .else_0_524      
.jmpz1885:
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2371_nochk
_proccall1886:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_x__P2327_nochk
_proccall1887:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_309 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_y__P2329_nochk
_proccall1888:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_imagePrint__P1967
_proccall1889:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall1890:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2331_nochk
_proccall1892:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_524      
.jmpz1891:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_524      
.lazySkip_3_524:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2333_nochk
_proccall1893:
    add sp, #4*1 ; pop locals 1
.lazy_2_524:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_524      
.jmpz1894:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1895:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2331_nochk
_proccall1896:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_310 ; _str35      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_309 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2333_nochk
_proccall1897:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_imagePrint__P1967
_proccall1898:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.else_1_524:
.afterif_4_524:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ax__P2335_nochk
_proccall1900:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_524      
.jmpz1899:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_524      
.lazySkip_7_524:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ay__P2337_nochk
_proccall1901:
    add sp, #4*1 ; pop locals 1
.lazy_6_524:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_524      
.jmpz1902:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1903:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ax__P2335_nochk
_proccall1904:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_311 ; _str36      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    ldr r1, _ldlit_309 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ay__P2337_nochk
_proccall1905:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_imagePrint__P1967
_proccall1906:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.else_5_524:
.afterif_8_524:
.else_0_524:
.afterif_9_524:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_524      
.jmpz1907:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_left__P2191
_proccall1908:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1909:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_top__P2192
_proccall1910:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1911:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@4]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1912:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    bl _inst_game_Hitbox__C2183_validate_36
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1913:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawRect__P1938
_proccall1914:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
.else_10_524:
.afterif_11_524:
.ret.4626:
    @stackempty locals
    movs r0, #0
.final_12_524:
    add sp, #4*3 ; pop locals 3
Sprite_drawDebug__P4626_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1116,5): Sprite.drawSprite
    ;
    .object Sprite_drawSprite__P4627 "game/sprite.ts(1116,5): Sprite.drawSprite"
Sprite_drawSprite__P4627_pre:
    .section code
    .balign 4
Sprite_drawSprite__P4627_args:
    cmp r4, #3
    bge Sprite_drawSprite__P4627_nochk
    push {lr}
    bl _expand_args_3_14
    bl Sprite_drawSprite__P4627_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite_drawSprite__P4627:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_drawSprite__P4627_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_drawSprite__P4627_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isScaled__P4624_nochk
_proccall1916:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1915
    b .else_0_525      
.object PUSH
.balign 4
_ldlit_309:
 .word _str0
_ldlit_310:
 .word _str35
_ldlit_311:
 .word _str36
.object POP
.jmpz1915:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_1_525      
.else_0_525:
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2370_nochk
_proccall1917:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2371_nochk
_proccall1918:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #10
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    ldr r0, [sp, #4*12] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*13] ; estack
    ldr r0, [sp, #4*14] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*15] ; estack
    ldr r0, [sp, #4*16] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*17] ; estack
    ldr r0, [sp, #4*18] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*19] ; estack
    bl helpers_imageBlit__P1932
_proccall1919:
    add sp, #4*20 ; pop locals 20
    @stackempty locals
.afterif_1_525:
.ret.4627:
    @stackempty locals
    movs r0, #0
.final_2_525:
Sprite_drawSprite__P4627_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1068,5): Sprite.drawSay
    ;
    .object Sprite_drawSay__P4625 "game/sprite.ts(1068,5): Sprite.drawSay"
Sprite_drawSay__P4625_pre:
    .section code
    .balign 4
Sprite_drawSay__P4625_args:
    cmp r4, #2
    bge Sprite_drawSay__P4625_nochk
    push {lr}
    bl _expand_args_2_17
    bl Sprite_drawSay__P4625_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_drawSay__P4625:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite_drawSay__P4625_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_drawSay__P4625_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_526      
.jmpz1920:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    movs r1, #0
    bl _cmp_neqq
    beq .else_1_526      
.jmpz1921:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .else_2_526      
.jmpz1922:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_sprites_BaseSpriteSayRenderer__C2234_102
_proccall1923:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_3_526      
.else_2_526:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    push {r0} ; the one arg
    movs r1, #44
    bl _classCall_sprites_BaseSpriteSayRenderer__C2234_102
_proccall1924:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #100]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #96]
    @stackempty locals
.afterif_3_526:
    b .afterif_4_526      
.else_1_526:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_sprites_BaseSpriteSayRenderer__C2234_102
_proccall1925:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.afterif_4_526:
.else_0_526:
.afterif_5_526:
.ret.4625:
    @stackempty locals
    movs r0, #0
.final_6_526:
Sprite_drawSay__P4625_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(14,9): sprites.BaseSpriteSayRenderer.destroy
    ;
    .object sprites_BaseSpriteSayRenderer_destroy__P2238 "game/spritesay.ts(14,9): sprites.BaseSpriteSayRenderer.destroy"
sprites_BaseSpriteSayRenderer_destroy__P2238_pre:
    .section code
    .balign 4
sprites_BaseSpriteSayRenderer_destroy__P2238_args:
    cmp r4, #1
    bge sprites_BaseSpriteSayRenderer_destroy__P2238_nochk
    push {lr}
    bl _expand_args_1_10
    bl sprites_BaseSpriteSayRenderer_destroy__P2238_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_BaseSpriteSayRenderer_destroy__P2238:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2234_validate_103
    mov lr, r7
sprites_BaseSpriteSayRenderer_destroy__P2238_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_destroy__P2238_locals:
.ret.2238:
    @stackempty locals
    movs r0, #0
.final_0_527:
sprites_BaseSpriteSayRenderer_destroy__P2238_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(6,9): sprites.BaseSpriteSayRenderer.draw
    ;
    .object sprites_BaseSpriteSayRenderer_draw__P2236 "game/spritesay.ts(6,9): sprites.BaseSpriteSayRenderer.draw"
sprites_BaseSpriteSayRenderer_draw__P2236_pre:
    .section code
    .balign 4
sprites_BaseSpriteSayRenderer_draw__P2236_args:
    cmp r4, #4
    bge sprites_BaseSpriteSayRenderer_draw__P2236_nochk
    push {lr}
    bl _expand_args_4_74
    bl sprites_BaseSpriteSayRenderer_draw__P2236_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
sprites_BaseSpriteSayRenderer_draw__P2236:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2234_validate_103
    mov lr, r7
sprites_BaseSpriteSayRenderer_draw__P2236_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_draw__P2236_locals:
.ret.2236:
    @stackempty locals
    movs r0, #0
.final_0_528:
sprites_BaseSpriteSayRenderer_draw__P2236_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(360,5): Sprite.__visible
    ;
    .object Sprite___visible__P2369 "game/sprite.ts(360,5): Sprite.__visible"
Sprite___visible__P2369_pre:
    .section code
    .balign 4
Sprite___visible__P2369_args:
    cmp r4, #1
    bge Sprite___visible__P2369_nochk
    push {lr}
    bl _expand_args_1_10
    bl Sprite___visible__P2369_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite___visible__P2369:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2314_validate_30
    mov lr, r7
Sprite___visible__P2369_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite___visible__P2369_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2369:
    @stackempty locals
.final_0_529:
Sprite___visible__P2369_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    .object _pxt_helper_trampoline "helper: trampoline"
    .section code
_pxt_lambda_trampoline:
    push { r4, r5, r6, r7, lr}
    mov r4, r8
    mov r5, r9
    mov r6, r10
    mov r7, r11
    push {r4, r5, r6, r7} ; save high registers
    mov r4, r1
    mov r5, r2
    mov r6, r3
    mov r7, r0
    bl _inst_builtin4_validate_0
    mov r0, sp
    push {r4, r5, r6, r7} ; push args and the lambda
    mov r1, sp
    bl pxt::pushThreadContext
    mov r6, r0          ; save ctx or globals
    mov r5, r7          ; save lambda for closure
    mov r0, r5          ; also save lambda pointer in r0 - needed by pxt::bindMethod
    ldr r1, [r5, #8]    ; ld fnptr
    movs r4, #3         ; 3 args
    blx r1              ; execute the actual lambda
    mov r7, r0          ; save result
    @dummystack 4
    add sp, #4*4        ; remove arguments and lambda
    mov r0, r6   ; or pop the thread context
    bl pxt::popThreadContext
    mov r0, r7 ; restore result
    pop {r4, r5, r6, r7} ; restore high registers
    mov r8, r4
    mov r9, r5
    mov r10, r6
    mov r11, r7
    pop { r4, r5, r6, r7, pc}
    .object _pxt_helper_exn "helper: exn"
    .section code
; r0 - try frame
; r1 - handler PC
_pxt_save_exception_state:
    push {r0, lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::beginTry
    pop {r1, r4}
    str r1, [r0, #1*4] ; PC
    mov r1, sp
    str r1, [r0, #2*4] ; SP
    str r5, [r0, #3*4] ; lambda ptr
    bx r4
    .section code
; r0 - try frame
; r1 - thread context
_pxt_restore_exception_state:
    mov r6, r1
    ldr r1, [r0, #2*4] ; SP
    mov sp, r1
    ldr r5, [r0, #3*4] ; lambda ptr
    ldr r1, [r0, #1*4] ; PC
    movs r0, #1
    orrs r1, r0
    bx r1
    .object _pxt_helper_stringconv "helper: stringconv"
    .section code
_pxt_stringConv:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #1
    bne .notstring
    bx lr
.notstring:
    ldr r7, [r3, #4*8]
    cmp r7, #0
    beq .fail
    push {r0, lr}
    movs r4, #1
    blx r7
    str r0, [sp, #0]
    b .numops
.fail:
    push {r0, lr}
.numops:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toString
    pop {r1, pc}      
    .object _pxt_helper_get_buffer "helper: get buffer"
    .section code
_pxt_buffer_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    ldrb r0, [r4, #8]
    lsls r0, r0, #1
    adds r0, #1
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    lsls r0, r0, #1
    adds r0, #1
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #1 ; 0 or undefined
    bx lr
    .object _pxt_helper_get_array "helper: get array"
    .section code
_pxt_array_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    ldr r0, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #0 ; 0 or undefined
    bx lr
    .object _pxt_helper_set_buffer "helper: set buffer"
    .section code
_pxt_buffer_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    strb r2, [r4, #8]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_set_array "helper: set array"
    .section code
_pxt_array_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    str r2, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_get "helper: get"
    .section code
_pxt_map_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*1 ; pop locals 1
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_set "helper: set"
    .section code
_pxt_map_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, r2, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*2 ; pop locals 2
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_bind "helper: bind"
    .section code
_pxt_bind_helper:
    push {r0, r2}
    movs r0, #2
    ldr r1, _ldlit_313 ; _pxt_bind_lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    pop {r1, r2}
    str r1, [r0, #12]
    str r2, [r0, #16]
    bx r4 ; return
_pxt_bind_lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word .bindCode@fn
.bindCode:
; r0-bind object, r4-#args
    cmp r4, #12
    bge .fail
    lsls r3, r4, #2
    ldr r2, _ldlit_314 ; _pxt_copy_list      
    ldr r1, [r2, r3]
    ldr r3, [r0, #12]
    ldr r2, [r0, #16]
    adds r4, r4, #1
    bx r1
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
_pxt_copy_list:
    .word _pxt_bind_0@fn
    .word _pxt_bind_1@fn
    .word _pxt_bind_2@fn
    .word _pxt_bind_3@fn
    .word _pxt_bind_4@fn
    .word _pxt_bind_5@fn
    .word _pxt_bind_6@fn
    .word _pxt_bind_7@fn
    .word _pxt_bind_8@fn
    .word _pxt_bind_9@fn
    .word _pxt_bind_10@fn
    .word _pxt_bind_11@fn
_pxt_bind_0:
    sub sp, #4
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*1] ; store LR
    blx r2
    ldr r1, [sp, #4*1]
    add sp, #8
    bx r1
_pxt_bind_1:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*2] ; store LR
    blx r2
    ldr r1, [sp, #4*2]
    add sp, #8
    bx r1
_pxt_bind_2:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*3] ; store LR
    blx r2
    ldr r1, [sp, #4*3]
    add sp, #8
    bx r1
_pxt_bind_3:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*4] ; store LR
    blx r2
    ldr r1, [sp, #4*4]
    add sp, #8
    bx r1
_pxt_bind_4:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*5] ; store LR
    blx r2
    ldr r1, [sp, #4*5]
    add sp, #8
    bx r1
_pxt_bind_5:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*6] ; store LR
    blx r2
    ldr r1, [sp, #4*6]
    add sp, #8
    bx r1
_pxt_bind_6:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*7] ; store LR
    blx r2
    ldr r1, [sp, #4*7]
    add sp, #8
    bx r1
_pxt_bind_7:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*8] ; store LR
    blx r2
    ldr r1, [sp, #4*8]
    add sp, #8
    bx r1
_pxt_bind_8:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*9] ; store LR
    blx r2
    ldr r1, [sp, #4*9]
    add sp, #8
    bx r1
_pxt_bind_9:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*10] ; store LR
    blx r2
    ldr r1, [sp, #4*10]
    add sp, #8
    bx r1
_pxt_bind_10:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*11] ; store LR
    blx r2
    ldr r1, [sp, #4*11]
    add sp, #8
    bx r1
_pxt_bind_11:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    ldr r1, [sp, #4*11]
    str r1, [sp, #4*10]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*12] ; store LR
    blx r2
    ldr r1, [sp, #4*12]
    add sp, #8
    bx r1
_code_end:
    .section code
    .object _code_helper__inst_builtin4_validate_0
_inst_builtin4_validate_0:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_1
_conv_1:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin4_validate_0
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin3_validate_2
_inst_builtin3_validate_2:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #3
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_3
_conv_3:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin3_validate_2
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin6_validate_4
_inst_builtin6_validate_4:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #6
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_5
_conv_5:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin6_validate_4
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin5_validate_6
_inst_builtin5_validate_6:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #5
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_7
_conv_7:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin5_validate_6
    pop {pc}
.object PUSH
.balign 4
_ldlit_313:
 .word _pxt_bind_lit
_ldlit_314:
 .word _pxt_copy_list
.object POP
    @stackempty args
    .section code
    .object _code_helper__ifacecall1_get_8
_ifacecall1_get_8:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    bx r4
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__lambda_call0_9
_lambda_call0_9:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_1_10
_expand_args_1_10:
    movs r0, #0
    movs r1, #0
    push {r0}
    bx lr
    .section code
    .object _code_helper__conv_11
_conv_11:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_4
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_12
_conv_12:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_13
_conv_13:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__expand_args_3_14
_expand_args_3_14:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_controller_Button__C2164_validate_15
_inst_controller_Button__C2164_validate_15:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #16
    blt .fail
    cmp r2, #17
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_ButtonHandler__C2158_validate_16
_inst_controller_ButtonHandler__C2158_validate_16:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #21
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_2_17
_expand_args_2_17:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #2*4]
    str r1, [sp, #2*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_scene_Scene__C2816_validate_18
_inst_scene_Scene__C2816_validate_18:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #32
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_ButtonEventHandlerState__C2160_validate_19
_inst_controller_ButtonEventHandlerState__C2160_validate_19:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #20
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall1__20
_ifacecall1__20:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #1
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    movs r1, r0
    str r1, [sp, #4*0]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_21
_conv_21:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin4_validate_0
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__expand_args_5_22
_expand_args_5_22:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #4
    blt .zero4
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero4:
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_control_EventContext__C395_validate_23
_inst_control_EventContext__C395_validate_23:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #22
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_control_EventHandler__C4402_validate_24
_inst_control_EventHandler__C4402_validate_24:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #23
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_PhysicsEngine__C2484_25
_classCall_PhysicsEngine__C2484_25:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #28
    blt .fail
    cmp r2, #29
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_SpriteHandler__C2785_validate_26
_inst_scene_SpriteHandler__C2785_validate_26:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    b .fail ; always fails; class never instantiated
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall2__27
_ifacecall2__27:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #2
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    movs r1, r0
    str r1, [sp, #4*1]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__lambda_call2_28
_lambda_call2_28:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #2
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    str r5, [sp, #4*2]
    mov r1, lr
    str r1, [sp, #4*3]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*3] ; restore what was in LR
    ldr r5, [sp, #4*2] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_PhysicsEngine__C2484_validate_29
_inst_PhysicsEngine__C2484_validate_29:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #28
    blt .fail
    cmp r2, #29
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_Sprite__C2314_validate_30
_inst_Sprite__C2314_validate_30:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #25
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_31
_conv_31:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_32
_conv_32:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    ldr r0, [sp, #4*3] ; estack
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_sprites_SpriteSet__C2436_validate_33
_inst_sprites_SpriteSet__C2436_validate_33:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #30
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_34
_conv_34:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_4
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__classCall_Sprite__C2314_this_35
_classCall_Sprite__C2314_this_35:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_game_Hitbox__C2183_validate_36
_inst_game_Hitbox__C2183_validate_36:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #31
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_37
_conv_37:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_sprites_BaseSprite__C2070_validate_38
_inst_sprites_BaseSprite__C2070_validate_38:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #24
    blt .fail
    cmp r2, #27
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall2_set_39
_ifacecall2_set_39:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    ldr r2, [sp, #4] ; ld-val
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    bx r4
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__ifacecall3__40
_ifacecall3__40:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #3
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    movs r1, r0
    str r1, [sp, #4*2]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #2
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    str r5, [sp, #4*2]
    mov r1, lr
    str r1, [sp, #4*3]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*3] ; restore what was in LR
    ldr r5, [sp, #4*2] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_41
_conv_41:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_42
_conv_42:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__lambda_call1_43
_lambda_call1_43:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_44
_conv_44:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_45
_conv_45:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_46
_conv_46:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_47
_conv_47:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_48
_conv_48:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_49
_conv_49:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_50
_conv_50:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_51
_conv_51:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_52
_conv_52:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*3] ; estack
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_53
_conv_53:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_scene_Background__C2642_validate_54
_inst_scene_Background__C2642_validate_54:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #34
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_55
_conv_55:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_56
_conv_56:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_scene_Camera__C2754_validate_57
_inst_scene_Camera__C2754_validate_57:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #33
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_BackgroundLayer__C2652_validate_58
_inst_scene_BackgroundLayer__C2652_validate_58:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #35
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_59
_conv_59:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_tiles_TileMap__C2708_validate_60
_inst_tiles_TileMap__C2708_validate_60:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #36
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_tiles_TileMapData__C2690_validate_61
_inst_tiles_TileMapData__C2690_validate_61:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #37
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_Controller__C2110_validate_62
_inst_controller_Controller__C2110_validate_62:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #38
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_controller_Button__C2164_63
_classCall_controller_Button__C2164_63:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #16
    blt .fail
    cmp r2, #17
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_64
_conv_64:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_control_FrameCallback__C392_validate_65
_inst_control_FrameCallback__C392_validate_65:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #39
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_66
_conv_66:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin6_validate_4
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0}
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_control_PollEvent__C4381_validate_67
_inst_control_PollEvent__C4381_validate_67:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #40
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_ArcadePhysicsEngine__C2500_validate_68
_inst_ArcadePhysicsEngine__C2500_validate_68:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #29
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_SpriteMap__C2419_validate_69
_inst_sprites_SpriteMap__C2419_validate_69:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #41
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_Math_FastRandom__C3027_validate_70
_inst_Math_FastRandom__C3027_validate_70:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #19
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_71
_conv_71:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_scene_systemMenu_PauseMenu__C3063_validate_72
_inst_scene_systemMenu_PauseMenu__C3063_validate_72:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #42
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_systemMenu_MenuOption__C3055_validate_73
_inst_scene_systemMenu_MenuOption__C3055_validate_73:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #43
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_4_74
_expand_args_4_74:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_scene_Renderable__C2773_validate_75
_inst_scene_Renderable__C2773_validate_75:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #26
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ParticleSource__C3119_validate_76
_inst_particles_ParticleSource__C3119_validate_76:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #27
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_Particle__C3100_validate_77
_inst_particles_Particle__C3100_validate_77:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #53
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_effects_ParticleEffect__C3230_validate_78
_inst_effects_ParticleEffect__C3230_validate_78:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #44
    blt .fail
    cmp r2, #45
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_effects_ImageEffect__C3258_validate_79
_inst_effects_ImageEffect__C3258_validate_79:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #46
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__lambda_call3_80
_lambda_call3_80:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #3
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*2]
    str r5, [sp, #4*3]
    mov r1, lr
    str r1, [sp, #4*4]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*4] ; restore what was in LR
    ldr r5, [sp, #4*3] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*4]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_81
_conv_81:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*3] ; estack
    ldr r1, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_82
_conv_82:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_83
_conv_83:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_84
_conv_84:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_85
_conv_85:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_game_GameOverConfig__C2945_validate_86
_inst_game_GameOverConfig__C2945_validate_86:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #18
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_music_Melody__C1623_validate_87
_inst_music_Melody__C1623_validate_87:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #47
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_SprayFactory__C3159_validate_88
_inst_particles_SprayFactory__C3159_validate_88:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #49
    blt .fail
    cmp r2, #52
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_particles_ParticleFactory__C3155_89
_classCall_particles_ParticleFactory__C3155_89:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #48
    blt .fail
    cmp r2, #52
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ParticleFactory__C3155_validate_90
_inst_particles_ParticleFactory__C3155_validate_90:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #48
    blt .fail
    cmp r2, #52
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ConfettiFactory__C3186_validate_91
_inst_particles_ConfettiFactory__C3186_validate_91:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #52
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ShapeFactory__C3181_validate_92
_inst_particles_ShapeFactory__C3181_validate_92:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #51
    blt .fail
    cmp r2, #52
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_AreaFactory__C3165_validate_93
_inst_particles_AreaFactory__C3165_validate_93:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #50
    blt .fail
    cmp r2, #52
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_effects_ScreenEffect__C3234_validate_94
_inst_effects_ScreenEffect__C3234_validate_94:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #45
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_95
_conv_95:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin4_validate_0
    mov r2, r0      
    pop {r1, pc}      
    @stackempty args
    .section code
    .object _code_helper__classCall_Sprite__C2314_96
_classCall_Sprite__C2314_96:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #25
    bne .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_MovingSprite__C2498_validate_97
_inst_MovingSprite__C2498_validate_97:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #54
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_StaticObstacle__C2471_validate_98
_inst_sprites_StaticObstacle__C2471_validate_98:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #56
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_tiles_Location__C2666_validate_99
_inst_tiles_Location__C2666_validate_99:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #55
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_100
_conv_100:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_101
_conv_101:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin5_validate_6
    mov r1, r0      
    pop {r0}
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__classCall_sprites_BaseSpriteSayRenderer__C2234_102
_classCall_sprites_BaseSpriteSayRenderer__C2234_102:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #57
    bne .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_BaseSpriteSayRenderer__C2234_validate_103
_inst_sprites_BaseSpriteSayRenderer__C2234_validate_103:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #57
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_AnyButton__C4597_validate_104
_inst_controller_AnyButton__C4597_validate_104:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #17
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_105
_conv_105:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
_numops_adds:
    @scope _numops_adds
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    adds r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::adds
                    add sp, #8
                    pop {pc}
_numops_subs:
    @scope _numops_subs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    subs r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::subs
                    add sp, #8
                    pop {pc}
_numops_ands:
    @scope _numops_ands
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ands r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::ands
                    add sp, #8
                    pop {pc}
_numops_orrs:
    @scope _numops_orrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    orrs r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::orrs
                    add sp, #8
                    pop {pc}
_numops_eors:
    @scope _numops_eors
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    eors r0, r1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::eors
                    add sp, #8
                    pop {pc}
_numops_lsls:
    @scope _numops_lsls
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsls r2, r3
    lsrs r3, r2, #30
    beq .ok
    cmp r3, #3
    bne .boxed
.ok:
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsls
                    add sp, #8
                    pop {pc}
_numops_lsrs:
    @scope _numops_lsrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsrs r2, r3
    lsrs r3, r2, #30
    bne .boxed
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsrs
                    add sp, #8
                    pop {pc}
_numops_asrs:
    @scope _numops_asrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r0, r3
    movs r2, #1
    orrs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::asrs
                    add sp, #8
                    pop {pc}
@scope _numops_toInt
_numops_toInt:
    asrs r0, r0, #1
    bcc .over
    blx lr
.over:
    lsls r0, r0, #1
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::toInt
pop {pc}
_numops_fromInt:
    lsls r2, r0, #1
    asrs r1, r2, #1
    cmp r0, r1
    bne .over2
    adds r0, r2, #1
    blx lr
.over2:
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::fromInt
pop {pc}
.section code
.object _pxt_helper_cmp_lt
_cmp_lt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    blt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::lt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_gt
_cmp_gt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bgt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::gt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_le
_cmp_le:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    ble .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::le
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_ge
_cmp_ge:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bge .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::ge
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eq
_cmp_eq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eqq
_cmp_eqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neq
_cmp_neq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neqq
_cmp_neqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
_helpers_end:
        .object controller_Button__C2164_VT
        .balign 4
controller_Button__C2164_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_Button__C2164_IfaceVT
        .short 16 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word controller_Button_toString__P2169_args@fn
        .word controller_Button_isPressed__P2175_nochk@fn
        .balign 4
controller_Button__C2164_IfaceVT:
  .short 120, 70, 68, 74, 144, 62, 100, 58, 56, 118, 76, 50, 104, 158, 44, 42, 128, 142, 36, 34, 168, 158, 124, 26, 24, 54, 20, 138, 160, 30, 12, 82, 8, 6, 4, 2
  .short 36, 0 ; _owner
  .word 4
  .short 164, 0 ; id
  .word 8
  .short 255, 0 ; repeatDelay
  .word 12
  .short 256, 0 ; repeatInterval
  .word 16
  .short 38, 0 ; _pressed
  .word 20
  .short 39, 0 ; _pressedElasped
  .word 24
  .short 41, 0 ; _repeatCount
  .word 28
  .short 155, 1 ; handlerState
  .word controller_Button_handlerState__P4599_args@fn
  .short 333, 2 ; toString
  .word controller_Button_toString__P2169_args@fn
  .short 243, 2 ; raiseButtonUp
  .word controller_Button_raiseButtonUp__P4600_args@fn
  .short 241, 2 ; raiseButtonDown
  .word controller_Button_raiseButtonDown__P4601_args@fn
  .short 242, 2 ; raiseButtonRepeat
  .word controller_Button_raiseButtonRepeat__P4602_args@fn
  .short 216, 2 ; onEvent
  .word controller_Button_onEvent__P2171_args@fn
  .short 177, 2 ; isPressed
  .word controller_Button_isPressed__P2175_args@fn
  .short 237, 2 ; pressureLevel
  .word controller_Button_pressureLevel__P2176_args@fn
  .short 291, 2 ; setPressed
  .word controller_Button_setPressed__P2177_args@fn
  .short 4, 2 ; __update
  .word controller_Button___update__P2178_args@fn
  .short 264, 2 ; runButtonEvents
  .word controller_Button_runButtonEvents__P4603_args@fn
  .short 149, 2 ; getOrCreateHandlerForEvent
  .word controller_Button_getOrCreateHandlerForEvent__P4604_args@fn
  .word 0, 0 ; the end
        .object controller_AnyButton__C4597_VT
        .balign 4
controller_AnyButton__C4597_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_AnyButton__C4597_IfaceVT
        .short 17 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word controller_AnyButton_isPressed__P4605_nochk@fn
        .balign 4
controller_AnyButton__C4597_IfaceVT:
  .short 120, 70, 68, 74, 152, 62, 100, 58, 56, 126, 76, 50, 112, 158, 44, 42, 96, 134, 36, 34, 168, 158, 132, 26, 24, 54, 20, 138, 160, 30, 12, 90, 8, 6, 4, 2
  .short 36, 0 ; _owner
  .word 4
  .short 164, 0 ; id
  .word 8
  .short 255, 0 ; repeatDelay
  .word 12
  .short 256, 0 ; repeatInterval
  .word 16
  .short 38, 0 ; _pressed
  .word 20
  .short 39, 0 ; _pressedElasped
  .word 24
  .short 41, 0 ; _repeatCount
  .word 28
  .short 177, 2 ; isPressed
  .word controller_AnyButton_isPressed__P4605_args@fn
  .short 155, 1 ; handlerState
  .word controller_Button_handlerState__P4599_args@fn
  .short 333, 2 ; toString
  .word controller_Button_toString__P2169_args@fn
  .short 243, 2 ; raiseButtonUp
  .word controller_Button_raiseButtonUp__P4600_args@fn
  .short 241, 2 ; raiseButtonDown
  .word controller_Button_raiseButtonDown__P4601_args@fn
  .short 242, 2 ; raiseButtonRepeat
  .word controller_Button_raiseButtonRepeat__P4602_args@fn
  .short 216, 2 ; onEvent
  .word controller_Button_onEvent__P2171_args@fn
  .short 237, 2 ; pressureLevel
  .word controller_Button_pressureLevel__P2176_args@fn
  .short 291, 2 ; setPressed
  .word controller_Button_setPressed__P2177_args@fn
  .short 4, 2 ; __update
  .word controller_Button___update__P2178_args@fn
  .short 264, 2 ; runButtonEvents
  .word controller_Button_runButtonEvents__P4603_args@fn
  .short 149, 2 ; getOrCreateHandlerForEvent
  .word controller_Button_getOrCreateHandlerForEvent__P4604_args@fn
  .word 0, 0 ; the end
        .object game_GameOverConfig__C2945_VT
        .balign 4
game_GameOverConfig__C2945_VT:
        .short 52  ; size in bytes
        .byte 4, 249 ; magic
        .word game_GameOverConfig__C2945_IfaceVT
        .short 18 ; class-id
        .short 0 ; reserved
        .word 698755867 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
game_GameOverConfig__C2945_IfaceVT:
  .short 152, 70, 68, 114, 64, 62, 60, 74, 88, 126, 116, 50, 104, 46, 44, 42, 40, 62, 124, 34, 32, 126, 28, 26, 32, 22, 20, 18, 16, 14, 52, 10, 8, 6, 4, 2
  .short 273, 0 ; scoringType
  .word 4
  .short 349, 0 ; winEffect
  .word 8
  .short 192, 0 ; loseEffect
  .word 12
  .short 194, 0 ; loseSound
  .word 16
  .short 352, 0 ; winSound
  .word 20
  .short 350, 0 ; winMessage
  .word 24
  .short 351, 0 ; winMessageMultiplayer
  .word 28
  .short 193, 0 ; loseMessage
  .word 32
  .short 131, 0 ; effectSetByUser
  .word 36
  .short 303, 0 ; soundSetByUser
  .word 40
  .short 203, 0 ; messageSetByUser
  .word 44
  .short 274, 0 ; scoringTypeSetByUser
  .word 48
  .short 170, 2 ; init
  .word game_GameOverConfig_init__P2959_args@fn
  .word 0, 0 ; the end
        .object Math_FastRandom__C3027_VT
        .balign 4
Math_FastRandom__C3027_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word Math_FastRandom__C3027_IfaceVT
        .short 19 ; class-id
        .short 0 ; reserved
        .word 1644222237 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
Math_FastRandom__C3027_IfaceVT:
  .short 24, 54, 20, 42, 32, 14, 20, 10, 8, 6, 4, 2
  .short 190, 0 ; lfsr
  .word 4
  .short 279, 0 ; seed
  .word 8
  .short 213, 2 ; next
  .word Math_FastRandom_next__P3030_args@fn
  .short 244, 2 ; randomRange
  .word Math_FastRandom_randomRange__P3031_args@fn
  .short 233, 2 ; pickRandom
  .word Math_FastRandom_pickRandom__P3032_args@fn
  .word 0, 0 ; the end
        .object controller_ButtonEventHandlerState__C2160_VT
        .balign 4
controller_ButtonEventHandlerState__C2160_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_ButtonEventHandlerState__C2160_IfaceVT
        .short 20 ; class-id
        .short 0 ; reserved
        .word 1101023518 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
controller_ButtonEventHandlerState__C2160_IfaceVT:
  .short 16, 14, 20, 26, 8, 6, 4, 2
  .short 164, 0 ; id
  .word 4
  .short 342, 0 ; user
  .word 8
  .short 319, 0 ; system
  .word 12
  .word 0, 0 ; the end
        .object controller_ButtonHandler__C2158_VT
        .balign 4
controller_ButtonHandler__C2158_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_ButtonHandler__C2158_IfaceVT
        .short 21 ; class-id
        .short 0 ; reserved
        .word 1468534559 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
controller_ButtonHandler__C2158_IfaceVT:
  .short 20, 10, 8, 6, 4, 2
  .short 134, 0 ; event
  .word 4
  .short 82, 0 ; callback
  .word 8
  .word 0, 0 ; the end
        .object control_EventContext__C395_VT
        .balign 4
control_EventContext__C395_VT:
        .short 44  ; size in bytes
        .byte 4, 249 ; magic
        .word control_EventContext__C395_IfaceVT
        .short 22 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_EventContext__C395_IfaceVT:
  .short 192, 70, 156, 66, 72, 166, 172, 58, 56, 54, 52, 50, 48, 174, 44, 114, 120, 102, 52, 130, 64, 30, 28, 26, 24, 22, 60, 74, 16, 62, 12, 34, 8, 6, 4, 2
  .short 156, 0 ; handlers
  .word 4
  .short 140, 0 ; frameCallbacks
  .word 8
  .short 141, 0 ; frameWorker
  .word 12
  .short 142, 0 ; framesInSample
  .word 16
  .short 329, 0 ; timeInSample
  .word 20
  .short 185, 0 ; lastPerfDump
  .word 24
  .short 113, 0 ; deltaTimeMillis
  .word 28
  .short 238, 0 ; prevTimeMillis
  .word 32
  .short 165, 0 ; idleCallbacks
  .word 36
  .short 266, 0 ; runningCallbacks
  .word 40
  .short 112, 1 ; deltaTime
  .word control_EventContext_deltaTime__P400_args@fn
  .short 265, 2 ; runCallbacks
  .word control_EventContext_runCallbacks__P4407_args@fn
  .short 247, 2 ; registerFrameCallbacks
  .word control_EventContext_registerFrameCallbacks__P4408_args@fn
  .short 246, 2 ; register
  .word control_EventContext_register__P401_args@fn
  .short 335, 2 ; unregister
  .word control_EventContext_unregister__P402_args@fn
  .short 248, 2 ; registerFrameHandler
  .word control_EventContext_registerFrameHandler__P403_args@fn
  .short 249, 2 ; registerHandler
  .word control_EventContext_registerHandler__P405_args@fn
  .word 0, 0 ; the end
        .object control_EventHandler__C4402_VT
        .balign 4
control_EventHandler__C4402_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word control_EventHandler__C4402_IfaceVT
        .short 23 ; class-id
        .short 0 ; reserved
        .word 1468534556 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_EventHandler__C4402_IfaceVT:
  .short 40, 70, 60, 34, 40, 30, 28, 26, 64, 22, 36, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 314, 0 ; src
  .word 4
  .short 343, 0 ; value
  .word 8
  .short 154, 0 ; handler
  .word 12
  .short 138, 0 ; flags
  .word 16
  .short 246, 2 ; register
  .word control_EventHandler_register__P4403_args@fn
  .short 335, 2 ; unregister
  .word control_EventHandler_unregister__P4404_args@fn
  .word 0, 0 ; the end
        .object sprites_BaseSprite__C2070_VT
        .balign 4
sprites_BaseSprite__C2070_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_BaseSprite__C2070_IfaceVT
        .short 24 ; class-id
        .short 0 ; reserved
        .word 1197357341 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word sprites_BaseSprite___visible__P2073_nochk@fn
        .word sprites_BaseSprite___draw__P2076_nochk@fn
        .word sprites_BaseSprite___drawCore__P2077_nochk@fn
        .word sprites_BaseSprite___update__P2078_nochk@fn
        .balign 4
sprites_BaseSprite__C2070_IfaceVT:
  .short 24, 78, 60, 34, 64, 22, 36, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 164, 0 ; id
  .word 8
  .short 5, 2 ; __visible
  .word sprites_BaseSprite___visible__P2073_args@fn
  .short 361, 1 ; z
  .word sprites_BaseSprite_z__P2074_args@fn
  .short 361, 0 ; set z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2076_args@fn
  .short 2, 2 ; __drawCore
  .word sprites_BaseSprite___drawCore__P2077_args@fn
  .short 4, 2 ; __update
  .word sprites_BaseSprite___update__P2078_args@fn
  .word 0, 0 ; the end
        .object Sprite__C2314_VT
        .balign 4
Sprite__C2314_VT:
        .short 124  ; size in bytes
        .byte 4, 249 ; magic
        .word Sprite__C2314_IfaceVT
        .short 25 ; class-id
        .short 0 ; reserved
        .word 1783883544 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word Sprite_toString__P2407_args@fn
        .word Sprite___visible__P2369_nochk@fn
        .word sprites_BaseSprite___draw__P2076_nochk@fn
        .word Sprite___drawCore__P2388_nochk@fn
        .word Sprite___update__P2389_nochk@fn
        .word Sprite_setHitbox__P2367_nochk@fn
        .word Sprite_recalcSize__P4623_nochk@fn
        .word Sprite_drawSprite__P4627_nochk@fn
        .balign 4
Sprite__C2314_IfaceVT:
  .short 520, 518, 516, 538, 512, 510, 508, 506, 1064, 1102, 500, 498, 496, 494, 492, 562, 488, 486, 484, 930, 856, 966, 476, 474, 472, 470, 468, 554, 464, 470, 460, 458, 456, 454, 452, 570, 448, 446, 444, 442, 440, 438, 436, 434, 432, 430, 524, 426, 424, 422, 420, 418, 848, 414, 556, 410, 408, 406, 404, 402, 400, 398, 700, 394, 520, 1046, 388, 386, 384, 766, 380, 634, 376, 374, 548, 642, 368, 366, 364, 546, 1000, 582, 412, 890, 512, 1014, 348, 346, 784, 966, 372, 338, 336, 334, 332, 330, 328, 326, 324, 322, 656, 318, 948, 818, 312, 310, 996, 306, 856, 302, 300, 298, 296, 294, 292, 290, 288, 286, 284, 282, 280, 382, 276, 274, 272, 422, 268, 266, 264, 262, 260, 258, 256, 254, 252, 250, 248, 454, 716, 242, 240, 454, 236, 234, 232, 230, 652, 226, 224, 222, 220, 218, 216, 230, 212, 210, 208, 446, 612, 202, 200, 198, 196, 194, 608, 254, 188, 186, 504, 550, 764, 178, 176, 174, 172, 738, 248, 166, 164, 162, 160, 446, 156, 154, 320, 670, 340, 146, 144, 142, 140, 138, 136, 134, 588, 362, 168, 126, 124, 122, 120, 710, 116, 114, 248, 110, 108, 458, 104, 102, 100, 98, 672, 710, 92, 90, 88, 86, 84, 82, 80, 78, 556, 682, 72, 70, 68, 66, 264, 62, 60, 58, 104, 54, 700, 50, 48, 46, 508, 42, 712, 38, 436, 34, 32, 30, 28, 26, 24, 22, 20, 130, 16, 14, 12, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 164, 0 ; id
  .word 8
  .short 52, 0 ; _x
  .word 12
  .short 53, 0 ; _y
  .word 16
  .short 49, 0 ; _vx
  .word 20
  .short 50, 0 ; _vy
  .word 24
  .short 7, 0 ; _ax
  .word 28
  .short 8, 0 ; _ay
  .word 32
  .short 16, 0 ; _fx
  .word 36
  .short 17, 0 ; _fy
  .word 40
  .short 45, 0 ; _sx
  .word 44
  .short 46, 0 ; _sy
  .word 48
  .short 51, 0 ; _width
  .word 52
  .short 18, 0 ; _height
  .word 56
  .short 12, 0 ; _data
  .word 60
  .short 22, 0 ; _kind
  .word 64
  .short 186, 0 ; layer
  .word 68
  .short 26, 0 ; _lastX
  .word 72
  .short 27, 0 ; _lastY
  .word 76
  .short 6, 0 ; _action
  .word 80
  .short 191, 0 ; lifespan
  .word 84
  .short 21, 0 ; _image
  .word 88
  .short 32, 0 ; _obstacles
  .word 92
  .short 268, 0 ; sayEndTime
  .word 96
  .short 269, 0 ; sayRenderer
  .word 100
  .short 19, 0 ; _hitbox
  .word 104
  .short 35, 0 ; _overlappers
  .word 108
  .short 23, 0 ; _kindsOverlappedWith
  .word 112
  .short 138, 0 ; flags
  .word 116
  .short 115, 0 ; destroyHandler
  .word 120
  .short 353, 1 ; x
  .word Sprite_x__P2327_args@fn
  .short 353, 0 ; set x
  .word Sprite_x__P2328_args@fn
  .short 357, 1 ; y
  .word Sprite_y__P2329_args@fn
  .short 357, 0 ; set y
  .word Sprite_y__P2330_args@fn
  .short 345, 1 ; vx
  .word Sprite_vx__P2331_args@fn
  .short 345, 0 ; set vx
  .word Sprite_vx__P2332_args@fn
  .short 346, 1 ; vy
  .word Sprite_vy__P2333_args@fn
  .short 346, 0 ; set vy
  .word Sprite_vy__P2334_args@fn
  .short 68, 1 ; ax
  .word Sprite_ax__P2335_args@fn
  .short 68, 0 ; set ax
  .word Sprite_ax__P2336_args@fn
  .short 69, 1 ; ay
  .word Sprite_ay__P2337_args@fn
  .short 69, 0 ; set ay
  .word Sprite_ay__P2338_args@fn
  .short 143, 1 ; fx
  .word Sprite_fx__P2339_args@fn
  .short 143, 0 ; set fx
  .word Sprite_fx__P2340_args@fn
  .short 144, 1 ; fy
  .word Sprite_fy__P2341_args@fn
  .short 144, 0 ; set fy
  .word Sprite_fy__P2342_args@fn
  .short 317, 1 ; sx
  .word Sprite_sx__P2343_args@fn
  .short 318, 1 ; sy
  .word Sprite_sy__P2345_args@fn
  .short 109, 1 ; data
  .word Sprite_data__P2349_args@fn
  .short 109, 0 ; set data
  .word Sprite_data__P2350_args@fn
  .short 166, 1 ; image
  .word Sprite_image__P2363_args@fn
  .short 288, 2 ; setImage
  .word Sprite_setImage__P2364_args@fn
  .short 81, 2 ; calcDimensionalHash
  .word Sprite_calcDimensionalHash__P2365_args@fn
  .short 259, 2 ; resetHitbox
  .word Sprite_resetHitbox__P2366_args@fn
  .short 287, 2 ; setHitbox
  .word Sprite_setHitbox__P2367_args@fn
  .short 179, 2 ; isStatic
  .word Sprite_isStatic__P2368_args@fn
  .short 5, 2 ; __visible
  .word Sprite___visible__P2369_args@fn
  .short 245, 2 ; recalcSize
  .word Sprite_recalcSize__P4623_args@fn
  .short 178, 2 ; isScaled
  .word Sprite_isScaled__P4624_args@fn
  .short 348, 1 ; width
  .word Sprite_width__P2370_args@fn
  .short 161, 1 ; height
  .word Sprite_height__P2371_args@fn
  .short 188, 1 ; left
  .word Sprite_left__P2372_args@fn
  .short 188, 0 ; set left
  .word Sprite_left__P2373_args@fn
  .short 261, 1 ; right
  .word Sprite_right__P2374_args@fn
  .short 261, 0 ; set right
  .word Sprite_right__P2375_args@fn
  .short 334, 1 ; top
  .word Sprite_top__P2376_args@fn
  .short 334, 0 ; set top
  .word Sprite_top__P2377_args@fn
  .short 73, 1 ; bottom
  .word Sprite_bottom__P2378_args@fn
  .short 73, 0 ; set bottom
  .word Sprite_bottom__P2379_args@fn
  .short 184, 2 ; kind
  .word Sprite_kind__P2380_args@fn
  .short 289, 2 ; setKind
  .word Sprite_setKind__P2381_args@fn
  .short 175, 2 ; isOutOfScreen
  .word Sprite_isOutOfScreen__P2387_args@fn
  .short 2, 2 ; __drawCore
  .word Sprite___drawCore__P2388_args@fn
  .short 4, 2 ; __update
  .word Sprite___update__P2389_args@fn
  .short 286, 2 ; setFlag
  .word Sprite_setFlag__P2392_args@fn
  .short 224, 2 ; overlapsWith
  .word Sprite_overlapsWith__P2393_args@fn
  .short 96, 2 ; clearObstacles
  .word Sprite_clearObstacles__P2398_args@fn
  .short 250, 2 ; registerObstacle
  .word Sprite_registerObstacle__P2399_args@fn
  .short 114, 2 ; destroy
  .word Sprite_destroy__P2401_args@fn
  .short 13, 2 ; _destroyCore
  .word Sprite__destroyCore__P2402_args@fn
  .short 333, 2 ; toString
  .word Sprite_toString__P2407_args@fn
  .short 125, 2 ; drawSay
  .word Sprite_drawSay__P4625_args@fn
  .short 121, 2 ; drawDebug
  .word Sprite_drawDebug__P4626_args@fn
  .short 126, 2 ; drawSprite
  .word Sprite_drawSprite__P4627_args@fn
  .short 361, 1 ; z
  .word sprites_BaseSprite_z__P2074_args@fn
  .short 361, 0 ; set z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2076_args@fn
  .word 0, 0 ; the end
        .object PhysicsEngine__C2484_VT
        .balign 4
PhysicsEngine__C2484_VT:
        .short 4  ; size in bytes
        .byte 4, 249 ; magic
        .word PhysicsEngine__C2484_IfaceVT
        .short 28 ; class-id
        .short 0 ; reserved
        .word 1703617821 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word PhysicsEngine_addSprite__P2486_nochk@fn
        .word PhysicsEngine_removeSprite__P2487_nochk@fn
        .word PhysicsEngine_moveSprite__P2488_nochk@fn
        .word PhysicsEngine_draw__P2489_nochk@fn
        .word PhysicsEngine_move__P2490_nochk@fn
        .balign 4
PhysicsEngine__C2484_IfaceVT:
  .short 24, 22, 36, 18, 40, 14, 12, 18, 40, 6, 4, 2
  .short 59, 2 ; addSprite
  .word PhysicsEngine_addSprite__P2486_args@fn
  .short 252, 2 ; removeSprite
  .word PhysicsEngine_removeSprite__P2487_args@fn
  .short 210, 2 ; moveSprite
  .word PhysicsEngine_moveSprite__P2488_args@fn
  .short 120, 2 ; draw
  .word PhysicsEngine_draw__P2489_args@fn
  .short 209, 2 ; move
  .word PhysicsEngine_move__P2490_args@fn
  .word 0, 0 ; the end
        .object sprites_SpriteSet__C2436_VT
        .balign 4
sprites_SpriteSet__C2436_VT:
        .short 8  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_SpriteSet__C2436_IfaceVT
        .short 30 ; class-id
        .short 0 ; reserved
        .word 737501468 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word sprites_SpriteSet_toString__P2447_args@fn
        .balign 4
sprites_SpriteSet__C2436_IfaceVT:
  .short 40, 62, 76, 34, 32, 30, 28, 34, 24, 22, 20, 18, 32, 46, 12, 10, 8, 6, 4, 2
  .short 44, 0 ; _sprites
  .word 4
  .short 189, 1 ; length
  .word sprites_SpriteSet_length__P2439_args@fn
  .short 57, 2 ; add
  .word sprites_SpriteSet_add__P2441_args@fn
  .short 251, 2 ; remove
  .word sprites_SpriteSet_remove__P2443_args@fn
  .short 104, 2 ; contains
  .word sprites_SpriteSet_contains__P2444_args@fn
  .short 333, 2 ; toString
  .word sprites_SpriteSet_toString__P2447_args@fn
  .word 0, 0 ; the end
        .object game_Hitbox__C2183_VT
        .balign 4
game_Hitbox__C2183_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word game_Hitbox__C2183_IfaceVT
        .short 31 ; class-id
        .short 0 ; reserved
        .word 1650515227 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
game_Hitbox__C2183_IfaceVT:
  .short 80, 142, 172, 66, 64, 62, 60, 106, 152, 118, 52, 106, 48, 46, 60, 42, 40, 118, 36, 34, 32, 30, 28, 58, 24, 22, 20, 42, 56, 14, 100, 10, 8, 6, 4, 2
  .short 157, 0 ; hash
  .word 4
  .short 229, 0 ; parent
  .word 8
  .short 225, 0 ; ox
  .word 12
  .short 226, 0 ; oy
  .word 16
  .short 348, 0 ; width
  .word 20
  .short 161, 0 ; height
  .word 24
  .short 188, 1 ; left
  .word game_Hitbox_left__P2191_args@fn
  .short 334, 1 ; top
  .word game_Hitbox_top__P2192_args@fn
  .short 261, 1 ; right
  .word game_Hitbox_right__P2193_args@fn
  .short 73, 1 ; bottom
  .word game_Hitbox_bottom__P2194_args@fn
  .short 181, 2 ; isValid
  .word game_Hitbox_isValid__P2195_args@fn
  .short 104, 2 ; contains
  .word game_Hitbox_contains__P2196_args@fn
  .short 339, 2 ; updateIfInvalid
  .word game_Hitbox_updateIfInvalid__P2197_args@fn
  .short 224, 2 ; overlapsWith
  .word game_Hitbox_overlapsWith__P2198_args@fn
  .word 0, 0 ; the end
        .object scene_Scene__C2816_VT
        .balign 4
scene_Scene__C2816_VT:
        .short 100  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Scene__C2816_IfaceVT
        .short 32 ; class-id
        .short 0 ; reserved
        .word 1703617818 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_Scene__C2816_IfaceVT:
  .short 208, 182, 132, 226, 128, 126, 124, 138, 272, 158, 276, 114, 112, 110, 244, 306, 104, 102, 268, 98, 96, 94, 316, 122, 88, 302, 84, 274, 80, 78, 188, 74, 72, 174, 68, 66, 64, 86, 60, 58, 176, 198, 140, 50, 48, 46, 44, 106, 216, 46, 36, 218, 32, 110, 28, 26, 24, 22, 148, 74, 224, 14, 12, 10, 8, 6, 4, 2
  .short 135, 0 ; eventContext
  .word 4
  .short 70, 0 ; background
  .word 8
  .short 323, 0 ; tileMap
  .word 12
  .short 62, 0 ; allSprites
  .word 16
  .short 311, 0 ; spriteNextId
  .word 20
  .short 313, 0 ; spritesByKind
  .word 24
  .short 232, 0 ; physicsEngine
  .word 28
  .short 83, 0 ; camera
  .word 32
  .short 138, 0 ; flags
  .word 36
  .short 116, 0 ; destroyedHandlers
  .word 40
  .short 108, 0 ; createdHandlers
  .word 44
  .short 221, 0 ; overlapHandlers
  .word 48
  .short 222, 0 ; overlapMap
  .word 52
  .short 324, 0 ; tileOverlapHandlers
  .word 56
  .short 97, 0 ; collisionHandlers
  .word 60
  .short 347, 0 ; wallCollisionHandlers
  .word 64
  .short 146, 0 ; gameForeverHandlers
  .word 68
  .short 230, 0 ; particleSources
  .word 72
  .short 105, 0 ; controlledSprites
  .word 76
  .short 139, 0 ; followingSprites
  .word 80
  .short 76, 0 ; buttonEventHandlers
  .word 84
  .short 31, 0 ; _millis
  .word 88
  .short 12, 0 ; _data
  .word 92
  .short 239, 0 ; previousScene
  .word 96
  .short 170, 2 ; init
  .word scene_Scene_init__P2839_args@fn
  .short 109, 1 ; data
  .word scene_Scene_data__P2840_args@fn
  .short 204, 2 ; millis
  .word scene_Scene_millis__P2841_args@fn
  .short 59, 2 ; addSprite
  .word scene_Scene_addSprite__P2842_args@fn
  .short 253, 2 ; render
  .word scene_Scene_render__P2844_args@fn
  .word 0, 0 ; the end
        .object scene_Camera__C2754_VT
        .balign 4
scene_Camera__C2754_VT:
        .short 44  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Camera__C2754_IfaceVT
        .short 33 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_Camera__C2754_IfaceVT:
  .short 72, 70, 92, 74, 192, 126, 60, 58, 176, 150, 84, 50, 96, 46, 44, 42, 40, 38, 36, 90, 144, 46, 28, 162, 96, 166, 20, 18, 96, 14, 52, 162, 8, 6, 4, 2
  .short 33, 0 ; _offsetX
  .word 4
  .short 34, 0 ; _offsetY
  .word 8
  .short 122, 0 ; drawOffsetX
  .word 12
  .short 123, 0 ; drawOffsetY
  .word 16
  .short 309, 0 ; sprite
  .word 20
  .short 24, 0 ; _lastUpdatedSpriteX
  .word 24
  .short 25, 0 ; _lastUpdatedSpriteY
  .word 28
  .short 300, 0 ; shakeStartTime
  .word 32
  .short 299, 0 ; shakeDuration
  .word 36
  .short 298, 0 ; shakeAmplitude
  .word 40
  .short 214, 1 ; offsetX
  .word scene_Camera_offsetX__P2759_args@fn
  .short 214, 0 ; set offsetX
  .word scene_Camera_offsetX__P2760_args@fn
  .short 215, 1 ; offsetY
  .word scene_Camera_offsetY__P2761_args@fn
  .short 215, 0 ; set offsetY
  .word scene_Camera_offsetY__P2762_args@fn
  .short 353, 1 ; x
  .word scene_Camera_x__P2763_args@fn
  .short 357, 1 ; y
  .word scene_Camera_y__P2764_args@fn
  .short 188, 1 ; left
  .word scene_Camera_left__P2765_args@fn
  .short 334, 1 ; top
  .word scene_Camera_top__P2767_args@fn
  .short 180, 2 ; isUpdated
  .word scene_Camera_isUpdated__P2770_args@fn
  .short 337, 2 ; update
  .word scene_Camera_update__P2771_args@fn
  .word 0, 0 ; the end
        .object scene_Background__C2642_VT
        .balign 4
scene_Background__C2642_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Background__C2642_IfaceVT
        .short 34 ; class-id
        .short 0 ; reserved
        .word 1468534557 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_Background__C2642_IfaceVT:
  .short 56, 30, 20, 34, 16, 14, 12, 34, 8, 6, 4, 2
  .short 98, 0 ; color
  .word 4
  .short 21, 0 ; _image
  .word 8
  .short 83, 0 ; camera
  .word 12
  .short 29, 0 ; _layers
  .word 16
  .short 120, 2 ; draw
  .word scene_Background_draw__P2651_args@fn
  .word 0, 0 ; the end
        .object scene_BackgroundLayer__C2652_VT
        .balign 4
scene_BackgroundLayer__C2652_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_BackgroundLayer__C2652_IfaceVT
        .short 35 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_BackgroundLayer__C2652_IfaceVT:
  .short 24, 46, 28, 58, 16, 30, 60, 42, 8, 6, 4, 2
  .short 118, 0 ; distance
  .word 4
  .short 167, 0 ; img
  .word 8
  .short 257, 0 ; repeatX
  .word 12
  .short 258, 0 ; repeatY
  .word 16
  .short 60, 0 ; alignX
  .word 20
  .short 61, 0 ; alignY
  .word 24
  .short 120, 2 ; draw
  .word scene_BackgroundLayer_draw__P2660_args@fn
  .word 0, 0 ; the end
        .object tiles_TileMap__C2708_VT
        .balign 4
tiles_TileMap__C2708_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word tiles_TileMap__C2708_IfaceVT
        .short 36 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
tiles_TileMap__C2708_IfaceVT:
  .short 136, 134, 132, 130, 128, 126, 124, 122, 280, 158, 116, 114, 112, 110, 108, 210, 200, 158, 252, 170, 96, 94, 92, 90, 120, 86, 172, 82, 80, 94, 220, 98, 72, 70, 68, 186, 64, 62, 60, 58, 64, 54, 52, 50, 48, 158, 44, 42, 40, 38, 36, 34, 112, 158, 164, 26, 88, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 43, 0 ; _scale
  .word 4
  .short 28, 0 ; _layer
  .word 8
  .short 30, 0 ; _map
  .word 12
  .short 254, 0 ; renderable
  .word 16
  .short 155, 0 ; handlerState
  .word 20
  .short 270, 1 ; scale
  .word tiles_TileMap_scale__P2711_args@fn
  .short 270, 0 ; set scale
  .word tiles_TileMap_scale__P2712_args@fn
  .short 109, 1 ; data
  .word tiles_TileMap_data__P2713_args@fn
  .short 214, 2 ; offsetX
  .word tiles_TileMap_offsetX__P2714_args@fn
  .short 215, 2 ; offsetY
  .word tiles_TileMap_offsetY__P2715_args@fn
  .short 67, 2 ; areaWidth
  .word tiles_TileMap_areaWidth__P2716_args@fn
  .short 66, 2 ; areaHeight
  .word tiles_TileMap_areaHeight__P2717_args@fn
  .short 186, 1 ; layer
  .word tiles_TileMap_layer__P2718_args@fn
  .short 133, 1 ; enabled
  .word tiles_TileMap_enabled__P2720_args@fn
  .short 151, 2 ; getTile
  .word tiles_TileMap_getTile__P2722_args@fn
  .short 153, 2 ; getTileIndex
  .word tiles_TileMap_getTileIndex__P2723_args@fn
  .short 120, 2 ; draw
  .word tiles_TileMap_draw__P4744_args@fn
  .short 173, 2 ; isObstacle
  .word tiles_TileMap_isObstacle__P2729_args@fn
  .short 148, 2 ; getObstacle
  .word tiles_TileMap_getObstacle__P2730_args@fn
  .short 174, 2 ; isOnWall
  .word tiles_TileMap_isOnWall__P2731_args@fn
  .short 152, 2 ; getTileImage
  .word tiles_TileMap_getTileImage__P2732_args@fn
  .word 0, 0 ; the end
        .object tiles_TileMapData__C2690_VT
        .balign 4
tiles_TileMapData__C2690_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word tiles_TileMapData__C2690_IfaceVT
        .short 37 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
tiles_TileMapData__C2690_IfaceVT:
  .short 72, 70, 68, 178, 136, 102, 156, 74, 56, 54, 52, 50, 72, 46, 44, 90, 40, 94, 140, 34, 32, 38, 116, 26, 24, 22, 20, 50, 80, 14, 12, 10, 8, 6, 4, 2
  .short 109, 0 ; data
  .word 4
  .short 187, 0 ; layers
  .word 8
  .short 328, 0 ; tileset
  .word 12
  .short 78, 0 ; cachedTileView
  .word 16
  .short 43, 0 ; _scale
  .word 20
  .short 51, 0 ; _width
  .word 24
  .short 18, 0 ; _height
  .word 28
  .short 348, 1 ; width
  .word tiles_TileMapData_width__P2692_args@fn
  .short 161, 1 ; height
  .word tiles_TileMapData_height__P2693_args@fn
  .short 270, 1 ; scale
  .word tiles_TileMapData_scale__P2694_args@fn
  .short 270, 0 ; set scale
  .word tiles_TileMapData_scale__P2695_args@fn
  .short 151, 2 ; getTile
  .word tiles_TileMapData_getTile__P2696_args@fn
  .short 152, 2 ; getTileImage
  .word tiles_TileMapData_getTileImage__P2699_args@fn
  .short 182, 2 ; isWall
  .word tiles_TileMapData_isWall__P2701_args@fn
  .short 176, 2 ; isOutsideMap
  .word tiles_TileMapData_isOutsideMap__P2702_args@fn
  .word 0, 0 ; the end
        .object controller_Controller__C2110_VT
        .balign 4
controller_Controller__C2110_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_Controller__C2110_IfaceVT
        .short 38 ; class-id
        .short 0 ; reserved
        .word 1192397594 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
controller_Controller__C2110_IfaceVT:
  .short 136, 134, 220, 170, 128, 126, 124, 250, 120, 118, 116, 114, 176, 110, 108, 106, 104, 102, 180, 98, 200, 94, 92, 90, 96, 86, 84, 82, 80, 150, 76, 90, 72, 126, 68, 90, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 70, 36, 34, 128, 150, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 234, 0 ; playerIndex
  .word 4
  .short 77, 0 ; buttons
  .word 8
  .short 63, 0 ; analog
  .word 12
  .short 20, 0 ; _id
  .word 16
  .short 10, 0 ; _connected
  .word 20
  .short 11, 1 ; _controlledSprites
  .word controller_Controller__controlledSprites__P2115_args@fn
  .short 11, 0 ; set _controlledSprites
  .word controller_Controller__controlledSprites__P2116_args@fn
  .short 164, 1 ; id
  .word controller_Controller_id__P2117_args@fn
  .short 188, 1 ; left
  .word controller_Controller_left__P2119_args@fn
  .short 261, 1 ; right
  .word controller_Controller_right__P2120_args@fn
  .short 336, 1 ; up
  .word controller_Controller_up__P2121_args@fn
  .short 119, 1 ; down
  .word controller_Controller_down__P2122_args@fn
  .short 75, 2 ; button
  .word controller_Controller_button__P4596_args@fn
  .short 102, 1 ; connected
  .word controller_Controller_connected__P2130_args@fn
  .short 102, 0 ; set connected
  .word controller_Controller_connected__P2131_args@fn
  .short 3, 2 ; __preUpdate
  .word controller_Controller___preUpdate__P2137_args@fn
  .short 4, 2 ; __update
  .word controller_Controller___update__P2138_args@fn
  .word 0, 0 ; the end
        .object control_FrameCallback__C392_VT
        .balign 4
control_FrameCallback__C392_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word control_FrameCallback__C392_IfaceVT
        .short 39 ; class-id
        .short 0 ; reserved
        .word 1468534559 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_FrameCallback__C392_IfaceVT:
  .short 12, 18, 8, 6, 4, 2
  .short 220, 0 ; order
  .word 4
  .short 154, 0 ; handler
  .word 8
  .word 0, 0 ; the end
        .object control_PollEvent__C4381_VT
        .balign 4
control_PollEvent__C4381_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word control_PollEvent__C4381_IfaceVT
        .short 40 ; class-id
        .short 0 ; reserved
        .word 1703617821 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_PollEvent__C4381_IfaceVT:
  .short 56, 22, 20, 26, 56, 14, 12, 26, 32, 6, 4, 2
  .short 132, 0 ; eid
  .word 4
  .short 344, 0 ; vid
  .word 8
  .short 315, 0 ; start
  .word 12
  .short 330, 0 ; timeOut
  .word 16
  .short 101, 0 ; condition
  .word 20
  .short 218, 0 ; once
  .word 24
  .word 0, 0 ; the end
        .object ArcadePhysicsEngine__C2500_VT
        .balign 4
ArcadePhysicsEngine__C2500_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word ArcadePhysicsEngine__C2500_IfaceVT
        .short 29 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word ArcadePhysicsEngine_addSprite__P2509_nochk@fn
        .word ArcadePhysicsEngine_removeSprite__P2510_nochk@fn
        .word ArcadePhysicsEngine_moveSprite__P2514_nochk@fn
        .word ArcadePhysicsEngine_draw__P2511_nochk@fn
        .word ArcadePhysicsEngine_move__P2512_nochk@fn
        .balign 4
ArcadePhysicsEngine__C2500_IfaceVT:
  .short 136, 262, 132, 130, 208, 126, 124, 122, 120, 118, 116, 114, 112, 110, 252, 146, 272, 102, 100, 98, 96, 94, 92, 90, 88, 150, 236, 82, 80, 78, 92, 74, 168, 70, 68, 66, 64, 62, 60, 58, 56, 102, 156, 50, 48, 46, 44, 42, 176, 222, 36, 154, 56, 142, 188, 26, 200, 22, 20, 18, 16, 14, 44, 18, 8, 6, 4, 2
  .short 312, 0 ; sprites
  .word 4
  .short 195, 0 ; map
  .word 8
  .short 201, 0 ; maxVelocity
  .word 12
  .short 197, 0 ; maxNegativeVelocity
  .word 16
  .short 207, 0 ; minSingleStep
  .word 20
  .short 198, 0 ; maxSingleStep
  .word 24
  .short 199, 1 ; maxSpeed
  .word ArcadePhysicsEngine_maxSpeed__P2502_args@fn
  .short 199, 0 ; set maxSpeed
  .word ArcadePhysicsEngine_maxSpeed__P2503_args@fn
  .short 208, 1 ; minStep
  .word ArcadePhysicsEngine_minStep__P2504_args@fn
  .short 208, 0 ; set minStep
  .word ArcadePhysicsEngine_minStep__P2505_args@fn
  .short 200, 1 ; maxStep
  .word ArcadePhysicsEngine_maxStep__P2506_args@fn
  .short 200, 0 ; set maxStep
  .word ArcadePhysicsEngine_maxStep__P2507_args@fn
  .short 59, 2 ; addSprite
  .word ArcadePhysicsEngine_addSprite__P2509_args@fn
  .short 252, 2 ; removeSprite
  .word ArcadePhysicsEngine_removeSprite__P2510_args@fn
  .short 120, 2 ; draw
  .word ArcadePhysicsEngine_draw__P2511_args@fn
  .short 209, 2 ; move
  .word ArcadePhysicsEngine_move__P2512_args@fn
  .short 106, 2 ; createMovingSprite
  .word ArcadePhysicsEngine_createMovingSprite__P4668_args@fn
  .short 310, 2 ; spriteCollisions
  .word ArcadePhysicsEngine_spriteCollisions__P4669_args@fn
  .short 275, 2 ; screenEdgeCollisions
  .word ArcadePhysicsEngine_screenEdgeCollisions__P4670_args@fn
  .short 326, 2 ; tilemapCollisions
  .word ArcadePhysicsEngine_tilemapCollisions__P4671_args@fn
  .short 327, 2 ; tilemapOverlaps
  .word ArcadePhysicsEngine_tilemapOverlaps__P4672_args@fn
  .short 210, 2 ; moveSprite
  .word ArcadePhysicsEngine_moveSprite__P2514_args@fn
  .short 84, 2 ; canResolveClipping
  .word ArcadePhysicsEngine_canResolveClipping__P4673_args@fn
  .short 103, 2 ; constrain
  .word ArcadePhysicsEngine_constrain__P4674_args@fn
  .word 0, 0 ; the end
        .object sprites_SpriteMap__C2419_VT
        .balign 4
sprites_SpriteMap__C2419_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_SpriteMap__C2419_IfaceVT
        .short 41 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word sprites_SpriteMap_toString__P2427_args@fn
        .balign 4
sprites_SpriteMap__C2419_IfaceVT:
  .short 152, 110, 164, 66, 64, 62, 60, 74, 56, 166, 52, 50, 56, 46, 116, 130, 40, 62, 36, 82, 32, 30, 28, 58, 24, 22, 76, 18, 120, 14, 12, 74, 8, 6, 4, 2
  .short 91, 0 ; cellWidth
  .word 4
  .short 90, 0 ; cellHeight
  .word 8
  .short 263, 0 ; rowCount
  .word 12
  .short 100, 0 ; columnCount
  .word 16
  .short 74, 0 ; buckets
  .word 20
  .short 212, 2 ; neighbors
  .word sprites_SpriteMap_neighbors__P2421_args@fn
  .short 223, 2 ; overlaps
  .word sprites_SpriteMap_overlaps__P2422_args@fn
  .short 120, 2 ; draw
  .word sprites_SpriteMap_draw__P2423_args@fn
  .short 260, 2 ; resizeBuckets
  .word sprites_SpriteMap_resizeBuckets__P2424_args@fn
  .short 95, 2 ; clear
  .word sprites_SpriteMap_clear__P2425_args@fn
  .short 183, 2 ; key
  .word sprites_SpriteMap_key__P4631_args@fn
  .short 172, 2 ; insertAtKey
  .word sprites_SpriteMap_insertAtKey__P4632_args@fn
  .short 171, 2 ; insertAABB
  .word sprites_SpriteMap_insertAABB__P2426_args@fn
  .short 202, 2 ; mergeAtKey
  .word sprites_SpriteMap_mergeAtKey__P4633_args@fn
  .short 333, 2 ; toString
  .word sprites_SpriteMap_toString__P2427_args@fn
  .word 0, 0 ; the end
        .object scene_systemMenu_PauseMenu__C3063_VT
        .balign 4
scene_systemMenu_PauseMenu__C3063_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_systemMenu_PauseMenu__C3063_IfaceVT
        .short 42 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_systemMenu_PauseMenu__C3063_IfaceVT:
  .short 72, 94, 116, 138, 128, 62, 60, 58, 56, 54, 60, 50, 48, 102, 76, 42, 40, 38, 36, 122, 72, 126, 44, 106, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 219, 0 ; options
  .word 4
  .short 321, 0 ; theme
  .word 8
  .short 281, 0 ; selection
  .word 12
  .short 277, 0 ; scrollRow
  .word 16
  .short 278, 0 ; scrollTarget
  .word 20
  .short 276, 0 ; scrollOffset
  .word 24
  .short 147, 0 ; generator
  .word 28
  .short 302, 2 ; show
  .word scene_systemMenu_PauseMenu_show__P3065_args@fn
  .short 217, 2 ; onUpdate
  .word scene_systemMenu_PauseMenu_onUpdate__P3066_args@fn
  .short 294, 2 ; setSelection
  .word scene_systemMenu_PauseMenu_setSelection__P3067_args@fn
  .short 127, 2 ; drawText
  .word scene_systemMenu_PauseMenu_drawText__P3068_args@fn
  .short 117, 2 ; dispose
  .word scene_systemMenu_PauseMenu_dispose__P3069_args@fn
  .short 341, 2 ; updateScrollTarget
  .word scene_systemMenu_PauseMenu_updateScrollTarget__P5071_args@fn
  .word 0, 0 ; the end
        .object scene_systemMenu_MenuOption__C3055_VT
        .balign 4
scene_systemMenu_MenuOption__C3055_VT:
        .short 36  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_systemMenu_MenuOption__C3055_IfaceVT
        .short 43 ; class-id
        .short 0 ; reserved
        .word 965512986 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_systemMenu_MenuOption__C3055_IfaceVT:
  .short 136, 134, 156, 130, 128, 142, 124, 122, 120, 118, 148, 114, 192, 110, 108, 106, 104, 102, 100, 202, 96, 94, 92, 146, 88, 86, 92, 82, 80, 78, 76, 74, 72, 70, 164, 66, 64, 62, 60, 58, 56, 94, 52, 50, 48, 46, 92, 42, 40, 126, 36, 34, 32, 102, 28, 26, 88, 22, 20, 18, 16, 14, 124, 10, 8, 6, 4, 2
  .short 85, 0 ; card
  .word 4
  .short 162, 0 ; icon
  .word 8
  .short 334, 0 ; top
  .word 12
  .short 316, 0 ; state
  .word 16
  .short 321, 0 ; theme
  .word 20
  .short 163, 0 ; iconImage
  .word 24
  .short 150, 0 ; getText
  .word 28
  .short 55, 0 ; action
  .word 32
  .short 302, 2 ; show
  .word scene_systemMenu_MenuOption_show__P3057_args@fn
  .short 235, 2 ; position
  .word scene_systemMenu_MenuOption_position__P3058_args@fn
  .short 290, 2 ; setOffset
  .word scene_systemMenu_MenuOption_setOffset__P3059_args@fn
  .short 297, 2 ; setTheme
  .word scene_systemMenu_MenuOption_setTheme__P3060_args@fn
  .short 296, 2 ; setState
  .word scene_systemMenu_MenuOption_setState__P3061_args@fn
  .short 117, 2 ; dispose
  .word scene_systemMenu_MenuOption_dispose__P3062_args@fn
  .short 338, 2 ; updateCard
  .word scene_systemMenu_MenuOption_updateCard__P5070_args@fn
  .word 0, 0 ; the end
        .object scene_Renderable__C2773_VT
        .balign 4
scene_Renderable__C2773_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Renderable__C2773_IfaceVT
        .short 26 ; class-id
        .short 0 ; reserved
        .word 1197357340 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word scene_Renderable___visible__P2775_nochk@fn
        .word sprites_BaseSprite___draw__P2076_nochk@fn
        .word scene_Renderable___drawCore__P2776_nochk@fn
        .word sprites_BaseSprite___update__P2078_nochk@fn
        .balign 4
scene_Renderable__C2773_IfaceVT:
  .short 40, 110, 36, 34, 96, 30, 60, 26, 64, 22, 68, 26, 16, 14, 28, 34, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 164, 0 ; id
  .word 8
  .short 154, 0 ; handler
  .word 12
  .short 301, 0 ; shouldBeVisible
  .word 16
  .short 5, 2 ; __visible
  .word scene_Renderable___visible__P2775_args@fn
  .short 2, 2 ; __drawCore
  .word scene_Renderable___drawCore__P2776_args@fn
  .short 361, 1 ; z
  .word sprites_BaseSprite_z__P2074_args@fn
  .short 361, 0 ; set z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2076_args@fn
  .short 4, 2 ; __update
  .word sprites_BaseSprite___update__P2078_args@fn
  .word 0, 0 ; the end
        .object particles_ParticleSource__C3119_VT
        .balign 4
particles_ParticleSource__C3119_VT:
        .short 56  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ParticleSource__C3119_IfaceVT
        .short 27 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word sprites_BaseSprite___visible__P2073_nochk@fn
        .word particles_ParticleSource___draw__P3125_nochk@fn
        .word sprites_BaseSprite___drawCore__P2077_nochk@fn
        .word sprites_BaseSprite___update__P2078_nochk@fn
        .word particles_ParticleSource_updateParticle__P5156_nochk@fn
        .balign 4
particles_ParticleSource__C3119_IfaceVT:
  .short 264, 262, 260, 258, 256, 254, 252, 250, 248, 462, 244, 242, 240, 238, 244, 234, 360, 230, 228, 226, 224, 222, 220, 218, 216, 214, 212, 410, 208, 286, 348, 290, 200, 198, 196, 378, 240, 190, 188, 186, 184, 182, 220, 178, 336, 174, 172, 362, 168, 166, 164, 162, 160, 262, 156, 154, 152, 150, 316, 146, 144, 206, 140, 138, 344, 134, 132, 130, 128, 302, 124, 122, 120, 118, 148, 114, 112, 110, 228, 162, 104, 102, 100, 98, 192, 342, 92, 106, 88, 222, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 80, 54, 292, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 138, 96, 246, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 164, 0 ; id
  .word 8
  .short 240, 0 ; priority
  .word 12
  .short 14, 0 ; _dt
  .word 16
  .short 64, 0 ; anchor
  .word 20
  .short 191, 0 ; lifespan
  .word 24
  .short 227, 0 ; pFlags
  .word 28
  .short 158, 0 ; head
  .word 32
  .short 331, 0 ; timer
  .word 36
  .short 231, 0 ; period
  .word 40
  .short 15, 0 ; _factory
  .word 44
  .short 68, 0 ; ax
  .word 48
  .short 69, 0 ; ay
  .word 52
  .short 1, 2 ; __draw
  .word particles_ParticleSource___draw__P3125_args@fn
  .short 48, 2 ; _update
  .word particles_ParticleSource__update__P3126_args@fn
  .short 40, 2 ; _prune
  .word particles_ParticleSource__prune__P3127_args@fn
  .short 282, 2 ; setAcceleration
  .word particles_ParticleSource_setAcceleration__P3128_args@fn
  .short 293, 2 ; setRelativeToCamera
  .word particles_ParticleSource_setRelativeToCamera__P3130_args@fn
  .short 133, 1 ; enabled
  .word particles_ParticleSource_enabled__P3131_args@fn
  .short 133, 0 ; set enabled
  .word particles_ParticleSource_enabled__P3132_args@fn
  .short 114, 2 ; destroy
  .word particles_ParticleSource_destroy__P3133_args@fn
  .short 95, 2 ; clear
  .word particles_ParticleSource_clear__P3134_args@fn
  .short 283, 2 ; setAnchor
  .word particles_ParticleSource_setAnchor__P3135_args@fn
  .short 292, 2 ; setRate
  .word particles_ParticleSource_setRate__P3136_args@fn
  .short 285, 2 ; setFactory
  .word particles_ParticleSource_setFactory__P3138_args@fn
  .short 340, 2 ; updateParticle
  .word particles_ParticleSource_updateParticle__P5156_args@fn
  .short 124, 2 ; drawParticle
  .word particles_ParticleSource_drawParticle__P5157_args@fn
  .short 5, 2 ; __visible
  .word sprites_BaseSprite___visible__P2073_args@fn
  .short 361, 1 ; z
  .word sprites_BaseSprite_z__P2074_args@fn
  .short 361, 0 ; set z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 2, 2 ; __drawCore
  .word sprites_BaseSprite___drawCore__P2077_args@fn
  .short 4, 2 ; __update
  .word sprites_BaseSprite___update__P2078_args@fn
  .word 0, 0 ; the end
        .object effects_ParticleEffect__C3230_VT
        .balign 4
effects_ParticleEffect__C3230_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word effects_ParticleEffect__C3230_IfaceVT
        .short 44 ; class-id
        .short 0 ; reserved
        .word 1650515229 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
effects_ParticleEffect__C3230_IfaceVT:
  .short 48, 22, 36, 18, 16, 22, 44, 10, 8, 6, 4, 2
  .short 305, 0 ; sourceFactory
  .word 4
  .short 111, 0 ; defaultRate
  .word 8
  .short 110, 0 ; defaultLifespan
  .word 12
  .short 315, 2 ; start
  .word effects_ParticleEffect_start__P3232_args@fn
  .short 114, 2 ; destroy
  .word effects_ParticleEffect_destroy__P3233_args@fn
  .word 0, 0 ; the end
        .object effects_ImageEffect__C3258_VT
        .balign 4
effects_ImageEffect__C3258_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word effects_ImageEffect__C3258_IfaceVT
        .short 46 ; class-id
        .short 0 ; reserved
        .word 1197357341 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
effects_ImageEffect__C3258_IfaceVT:
  .short 56, 30, 20, 18, 40, 54, 12, 26, 8, 6, 4, 2
  .short 236, 0 ; preferredDelay
  .word 4
  .short 130, 0 ; effect
  .word 8
  .short 136, 0 ; fastRandom
  .word 12
  .short 332, 0 ; times
  .word 16
  .short 65, 2 ; applyTo
  .word effects_ImageEffect_applyTo__P3260_args@fn
  .short 92, 2 ; change
  .word effects_ImageEffect_change__P3261_args@fn
  .word 0, 0 ; the end
        .object music_Melody__C1623_VT
        .balign 4
music_Melody__C1623_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word music_Melody__C1623_IfaceVT
        .short 47 ; class-id
        .short 0 ; reserved
        .word 1468534558 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word music_Melody_toString__P1632_args@fn
        .balign 4
music_Melody__C1623_IfaceVT:
  .short 16, 14, 20, 26, 8, 6, 4, 2
  .short 47, 0 ; _text
  .word 4
  .short 37, 0 ; _player
  .word 8
  .short 333, 2 ; toString
  .word music_Melody_toString__P1632_args@fn
  .word 0, 0 ; the end
        .object effects_ScreenEffect__C3234_VT
        .balign 4
effects_ScreenEffect__C3234_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word effects_ScreenEffect__C3234_IfaceVT
        .short 45 ; class-id
        .short 0 ; reserved
        .word 1650515229 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
effects_ScreenEffect__C3234_IfaceVT:
  .short 64, 22, 36, 18, 48, 22, 36, 58, 8, 6, 4, 2
  .short 305, 0 ; sourceFactory
  .word 4
  .short 111, 0 ; defaultRate
  .word 8
  .short 110, 0 ; defaultLifespan
  .word 12
  .short 304, 0 ; source
  .word 16
  .short 272, 0 ; sceneDefaultRate
  .word 20
  .short 315, 2 ; start
  .word effects_ParticleEffect_start__P3232_args@fn
  .short 114, 2 ; destroy
  .word effects_ParticleEffect_destroy__P3233_args@fn
  .word 0, 0 ; the end
        .object particles_ParticleFactory__C3155_VT
        .balign 4
particles_ParticleFactory__C3155_VT:
        .short 4  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ParticleFactory__C3155_IfaceVT
        .short 48 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_ParticleFactory_createParticle__P3157_nochk@fn
        .word particles_ParticleFactory_drawParticle__P3158_nochk@fn
        .balign 4
particles_ParticleFactory__C3155_IfaceVT:
  .short 12, 18, 8, 6, 4, 2
  .short 107, 2 ; createParticle
  .word particles_ParticleFactory_createParticle__P3157_args@fn
  .short 124, 2 ; drawParticle
  .word particles_ParticleFactory_drawParticle__P3158_args@fn
  .word 0, 0 ; the end
        .object particles_SprayFactory__C3159_VT
        .balign 4
particles_SprayFactory__C3159_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_SprayFactory__C3159_IfaceVT
        .short 49 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_SprayFactory_createParticle__P3161_nochk@fn
        .word particles_SprayFactory_drawParticle__P3162_nochk@fn
        .balign 4
particles_SprayFactory__C3159_IfaceVT:
  .short 24, 30, 20, 42, 16, 46, 52, 26, 56, 6, 4, 2
  .short 307, 0 ; speed
  .word 4
  .short 205, 0 ; minAngle
  .word 8
  .short 308, 0 ; spread
  .word 12
  .short 107, 2 ; createParticle
  .word particles_SprayFactory_createParticle__P3161_args@fn
  .short 124, 2 ; drawParticle
  .word particles_SprayFactory_drawParticle__P3162_args@fn
  .short 295, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3163_args@fn
  .short 284, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3164_args@fn
  .word 0, 0 ; the end
        .object particles_AreaFactory__C3165_VT
        .balign 4
particles_AreaFactory__C3165_VT:
        .short 36  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_AreaFactory__C3165_IfaceVT
        .short 50 ; class-id
        .short 0 ; reserved
        .word 852011802 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_AreaFactory_createParticle__P3171_nochk@fn
        .word particles_AreaFactory_drawParticle__P3172_nochk@fn
        .balign 4
particles_AreaFactory__C3165_IfaceVT:
  .short 136, 134, 132, 130, 128, 126, 140, 122, 120, 118, 116, 114, 112, 142, 172, 106, 104, 102, 100, 98, 96, 182, 92, 90, 88, 86, 84, 106, 80, 78, 76, 74, 72, 150, 68, 66, 64, 62, 132, 58, 56, 54, 60, 50, 48, 46, 44, 42, 96, 38, 36, 34, 32, 30, 28, 66, 72, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 307, 0 ; speed
  .word 4
  .short 205, 0 ; minAngle
  .word 8
  .short 308, 0 ; spread
  .word 12
  .short 355, 0 ; xRange
  .word 16
  .short 359, 0 ; yRange
  .word 20
  .short 206, 0 ; minLifespan
  .word 24
  .short 196, 0 ; maxLifespan
  .word 28
  .short 145, 0 ; galois
  .word 32
  .short 107, 2 ; createParticle
  .word particles_AreaFactory_createParticle__P3171_args@fn
  .short 124, 2 ; drawParticle
  .word particles_AreaFactory_drawParticle__P3172_args@fn
  .short 295, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3163_args@fn
  .short 284, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3164_args@fn
  .word 0, 0 ; the end
        .object particles_ShapeFactory__C3181_VT
        .balign 4
particles_ShapeFactory__C3181_VT:
        .short 48  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ShapeFactory__C3181_IfaceVT
        .short 51 ; class-id
        .short 0 ; reserved
        .word 852011802 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_ShapeFactory_createParticle__P3185_nochk@fn
        .word particles_ShapeFactory_drawParticle__P3184_nochk@fn
        .balign 4
particles_ShapeFactory__C3181_IfaceVT:
  .short 136, 134, 132, 130, 128, 126, 140, 122, 120, 118, 116, 114, 112, 142, 212, 106, 104, 102, 100, 98, 96, 214, 92, 90, 88, 86, 84, 106, 80, 78, 76, 74, 160, 182, 68, 66, 64, 62, 156, 58, 128, 54, 60, 50, 112, 46, 44, 42, 96, 38, 36, 34, 32, 110, 28, 66, 72, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 307, 0 ; speed
  .word 4
  .short 205, 0 ; minAngle
  .word 8
  .short 308, 0 ; spread
  .word 12
  .short 355, 0 ; xRange
  .word 16
  .short 359, 0 ; yRange
  .word 20
  .short 206, 0 ; minLifespan
  .word 24
  .short 196, 0 ; maxLifespan
  .word 28
  .short 145, 0 ; galois
  .word 32
  .short 306, 0 ; sources
  .word 36
  .short 225, 0 ; ox
  .word 40
  .short 226, 0 ; oy
  .word 44
  .short 58, 2 ; addShape
  .word particles_ShapeFactory_addShape__P3183_args@fn
  .short 124, 2 ; drawParticle
  .word particles_ShapeFactory_drawParticle__P3184_args@fn
  .short 107, 2 ; createParticle
  .word particles_ShapeFactory_createParticle__P3185_args@fn
  .short 295, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3163_args@fn
  .short 284, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3164_args@fn
  .word 0, 0 ; the end
        .object particles_ConfettiFactory__C3186_VT
        .balign 4
particles_ConfettiFactory__C3186_VT:
        .short 48  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ConfettiFactory__C3186_IfaceVT
        .short 52 ; class-id
        .short 0 ; reserved
        .word 852011802 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_ShapeFactory_createParticle__P3185_nochk@fn
        .word particles_ShapeFactory_drawParticle__P3184_nochk@fn
        .balign 4
particles_ConfettiFactory__C3186_IfaceVT:
  .short 136, 134, 132, 130, 128, 126, 140, 122, 120, 118, 116, 114, 112, 142, 212, 106, 104, 102, 100, 98, 96, 214, 92, 90, 88, 86, 84, 106, 80, 78, 76, 74, 160, 182, 68, 66, 64, 62, 156, 58, 128, 54, 60, 50, 112, 46, 44, 42, 96, 38, 36, 34, 32, 110, 28, 66, 72, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 307, 0 ; speed
  .word 4
  .short 205, 0 ; minAngle
  .word 8
  .short 308, 0 ; spread
  .word 12
  .short 355, 0 ; xRange
  .word 16
  .short 359, 0 ; yRange
  .word 20
  .short 206, 0 ; minLifespan
  .word 24
  .short 196, 0 ; maxLifespan
  .word 28
  .short 145, 0 ; galois
  .word 32
  .short 306, 0 ; sources
  .word 36
  .short 225, 0 ; ox
  .word 40
  .short 226, 0 ; oy
  .word 44
  .short 58, 2 ; addShape
  .word particles_ShapeFactory_addShape__P3183_args@fn
  .short 124, 2 ; drawParticle
  .word particles_ShapeFactory_drawParticle__P3184_args@fn
  .short 107, 2 ; createParticle
  .word particles_ShapeFactory_createParticle__P3185_args@fn
  .short 295, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3163_args@fn
  .short 284, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3164_args@fn
  .word 0, 0 ; the end
        .object particles_Particle__C3100_VT
        .balign 4
particles_Particle__C3100_VT:
        .short 36  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_Particle__C3100_IfaceVT
        .short 53 ; class-id
        .short 0 ; reserved
        .word 1650515228 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
particles_Particle__C3100_IfaceVT:
  .short 40, 38, 36, 34, 32, 38, 60, 26, 24, 38, 76, 18, 16, 54, 60, 10, 32, 6, 4, 2
  .short 52, 0 ; _x
  .word 4
  .short 53, 0 ; _y
  .word 8
  .short 345, 0 ; vx
  .word 12
  .short 346, 0 ; vy
  .word 16
  .short 191, 0 ; lifespan
  .word 20
  .short 213, 0 ; next
  .word 24
  .short 109, 0 ; data
  .word 28
  .short 98, 0 ; color
  .word 32
  .word 0, 0 ; the end
        .object MovingSprite__C2498_VT
        .balign 4
MovingSprite__C2498_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word MovingSprite__C2498_IfaceVT
        .short 54 ; class-id
        .short 0 ; reserved
        .word 1650515229 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
MovingSprite__C2498_IfaceVT:
  .short 24, 46, 28, 66, 48, 14, 28, 50, 8, 6, 4, 2
  .short 309, 0 ; sprite
  .word 4
  .short 79, 0 ; cachedVx
  .word 8
  .short 80, 0 ; cachedVy
  .word 12
  .short 128, 0 ; dx
  .word 16
  .short 129, 0 ; dy
  .word 20
  .short 356, 0 ; xStep
  .word 24
  .short 360, 0 ; yStep
  .word 28
  .word 0, 0 ; the end
        .object tiles_Location__C2666_VT
        .balign 4
tiles_Location__C2666_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word tiles_Location__C2666_IfaceVT
        .short 55 ; class-id
        .short 0 ; reserved
        .word 1783883548 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
tiles_Location__C2666_IfaceVT:
  .short 40, 62, 52, 90, 80, 30, 28, 26, 24, 62, 20, 26, 80, 46, 12, 82, 8, 6, 4, 2
  .short 42, 0 ; _row
  .word 4
  .short 9, 0 ; _col
  .word 8
  .short 323, 1 ; tileMap
  .word tiles_Location_tileMap__P2668_args@fn
  .short 99, 1 ; column
  .word tiles_Location_column__P2669_args@fn
  .short 262, 1 ; row
  .word tiles_Location_row__P2670_args@fn
  .short 353, 1 ; x
  .word tiles_Location_x__P2671_args@fn
  .short 357, 1 ; y
  .word tiles_Location_y__P2672_args@fn
  .short 188, 1 ; left
  .word tiles_Location_left__P2673_args@fn
  .short 334, 1 ; top
  .word tiles_Location_top__P2674_args@fn
  .short 325, 1 ; tileSet
  .word tiles_Location_tileSet__P2677_args@fn
  .word 0, 0 ; the end
        .object sprites_StaticObstacle__C2471_VT
        .balign 4
sprites_StaticObstacle__C2471_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_StaticObstacle__C2471_IfaceVT
        .short 56 ; class-id
        .short 0 ; reserved
        .word 1783883548 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
sprites_StaticObstacle__C2471_IfaceVT:
  .short 40, 70, 36, 34, 32, 78, 28, 26, 88, 62, 20, 34, 40, 70, 12, 18, 8, 6, 4, 2
  .short 186, 0 ; layer
  .word 4
  .short 166, 0 ; image
  .word 8
  .short 322, 0 ; tileIndex
  .word 12
  .short 334, 0 ; top
  .word 16
  .short 188, 0 ; left
  .word 20
  .short 353, 1 ; x
  .word sprites_StaticObstacle_x__P2478_args@fn
  .short 357, 1 ; y
  .word sprites_StaticObstacle_y__P2479_args@fn
  .short 161, 1 ; height
  .word sprites_StaticObstacle_height__P2480_args@fn
  .short 348, 1 ; width
  .word sprites_StaticObstacle_width__P2481_args@fn
  .word 0, 0 ; the end
        .object sprites_BaseSpriteSayRenderer__C2234_VT
        .balign 4
sprites_BaseSpriteSayRenderer__C2234_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_BaseSpriteSayRenderer__C2234_IfaceVT
        .short 57 ; class-id
        .short 0 ; reserved
        .word -75564260 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word sprites_BaseSpriteSayRenderer_draw__P2236_nochk@fn
        .word sprites_BaseSpriteSayRenderer_update__P2237_nochk@fn
        .word sprites_BaseSpriteSayRenderer_destroy__P2238_nochk@fn
        .balign 4
sprites_BaseSpriteSayRenderer__C2234_IfaceVT:
  .short 40, 70, 36, 34, 32, 30, 28, 26, 24, 30, 20, 34, 16, 14, 36, 50, 8, 6, 4, 2
  .short 320, 0 ; text
  .word 4
  .short 137, 0 ; fgColor
  .word 8
  .short 72, 0 ; bgColor
  .word 12
  .short 120, 2 ; draw
  .word sprites_BaseSpriteSayRenderer_draw__P2236_args@fn
  .short 337, 2 ; update
  .word sprites_BaseSpriteSayRenderer_update__P2237_args@fn
  .short 114, 2 ; destroy
  .word sprites_BaseSpriteSayRenderer_destroy__P2238_args@fn
  .word 0, 0 ; the end
.balign 4
.object _pxt_iface_member_names
_pxt_iface_member_names:
    .word 362
    .word _str1926  ; 0 .
    .word _str1927  ; 1 .__draw
    .word _str1928  ; 2 .__drawCore
    .word _str1929  ; 3 .__preUpdate
    .word _str1930  ; 4 .__update
    .word _str1931  ; 5 .__visible
    .word _str1932  ; 6 ._action
    .word _str1933  ; 7 ._ax
    .word _str1934  ; 8 ._ay
    .word _str1935  ; 9 ._col
    .word _str1936  ; 10 ._connected
    .word _str1937  ; 11 ._controlledSprites
    .word _str1938  ; 12 ._data
    .word _str1939  ; 13 ._destroyCore
    .word _str1940  ; 14 ._dt
    .word _str1941  ; 15 ._factory
    .word _str1942  ; 16 ._fx
    .word _str1943  ; 17 ._fy
    .word _str1944  ; 18 ._height
    .word _str1945  ; 19 ._hitbox
    .word _str1946  ; 20 ._id
    .word _str1947  ; 21 ._image
    .word _str1948  ; 22 ._kind
    .word _str1949  ; 23 ._kindsOverlappedWith
    .word _str1950  ; 24 ._lastUpdatedSpriteX
    .word _str1951  ; 25 ._lastUpdatedSpriteY
    .word _str1952  ; 26 ._lastX
    .word _str1953  ; 27 ._lastY
    .word _str1954  ; 28 ._layer
    .word _str1955  ; 29 ._layers
    .word _str1956  ; 30 ._map
    .word _str1957  ; 31 ._millis
    .word _str1958  ; 32 ._obstacles
    .word _str1959  ; 33 ._offsetX
    .word _str1960  ; 34 ._offsetY
    .word _str1961  ; 35 ._overlappers
    .word _str1962  ; 36 ._owner
    .word _str1963  ; 37 ._player
    .word _str1964  ; 38 ._pressed
    .word _str1965  ; 39 ._pressedElasped
    .word _str1966  ; 40 ._prune
    .word _str1967  ; 41 ._repeatCount
    .word _str1968  ; 42 ._row
    .word _str1969  ; 43 ._scale
    .word _str1970  ; 44 ._sprites
    .word _str1971  ; 45 ._sx
    .word _str1972  ; 46 ._sy
    .word _str1973  ; 47 ._text
    .word _str1974  ; 48 ._update
    .word _str1975  ; 49 ._vx
    .word _str1976  ; 50 ._vy
    .word _str1977  ; 51 ._width
    .word _str1978  ; 52 ._x
    .word _str1979  ; 53 ._y
    .word _str1980  ; 54 ._z
    .word _str1981  ; 55 .action
    .word _str1982  ; 56 .activeCard
    .word _str1983  ; 57 .add
    .word _str1984  ; 58 .addShape
    .word _str1985  ; 59 .addSprite
    .word _str1986  ; 60 .alignX
    .word _str1987  ; 61 .alignY
    .word _str1988  ; 62 .allSprites
    .word _str1989  ; 63 .analog
    .word _str1990  ; 64 .anchor
    .word _str1991  ; 65 .applyTo
    .word _str1992  ; 66 .areaHeight
    .word _str1993  ; 67 .areaWidth
    .word _str1994  ; 68 .ax
    .word _str1995  ; 69 .ay
    .word _str1996  ; 70 .background
    .word _str1997  ; 71 .basicCard
    .word _str1998  ; 72 .bgColor
    .word _str1999  ; 73 .bottom
    .word _str2000  ; 74 .buckets
    .word _str2001  ; 75 .button
    .word _str2002  ; 76 .buttonEventHandlers
    .word _str2003  ; 77 .buttons
    .word _str2004  ; 78 .cachedTileView
    .word _str2005  ; 79 .cachedVx
    .word _str2006  ; 80 .cachedVy
    .word _str2007  ; 81 .calcDimensionalHash
    .word _str2008  ; 82 .callback
    .word _str2009  ; 83 .camera
    .word _str2010  ; 84 .canResolveClipping
    .word _str2011  ; 85 .card
    .word _str2012  ; 86 .cardSpacing
    .word _str2013  ; 87 .cardWidth
    .word _str2014  ; 88 .cardsPerRow
    .word _str2015  ; 89 .cardsTop
    .word _str2016  ; 90 .cellHeight
    .word _str2017  ; 91 .cellWidth
    .word _str2018  ; 92 .change
    .word _str2019  ; 93 .charHeight
    .word _str2020  ; 94 .charWidth
    .word _str2021  ; 95 .clear
    .word _str2022  ; 96 .clearObstacles
    .word _str2023  ; 97 .collisionHandlers
    .word _str2024  ; 98 .color
    .word _str2025  ; 99 .column
    .word _str2026  ; 100 .columnCount
    .word _str2027  ; 101 .condition
    .word _str2028  ; 102 .connected
    .word _str2029  ; 103 .constrain
    .word _str2030  ; 104 .contains
    .word _str2031  ; 105 .controlledSprites
    .word _str2032  ; 106 .createMovingSprite
    .word _str2033  ; 107 .createParticle
    .word _str2034  ; 108 .createdHandlers
    .word _str2035  ; 109 .data
    .word _str2036  ; 110 .defaultLifespan
    .word _str2037  ; 111 .defaultRate
    .word _str2038  ; 112 .deltaTime
    .word _str2039  ; 113 .deltaTimeMillis
    .word _str2040  ; 114 .destroy
    .word _str2041  ; 115 .destroyHandler
    .word _str2042  ; 116 .destroyedHandlers
    .word _str2043  ; 117 .dispose
    .word _str2044  ; 118 .distance
    .word _str29  ; 119 .down
    .word _str2045  ; 120 .draw
    .word _str2046  ; 121 .drawDebug
    .word _str2047  ; 122 .drawOffsetX
    .word _str2048  ; 123 .drawOffsetY
    .word _str2049  ; 124 .drawParticle
    .word _str2050  ; 125 .drawSay
    .word _str2051  ; 126 .drawSprite
    .word _str2052  ; 127 .drawText
    .word _str2053  ; 128 .dx
    .word _str2054  ; 129 .dy
    .word _str2055  ; 130 .effect
    .word _str2056  ; 131 .effectSetByUser
    .word _str2057  ; 132 .eid
    .word _str2058  ; 133 .enabled
    .word _str2059  ; 134 .event
    .word _str2060  ; 135 .eventContext
    .word _str2061  ; 136 .fastRandom
    .word _str2062  ; 137 .fgColor
    .word _str2063  ; 138 .flags
    .word _str2064  ; 139 .followingSprites
    .word _str2065  ; 140 .frameCallbacks
    .word _str2066  ; 141 .frameWorker
    .word _str2067  ; 142 .framesInSample
    .word _str2068  ; 143 .fx
    .word _str2069  ; 144 .fy
    .word _str2070  ; 145 .galois
    .word _str2071  ; 146 .gameForeverHandlers
    .word _str2072  ; 147 .generator
    .word _str2073  ; 148 .getObstacle
    .word _str2074  ; 149 .getOrCreateHandlerForEvent
    .word _str2075  ; 150 .getText
    .word _str2076  ; 151 .getTile
    .word _str2077  ; 152 .getTileImage
    .word _str2078  ; 153 .getTileIndex
    .word _str2079  ; 154 .handler
    .word _str2080  ; 155 .handlerState
    .word _str2081  ; 156 .handlers
    .word _str2082  ; 157 .hash
    .word _str2083  ; 158 .head
    .word _str2084  ; 159 .headerFont
    .word _str2085  ; 160 .headerText
    .word _str2086  ; 161 .height
    .word _str2087  ; 162 .icon
    .word _str2088  ; 163 .iconImage
    .word _str2089  ; 164 .id
    .word _str2090  ; 165 .idleCallbacks
    .word _str2091  ; 166 .image
    .word _str2092  ; 167 .img
    .word _str2093  ; 168 .infoFont
    .word _str2094  ; 169 .infoTop
    .word _str2095  ; 170 .init
    .word _str2096  ; 171 .insertAABB
    .word _str2097  ; 172 .insertAtKey
    .word _str2098  ; 173 .isObstacle
    .word _str2099  ; 174 .isOnWall
    .word _str2100  ; 175 .isOutOfScreen
    .word _str2101  ; 176 .isOutsideMap
    .word _str2102  ; 177 .isPressed
    .word _str2103  ; 178 .isScaled
    .word _str2104  ; 179 .isStatic
    .word _str2105  ; 180 .isUpdated
    .word _str2106  ; 181 .isValid
    .word _str2107  ; 182 .isWall
    .word _str2108  ; 183 .key
    .word _str2109  ; 184 .kind
    .word _str2110  ; 185 .lastPerfDump
    .word _str2111  ; 186 .layer
    .word _str2112  ; 187 .layers
    .word _str2113  ; 188 .left
    .word _str2114  ; 189 .length
    .word _str2115  ; 190 .lfsr
    .word _str2116  ; 191 .lifespan
    .word _str2117  ; 192 .loseEffect
    .word _str2118  ; 193 .loseMessage
    .word _str2119  ; 194 .loseSound
    .word _str2120  ; 195 .map
    .word _str2121  ; 196 .maxLifespan
    .word _str2122  ; 197 .maxNegativeVelocity
    .word _str2123  ; 198 .maxSingleStep
    .word _str2124  ; 199 .maxSpeed
    .word _str2125  ; 200 .maxStep
    .word _str2126  ; 201 .maxVelocity
    .word _str2127  ; 202 .mergeAtKey
    .word _str2128  ; 203 .messageSetByUser
    .word _str2129  ; 204 .millis
    .word _str2130  ; 205 .minAngle
    .word _str2131  ; 206 .minLifespan
    .word _str2132  ; 207 .minSingleStep
    .word _str2133  ; 208 .minStep
    .word _str2134  ; 209 .move
    .word _str2135  ; 210 .moveSprite
    .word _str2136  ; 211 .multiplier
    .word _str2137  ; 212 .neighbors
    .word _str2138  ; 213 .next
    .word _str2139  ; 214 .offsetX
    .word _str2140  ; 215 .offsetY
    .word _str2141  ; 216 .onEvent
    .word _str2142  ; 217 .onUpdate
    .word _str2143  ; 218 .once
    .word _str2144  ; 219 .options
    .word _str2145  ; 220 .order
    .word _str2146  ; 221 .overlapHandlers
    .word _str2147  ; 222 .overlapMap
    .word _str2148  ; 223 .overlaps
    .word _str2149  ; 224 .overlapsWith
    .word _str2150  ; 225 .ox
    .word _str2151  ; 226 .oy
    .word _str2152  ; 227 .pFlags
    .word _str2153  ; 228 .padding
    .word _str2154  ; 229 .parent
    .word _str2155  ; 230 .particleSources
    .word _str2156  ; 231 .period
    .word _str2157  ; 232 .physicsEngine
    .word _str2158  ; 233 .pickRandom
    .word _str2159  ; 234 .playerIndex
    .word _str2160  ; 235 .position
    .word _str2161  ; 236 .preferredDelay
    .word _str2162  ; 237 .pressureLevel
    .word _str2163  ; 238 .prevTimeMillis
    .word _str2164  ; 239 .previousScene
    .word _str2165  ; 240 .priority
    .word _str2166  ; 241 .raiseButtonDown
    .word _str2167  ; 242 .raiseButtonRepeat
    .word _str2168  ; 243 .raiseButtonUp
    .word _str2169  ; 244 .randomRange
    .word _str2170  ; 245 .recalcSize
    .word _str2171  ; 246 .register
    .word _str2172  ; 247 .registerFrameCallbacks
    .word _str2173  ; 248 .registerFrameHandler
    .word _str2174  ; 249 .registerHandler
    .word _str2175  ; 250 .registerObstacle
    .word _str2176  ; 251 .remove
    .word _str2177  ; 252 .removeSprite
    .word _str2178  ; 253 .render
    .word _str2179  ; 254 .renderable
    .word _str2180  ; 255 .repeatDelay
    .word _str2181  ; 256 .repeatInterval
    .word _str2182  ; 257 .repeatX
    .word _str2183  ; 258 .repeatY
    .word _str2184  ; 259 .resetHitbox
    .word _str2185  ; 260 .resizeBuckets
    .word _str2186  ; 261 .right
    .word _str2187  ; 262 .row
    .word _str2188  ; 263 .rowCount
    .word _str2189  ; 264 .runButtonEvents
    .word _str2190  ; 265 .runCallbacks
    .word _str2191  ; 266 .runningCallbacks
    .word _str2192  ; 267 .s
    .word _str2193  ; 268 .sayEndTime
    .word _str2194  ; 269 .sayRenderer
    .word _str2195  ; 270 .scale
    .word _str2196  ; 271 .scene
    .word _str2197  ; 272 .sceneDefaultRate
    .word _str2198  ; 273 .scoringType
    .word _str2199  ; 274 .scoringTypeSetByUser
    .word _str2200  ; 275 .screenEdgeCollisions
    .word _str2201  ; 276 .scrollOffset
    .word _str2202  ; 277 .scrollRow
    .word _str2203  ; 278 .scrollTarget
    .word _str2204  ; 279 .seed
    .word _str2205  ; 280 .selectedCard
    .word _str2206  ; 281 .selection
    .word _str2207  ; 282 .setAcceleration
    .word _str2208  ; 283 .setAnchor
    .word _str2209  ; 284 .setDirection
    .word _str2210  ; 285 .setFactory
    .word _str2211  ; 286 .setFlag
    .word _str2212  ; 287 .setHitbox
    .word _str2213  ; 288 .setImage
    .word _str2214  ; 289 .setKind
    .word _str2215  ; 290 .setOffset
    .word _str2216  ; 291 .setPressed
    .word _str2217  ; 292 .setRate
    .word _str2218  ; 293 .setRelativeToCamera
    .word _str2219  ; 294 .setSelection
    .word _str2220  ; 295 .setSpeed
    .word _str2221  ; 296 .setState
    .word _str2222  ; 297 .setTheme
    .word _str2223  ; 298 .shakeAmplitude
    .word _str2224  ; 299 .shakeDuration
    .word _str2225  ; 300 .shakeStartTime
    .word _str2226  ; 301 .shouldBeVisible
    .word _str2227  ; 302 .show
    .word _str2228  ; 303 .soundSetByUser
    .word _str2229  ; 304 .source
    .word _str2230  ; 305 .sourceFactory
    .word _str2231  ; 306 .sources
    .word _str2232  ; 307 .speed
    .word _str2233  ; 308 .spread
    .word _str2234  ; 309 .sprite
    .word _str2235  ; 310 .spriteCollisions
    .word _str2236  ; 311 .spriteNextId
    .word _str2237  ; 312 .sprites
    .word _str2238  ; 313 .spritesByKind
    .word _str2239  ; 314 .src
    .word _str2240  ; 315 .start
    .word _str2241  ; 316 .state
    .word _str2242  ; 317 .sx
    .word _str2243  ; 318 .sy
    .word _str2244  ; 319 .system
    .word _str2245  ; 320 .text
    .word _str2246  ; 321 .theme
    .word _str2247  ; 322 .tileIndex
    .word _str2248  ; 323 .tileMap
    .word _str2249  ; 324 .tileOverlapHandlers
    .word _str2250  ; 325 .tileSet
    .word _str2251  ; 326 .tilemapCollisions
    .word _str2252  ; 327 .tilemapOverlaps
    .word _str2253  ; 328 .tileset
    .word _str2254  ; 329 .timeInSample
    .word _str2255  ; 330 .timeOut
    .word _str2256  ; 331 .timer
    .word _str2257  ; 332 .times
    .word _str2258  ; 333 .toString
    .word _str2259  ; 334 .top
    .word _str2260  ; 335 .unregister
    .word _str30  ; 336 .up
    .word _str2261  ; 337 .update
    .word _str2262  ; 338 .updateCard
    .word _str2263  ; 339 .updateIfInvalid
    .word _str2264  ; 340 .updateParticle
    .word _str2265  ; 341 .updateScrollTarget
    .word _str2266  ; 342 .user
    .word _str2267  ; 343 .value
    .word _str2268  ; 344 .vid
    .word _str2269  ; 345 .vx
    .word _str2270  ; 346 .vy
    .word _str2271  ; 347 .wallCollisionHandlers
    .word _str2272  ; 348 .width
    .word _str2273  ; 349 .winEffect
    .word _str2274  ; 350 .winMessage
    .word _str2275  ; 351 .winMessageMultiplayer
    .word _str2276  ; 352 .winSound
    .word _str2277  ; 353 .x
    .word _str2278  ; 354 .xOffset
    .word _str2279  ; 355 .xRange
    .word _str2280  ; 356 .xStep
    .word _str2281  ; 357 .y
    .word _str2282  ; 358 .yOffset
    .word _str2283  ; 359 .yRange
    .word _str2284  ; 360 .yStep
    .word _str2285  ; 361 .z
    .word 0
_vtables_end:
.balign 4
.object _pxt_config_data
_pxt_config_data:
    .word 4, 1054  ; PIN_BTN_A=1054
    .word 5, 1055  ; PIN_BTN_B=1055
    .word 32, 17  ; PIN_DISPLAY_SCK=17
    .word 33, 1  ; PIN_DISPLAY_MISO=1
    .word 34, 13  ; PIN_DISPLAY_MOSI=13
    .word 36, 10  ; PIN_DISPLAY_DC=10
    .word 37, 160  ; DISPLAY_WIDTH=160
    .word 38, 128  ; DISPLAY_HEIGHT=128
    .word 39, 128  ; DISPLAY_CFG0=128
    .word 40, 1539  ; DISPLAY_CFG1=1539
    .word 41, 8  ; DISPLAY_CFG2=8
    .word 43, 34  ; PIN_DISPLAY_RST=34
    .word 44, 26  ; PIN_DISPLAY_BL=26
    .word 47, 1050  ; PIN_BTN_LEFT=1050
    .word 48, 1053  ; PIN_BTN_RIGHT=1053
    .word 49, 1051  ; PIN_BTN_UP=1051
    .word 50, 1052  ; PIN_BTN_DOWN=1052
    .word 51, 1056  ; PIN_BTN_MENU=1056
    .word 60, 12  ; PIN_JACK_TX=12
    .word 65, 0  ; PIN_JACK_SND=0
    .word 71, 9  ; PIN_BTNMX_LATCH=9
    .word 72, 32  ; PIN_BTNMX_CLOCK=32
    .word 73, 1  ; PIN_BTNMX_DATA=1
    .word 78, 4242  ; DISPLAY_TYPE=4242
    .word 0
            .balign 4
            .object _str1926
_str1926:
 .word pxt::string_inline_ascii_vt
    .short 0
    .string ""
            .balign 4
            .object _str1927
_str1927:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "__draw"
            .balign 4
            .object _str1928
_str1928:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "__drawCore"
            .balign 4
            .object _str1929
_str1929:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "__preUpdate"
            .balign 4
            .object _str1930
_str1930:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "__update"
            .balign 4
            .object _str1931
_str1931:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "__visible"
            .balign 4
            .object _str1932
_str1932:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_action"
            .balign 4
            .object _str1933
_str1933:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_ax"
            .balign 4
            .object _str1934
_str1934:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_ay"
            .balign 4
            .object _str1935
_str1935:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "_col"
            .balign 4
            .object _str1936
_str1936:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_connected"
            .balign 4
            .object _str1937
_str1937:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "_controlledSprites"
            .balign 4
            .object _str1938
_str1938:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_data"
            .balign 4
            .object _str1939
_str1939:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_destroyCore"
            .balign 4
            .object _str1940
_str1940:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_dt"
            .balign 4
            .object _str1941
_str1941:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_factory"
            .balign 4
            .object _str1942
_str1942:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_fx"
            .balign 4
            .object _str1943
_str1943:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_fy"
            .balign 4
            .object _str1944
_str1944:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_height"
            .balign 4
            .object _str1945
_str1945:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_hitbox"
            .balign 4
            .object _str1946
_str1946:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_id"
            .balign 4
            .object _str1947
_str1947:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_image"
            .balign 4
            .object _str1948
_str1948:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_kind"
            .balign 4
            .object _str1949
_str1949:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "_kindsOverlappedWith"
            .balign 4
            .object _str1950
_str1950:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "_lastUpdatedSpriteX"
            .balign 4
            .object _str1951
_str1951:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "_lastUpdatedSpriteY"
            .balign 4
            .object _str1952
_str1952:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_lastX"
            .balign 4
            .object _str1953
_str1953:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_lastY"
            .balign 4
            .object _str1954
_str1954:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_layer"
            .balign 4
            .object _str1955
_str1955:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_layers"
            .balign 4
            .object _str1956
_str1956:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "_map"
            .balign 4
            .object _str1957
_str1957:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_millis"
            .balign 4
            .object _str1958
_str1958:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_obstacles"
            .balign 4
            .object _str1959
_str1959:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_offsetX"
            .balign 4
            .object _str1960
_str1960:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_offsetY"
            .balign 4
            .object _str1961
_str1961:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_overlappers"
            .balign 4
            .object _str1962
_str1962:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_owner"
            .balign 4
            .object _str1963
_str1963:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_player"
            .balign 4
            .object _str1964
_str1964:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_pressed"
            .balign 4
            .object _str1965
_str1965:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "_pressedElasped"
            .balign 4
            .object _str1966
_str1966:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_prune"
            .balign 4
            .object _str1967
_str1967:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_repeatCount"
            .balign 4
            .object _str1968
_str1968:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "_row"
            .balign 4
            .object _str1969
_str1969:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_scale"
            .balign 4
            .object _str1970
_str1970:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_sprites"
            .balign 4
            .object _str1971
_str1971:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_sx"
            .balign 4
            .object _str1972
_str1972:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_sy"
            .balign 4
            .object _str1973
_str1973:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_text"
            .balign 4
            .object _str1974
_str1974:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_update"
            .balign 4
            .object _str1975
_str1975:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_vx"
            .balign 4
            .object _str1976
_str1976:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_vy"
            .balign 4
            .object _str1977
_str1977:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_width"
            .balign 4
            .object _str1978
_str1978:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "_x"
            .balign 4
            .object _str1979
_str1979:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "_y"
            .balign 4
            .object _str1980
_str1980:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "_z"
            .balign 4
            .object _str1981
_str1981:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "action"
            .balign 4
            .object _str1982
_str1982:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "activeCard"
            .balign 4
            .object _str1983
_str1983:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "add"
            .balign 4
            .object _str1984
_str1984:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "addShape"
            .balign 4
            .object _str1985
_str1985:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "addSprite"
            .balign 4
            .object _str1986
_str1986:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "alignX"
            .balign 4
            .object _str1987
_str1987:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "alignY"
            .balign 4
            .object _str1988
_str1988:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "allSprites"
            .balign 4
            .object _str1989
_str1989:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "analog"
            .balign 4
            .object _str1990
_str1990:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "anchor"
            .balign 4
            .object _str1991
_str1991:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "applyTo"
            .balign 4
            .object _str1992
_str1992:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "areaHeight"
            .balign 4
            .object _str1993
_str1993:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "areaWidth"
            .balign 4
            .object _str1994
_str1994:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "ax"
            .balign 4
            .object _str1995
_str1995:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "ay"
            .balign 4
            .object _str1996
_str1996:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "background"
            .balign 4
            .object _str1997
_str1997:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "basicCard"
            .balign 4
            .object _str1998
_str1998:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "bgColor"
            .balign 4
            .object _str1999
_str1999:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "bottom"
            .balign 4
            .object _str2000
_str2000:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "buckets"
            .balign 4
            .object _str2001
_str2001:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "button"
            .balign 4
            .object _str2002
_str2002:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "buttonEventHandlers"
            .balign 4
            .object _str2003
_str2003:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "buttons"
            .balign 4
            .object _str2004
_str2004:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "cachedTileView"
            .balign 4
            .object _str2005
_str2005:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "cachedVx"
            .balign 4
            .object _str2006
_str2006:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "cachedVy"
            .balign 4
            .object _str2007
_str2007:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "calcDimensionalHash"
            .balign 4
            .object _str2008
_str2008:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "callback"
            .balign 4
            .object _str2009
_str2009:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "camera"
            .balign 4
            .object _str2010
_str2010:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "canResolveClipping"
            .balign 4
            .object _str2011
_str2011:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "card"
            .balign 4
            .object _str2012
_str2012:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "cardSpacing"
            .balign 4
            .object _str2013
_str2013:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "cardWidth"
            .balign 4
            .object _str2014
_str2014:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "cardsPerRow"
            .balign 4
            .object _str2015
_str2015:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "cardsTop"
            .balign 4
            .object _str2016
_str2016:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "cellHeight"
            .balign 4
            .object _str2017
_str2017:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "cellWidth"
            .balign 4
            .object _str2018
_str2018:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "change"
            .balign 4
            .object _str2019
_str2019:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "charHeight"
            .balign 4
            .object _str2020
_str2020:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "charWidth"
            .balign 4
            .object _str2021
_str2021:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "clear"
            .balign 4
            .object _str2022
_str2022:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "clearObstacles"
            .balign 4
            .object _str2023
_str2023:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "collisionHandlers"
            .balign 4
            .object _str2024
_str2024:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "color"
            .balign 4
            .object _str2025
_str2025:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "column"
            .balign 4
            .object _str2026
_str2026:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "columnCount"
            .balign 4
            .object _str2027
_str2027:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "condition"
            .balign 4
            .object _str2028
_str2028:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "connected"
            .balign 4
            .object _str2029
_str2029:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "constrain"
            .balign 4
            .object _str2030
_str2030:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "contains"
            .balign 4
            .object _str2031
_str2031:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "controlledSprites"
            .balign 4
            .object _str2032
_str2032:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "createMovingSprite"
            .balign 4
            .object _str2033
_str2033:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "createParticle"
            .balign 4
            .object _str2034
_str2034:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "createdHandlers"
            .balign 4
            .object _str2035
_str2035:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "data"
            .balign 4
            .object _str2036
_str2036:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "defaultLifespan"
            .balign 4
            .object _str2037
_str2037:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "defaultRate"
            .balign 4
            .object _str2038
_str2038:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "deltaTime"
            .balign 4
            .object _str2039
_str2039:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "deltaTimeMillis"
            .balign 4
            .object _str2040
_str2040:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "destroy"
            .balign 4
            .object _str2041
_str2041:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "destroyHandler"
            .balign 4
            .object _str2042
_str2042:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "destroyedHandlers"
            .balign 4
            .object _str2043
_str2043:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "dispose"
            .balign 4
            .object _str2044
_str2044:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "distance"
            .balign 4
            .object _str29
_str29:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "down"
            .balign 4
            .object _str2045
_str2045:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "draw"
            .balign 4
            .object _str2046
_str2046:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "drawDebug"
            .balign 4
            .object _str2047
_str2047:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "drawOffsetX"
            .balign 4
            .object _str2048
_str2048:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "drawOffsetY"
            .balign 4
            .object _str2049
_str2049:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "drawParticle"
            .balign 4
            .object _str2050
_str2050:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "drawSay"
            .balign 4
            .object _str2051
_str2051:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "drawSprite"
            .balign 4
            .object _str2052
_str2052:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "drawText"
            .balign 4
            .object _str2053
_str2053:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "dx"
            .balign 4
            .object _str2054
_str2054:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "dy"
            .balign 4
            .object _str2055
_str2055:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "effect"
            .balign 4
            .object _str2056
_str2056:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "effectSetByUser"
            .balign 4
            .object _str2057
_str2057:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "eid"
            .balign 4
            .object _str2058
_str2058:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "enabled"
            .balign 4
            .object _str2059
_str2059:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "event"
            .balign 4
            .object _str2060
_str2060:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "eventContext"
            .balign 4
            .object _str2061
_str2061:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "fastRandom"
            .balign 4
            .object _str2062
_str2062:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "fgColor"
            .balign 4
            .object _str2063
_str2063:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "flags"
            .balign 4
            .object _str2064
_str2064:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "followingSprites"
            .balign 4
            .object _str2065
_str2065:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "frameCallbacks"
            .balign 4
            .object _str2066
_str2066:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "frameWorker"
            .balign 4
            .object _str2067
_str2067:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "framesInSample"
            .balign 4
            .object _str2068
_str2068:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "fx"
            .balign 4
            .object _str2069
_str2069:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "fy"
            .balign 4
            .object _str2070
_str2070:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "galois"
            .balign 4
            .object _str2071
_str2071:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "gameForeverHandlers"
            .balign 4
            .object _str2072
_str2072:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "generator"
            .balign 4
            .object _str2073
_str2073:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "getObstacle"
            .balign 4
            .object _str2074
_str2074:
 .word pxt::string_inline_ascii_vt
    .short 26
    .string "getOrCreateHandlerForEvent"
            .balign 4
            .object _str2075
_str2075:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "getText"
            .balign 4
            .object _str2076
_str2076:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "getTile"
            .balign 4
            .object _str2077
_str2077:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "getTileImage"
            .balign 4
            .object _str2078
_str2078:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "getTileIndex"
            .balign 4
            .object _str2079
_str2079:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "handler"
            .balign 4
            .object _str2080
_str2080:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "handlerState"
            .balign 4
            .object _str2081
_str2081:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "handlers"
            .balign 4
            .object _str2082
_str2082:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "hash"
            .balign 4
            .object _str2083
_str2083:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "head"
            .balign 4
            .object _str2084
_str2084:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "headerFont"
            .balign 4
            .object _str2085
_str2085:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "headerText"
            .balign 4
            .object _str2086
_str2086:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "height"
            .balign 4
            .object _str2087
_str2087:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "icon"
            .balign 4
            .object _str2088
_str2088:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "iconImage"
            .balign 4
            .object _str2089
_str2089:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "id"
            .balign 4
            .object _str2090
_str2090:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "idleCallbacks"
            .balign 4
            .object _str2091
_str2091:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "image"
            .balign 4
            .object _str2092
_str2092:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "img"
            .balign 4
            .object _str2093
_str2093:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "infoFont"
            .balign 4
            .object _str2094
_str2094:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "infoTop"
            .balign 4
            .object _str2095
_str2095:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "init"
            .balign 4
            .object _str2096
_str2096:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "insertAABB"
            .balign 4
            .object _str2097
_str2097:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "insertAtKey"
            .balign 4
            .object _str2098
_str2098:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "isObstacle"
            .balign 4
            .object _str2099
_str2099:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isOnWall"
            .balign 4
            .object _str2100
_str2100:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "isOutOfScreen"
            .balign 4
            .object _str2101
_str2101:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "isOutsideMap"
            .balign 4
            .object _str2102
_str2102:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "isPressed"
            .balign 4
            .object _str2103
_str2103:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isScaled"
            .balign 4
            .object _str2104
_str2104:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isStatic"
            .balign 4
            .object _str2105
_str2105:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "isUpdated"
            .balign 4
            .object _str2106
_str2106:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isValid"
            .balign 4
            .object _str2107
_str2107:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "isWall"
            .balign 4
            .object _str2108
_str2108:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "key"
            .balign 4
            .object _str2109
_str2109:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "kind"
            .balign 4
            .object _str2110
_str2110:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "lastPerfDump"
            .balign 4
            .object _str2111
_str2111:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "layer"
            .balign 4
            .object _str2112
_str2112:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "layers"
            .balign 4
            .object _str2113
_str2113:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "left"
            .balign 4
            .object _str2114
_str2114:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "length"
            .balign 4
            .object _str2115
_str2115:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "lfsr"
            .balign 4
            .object _str2116
_str2116:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "lifespan"
            .balign 4
            .object _str2117
_str2117:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "loseEffect"
            .balign 4
            .object _str2118
_str2118:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "loseMessage"
            .balign 4
            .object _str2119
_str2119:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "loseSound"
            .balign 4
            .object _str2120
_str2120:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "map"
            .balign 4
            .object _str2121
_str2121:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "maxLifespan"
            .balign 4
            .object _str2122
_str2122:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "maxNegativeVelocity"
            .balign 4
            .object _str2123
_str2123:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "maxSingleStep"
            .balign 4
            .object _str2124
_str2124:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "maxSpeed"
            .balign 4
            .object _str2125
_str2125:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "maxStep"
            .balign 4
            .object _str2126
_str2126:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "maxVelocity"
            .balign 4
            .object _str2127
_str2127:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "mergeAtKey"
            .balign 4
            .object _str2128
_str2128:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "messageSetByUser"
            .balign 4
            .object _str2129
_str2129:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "millis"
            .balign 4
            .object _str2130
_str2130:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "minAngle"
            .balign 4
            .object _str2131
_str2131:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "minLifespan"
            .balign 4
            .object _str2132
_str2132:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "minSingleStep"
            .balign 4
            .object _str2133
_str2133:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "minStep"
            .balign 4
            .object _str2134
_str2134:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "move"
            .balign 4
            .object _str2135
_str2135:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "moveSprite"
            .balign 4
            .object _str2136
_str2136:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "multiplier"
            .balign 4
            .object _str2137
_str2137:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "neighbors"
            .balign 4
            .object _str2138
_str2138:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "next"
            .balign 4
            .object _str2139
_str2139:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "offsetX"
            .balign 4
            .object _str2140
_str2140:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "offsetY"
            .balign 4
            .object _str2141
_str2141:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "onEvent"
            .balign 4
            .object _str2142
_str2142:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "onUpdate"
            .balign 4
            .object _str2143
_str2143:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "once"
            .balign 4
            .object _str2144
_str2144:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "options"
            .balign 4
            .object _str2145
_str2145:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "order"
            .balign 4
            .object _str2146
_str2146:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "overlapHandlers"
            .balign 4
            .object _str2147
_str2147:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "overlapMap"
            .balign 4
            .object _str2148
_str2148:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "overlaps"
            .balign 4
            .object _str2149
_str2149:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "overlapsWith"
            .balign 4
            .object _str2150
_str2150:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "ox"
            .balign 4
            .object _str2151
_str2151:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "oy"
            .balign 4
            .object _str2152
_str2152:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "pFlags"
            .balign 4
            .object _str2153
_str2153:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "padding"
            .balign 4
            .object _str2154
_str2154:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "parent"
            .balign 4
            .object _str2155
_str2155:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "particleSources"
            .balign 4
            .object _str2156
_str2156:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "period"
            .balign 4
            .object _str2157
_str2157:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "physicsEngine"
            .balign 4
            .object _str2158
_str2158:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "pickRandom"
            .balign 4
            .object _str2159
_str2159:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "playerIndex"
            .balign 4
            .object _str2160
_str2160:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "position"
            .balign 4
            .object _str2161
_str2161:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "preferredDelay"
            .balign 4
            .object _str2162
_str2162:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "pressureLevel"
            .balign 4
            .object _str2163
_str2163:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "prevTimeMillis"
            .balign 4
            .object _str2164
_str2164:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "previousScene"
            .balign 4
            .object _str2165
_str2165:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "priority"
            .balign 4
            .object _str2166
_str2166:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "raiseButtonDown"
            .balign 4
            .object _str2167
_str2167:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "raiseButtonRepeat"
            .balign 4
            .object _str2168
_str2168:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "raiseButtonUp"
            .balign 4
            .object _str2169
_str2169:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "randomRange"
            .balign 4
            .object _str2170
_str2170:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "recalcSize"
            .balign 4
            .object _str2171
_str2171:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "register"
            .balign 4
            .object _str2172
_str2172:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "registerFrameCallbacks"
            .balign 4
            .object _str2173
_str2173:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "registerFrameHandler"
            .balign 4
            .object _str2174
_str2174:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "registerHandler"
            .balign 4
            .object _str2175
_str2175:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "registerObstacle"
            .balign 4
            .object _str2176
_str2176:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "remove"
            .balign 4
            .object _str2177
_str2177:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "removeSprite"
            .balign 4
            .object _str2178
_str2178:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "render"
            .balign 4
            .object _str2179
_str2179:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "renderable"
            .balign 4
            .object _str2180
_str2180:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "repeatDelay"
            .balign 4
            .object _str2181
_str2181:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "repeatInterval"
            .balign 4
            .object _str2182
_str2182:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "repeatX"
            .balign 4
            .object _str2183
_str2183:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "repeatY"
            .balign 4
            .object _str2184
_str2184:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "resetHitbox"
            .balign 4
            .object _str2185
_str2185:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "resizeBuckets"
            .balign 4
            .object _str2186
_str2186:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "right"
            .balign 4
            .object _str2187
_str2187:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "row"
            .balign 4
            .object _str2188
_str2188:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "rowCount"
            .balign 4
            .object _str2189
_str2189:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "runButtonEvents"
            .balign 4
            .object _str2190
_str2190:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "runCallbacks"
            .balign 4
            .object _str2191
_str2191:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "runningCallbacks"
            .balign 4
            .object _str2192
_str2192:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "s"
            .balign 4
            .object _str2193
_str2193:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "sayEndTime"
            .balign 4
            .object _str2194
_str2194:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "sayRenderer"
            .balign 4
            .object _str2195
_str2195:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "scale"
            .balign 4
            .object _str2196
_str2196:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "scene"
            .balign 4
            .object _str2197
_str2197:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "sceneDefaultRate"
            .balign 4
            .object _str2198
_str2198:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "scoringType"
            .balign 4
            .object _str2199
_str2199:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "scoringTypeSetByUser"
            .balign 4
            .object _str2200
_str2200:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "screenEdgeCollisions"
            .balign 4
            .object _str2201
_str2201:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "scrollOffset"
            .balign 4
            .object _str2202
_str2202:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "scrollRow"
            .balign 4
            .object _str2203
_str2203:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "scrollTarget"
            .balign 4
            .object _str2204
_str2204:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "seed"
            .balign 4
            .object _str2205
_str2205:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "selectedCard"
            .balign 4
            .object _str2206
_str2206:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "selection"
            .balign 4
            .object _str2207
_str2207:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "setAcceleration"
            .balign 4
            .object _str2208
_str2208:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setAnchor"
            .balign 4
            .object _str2209
_str2209:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "setDirection"
            .balign 4
            .object _str2210
_str2210:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "setFactory"
            .balign 4
            .object _str2211
_str2211:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setFlag"
            .balign 4
            .object _str2212
_str2212:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setHitbox"
            .balign 4
            .object _str2213
_str2213:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setImage"
            .balign 4
            .object _str2214
_str2214:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setKind"
            .balign 4
            .object _str2215
_str2215:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setOffset"
            .balign 4
            .object _str2216
_str2216:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "setPressed"
            .balign 4
            .object _str2217
_str2217:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setRate"
            .balign 4
            .object _str2218
_str2218:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "setRelativeToCamera"
            .balign 4
            .object _str2219
_str2219:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "setSelection"
            .balign 4
            .object _str2220
_str2220:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setSpeed"
            .balign 4
            .object _str2221
_str2221:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setState"
            .balign 4
            .object _str2222
_str2222:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setTheme"
            .balign 4
            .object _str2223
_str2223:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "shakeAmplitude"
            .balign 4
            .object _str2224
_str2224:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "shakeDuration"
            .balign 4
            .object _str2225
_str2225:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "shakeStartTime"
            .balign 4
            .object _str2226
_str2226:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "shouldBeVisible"
            .balign 4
            .object _str2227
_str2227:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "show"
            .balign 4
            .object _str2228
_str2228:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "soundSetByUser"
            .balign 4
            .object _str2229
_str2229:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "source"
            .balign 4
            .object _str2230
_str2230:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "sourceFactory"
            .balign 4
            .object _str2231
_str2231:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "sources"
            .balign 4
            .object _str2232
_str2232:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "speed"
            .balign 4
            .object _str2233
_str2233:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "spread"
            .balign 4
            .object _str2234
_str2234:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "sprite"
            .balign 4
            .object _str2235
_str2235:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "spriteCollisions"
            .balign 4
            .object _str2236
_str2236:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "spriteNextId"
            .balign 4
            .object _str2237
_str2237:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "sprites"
            .balign 4
            .object _str2238
_str2238:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "spritesByKind"
            .balign 4
            .object _str2239
_str2239:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "src"
            .balign 4
            .object _str2240
_str2240:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "start"
            .balign 4
            .object _str2241
_str2241:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "state"
            .balign 4
            .object _str2242
_str2242:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "sx"
            .balign 4
            .object _str2243
_str2243:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "sy"
            .balign 4
            .object _str2244
_str2244:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "system"
            .balign 4
            .object _str2245
_str2245:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "text"
            .balign 4
            .object _str2246
_str2246:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "theme"
            .balign 4
            .object _str2247
_str2247:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "tileIndex"
            .balign 4
            .object _str2248
_str2248:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "tileMap"
            .balign 4
            .object _str2249
_str2249:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "tileOverlapHandlers"
            .balign 4
            .object _str2250
_str2250:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "tileSet"
            .balign 4
            .object _str2251
_str2251:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "tilemapCollisions"
            .balign 4
            .object _str2252
_str2252:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "tilemapOverlaps"
            .balign 4
            .object _str2253
_str2253:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "tileset"
            .balign 4
            .object _str2254
_str2254:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "timeInSample"
            .balign 4
            .object _str2255
_str2255:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "timeOut"
            .balign 4
            .object _str2256
_str2256:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "timer"
            .balign 4
            .object _str2257
_str2257:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "times"
            .balign 4
            .object _str2258
_str2258:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "toString"
            .balign 4
            .object _str2259
_str2259:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "top"
            .balign 4
            .object _str2260
_str2260:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "unregister"
            .balign 4
            .object _str30
_str30:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "up"
            .balign 4
            .object _str2261
_str2261:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "update"
            .balign 4
            .object _str2262
_str2262:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "updateCard"
            .balign 4
            .object _str2263
_str2263:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "updateIfInvalid"
            .balign 4
            .object _str2264
_str2264:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "updateParticle"
            .balign 4
            .object _str2265
_str2265:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "updateScrollTarget"
            .balign 4
            .object _str2266
_str2266:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "user"
            .balign 4
            .object _str2267
_str2267:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "value"
            .balign 4
            .object _str2268
_str2268:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "vid"
            .balign 4
            .object _str2269
_str2269:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "vx"
            .balign 4
            .object _str2270
_str2270:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "vy"
            .balign 4
            .object _str2271
_str2271:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "wallCollisionHandlers"
            .balign 4
            .object _str2272
_str2272:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "width"
            .balign 4
            .object _str2273
_str2273:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "winEffect"
            .balign 4
            .object _str2274
_str2274:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "winMessage"
            .balign 4
            .object _str2275
_str2275:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "winMessageMultiplayer"
            .balign 4
            .object _str2276
_str2276:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "winSound"
            .balign 4
            .object _str2277
_str2277:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "x"
            .balign 4
            .object _str2278
_str2278:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "xOffset"
            .balign 4
            .object _str2279
_str2279:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "xRange"
            .balign 4
            .object _str2280
_str2280:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "xStep"
            .balign 4
            .object _str2281
_str2281:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "y"
            .balign 4
            .object _str2282
_str2282:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "yOffset"
            .balign 4
            .object _str2283
_str2283:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "yRange"
            .balign 4
            .object _str2284
_str2284:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "yStep"
            .balign 4
            .object _str2285
_str2285:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "z"
            .balign 4
            .object _str0
_str0:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ","
            .balign 4
            .object _str1
_str1:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\n"
            .balign 4
            .object _str2
_str2:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "string"
            .balign 4
            .object _str3
_str3:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "number"
            .balign 4
            .object _str4
_str4:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "..."
            .balign 4
            .object _str5
_str5:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "[object Object]"
            .balign 4
            .object _str6
_str6:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "[Object]"
            .balign 4
            .object _str7
_str7:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "{"
            .balign 4
            .object _str8
_str8:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "\n    "
            .balign 4
            .object _str9
_str9:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string ": "
            .balign 4
            .object _str10
_str10:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "\n    ..."
            .balign 4
            .object _str11
_str11:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "\n}"
            .balign 4
            .object _str12
_str12:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "fps:"
            .balign 4
            .object _str13
_str13:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "."
            .balign 4
            .object _str14
_str14:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "/100 fps - "
            .balign 4
            .object _str15
_str15:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string " frames ("
            .balign 4
            .object _str16
_str16:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "ms/"
            .balign 4
            .object _str17
_str17:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "ms)"
            .balign 4
            .object _str18
_str18:
 .word pxt::string_inline_ascii_vt
    .short 34
    .string "~15 e3:3 r:1 d#:3 r:1 d:4 r:1 c#:8"
            .balign 4
            .object _str19
_str19:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "g4:1 c5 e g:2 e:1 g:3"
            .balign 4
            .object _str24
_str24:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "#run"
            .balign 4
            .object _str25
_str25:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "#scope"
            .balign 4
            .object _str27
_str27:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "btn "
            .balign 4
            .object _str28
_str28:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string " "
            .balign 4
            .object _str31
_str31:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "sim"
            .balign 4
            .object _str32
_str32:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "("
            .balign 4
            .object _str33
_str33:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string ")->("
            .balign 4
            .object _str34
_str34:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ")"
            .balign 4
            .object _str35
_str35:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "v"
            .balign 4
            .object _str36
_str36:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "a"
            .balign 4
            .object _str37
_str37:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string " buckets, "
            .balign 4
            .object _str38
_str38:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string " filled"
            .balign 4
            .object _str39
_str39:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string " sprites"
            .balign 4
            .object _str43
_str43:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string " sprites:"
            .balign 4
            .object _str47
_str47:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "YOU WIN!"
            .balign 4
            .object _str48
_str48:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "${WINNER} WINS!"
            .balign 4
            .object _str49
_str49:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "GAME OVER"
            .balign 4
            .object _str51
_str51:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "#volume"
            .balign 4
            .object _str52
_str52:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "#brightness"
            .balign 4
            .object _str53
_str53:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "console"
            .balign 4
            .object _str54
_str54:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "VOLUME DOWN ("
            .balign 4
            .object _str55
_str55:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "VOLUME UP ("
            .balign 4
            .object _str56
_str56:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "BRIGHTNESS DOWN ("
            .balign 4
            .object _str57
_str57:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "BRIGHTNESS UP ("
            .balign 4
            .object _str58
_str58:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "HIDE STATS"
            .balign 4
            .object _str59
_str59:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "SHOW STATS"
            .balign 4
            .object _str60
_str60:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "HIDE CONSOLE"
            .balign 4
            .object _str61
_str61:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "SHOW CONSOLE"
            .balign 4
            .object _str62
_str62:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "SLEEP"
            .balign 4
            .object _str63
_str63:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "CLOSE"
            .balign 4
            .object _str64
_str64:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "PAUSED"
            .balign 4
            .object _str76
_str76:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\x09"
            .balign 4
            .object _str85
_str85:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "server"
            .balign 4
            .object _str86
_str86:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "my-project"
.object _dbl26
.balign 4
_dbl26:
 .word pxt::number_vt
        .hex 0000c0ffffffdf41
.object _dbl40
.balign 4
_dbl40:
 .word pxt::number_vt
        .hex 9a9999999999b93f
.object _dbl42
.balign 4
_dbl42:
 .word pxt::number_vt
        .hex 000000000000e83f
.object _dbl50
.balign 4
_dbl50:
 .word pxt::number_vt
        .hex 182d4454fb21f93f
.object _dbl77
.balign 4
_dbl77:
 .word pxt::number_vt
        .hex 1a271792bf15b03f
.object _dbl78
.balign 4
_dbl78:
 .word pxt::number_vt
        .hex 182d4454fb211940
.object _dbl79
.balign 4
_dbl79:
 .word pxt::number_vt
        .hex 399d52a246df913f
.balign 4
.object _hexlit20
_hexlit20:
 .word pxt::buffer_vt
                .word 5272
                .hex 
.balign 4
.object _hexlit21
_hexlit21:
 .word pxt::buffer_vt
                .word 2470
                .hex 20000000000000000000000000000000000000000000000000002100000000000006fc0000000000000000000000000000000000220000001c00000000001c0000000000000000000000000000002300a000f807a000f807a00000000000000000000000000000002400000018022404460c8803000000000000000000000000000025003802c4017800200390040803000000000000000000000000260080037804a4041803800340040000000000000000000000002700000000001c00000000000000000000000000000000000000280000000000f8010606010800000000000000000000000000002900000001080606f801000000000000000000000000000000002a00040014000e001400040000000000000000000000000000002b0040004000f8034000400000000000000000000000000000002c000000000000090006000000000000000000000000000000002d000000800080008000000000000000000000000000000000002e000000000000060000000000000000000000000000000000002f00000c800360001c000300000000000000000000000000000030000000f80304040404f80300000000000000000000000000003100000004040404fc07000400040000000000000000000000003200000008060405c4043804000000000000000000000000000033000000080244044404b803000000000000000000000000000034000000800170010801fc070001000000000000000000000000350000023c0424042404c403000000000000000000000000000036000000f0034804440488030000000000000000000000000000370000000400c40734000c00000000000000000000000000000038000000b80344044404b803000000000000000000000000000039000000780284048802f00100000000000000000000000000003a000000000030060000000000000000000000000000000000003b000000000018090006000000000000000000000000000000003c004000a000a000a000100100000000000000000000000000003d002001200120012001200100000000000000000000000000003e0000001001a000a000a00040000000000000000000000000003f000000080084066400180000000000000000000000000000004000f0030c04c20822092409f80900000000000000000000000041000007f8008400f8000007000000000000000000000000000042000000fc0744044404b803000000000000000000000000000043000000f001080204040404080200000000000000000000000044000000fc0704040802f001000000000000000000000000000045000000fc07440444044404000000000000000000000000000046000000fc07440044004400000000000000000000000000000047000000f00108024404c803000000000000000000000000000048000000fc0740004000fc070000000000000000000000000000490000000404fc070404040400000000000000000000000000004a000000000200040004fc0300000000000000000000000000004b000000fc074000f0000c0304040000000000000000000000004c000000fc0700040004000400000000000000000000000000004d000000fc0738007000fc0700000000000000000000000000004e000000fc073800c003fc0700000000000000000000000000004f000000f80304040404f803000000000000000000000000000050000000fc07840084004400780000000000000000000000000051000000fc0102020206fc09000000000000000000000000000052000000fc074400c4013806000000000000000000000000000053000000180224044404880300000000000000000000000000005400000004000400fc070400040000000000000000000000000055000000fc0300040004fc03000000000000000000000000000056000c00f0030004f0030c00000000000000000000000000000057007c008007e001f0010007fc0000000000000000000000000058000404b8034000b80304040000000000000000000000000000590004003800c00730000c0000000000000000000000000000005a0004040407e4041c04040400000000000000000000000000005b0000000000ff0f0108010800000000000000000000000000005c0003001c0060008003000c00000000000000000000000000005d00000001080108ff0f000000000000000000000000000000005e004000380004003800400000000000000000000000000000005f00000800080008000800080000000000000000000000000000600000000000020004000000000000000000000000000000000061000000200390049004e007000000000000000000000000000062000000fc0710041004e003000000000000000000000000000063000000c001200210043004000200000000000000000000000064000000e00310041004fc07000000000000000000000000000065000000e00390049004e0040000000000000000000000000000660000001000f80714001400000000000000000000000000000067000000b806440944093c09040600000000000000000000000068000000fc0710001000e0070000000000000000000000000000690000000000f4070000000000000000000000000000000000006a00000800080008fd07000000000000000000000000000000006b000000fe078000e001100610040000000000000000000000006c0000000000fc030004000400000000000000000000000000006d00f00710001000e0071000e0070000000000000000000000006e000000f00710001000e00700000000000000000000000000006f000000e00310041004e003000000000000000000000000000070000000fc0f04010401f800000000000000000000000000000071000000f80004010401fc0f000000000000000000000000000072000000f00720001000100000000000000000000000000000007300000060029004900420030000000000000000000000000000740000001000fc0310041004000000000000000000000000000075000000f00300040004f007000000000000000000000000000076003000c0030004c003300000000000000000000000000000007700f0000007e003c0010007f000000000000000000000000000780010046003800060031004000000000000000000000000000079000c0870088007f0000c0000000000000000000000000000007a000000000410079004700410040000000000000000000000007b0000004000be070108010800000000000000000000000000007c0000000000ff0f0000000000000000000000000000000000007d00000001080108be07400000000000000000000000000000007e00800040004000800080004000000000000000000000000000
.balign 4
.object _hexlit22
_hexlit22:
 .word pxt::buffer_vt
                .word 904
                .hex 20000000000000002100001700000000220000030003000023000a1f0a1f0a0024000a17151d0a00250013090412190026000a15150a100027000003000000002800000e11000000290000110e0000002a00000a040a00002b0000040e0400002c000010080000002d000004040400002e000008000000002f0010080402010030000e11110e0000310000121f100000320019151512000033000911150b000034000c0a091f080035001715151509003600081416150800370011090503010038000a1515150a00390002150d0502003a00000a000000003b0000100a0000003c0000040a1100003d00000a0a0a00003e0000110a0400003f0002011505020040000e1115090e0041001e05051e000042001f15150a000043000e111111000044001f11110e000045001f151511000046001f050501000047000e1111150c0048001f04041f00004900111f110000004a000911110f01004b001f040a1100004c001f10101000004d001f0204021f004e001f0204081f004f000e11110e000050001f0505020000510006091916000052001f05050a10005300121515090000540001011f01010055000f10100f0000560007081008070057001f0804081f0058001b04041b0000590001021c0201005a001915131100005b00001f111100005c000102040810005d000011111f00005e000002010200005f00101010101000600000010200000061000c12121e100062001f141408000063000c121212000064000814141f000065000e15151200006600041e0501000067000215150f000068001f04041800006900001d000000006a000010100d00006b001f040a1000006c00000f101000006d001e0204021e006e001e02021c00006f000c12120c000070001e0a0a0400007100040a0a1e000072001c0202020000730010140a0200007400000f1414100075000e10101e1000760006081008060077001e1008101e007800120c0c12000079001214080402007a00121a161200007b0000041f1100007c00001f000000007d00111f040000007e00000404080800d3000c1213130c00f3000c12130d000004010e05051e100005010609191f080006010c121313120007010c121313000018010f0b1b19000019010e151d1a000041011f14121000004201100f1412000043011f0205081f0044011e03031c00005a0110140b0302005b0110140b0300007901121a171300007a01121a171300007b01121b171200007c01121b17120000
.balign 4
.object _hexlit23
_hexlit23:
 .word pxt::buffer_vt
                .word 48
                .hex 000000ffffffff2121ff93c4ff8135fff609249ca378dc52003fad87f2ff8e2ec4a4839f5c406ce5cdc491463d000000
.balign 4
.object _hexlit41
_hexlit41:
 .word pxt::buffer_vt
                .word 8
                .hex 8704000000000000
.balign 4
.object _hexlit44
_hexlit44:
 .word pxt::buffer_vt
                .word 36
                .hex 870407000800000000000000404400005055040450555505505501011011000000000000
.balign 4
.object _hexlit45
_hexlit45:
 .word pxt::buffer_vt
                .word 136
                .hex 87041000100000000000000000000000000000000000000000000050050000000000000550000000005045444404000000455544444400040045555555550404004555555555450500455555555511050045555555150101004555111111000100501511110100000000000550000000000000500500000000000000000000000000000000000000
.balign 4
.object _hexlit46
_hexlit46:
 .word pxt::buffer_vt
                .word 136
                .hex 870410001000000000000000000000000000000000000000006666666666060060ffffff666f660060fffffff6ff660060fff1ff666f660060fff1ff6666660060fffff16666660060fffff16666660060fff1ff6666660060fff1ff66f6660060ffffff6666660060fffffff6666600006666666666060000000000000000000000000000000000
.balign 4
.object _hexlit65
_hexlit65:
 .word pxt::buffer_vt
                .word 728
                .hex
.balign 4
.object _hexlit66
_hexlit66:
 .word pxt::buffer_vt
                .word 728
                .hex
.balign 4
.object _hexlit67
_hexlit67:
 .word pxt::buffer_vt
                .word 728
                .hex
.balign 4
.object _hexlit68
_hexlit68:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d00000000000000000000000070666607000000000000000000000000006776000000000000000000000000660700007066000000000000000000006766777766760000000000000000000060666666660600000000000000000066006766667600660000000000000000667600000000676600000000000000006766767777676676000000000000000060666666666666060000000000000000006766666666760000000000000000000000676666760000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit69
_hexlit69:
 .word pxt::buffer_vt
                .word 520
                .hex 8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0bb000000000000000000000000b000404500b0000000000000000000005b0b000400540b0000000000000000b0550400000054b5000000000000000000440040bb0040040000000000000000000040d4ddbb0000000000000000000000004055ddbd000000000000000000004b005455d5dd0b400b000000000000005b045411d5dd0b540b000000000000004b005411d5dd0b400b0000000000000000004055ddbd00000000000000000000000040d4ddbb0000000000000000000000440040bb0040040000000000000000b0550400000054b50000000000000000005b04000400540b000000000000000000b000404500b0000000000000000000000000b0bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit70
_hexlit70:
 .word pxt::buffer_vt
                .word 520
                .hex
.balign 4
.object _hexlit71
_hexlit71:
 .word pxt::buffer_vt
                .word 520
                .hex 8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d0000000000000000000000007066660700000000000000000000000000677600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit72
_hexlit72:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0cbcc0c0000000000000000000000b0db55d5cd0c00000000000000000000db555555ddcd000000000000000000b055555555d59d0b0000000000000000db55555555d59db900000000000000005b55555555d5ddb900000000000000b05db5cccc5bdddd990b000000000000b055ccccccccdddd9d0b000000000000b0b5ccccccccdbdd9d0b000000000000b0c5ccccccccdcdd9d0b000000000000b0c5ccdccbccdcdd9d0c000000000000b0cdcc5b55ccdcdd9d0c00000000000000ccdc55b5ccdcddc90000000000000000cccc5b55ccdbddc90000000000000000c0ccdccbccdd9d0c000000000000000000ccccccdbddcd00000000000000000000c0dcddddcd0c0000000000000000000000c0cccc0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit73
_hexlit73:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000000000000b0bbbbbbbbcb00c0cd000000000000001bddddddddbd0c1ccd000000000000b011cbccccccbc0c1ccd000000000000b01d6c666666bc0cbccd000000000000b01d6c616661bc0c1ccd000000000000b01d6c161666bccc1bcd000000000000b01d6c666166bcccbbcd000000000000b01d6c666666bccc1bcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666661bcccbbcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666666bc0c1ccd000000000000b01dcbccccccbc0cbccd000000000000c0b1bbbbbbbbbb0cdccb000000000000c0bbbbbbbbbbcb00dc0c00000000000000cccccccccc0c00cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit74
_hexlit74:
 .word pxt::buffer_vt
                .word 520
                .hex 87042000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004000000000000000000000000000054450000000000000000000000440b00bbbb00b0440000000000000040550b00000000b0550400000000000040b5000044bb00005b04000000000000b00b0044ddddbb00b00b0000000000000000405d55d5dd0b00000000000000000000d4555555ddbd0000000000000000000054555555d5bd0000000000000000b44055555555d5dd0b4b000000000040b54055555555d5dd0b5b040000000040b54055555555d5dd0b5b040000000000b44055115555d5dd0b4b000000000000000054115555d5bd00000000000000000000d4555555ddbd00000000000000000000405d55d5dd0b0000000000000000b00b0044ddddbb00b00b00000000000040b5000044bb00005b0400000000000040550b00000000b0550400000000000000440b00bbbb00b0440000000000000000000000544500000000000000000000000000004004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit75
_hexlit75:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb00000000000000000000000000b055bb00bbbbbb000000000000000000b0b5bdbcbbbbddcb0000000000000000b0dbcb5b5555bbdd0c00000000000000b0cbdcbdbb5b55dbcd0000000000000000c0dddb11d15bb5bd0c00000000000000bbbd111111b155bb0c00000000000000db1b111111115bb5cb00000000000000db1bb11d1199b9d5cb00000000000000db1b11bb9199b955cb000000000000005b1b11b19b99995bcb000000000000005b1d1111bb99995ccb00000000000000b0b511bbbb99995ccb00000000000000b0d51d919999d95b0b00000000000000005bdb919999c9d50b0000000000000000b0d51b99d9bcb5000000000000000000005bd5bbbc550b00000000000000000000b05b5555bd000000000000000000000000b0bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit80
_hexlit80:
 .word pxt::buffer_vt
                .word 12
                .hex 87040100010000000f000000
.balign 4
.object _hexlit81
_hexlit81:
 .word pxt::buffer_vt
                .word 12
                .hex 8704010002000000ff000000
.balign 4
.object _hexlit82
_hexlit82:
 .word pxt::buffer_vt
                .word 16
                .hex 87040200010000000f0000000f000000
.balign 4
.object _hexlit83
_hexlit83:
 .word pxt::buffer_vt
                .word 16
                .hex 8704020002000000ff0000000f000000
.balign 4
.object _hexlit84
_hexlit84:
 .word pxt::buffer_vt
                .word 16
                .hex 87040200020000000f000000ff000000
.balign 4
.section code
.object _perf_counters
_pxt_perf_counters:
    .word 0
_literals_end:
