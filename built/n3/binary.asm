; Interface tables: 528/1706 (31%)
; Virtual methods: 37 / 245
; generated code sizes (bytes): 128128 (incl. 89024 user, 4488 helpers, 11444 vtables, 23172 lits); src size 0
; assembly: 78611 lines; density: 34.03 bytes/stmt; (2616 stmts)
; total bytes: 240768 (45.9% of 512.0k flash with 283520 free)
; peep hole pass: 1555 instructions removed and 2852 updated
; peep hole pass: 1313 instructions removed and 5 updated
; peep hole pass: 2 instructions removed and 2 updated
; peep hole pass: 0 instructions removed and 0 updated


; start
    .startaddr 0x1b800
    .hex 708E3B92C615A841C49866C975EE5197 ; magic number
    .hex F45992325D6E48C5 ; hex template hash
    .hex 873266330af9dbdb ; replaced in binary by program hash
    .short 90   ; num. globals
    .short 0 ; patched with number of 64 bit words resulting from assembly
    .word _pxt_config_data
    .short 0 ; patched with comm section size
    .short 1 ; number of globals that are not pointers (they come first)
    .word _pxt_iface_member_names
    .word _pxt_lambda_trampoline@fn
    .word _pxt_perf_counters
    .word _pxt_restore_exception_state@fn
    .word _str86 ; name
    ;
; Function src/drawCommands.ts(1,1): <main>
    ;
    .object _main___P4333 "src/drawCommands.ts(1,1): <main>"
_main___P4333_pre:
    .section code
    .balign 4
_main___P4333_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _main___P4333_args@fn
_main___P4333_args:
    .section code
_main___P4333:
_main___P4333_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_main___P4333_locals:
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #4]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    movs r0, #3
    movs r1, #71
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    ldr r1, _ldlit_2 ; listeners_inline__P4397_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    pop {r0} ; tmpref @1
    movs r1, #65
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #6
    movs r1, #37
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #1
    movs r1, #73
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_3 ; music_Melody__C1623_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_4 ; _str18      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl music_Melody_constructor__P1626
_proccall87:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #79
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_3 ; music_Melody__C1623_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_5 ; _str19      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl music_Melody_constructor__P1626
_proccall88:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #39
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #201
    movs r1, #9
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #94
    movs r2, #13
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #93
    movs r2, #17
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #110
    ldr r2, _ldlit_6 ; _hexlit20      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
    movs r1, #236
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #94
    movs r2, #25
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #93
    movs r2, #25
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #110
    ldr r2, _ldlit_7 ; _hexlit21      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
    movs r1, #232
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #94
    movs r2, #13
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #93
    movs r2, #11
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #110
    ldr r2, _ldlit_8 ; _hexlit22      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #120]
    @stackempty locals
    movs r0, #10
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    ldr r0, _ldlit_9 ; control___screen_inline__P4547_Lit      
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_10 ; _hexlit23      
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setPalette
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl _screen_internal_createScreen__P2014
_proccall89:
    movs r1, #128
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_11 ; _str24      
    movs r1, #87
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_12 ; _str25      
    movs r1, #11
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl settings_initScopes__P4578
_proccall90:
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall91:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #144
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #11
    push {r0} ; proc-arg
    movs r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall92:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #204
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #95
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall93:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #192
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #99
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall94:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #196
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #97
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall95:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #200
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall96:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #148
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #103
    push {r0} ; proc-arg
    movs r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall97:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #208
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_14 ; controller_Controller__C2111_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Controller_constructor__P2115
_proccall98:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #180
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_14 ; controller_Controller__C2111_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Controller_constructor__P2115
_proccall99:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #184
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_14 ; controller_Controller__C2111_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Controller_constructor__P2115
_proccall100:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #188
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl controller__player1__P2105
_proccall101:
    movs r1, #176
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_15 ; controller_inline__P4606_Lit      
    push {r0} ; proc-arg
    bl game_addScenePopHandler__P2995
_proccall102:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_16 ; controller_inline__P4646_Lit      
    push {r0} ; proc-arg
    bl game_addScenePushHandler__P2993
_proccall103:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_17 ; controller_AnyButton__C4669_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall104:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #20]
    @stackempty locals
    movs r0, #66
    movs r1, #252
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    movs r1, #244
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #61
    movs r1, #248
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl SpriteKind_create__P2454
_proccall105:
    ldr r7, [r6, #0]
    str r0, [r7, #24]
    @stackempty locals
    bl SpriteKind_create__P2454
_proccall106:
    ldr r7, [r6, #0]
    str r0, [r7, #28]
    @stackempty locals
    bl SpriteKind_create__P2454
_proccall107:
    ldr r7, [r6, #0]
    str r0, [r7, #32]
    @stackempty locals
    ldr r0, _ldlit_18 ; _dbl40      
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall108:
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    str r0, [r7, #36]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
    ldr r0, _ldlit_19 ; info_inline__P4756_Lit      
    push {r0} ; proc-arg
    bl game_addScenePushHandler__P2993
_proccall109:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_20 ; info_inline__P4772_Lit      
    b _jmpwords_21      
.object PUSH
.balign 4
_ldlit_2:
 .word listeners_inline__P4397_Lit
_ldlit_3:
 .word music_Melody__C1623_VT
_ldlit_4:
 .word _str18
_ldlit_5:
 .word _str19
_ldlit_6:
 .word _hexlit20
_ldlit_7:
 .word _hexlit21
_ldlit_8:
 .word _hexlit22
_ldlit_9:
 .word control___screen_inline__P4547_Lit
_ldlit_10:
 .word _hexlit23
_ldlit_11:
 .word _str24
_ldlit_12:
 .word _str25
_ldlit_13:
 .word controller_Button__C2166_VT
_ldlit_14:
 .word controller_Controller__C2111_VT
_ldlit_15:
 .word controller_inline__P4606_Lit
_ldlit_16:
 .word controller_inline__P4646_Lit
_ldlit_17:
 .word controller_AnyButton__C4669_VT
_ldlit_18:
 .word _dbl40
_ldlit_19:
 .word info_inline__P4756_Lit
_ldlit_20:
 .word info_inline__P4772_Lit
_jmpwords_21:
.object POP
    push {r0} ; proc-arg
    bl game_addScenePopHandler__P2995
_proccall110:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #68]
    @stackempty locals
    ldr r0, _ldlit_22 ; _hexlit44      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #48]
    @stackempty locals
    ldr r0, _ldlit_23 ; _hexlit45      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #52]
    @stackempty locals
    ldr r0, _ldlit_24 ; _hexlit46      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #56]
    @stackempty locals
    movs r0, #10
    movs r1, #172
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #10
    movs r1, #160
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_25 ; gameOverConfig_inline__P4880_Lit      
    ldr r7, [r6, #0]
    str r0, [r7, #60]
    @stackempty locals
    bl scene_systemMenu_initVolume__P5154
_proccall111:
    @stackempty locals
    bl scene_systemMenu_initScreen__P5155
_proccall112:
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
    push {r0} ; proc-arg
    bl _conv_5
    ldr r1, _ldlit_26 ; scene_systemMenu_register__P3081_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_27 ; _hexlit65      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #72]
    @stackempty locals
    ldr r0, _ldlit_28 ; _hexlit66      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #76]
    @stackempty locals
    ldr r0, _ldlit_29 ; _hexlit67      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #80]
    @stackempty locals
    ldr r0, _ldlit_30 ; _hexlit68      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #84]
    @stackempty locals
    ldr r0, _ldlit_31 ; _hexlit69      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #88]
    @stackempty locals
    ldr r0, _ldlit_32 ; _hexlit70      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #92]
    @stackempty locals
    ldr r0, _ldlit_33 ; _hexlit71      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #96]
    @stackempty locals
    ldr r0, _ldlit_34 ; _hexlit72      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #100]
    @stackempty locals
    ldr r0, _ldlit_35 ; _hexlit73      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #104]
    @stackempty locals
    ldr r0, _ldlit_36 ; _hexlit74      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #108]
    @stackempty locals
    ldr r0, _ldlit_37 ; _hexlit75      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    ldr r7, [r6, #0]
    str r0, [r7, #112]
    @stackempty locals
    movs r0, #3
    movs r1, #228
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #17
    movs r1, #224
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #120]
    ldr r7, [r6, #0]
    str r0, [r7, #116]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall113:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_subs
    ldr r7, [r6, #0]
    str r0, [r7, #124]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #17
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall114:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #132
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_38 ; game_consoleOverlay_listener__P5221_Lit      
    push {r0} ; proc-arg
    bl console_addListener__P383
_proccall115:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_39 ; MAX_SOURCES_inline__P13369_Lit      
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    lsls r1, r1, #6
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_40 ; particles_SprayFactory__C3166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #121
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl particles_SprayFactory_constructor__P3167
_proccall117:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
    movs r1, #81
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_41 ; Math_FastRandom__C3034_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Math_FastRandom_constructor__P3036
_proccall118:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #136
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_42 ; _dbl77      
    movs r1, #41
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; effects_ScreenEffect__C3241_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_44 ; confetti_inline__P13122_Lit      
    push {r0} ; proc-arg
    movs r0, #31
    lsls r0, r0, #8
    adds r0, #65
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    ldr r0, [sp, #4*4] ; tmpref @1
    push {r0} ; proc-arg
    bl effects_ScreenEffect_constructor__P3242
_proccall119:
    add sp, #4*5 ; pop locals 5
    pop {r0} ; tmpref @1
    movs r1, #19
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_45 ; effects_ImageEffect__C3265_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_46 ; dissolve_inline__P11631_Lit      
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl effects_ImageEffect_constructor__P3266
_proccall120:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #69
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_45 ; effects_ImageEffect__C3265_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_47 ; melt_inline__P13069_Lit      
    push {r0} ; proc-arg
    movs r0, #251
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl effects_ImageEffect_constructor__P3266
_proccall121:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #77
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_48 ; controller_pauseUntilAnyButtonIsPressed__P2182_Lit      
    push {r0} ; proc-arg
    bl game_setWaitAnyButton__P2975
_proccall122:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl game_eventContext__P2977
_proccall123:
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    add sp, #4*2 ; pop locals 2
    movs r1, #140
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #21
    bl _numops_subs
    mov r3, r0
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r0, #61
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    bl drawLine__P4332
_proccall124:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #21
    bl _numops_subs
    mov r3, r0
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #61
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r0, #21
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    bl drawLine__P4332
_proccall125:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #15
    b _jmpwords_49      
.object PUSH
.balign 4
_ldlit_22:
 .word _hexlit44
_ldlit_23:
 .word _hexlit45
_ldlit_24:
 .word _hexlit46
_ldlit_25:
 .word gameOverConfig_inline__P4880_Lit
_ldlit_26:
 .word scene_systemMenu_register__P3081_Lit
_ldlit_27:
 .word _hexlit65
_ldlit_28:
 .word _hexlit66
_ldlit_29:
 .word _hexlit67
_ldlit_30:
 .word _hexlit68
_ldlit_31:
 .word _hexlit69
_ldlit_32:
 .word _hexlit70
_ldlit_33:
 .word _hexlit71
_ldlit_34:
 .word _hexlit72
_ldlit_35:
 .word _hexlit73
_ldlit_36:
 .word _hexlit74
_ldlit_37:
 .word _hexlit75
_ldlit_38:
 .word game_consoleOverlay_listener__P5221_Lit
_ldlit_39:
 .word MAX_SOURCES_inline__P13369_Lit
_ldlit_40:
 .word particles_SprayFactory__C3166_VT
_ldlit_41:
 .word Math_FastRandom__C3034_VT
_ldlit_42:
 .word _dbl77
_ldlit_43:
 .word effects_ScreenEffect__C3241_VT
_ldlit_44:
 .word confetti_inline__P13122_Lit
_ldlit_45:
 .word effects_ImageEffect__C3265_VT
_ldlit_46:
 .word dissolve_inline__P11631_Lit
_ldlit_47:
 .word melt_inline__P13069_Lit
_ldlit_48:
 .word controller_pauseUntilAnyButtonIsPressed__P2182_Lit
_jmpwords_49:
.object POP
    push {r0} ; proc-arg
    movs r0, #61
    push {r0} ; proc-arg
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    bl drawLine__P4332
_proccall126:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #19
    push {r0} ; proc-arg
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #161
    push {r0} ; proc-arg
    movs r0, #161
    push {r0} ; proc-arg
    bl drawLine__P4332
_proccall127:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #27
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    bl drawLine__P4332
_proccall128:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #27
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    movs r0, #1
    push {r0} ; proc-arg
    bl drawLine__P4332
_proccall129:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    bl draw__P4328
_proccall130:
    @stackempty locals
    ldr r0, _ldlit_50 ; inline__P6986_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall131:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_51 ; inline__P6991_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall132:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4333:
    @stackempty locals
    movs r0, #0
.final_0_1:
_main___P4333_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/frame.ts(18,27): control.__screen.inline
    ;
    .object control___screen_inline__P4547 "screen---st7735/frame.ts(18,27): control.__screen.inline"
control___screen_inline__P4547_pre:
    .section code
    .balign 4
control___screen_inline__P4547_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control___screen_inline__P4547_args@fn
control___screen_inline__P4547_args:
    .section code
control___screen_inline__P4547:
control___screen_inline__P4547_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control___screen_inline__P4547_locals:
.cont.4548:
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.4548      
.jmpz133:
    movs r0, #10
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    bl pause__P413
_proccall134:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_2      
.jmpz135:
    bl control___screen_update__P1971
_proccall136:
    @stackempty locals
    movs r0, #66
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
.else_0_2:
.afterif_1_2:
    b .cont.4548      
.brk.4548:
    movs r0, #0
.ret.4547:
    @stackempty locals
.final_2_2:
control___screen_inline__P4547_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(16,29): controller.inline
    ;
    .object controller_inline__P4606 "game/controller.ts(16,29): controller.inline"
controller_inline__P4606_pre:
    .section code
    .balign 4
controller_inline__P4606_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_inline__P4606_args@fn
controller_inline__P4606_args:
    .section code
controller_inline__P4606:
controller_inline__P4606_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_inline__P4606_locals:
    bl game_currentScene__P2974
_proccall137:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #80]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_3      
.jmpz138:
    b .ret.4606      
.else_0_3:
.afterif_1_3:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.4614:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz139
    b .brk.4614      
.jmpz139:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_3      
.jmpz140:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_3      
.lazySkip_4_3:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.lazy_3_3:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_3      
.jmpz141:
    ldr r0, [sp, locals@2]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_5_3      
.jmpz142:
    movs r0, #3
    b .condexprfin_6_3      
.condexprz_5_3:
    movs r0, #5
.condexprfin_6_3:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@2]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_3:
.afterif_7_3:
.cont.4614:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.4614      
.brk.4614:
.ret.4606:
    @stackempty locals
    movs r0, #0
.final_8_3:
    add sp, #4*3 ; pop locals 3
controller_inline__P4606_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(32,30): controller.inline
    ;
    .object controller_inline__P4646 "game/controller.ts(32,30): controller.inline"
controller_inline__P4646_pre:
    .section code
    .balign 4
controller_inline__P4646_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_inline__P4646_args@fn
controller_inline__P4646_args:
    cmp r4, #1
    bge controller_inline__P4646_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_inline__P4646_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_inline__P4646:
controller_inline__P4646_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
controller_inline__P4646_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_scene_Scene__C2818_validate_11
    str r1, [r0, #80]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.4652:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.4652      
.jmpz143:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_4      
.jmpz144:
    ldr r0, [sp, args@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #80]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_4:
.afterif_1_4:
.cont.4652:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.4652      
.brk.4652:
.ret.4646:
    @stackempty locals
    movs r0, #0
.final_2_4:
    add sp, #4*1 ; pop locals 1
controller_inline__P4646_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/info.ts(94,30): info.inline
    ;
    .object info_inline__P4756 "game/info.ts(94,30): info.inline"
info_inline__P4756_pre:
    .section code
    .balign 4
info_inline__P4756_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word info_inline__P4756_args@fn
info_inline__P4756_args:
    cmp r4, #1
    bge info_inline__P4756_nochk
    push {lr}
    bl _expand_args_1_12
    bl info_inline__P4756_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_50:
 .word inline__P6986_Lit
_ldlit_51:
 .word inline__P6991_Lit
.object POP
    .section code
info_inline__P4756:
info_inline__P4756_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
info_inline__P4756_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_5      
.jmpz145:
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_5      
.jmpz146:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #44]
    @stackempty locals
.else_1_5:
.afterif_2_5:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #63
    ldr r7, [r6, #0]
    ldr r2, [r7, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #137
    lsls r1, r1, #1
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
.else_0_5:
.afterif_3_5:
.ret.4756:
    @stackempty locals
    movs r0, #0
.final_4_5:
info_inline__P4756_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/info.ts(105,29): info.inline
    ;
    .object info_inline__P4772 "game/info.ts(105,29): info.inline"
info_inline__P4772_pre:
    .section code
    .balign 4
info_inline__P4772_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word info_inline__P4772_args@fn
info_inline__P4772_args:
    .section code
info_inline__P4772:
info_inline__P4772_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
info_inline__P4772_locals:
    bl game_currentScene__P2974
_proccall147:
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_6      
.jmpz148:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_6      
.lazySkip_2_6:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_1_6:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_6      
.jmpz149:
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #137
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall151:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _cmp_eq
    beq .else_3_6      
.jmpz150:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #63
    bl _ifacecall1_get_8
_proccall152:
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
    b .afterif_4_6      
.else_3_6:
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_4_6:
.else_0_6:
.afterif_5_6:
.ret.4772:
    @stackempty locals
    movs r0, #0
.final_6_6:
    add sp, #4*2 ; pop locals 2
info_inline__P4772_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(108,35): gameOverConfig.inline
    ;
    .object gameOverConfig_inline__P4880 "game/game.ts(108,35): gameOverConfig.inline"
gameOverConfig_inline__P4880_pre:
    .section code
    .balign 4
gameOverConfig_inline__P4880_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word gameOverConfig_inline__P4880_args@fn
gameOverConfig_inline__P4880_args:
    .section code
gameOverConfig_inline__P4880:
gameOverConfig_inline__P4880_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
gameOverConfig_inline__P4880_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_7      
.jmpz153:
    ldr r0, _ldlit_53 ; game_GameOverConfig__C2948_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl game_GameOverConfig_constructor__P2963
_proccall154:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #64]
    @stackempty locals
.else_0_7:
.afterif_1_7:
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
.ret.4880:
    @stackempty locals
.final_2_7:
gameOverConfig_inline__P4880_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function src/drawCommands.ts(87,53): inline
    ;
    .object inline__P6986 "src/drawCommands.ts(87,53): inline"
inline__P6986_pre:
    .section code
    .balign 4
inline__P6986_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6986_args@fn
inline__P6986_args:
    .section code
inline__P6986:
inline__P6986_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6986_locals:
    bl clear__P4329
_proccall155:
    @stackempty locals
.ret.6986:
    @stackempty locals
    movs r0, #0
.final_0_8:
inline__P6986_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function src/drawCommands.ts(88,56): inline
    ;
    .object inline__P6991 "src/drawCommands.ts(88,56): inline"
inline__P6991_pre:
    .section code
    .balign 4
inline__P6991_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6991_args@fn
inline__P6991_args:
    .section code
inline__P6991:
inline__P6991_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6991_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #33
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    bl drawLine__P4332
_proccall156:
    add sp, #4*10 ; pop locals 10
    @stackempty locals
.ret.6991:
    @stackempty locals
    movs r0, #0
.final_0_9:
inline__P6991_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function src/drawCommands.ts(8,1): clear
    ;
    .object clear__P4329 "src/drawCommands.ts(8,1): clear"
clear__P4329_pre:
    .section code
    .balign 4
    .section code
clear__P4329:
clear__P4329_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
clear__P4329_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.7017:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7017      
.jmpz157:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.7022:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7022      
.jmpz158:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl setPixel__P4330
_proccall159:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.7022:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.7022      
.brk.7022:
.cont.7017:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.7017      
.brk.7017:
.ret.4329:
    @stackempty locals
    movs r0, #0
.final_0_10:
    add sp, #4*2 ; pop locals 2
clear__P4329_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function src/drawCommands.ts(16,1): setPixel
    ;
    .object setPixel__P4330 "src/drawCommands.ts(16,1): setPixel"
setPixel__P4330_pre:
    .section code
    .balign 4
    .section code
setPixel__P4330:
setPixel__P4330_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
setPixel__P4330_locals:
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.4330:
    @stackempty locals
    movs r0, #0
.final_0_11:
setPixel__P4330_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(124,9): controller.Button.onEvent
    ;
    .object controller_Button_onEvent__P2173 "game/controllerbutton.ts(124,9): controller.Button.onEvent"
controller_Button_onEvent__P2173_pre:
    .section code
    .balign 4
controller_Button_onEvent__P2173_args:
    cmp r4, #3
    bge controller_Button_onEvent__P2173_nochk
    push {lr}
    bl _expand_args_3_15
    bl controller_Button_onEvent__P2173_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
controller_Button_onEvent__P2173:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_onEvent__P2173_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
controller_Button_onEvent__P2173_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_getOrCreateHandlerForEvent__P4676_nochk
_proccall160:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _inst_controller_ButtonHandler__C2160_validate_17
    str r1, [r0, #8]
    @stackempty locals
.ret.2173:
    @stackempty locals
    movs r0, #0
.final_0_12:
    add sp, #4*1 ; pop locals 1
controller_Button_onEvent__P2173_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(251,9): controller.Button.getOrCreateHandlerForEvent
    ;
    .object controller_Button_getOrCreateHandlerForEvent__P4676 "game/controllerbutton.ts(251,9): controller.Button.getOrCreateHandlerForEvent"
controller_Button_getOrCreateHandlerForEvent__P4676_pre:
    .section code
    .balign 4
controller_Button_getOrCreateHandlerForEvent__P4676_args:
    cmp r4, #2
    bge controller_Button_getOrCreateHandlerForEvent__P4676_nochk
    push {lr}
    bl _expand_args_2_18
    bl controller_Button_getOrCreateHandlerForEvent__P4676_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button_getOrCreateHandlerForEvent__P4676:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_getOrCreateHandlerForEvent__P4676_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button_getOrCreateHandlerForEvent__P4676_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_handlerState__P4671_nochk
_proccall162:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_13      
.jmpz161:
    ldr r0, _ldlit_54 ; controller_ButtonEventHandlerState__C2162_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_ButtonEventHandlerState_constructor__P2163
_proccall163:
    add sp, #4*2 ; pop locals 2
    bl game_currentScene__P2974
_proccall164:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_13:
.afterif_1_13:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_handlerState__P4671_nochk
_proccall165:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_19
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_13      
.jmpz166:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_19
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_13      
.object PUSH
.balign 4
_ldlit_53:
 .word game_GameOverConfig__C2948_VT
_ldlit_54:
 .word controller_ButtonEventHandlerState__C2162_VT
.object POP
.else_2_13:
.afterif_3_13:
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_19
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.7080:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7080      
.jmpz167:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    bl _inst_controller_ButtonHandler__C2160_validate_17
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_4_13      
.jmpz168:
    ldr r0, [sp, locals@1]
    b .ret.4676      
.else_4_13:
.afterif_5_13:
.cont.7080:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.7080      
.brk.7080:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #2
    ldr r1, _ldlit_56 ; controller_Button_getOrCreateHandlerForEvent_inline__P7090_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl control_onEvent__P391
_proccall169:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, _ldlit_57 ; controller_ButtonHandler__C2160_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_ButtonHandler_constructor__P2161
_proccall170:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_19
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@4]
.ret.4676:
    @stackempty locals
.final_6_13:
    add sp, #4*5 ; pop locals 5
controller_Button_getOrCreateHandlerForEvent__P4676_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(266,45): controller.Button.getOrCreateHandlerForEvent.inline
    ;
    .object controller_Button_getOrCreateHandlerForEvent_inline__P7090 "game/controllerbutton.ts(266,45): controller.Button.getOrCreateHandlerForEvent.inline"
controller_Button_getOrCreateHandlerForEvent_inline__P7090_pre:
    .section code
    .balign 4
controller_Button_getOrCreateHandlerForEvent_inline__P7090_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Button_getOrCreateHandlerForEvent_inline__P7090_args@fn
controller_Button_getOrCreateHandlerForEvent_inline__P7090_args:
    .section code
controller_Button_getOrCreateHandlerForEvent_inline__P7090:
controller_Button_getOrCreateHandlerForEvent_inline__P7090_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_getOrCreateHandlerForEvent_inline__P7090_locals:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl controller_Button_runButtonEvents__P4675_nochk
_proccall171:
    add sp, #4*2 ; pop locals 2
.ret.7090:
    @stackempty locals
    movs r0, #0
.final_0_14:
controller_Button_getOrCreateHandlerForEvent_inline__P7090_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(45,9): controller.ButtonHandler.constructor
    ;
    .object controller_ButtonHandler_constructor__P2161 "game/controllerbutton.ts(45,9): controller.ButtonHandler.constructor"
controller_ButtonHandler_constructor__P2161_pre:
    .section code
    .balign 4
    .section code
controller_ButtonHandler_constructor__P2161:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_ButtonHandler__C2160_validate_17
    mov lr, r7
controller_ButtonHandler_constructor__P2161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_ButtonHandler_constructor__P2161_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    movs r0, #0
.ret.2161:
    @stackempty locals
.final_0_15:
controller_ButtonHandler_constructor__P2161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(237,9): controller.Button.runButtonEvents
    ;
    .object controller_Button_runButtonEvents__P4675 "game/controllerbutton.ts(237,9): controller.Button.runButtonEvents"
controller_Button_runButtonEvents__P4675_pre:
    .section code
    .balign 4
controller_Button_runButtonEvents__P4675_args:
    cmp r4, #2
    bge controller_Button_runButtonEvents__P4675_nochk
    push {lr}
    bl _expand_args_2_18
    bl controller_Button_runButtonEvents__P4675_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button_runButtonEvents__P4675:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_runButtonEvents__P4675_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button_runButtonEvents__P4675_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_handlerState__P4671_nochk
_proccall172:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_16      
.jmpz173:
    b .ret.4675      
.else_0_16:
.afterif_1_16:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_getOrCreateHandlerForEvent__P4676_nochk
_proccall174:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_controller_ButtonHandler__C2160_validate_17
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_16      
.jmpz175:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #82
    bl _ifacecall1__20
_proccall176:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_16:
.afterif_3_16:
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_19
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_16      
.jmpz177:
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_19
    ldr r0, [r0, #12]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.7124:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7124      
.jmpz178:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_controller_ButtonHandler__C2160_validate_17
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_7_16      
.jmpz179:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_16      
.lazySkip_7_16:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_controller_ButtonHandler__C2160_validate_17
    ldr r0, [r0, #8]
.lazy_6_16:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_16      
.jmpz180:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #82
    bl _ifacecall1__20
_proccall181:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_5_16:
.afterif_8_16:
.cont.7124:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.7124      
.brk.7124:
    movs r0, #0
    str r0, [sp, locals@3]
.else_4_16:
.afterif_9_16:
.ret.4675:
    @stackempty locals
    movs r0, #0
.final_10_16:
    add sp, #4*5 ; pop locals 5
controller_Button_runButtonEvents__P4675_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(10,5): control.onEvent
    ;
    .object control_onEvent__P391 "base/eventcontext.ts(10,5): control.onEvent"
control_onEvent__P391_pre:
    .section code
    .balign 4
    .section code
control_onEvent__P391:
control_onEvent__P391_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control_onEvent__P391_locals:
    bl control_eventContext__P408
_proccall182:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_17      
.jmpz183:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_1_17      
.else_0_17:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventContext_registerHandler__P405
_proccall184:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.afterif_1_17:
.ret.391:
    @stackempty locals
    movs r0, #0
.final_2_17:
    add sp, #4*1 ; pop locals 1
control_onEvent__P391_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(174,9): control.EventContext.registerHandler
    ;
    .object control_EventContext_registerHandler__P405 "base/eventcontext.ts(174,9): control.EventContext.registerHandler"
control_EventContext_registerHandler__P405_pre:
    .section code
    .balign 4
control_EventContext_registerHandler__P405_args:
    cmp r4, #5
    bge control_EventContext_registerHandler__P405_nochk
    push {lr}
    bl _expand_args_5_22
    bl control_EventContext_registerHandler__P405_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
control_EventContext_registerHandler__P405:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_registerHandler__P405_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerHandler__P405_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7164:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz185
    b .brk.7164      
.object PUSH
.balign 4
_ldlit_56:
 .word controller_Button_getOrCreateHandlerForEvent_inline__P7090_Lit
_ldlit_57:
 .word controller_ButtonHandler__C2160_VT
.object POP
.jmpz185:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_control_EventHandler__C4412_validate_24
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_18      
.jmpz186:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_18      
.lazySkip_2_18:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_control_EventHandler__C4412_validate_24
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_18:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_18      
.jmpz187:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@4]
    bl _inst_control_EventHandler__C4412_validate_24
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@3]
    bl _inst_control_EventHandler__C4412_validate_24
    str r1, [r0, #12]
    @stackempty locals
    b .ret.405      
.else_0_18:
.afterif_3_18:
.cont.7164:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.7164      
.brk.7164:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, _ldlit_59 ; control_EventHandler__C4412_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*4] ; tmpref @1
    push {r0} ; proc-arg
    bl control_EventHandler_constructor__P4415
_proccall188:
    add sp, #4*5 ; pop locals 5
    pop {r0} ; tmpref @1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl control_EventHandler_register__P4413
_proccall189:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.405:
    @stackempty locals
    movs r0, #0
.final_4_18:
    add sp, #4*4 ; pop locals 4
control_EventContext_registerHandler__P405_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(31,9): control.EventHandler.register
    ;
    .object control_EventHandler_register__P4413 "base/eventcontext.ts(31,9): control.EventHandler.register"
control_EventHandler_register__P4413_pre:
    .section code
    .balign 4
control_EventHandler_register__P4413_args:
    cmp r4, #1
    bge control_EventHandler_register__P4413_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventHandler_register__P4413_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventHandler_register__P4413:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventHandler__C4412_validate_24
    mov lr, r7
control_EventHandler_register__P4413_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_register__P4413_locals:
    movs r0, #1
    ldr r1, _ldlit_60 ; control_EventHandler_register_inline__P7203_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.4413:
    @stackempty locals
    movs r0, #0
.final_0_19:
control_EventHandler_register__P4413_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(32,59): control.EventHandler.register.inline
    ;
    .object control_EventHandler_register_inline__P7203 "base/eventcontext.ts(32,59): control.EventHandler.register.inline"
control_EventHandler_register_inline__P7203_pre:
    .section code
    .balign 4
control_EventHandler_register_inline__P7203_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_EventHandler_register_inline__P7203_args@fn
control_EventHandler_register_inline__P7203_args:
    .section code
control_EventHandler_register_inline__P7203:
control_EventHandler_register_inline__P7203_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_register_inline__P7203_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_20      
.jmpz190:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall1__20
_proccall191:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_20:
.afterif_1_20:
.ret.7203:
    @stackempty locals
    movs r0, #0
.final_2_20:
control_EventHandler_register_inline__P7203_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(24,9): control.EventHandler.constructor
    ;
    .object control_EventHandler_constructor__P4415 "base/eventcontext.ts(24,9): control.EventHandler.constructor"
control_EventHandler_constructor__P4415_pre:
    .section code
    .balign 4
    .section code
control_EventHandler_constructor__P4415:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventHandler__C4412_validate_24
    mov lr, r7
control_EventHandler_constructor__P4415_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_constructor__P4415_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    movs r0, #0
.ret.4415:
    @stackempty locals
.final_0_21:
control_EventHandler_constructor__P4415_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(214,5): control.eventContext
    ;
    .object control_eventContext__P408 "base/eventcontext.ts(214,5): control.eventContext"
control_eventContext__P408_pre:
    .section code
    .balign 4
    .section code
control_eventContext__P408:
control_eventContext__P408_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_eventContext__P408_locals:
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_22      
.jmpz192:
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_22      
.condexprz_0_22:
    movs r0, #0
.condexprfin_1_22:
; jmp value (already in r0)
.ret.408:
    @stackempty locals
.final_2_22:
control_eventContext__P408_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(49,9): controller.ButtonEventHandlerState.constructor
    ;
    .object controller_ButtonEventHandlerState_constructor__P2163 "game/controllerbutton.ts(49,9): controller.ButtonEventHandlerState.constructor"
controller_ButtonEventHandlerState_constructor__P2163_pre:
    .section code
    .balign 4
    .section code
controller_ButtonEventHandlerState_constructor__P2163:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_19
    mov lr, r7
controller_ButtonEventHandlerState_constructor__P2163_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_ButtonEventHandlerState_constructor__P2163_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    movs r0, #0
.ret.2163:
    @stackempty locals
.final_0_23:
controller_ButtonEventHandlerState_constructor__P2163_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(67,9): controller.Button.handlerState
    ;
    .object controller_Button_handlerState__P4671 "game/controllerbutton.ts(67,9): controller.Button.handlerState"
controller_Button_handlerState__P4671_pre:
    .section code
    .balign 4
controller_Button_handlerState__P4671_args:
    cmp r4, #1
    bge controller_Button_handlerState__P4671_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_handlerState__P4671_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_handlerState__P4671:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_handlerState__P4671_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button_handlerState__P4671_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    bl game_currentScene__P2974
_proccall193:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #88]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7229:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7229      
.jmpz194:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_controller_ButtonEventHandlerState__C2162_validate_19
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_24      
.jmpz195:
    ldr r0, [sp, locals@0]
    b .ret.4671      
.else_0_24:
.afterif_1_24:
.cont.7229:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.7229      
.brk.7229:
    movs r0, #0
    str r0, [sp, locals@1]
    movs r0, #0
.ret.4671:
    @stackempty locals
.final_2_24:
    add sp, #4*3 ; pop locals 3
controller_Button_handlerState__P4671_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function src/drawCommands.ts(4,1): draw
    ;
    .object draw__P4328 "src/drawCommands.ts(4,1): draw"
draw__P4328_pre:
    .section code
    .balign 4
    .section code
draw__P4328:
draw__P4328_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
draw__P4328_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl sprites_create__P2252
_proccall196:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.ret.4328:
    @stackempty locals
    movs r0, #0
.final_0_25:
    add sp, #4*1 ; pop locals 1
draw__P4328_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprites.ts(36,5): sprites.create
    ;
    .object sprites_create__P2252 "game/sprites.ts(36,5): sprites.create"
sprites_create__P2252_pre:
    .section code
    .balign 4
    .section code
sprites_create__P2252:
sprites_create__P2252_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_create__P2252_locals:
    bl game_currentScene__P2974
_proccall197:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_61 ; Sprite__C2316_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_constructor__P2363
_proccall198:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_setKind__P2383
_proccall199:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_PhysicsEngine__C2486_25
_proccall200:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_62 ; forEach_inline__P7260_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #1
    ldr r1, _ldlit_63 ; sprites_create_inline__P7267_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #44]
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall201:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall202:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
.ret.2252:
    @stackempty locals
.final_0_26:
    add sp, #4*2 ; pop locals 2
sprites_create__P2252_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprites.ts(44,21): forEach.inline
    ;
    .object forEach_inline__P7260 "game/sprites.ts(44,21): forEach.inline"
forEach_inline__P7260_pre:
    .section code
    .balign 4
forEach_inline__P7260_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P7260_args@fn
forEach_inline__P7260_args:
    cmp r4, #1
    bge forEach_inline__P7260_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P7260_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_59:
 .word control_EventHandler__C4412_VT
_ldlit_60:
 .word control_EventHandler_register_inline__P7203_Lit
_ldlit_61:
 .word Sprite__C2316_VT
_ldlit_62:
 .word forEach_inline__P7260_Lit
_ldlit_63:
 .word sprites_create_inline__P7267_Lit
.object POP
    .section code
forEach_inline__P7260:
forEach_inline__P7260_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P7260_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.7260:
    @stackempty locals
.final_0_27:
forEach_inline__P7260_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprites.ts(45,22): sprites.create.inline
    ;
    .object sprites_create_inline__P7267 "game/sprites.ts(45,22): sprites.create.inline"
sprites_create_inline__P7267_pre:
    .section code
    .balign 4
sprites_create_inline__P7267_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word sprites_create_inline__P7267_args@fn
sprites_create_inline__P7267_args:
    cmp r4, #1
    bge sprites_create_inline__P7267_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_create_inline__P7267_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_create_inline__P7267:
sprites_create_inline__P7267_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_create_inline__P7267_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall2__27
_proccall203:
    add sp, #4*2 ; pop locals 2
.ret.7267:
    @stackempty locals
    movs r0, #0
.final_0_28:
sprites_create_inline__P7267_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(262,5): helpers.arrayFilter
    ;
    .object helpers_arrayFilter__P110 "base/pxt-helpers.ts(262,5): helpers.arrayFilter"
helpers_arrayFilter__P110_pre:
    .section code
    .balign 4
    .section code
helpers_arrayFilter__P110:
helpers_arrayFilter__P110_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayFilter__P110_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7282:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.7282      
.jmpz204:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_29      
.jmpz205:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_29:
.afterif_1_29:
.cont.7282:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.7282      
.brk.7282:
    ldr r0, [sp, locals@0]
.ret.110:
    @stackempty locals
.final_2_29:
    add sp, #4*4 ; pop locals 4
helpers_arrayFilter__P110_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(255,5): helpers.arrayForEach
    ;
    .object helpers_arrayForEach__P109 "base/pxt-helpers.ts(255,5): helpers.arrayForEach"
helpers_arrayForEach__P109_pre:
    .section code
    .balign 4
    .section code
helpers_arrayForEach__P109:
helpers_arrayForEach__P109_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayForEach__P109_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.7305:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.7305      
.jmpz207:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.7305:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.7305      
.brk.7305:
.ret.109:
    @stackempty locals
    movs r0, #0
.final_0_30:
    add sp, #4*2 ; pop locals 2
helpers_arrayForEach__P109_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(9,5): PhysicsEngine.addSprite
    ;
    .object PhysicsEngine_addSprite__P2488 "game/physics.ts(9,5): PhysicsEngine.addSprite"
PhysicsEngine_addSprite__P2488_pre:
    .section code
    .balign 4
PhysicsEngine_addSprite__P2488_args:
    cmp r4, #2
    bge PhysicsEngine_addSprite__P2488_nochk
    push {lr}
    bl _expand_args_2_18
    bl PhysicsEngine_addSprite__P2488_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
PhysicsEngine_addSprite__P2488:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2486_validate_29
    mov lr, r7
PhysicsEngine_addSprite__P2488_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_addSprite__P2488_locals:
.ret.2488:
    @stackempty locals
    movs r0, #0
.final_0_31:
PhysicsEngine_addSprite__P2488_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(465,5): Sprite.setKind
    ;
    .object Sprite_setKind__P2383 "game/sprite.ts(465,5): Sprite.setKind"
Sprite_setKind__P2383_pre:
    .section code
    .balign 4
Sprite_setKind__P2383_args:
    cmp r4, #2
    bge Sprite_setKind__P2383_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_setKind__P2383_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_setKind__P2383:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_setKind__P2383_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_setKind__P2383_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_32      
.jmpz209:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_32      
.lazySkip_2_32:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_1_32:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_32      
.jmpz210:
    b .ret.2383      
.else_0_32:
.afterif_3_32:
    bl game_currentScene__P2974
_proccall211:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #24]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_32      
.jmpz212:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_32      
.lazySkip_6_32:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
.lazy_5_32:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_32      
.jmpz213:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteSet_remove__P2445
_proccall214:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_32:
.afterif_7_32:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_ge
    beq .else_8_32      
.jmpz215:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_9_32      
.jmpz216:
    ldr r0, _ldlit_65 ; sprites_SpriteSet__C2438_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl sprites_SpriteSet_constructor__P2440
_proccall217:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_32
    bl _pxt_map_set
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_9_32:
.afterif_10_32:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteSet_add__P2443
_proccall218:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_8_32:
.afterif_11_32:
    bl game_currentScene__P2974
_proccall219:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #52]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_32      
.jmpz220:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    bl _conv_32
    bl _pxt_map_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_12_32:
.afterif_13_32:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #112]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #64]
    @stackempty locals
.ret.2383:
    @stackempty locals
    movs r0, #0
.final_14_32:
    add sp, #4*2 ; pop locals 2
Sprite_setKind__P2383_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(42,9): sprites.SpriteSet.add
    ;
    .object sprites_SpriteSet_add__P2443 "game/spriteset.ts(42,9): sprites.SpriteSet.add"
sprites_SpriteSet_add__P2443_pre:
    .section code
    .balign 4
sprites_SpriteSet_add__P2443_args:
    cmp r4, #2
    bge sprites_SpriteSet_add__P2443_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_SpriteSet_add__P2443_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteSet_add__P2443:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2438_validate_33
    mov lr, r7
sprites_SpriteSet_add__P2443_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_add__P2443_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_33      
.jmpz221:
    movs r0, #10
    b .ret.2443      
.else_0_33:
.afterif_1_33:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteSet_contains__P2446_nochk
_proccall223:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_33      
.jmpz222:
    movs r0, #10
    b .ret.2443      
.else_2_33:
.afterif_3_33:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
.ret.2443:
    @stackempty locals
.final_4_33:
sprites_SpriteSet_add__P2443_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(80,9): sprites.SpriteSet.contains
    ;
    .object sprites_SpriteSet_contains__P2446 "game/spriteset.ts(80,9): sprites.SpriteSet.contains"
sprites_SpriteSet_contains__P2446_pre:
    .section code
    .balign 4
sprites_SpriteSet_contains__P2446_args:
    cmp r4, #2
    bge sprites_SpriteSet_contains__P2446_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_SpriteSet_contains__P2446_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteSet_contains__P2446:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2438_validate_33
    mov lr, r7
sprites_SpriteSet_contains__P2446_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_contains__P2446_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.ret.2446:
    @stackempty locals
.final_0_34:
sprites_SpriteSet_contains__P2446_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(20,9): sprites.SpriteSet.constructor
    ;
    .object sprites_SpriteSet_constructor__P2440 "game/spriteset.ts(20,9): sprites.SpriteSet.constructor"
sprites_SpriteSet_constructor__P2440_pre:
    .section code
    .balign 4
    .section code
sprites_SpriteSet_constructor__P2440:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2438_validate_33
    mov lr, r7
sprites_SpriteSet_constructor__P2440_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_constructor__P2440_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2440:
    @stackempty locals
.final_0_35:
sprites_SpriteSet_constructor__P2440_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(67,9): sprites.SpriteSet.remove
    ;
    .object sprites_SpriteSet_remove__P2445 "game/spriteset.ts(67,9): sprites.SpriteSet.remove"
sprites_SpriteSet_remove__P2445_pre:
    .section code
    .balign 4
sprites_SpriteSet_remove__P2445_args:
    cmp r4, #2
    bge sprites_SpriteSet_remove__P2445_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_SpriteSet_remove__P2445_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteSet_remove__P2445:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2438_validate_33
    mov lr, r7
sprites_SpriteSet_remove__P2445_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
sprites_SpriteSet_remove__P2445_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_0_36      
.jmpz224:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySplice__P100
_proccall225:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #66
    b .ret.2445      
.else_0_36:
.afterif_1_36:
    movs r0, #10
.ret.2445:
    @stackempty locals
.final_2_36:
    add sp, #4*1 ; pop locals 1
sprites_SpriteSet_remove__P2445_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(138,5): helpers.arraySplice
    ;
    .object helpers_arraySplice__P100 "base/pxt-helpers.ts(138,5): helpers.arraySplice"
helpers_arraySplice__P100_pre:
    .section code
    .balign 4
    .section code
helpers_arraySplice__P100:
helpers_arraySplice__P100_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_arraySplice__P100_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_37      
.jmpz226:
    b .ret.100      
.else_0_37:
.afterif_1_37:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.7422:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    beq .brk.7422      
.jmpz227:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_34
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.7422:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.7422      
.brk.7422:
.ret.100:
    @stackempty locals
    movs r0, #0
.final_2_37:
    add sp, #4*1 ; pop locals 1
helpers_arraySplice__P100_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_65:
 .word sprites_SpriteSet__C2438_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(279,5): Sprite.constructor
    ;
    .object Sprite_constructor__P2363 "game/sprite.ts(279,5): Sprite.constructor"
Sprite_constructor__P2363_pre:
    .section code
    .balign 4
    .section code
Sprite_constructor__P2363:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_constructor__P2363_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_constructor__P2363_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_constructor__P2073
_proccall228:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall229:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall230:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2334_nochk
_proccall231:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2336_nochk
_proccall232:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ax__P2338_nochk
_proccall233:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ay__P2340_nochk
_proccall234:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_fx__P2342_nochk
_proccall235:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_fy__P2344_nochk
_proccall236:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    str r1, [r0, #48]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #116]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_setImage__P2366_nochk
_proccall237:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_setKind__P2383_nochk
_proccall238:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #68]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #108]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2363:
    @stackempty locals
.final_0_38:
Sprite_constructor__P2363_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(333,5): Sprite.setImage
    ;
    .object Sprite_setImage__P2366 "game/sprite.ts(333,5): Sprite.setImage"
Sprite_setImage__P2366_pre:
    .section code
    .balign 4
Sprite_setImage__P2366_args:
    cmp r4, #2
    bge Sprite_setImage__P2366_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_setImage__P2366_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_setImage__P2366:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_setImage__P2366_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_setImage__P2366_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_39      
.jmpz239:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_39      
.lazySkip_2_39:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_1_39:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_39      
.jmpz240:
    b .ret.2366      
.else_0_39:
.afterif_3_39:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #88]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #56
    bl _classCall_Sprite__C2316_this_35
_proccall241:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2366:
    @stackempty locals
    movs r0, #0
.final_4_39:
Sprite_setImage__P2366_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(364,5): Sprite.recalcSize
    ;
    .object Sprite_recalcSize__P4695 "game/sprite.ts(364,5): Sprite.recalcSize"
Sprite_recalcSize__P4695_pre:
    .section code
    .balign 4
Sprite_recalcSize__P4695_args:
    cmp r4, #1
    bge Sprite_recalcSize__P4695_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_recalcSize__P4695_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_recalcSize__P4695:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_recalcSize__P4695_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_recalcSize__P4695_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2345_nochk
_proccall242:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall243:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #52]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2347_nochk
_proccall244:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall245:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #56]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_resetHitbox__P2368_nochk
_proccall246:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4695:
    @stackempty locals
    movs r0, #0
.final_0_40:
Sprite_recalcSize__P4695_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(343,5): Sprite.resetHitbox
    ;
    .object Sprite_resetHitbox__P2368 "game/sprite.ts(343,5): Sprite.resetHitbox"
Sprite_resetHitbox__P2368_pre:
    .section code
    .balign 4
Sprite_resetHitbox__P2368_args:
    cmp r4, #1
    bge Sprite_resetHitbox__P2368_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_resetHitbox__P2368_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_resetHitbox__P2368:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_resetHitbox__P2368_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_resetHitbox__P2368_locals:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #104]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2316_this_35
_proccall247:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2368:
    @stackempty locals
    movs r0, #0
.final_0_41:
Sprite_resetHitbox__P2368_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(348,5): Sprite.setHitbox
    ;
    .object Sprite_setHitbox__P2369 "game/sprite.ts(348,5): Sprite.setHitbox"
Sprite_setHitbox__P2369_pre:
    .section code
    .balign 4
Sprite_setHitbox__P2369_args:
    cmp r4, #1
    bge Sprite_setHitbox__P2369_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_setHitbox__P2369_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_setHitbox__P2369:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_setHitbox__P2369_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_setHitbox__P2369_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_42      
.jmpz248:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_updateIfInvalid__P2199
_proccall249:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_42      
.else_0_42:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_calculateHitBox__P2201
_proccall250:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_42:
.ret.2369:
    @stackempty locals
    movs r0, #0
.final_2_42:
Sprite_setHitbox__P2369_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(104,5): game.calculateHitBox
    ;
    .object game_calculateHitBox__P2201 "game/hitbox.ts(104,5): game.calculateHitBox"
game_calculateHitBox__P2201_pre:
    .section code
    .balign 4
    .section code
game_calculateHitBox__P2201:
game_calculateHitBox__P2201_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
game_calculateHitBox__P2201_locals:
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_43      
.jmpz251:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_43      
.lazySkip_2_43:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_isValid__P2197
_proccall252:
    add sp, #4*1 ; pop locals 1
.lazy_1_43:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_43      
.jmpz253:
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    b .ret.2201      
.else_0_43:
.afterif_3_43:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; the one arg
    bl Fx8__P149
_proccall254:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; the one arg
    bl Fx8__P149
_proccall255:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.7566:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7566      
.jmpz256:
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@8]
    @stackempty locals
.fortop.7573:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7573      
.jmpz257:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_43      
.jmpz258:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall259:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall260:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall261:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall262:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
.else_4_43:
.afterif_5_43:
.cont.7573:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    ldr r0, [sp, locals@8]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    push {r0}; tmpstore @1
    str r0, [sp, locals@8]
    pop {r0} ; tmpref @1
    @stackempty locals
    b .fortop.7573      
.brk.7573:
.cont.7566:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@6]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    push {r0}; tmpstore @1
    str r0, [sp, locals@6]
    pop {r0} ; tmpref @1
    @stackempty locals
    b .fortop.7566      
.brk.7566:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall263:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall264:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall265:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall266:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #44]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #48]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, _ldlit_67 ; game_Hitbox__C2185_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, _ldlit_68 ; -511      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r1, _ldlit_68 ; -511      
    bl _numops_ands
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; tmpref @1
    push {r0} ; proc-arg
    bl game_Hitbox_constructor__P2192
_proccall267:
    add sp, #4*11 ; pop locals 11
    pop {r0} ; tmpref @1
.ret.2201:
    @stackempty locals
.final_6_43:
    add sp, #4*11 ; pop locals 11
game_calculateHitBox__P2201_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(10,9): game.Hitbox.constructor
    ;
    .object game_Hitbox_constructor__P2192 "game/hitbox.ts(10,9): game.Hitbox.constructor"
game_Hitbox_constructor__P2192_pre:
    .section code
    .balign 4
    .section code
game_Hitbox_constructor__P2192:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_37
    mov lr, r7
game_Hitbox_constructor__P2192_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_constructor__P2192_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_calcDimensionalHash__P2367
_proccall268:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.2192:
    @stackempty locals
.final_0_45:
game_Hitbox_constructor__P2192_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(339,5): Sprite.calcDimensionalHash
    ;
    .object Sprite_calcDimensionalHash__P2367 "game/sprite.ts(339,5): Sprite.calcDimensionalHash"
Sprite_calcDimensionalHash__P2367_pre:
    .section code
    .balign 4
Sprite_calcDimensionalHash__P2367_args:
    cmp r4, #1
    bge Sprite_calcDimensionalHash__P2367_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_calcDimensionalHash__P2367_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_calcDimensionalHash__P2367:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_calcDimensionalHash__P2367_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_calcDimensionalHash__P2367_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::revision
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    movs r0, #17
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall269:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    mov r3, r0
    movs r0, #33
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall270:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2367:
    @stackempty locals
.final_0_46:
Sprite_calcDimensionalHash__P2367_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(18,5): Fx.toIntShifted
    ;
    .object Fx_toIntShifted__P156 "base/fixed.ts(18,5): Fx.toIntShifted"
Fx_toIntShifted__P156_pre:
    .section code
    .balign 4
    .section code
Fx_toIntShifted__P156:
Fx_toIntShifted__P156_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_toIntShifted__P156_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #17
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
.ret.156:
    @stackempty locals
.final_0_47:
Fx_toIntShifted__P156_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(30,5): Fx.mul
    ;
    .object Fx_mul__P160 "base/fixed.ts(30,5): Fx.mul"
Fx_mul__P160_pre:
    .section code
    .balign 4
    .section code
Fx_mul__P160:
Fx_mul__P160_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_mul__P160_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::imul
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.ret.160:
    @stackempty locals
.final_0_49:
Fx_mul__P160_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(57,5): Fx.max
    ;
    .object Fx_max__P167 "base/fixed.ts(57,5): Fx.max"
Fx_max__P167_pre:
    .section code
    .balign 4
    .section code
Fx_max__P167:
Fx_max__P167_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_max__P167_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .else_0_51      
.jmpz271:
    ldr r0, [sp, args@0]
    b .ret.167      
    b .afterif_1_51      
.else_0_51:
    ldr r0, [sp, args@1]
    b .ret.167      
.afterif_1_51:
    movs r0, #0
.ret.167:
    @stackempty locals
.final_2_51:
Fx_max__P167_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(51,5): Fx.min
    ;
    .object Fx_min__P166 "base/fixed.ts(51,5): Fx.min"
Fx_min__P166_pre:
    .section code
    .balign 4
    .section code
Fx_min__P166:
Fx_min__P166_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_min__P166_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_lt
    beq .else_0_52      
.jmpz272:
    ldr r0, [sp, args@0]
    b .ret.166      
    b .afterif_1_52      
.else_0_52:
    ldr r0, [sp, args@1]
    b .ret.166      
.afterif_1_52:
    movs r0, #0
.ret.166:
    @stackempty locals
.final_2_52:
Fx_min__P166_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(323,5): Sprite.image
    ;
    .object Sprite_image__P2365 "game/sprite.ts(323,5): Sprite.image"
Sprite_image__P2365_pre:
    .section code
    .balign 4
Sprite_image__P2365_args:
    cmp r4, #1
    bge Sprite_image__P2365_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_image__P2365_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_image__P2365:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_image__P2365_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_image__P2365_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
.ret.2365:
    @stackempty locals
.final_0_53:
Sprite_image__P2365_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(41,9): game.Hitbox.isValid
    ;
    .object game_Hitbox_isValid__P2197 "game/hitbox.ts(41,9): game.Hitbox.isValid"
game_Hitbox_isValid__P2197_pre:
    .section code
    .balign 4
game_Hitbox_isValid__P2197_args:
    cmp r4, #1
    bge game_Hitbox_isValid__P2197_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_isValid__P2197_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_isValid__P2197:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_37
    mov lr, r7
game_Hitbox_isValid__P2197_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_isValid__P2197_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl Sprite_calcDimensionalHash__P2367
_proccall273:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.2197:
    @stackempty locals
.final_0_54:
game_Hitbox_isValid__P2197_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(49,9): game.Hitbox.updateIfInvalid
    ;
    .object game_Hitbox_updateIfInvalid__P2199 "game/hitbox.ts(49,9): game.Hitbox.updateIfInvalid"
game_Hitbox_updateIfInvalid__P2199_pre:
    .section code
    .balign 4
game_Hitbox_updateIfInvalid__P2199_args:
    cmp r4, #1
    bge game_Hitbox_updateIfInvalid__P2199_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_updateIfInvalid__P2199_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_updateIfInvalid__P2199:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_37
    mov lr, r7
game_Hitbox_updateIfInvalid__P2199_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
game_Hitbox_updateIfInvalid__P2199_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_isValid__P2197_nochk
_proccall275:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_55      
.jmpz274:
    b .ret.2199      
    b .afterif_1_55      
.object PUSH
.balign 4
_ldlit_67:
 .word game_Hitbox__C2185_VT
_ldlit_68:
 .word -511
.object POP
.else_0_55:
.afterif_1_55:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl game_calculateHitBox__P2201
_proccall276:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@2]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #12]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #16]
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@5]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@6]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall277:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@7]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall278:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@6]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall279:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@8]
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall280:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@9]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_gt
    beq .else_2_55      
.jmpz281:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@5]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_55:
.afterif_3_55:
    ldr r0, [sp, locals@10]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_gt
    beq .else_4_55      
.jmpz282:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@6]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_55:
.afterif_5_55:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2199:
    @stackempty locals
    movs r0, #0
.final_6_55:
    add sp, #4*11 ; pop locals 11
game_Hitbox_updateIfInvalid__P2199_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(45,5): Fx.abs
    ;
    .object Fx_abs__P165 "base/fixed.ts(45,5): Fx.abs"
Fx_abs__P165_pre:
    .section code
    .balign 4
    .section code
Fx_abs__P165:
Fx_abs__P165_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_abs__P165_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_56      
.jmpz283:
    movs r0, #1
    ldr r1, [sp, args@0]
    bl _numops_subs
    b .ret.165      
    b .afterif_1_56      
.else_0_56:
    ldr r0, [sp, args@0]
    b .ret.165      
.afterif_1_56:
    movs r0, #0
.ret.165:
    @stackempty locals
.final_2_56:
Fx_abs__P165_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(210,5): Sprite.sy
    ;
    .object Sprite_sy__P2347 "game/sprite.ts(210,5): Sprite.sy"
Sprite_sy__P2347_pre:
    .section code
    .balign 4
Sprite_sy__P2347_args:
    cmp r4, #1
    bge Sprite_sy__P2347_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_sy__P2347_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_sy__P2347:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_sy__P2347_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_sy__P2347_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2347:
    @stackempty locals
.final_0_57:
Sprite_sy__P2347_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(197,5): Sprite.sx
    ;
    .object Sprite_sx__P2345 "game/sprite.ts(197,5): Sprite.sx"
Sprite_sx__P2345_pre:
    .section code
    .balign 4
Sprite_sx__P2345_args:
    cmp r4, #1
    bge Sprite_sx__P2345_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_sx__P2345_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_sx__P2345:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_sx__P2345_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_sx__P2345_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2345:
    @stackempty locals
.final_0_59:
Sprite_sx__P2345_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(192,5): Sprite.fy
    ;
    .object Sprite_fy__P2344 "game/sprite.ts(192,5): Sprite.fy"
Sprite_fy__P2344_pre:
    .section code
    .balign 4
Sprite_fy__P2344_args:
    cmp r4, #2
    bge Sprite_fy__P2344_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_fy__P2344_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_fy__P2344:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_fy__P2344_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fy__P2344_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall284:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall285:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2344:
    @stackempty locals
    movs r0, #0
.final_0_60:
Sprite_fy__P2344_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(559,5): Math.max
    ;
    .object Math_max__P130 "base/pxt-helpers.ts(559,5): Math.max"
Math_max__P130_pre:
    .section code
    .balign 4
    .section code
Math_max__P130:
Math_max__P130_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_max__P130_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_ge
    beq .else_0_61      
.jmpz286:
    ldr r0, [sp, args@0]
    b .ret.130      
.else_0_61:
.afterif_1_61:
    ldr r0, [sp, args@1]
.ret.130:
    @stackempty locals
.final_2_61:
Math_max__P130_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(187,5): Sprite.fy
    ;
    .object Sprite_fy__P2343 "game/sprite.ts(187,5): Sprite.fy"
Sprite_fy__P2343_pre:
    .section code
    .balign 4
Sprite_fy__P2343_args:
    cmp r4, #1
    bge Sprite_fy__P2343_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_fy__P2343_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_fy__P2343:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_fy__P2343_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fy__P2343_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2343:
    @stackempty locals
.final_0_62:
Sprite_fy__P2343_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(182,5): Sprite.fx
    ;
    .object Sprite_fx__P2342 "game/sprite.ts(182,5): Sprite.fx"
Sprite_fx__P2342_pre:
    .section code
    .balign 4
Sprite_fx__P2342_args:
    cmp r4, #2
    bge Sprite_fx__P2342_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_fx__P2342_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_fx__P2342:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_fx__P2342_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fx__P2342_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall287:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall288:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2342:
    @stackempty locals
    movs r0, #0
.final_0_63:
Sprite_fx__P2342_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(177,5): Sprite.fx
    ;
    .object Sprite_fx__P2341 "game/sprite.ts(177,5): Sprite.fx"
Sprite_fx__P2341_pre:
    .section code
    .balign 4
Sprite_fx__P2341_args:
    cmp r4, #1
    bge Sprite_fx__P2341_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_fx__P2341_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_fx__P2341:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_fx__P2341_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_fx__P2341_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2341:
    @stackempty locals
.final_0_64:
Sprite_fx__P2341_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(171,5): Sprite.ay
    ;
    .object Sprite_ay__P2340 "game/sprite.ts(171,5): Sprite.ay"
Sprite_ay__P2340_pre:
    .section code
    .balign 4
Sprite_ay__P2340_args:
    cmp r4, #2
    bge Sprite_ay__P2340_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_ay__P2340_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_ay__P2340:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_ay__P2340_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ay__P2340_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall289:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2340:
    @stackempty locals
    movs r0, #0
.final_0_65:
Sprite_ay__P2340_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(166,5): Sprite.ay
    ;
    .object Sprite_ay__P2339 "game/sprite.ts(166,5): Sprite.ay"
Sprite_ay__P2339_pre:
    .section code
    .balign 4
Sprite_ay__P2339_args:
    cmp r4, #1
    bge Sprite_ay__P2339_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_ay__P2339_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_ay__P2339:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_ay__P2339_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ay__P2339_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2339:
    @stackempty locals
.final_0_66:
Sprite_ay__P2339_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(160,5): Sprite.ax
    ;
    .object Sprite_ax__P2338 "game/sprite.ts(160,5): Sprite.ax"
Sprite_ax__P2338_pre:
    .section code
    .balign 4
Sprite_ax__P2338_args:
    cmp r4, #2
    bge Sprite_ax__P2338_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_ax__P2338_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_ax__P2338:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_ax__P2338_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ax__P2338_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall290:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2338:
    @stackempty locals
    movs r0, #0
.final_0_67:
Sprite_ax__P2338_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(155,5): Sprite.ax
    ;
    .object Sprite_ax__P2337 "game/sprite.ts(155,5): Sprite.ax"
Sprite_ax__P2337_pre:
    .section code
    .balign 4
Sprite_ax__P2337_args:
    cmp r4, #1
    bge Sprite_ax__P2337_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_ax__P2337_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_ax__P2337:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_ax__P2337_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_ax__P2337_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2337:
    @stackempty locals
.final_0_68:
Sprite_ax__P2337_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(149,5): Sprite.vy
    ;
    .object Sprite_vy__P2336 "game/sprite.ts(149,5): Sprite.vy"
Sprite_vy__P2336_pre:
    .section code
    .balign 4
Sprite_vy__P2336_args:
    cmp r4, #2
    bge Sprite_vy__P2336_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_vy__P2336_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_vy__P2336:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_vy__P2336_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vy__P2336_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall291:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2336:
    @stackempty locals
    movs r0, #0
.final_0_69:
Sprite_vy__P2336_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(144,5): Sprite.vy
    ;
    .object Sprite_vy__P2335 "game/sprite.ts(144,5): Sprite.vy"
Sprite_vy__P2335_pre:
    .section code
    .balign 4
Sprite_vy__P2335_args:
    cmp r4, #1
    bge Sprite_vy__P2335_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_vy__P2335_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_vy__P2335:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_vy__P2335_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vy__P2335_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2335:
    @stackempty locals
.final_0_70:
Sprite_vy__P2335_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(138,5): Sprite.vx
    ;
    .object Sprite_vx__P2334 "game/sprite.ts(138,5): Sprite.vx"
Sprite_vx__P2334_pre:
    .section code
    .balign 4
Sprite_vx__P2334_args:
    cmp r4, #2
    bge Sprite_vx__P2334_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_vx__P2334_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_vx__P2334:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_vx__P2334_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vx__P2334_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall292:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2334:
    @stackempty locals
    movs r0, #0
.final_0_71:
Sprite_vx__P2334_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(133,5): Sprite.vx
    ;
    .object Sprite_vx__P2333 "game/sprite.ts(133,5): Sprite.vx"
Sprite_vx__P2333_pre:
    .section code
    .balign 4
Sprite_vx__P2333_args:
    cmp r4, #1
    bge Sprite_vx__P2333_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_vx__P2333_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_vx__P2333:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_vx__P2333_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_vx__P2333_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2333:
    @stackempty locals
.final_0_72:
Sprite_vx__P2333_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(16,9): sprites.BaseSprite.constructor
    ;
    .object sprites_BaseSprite_constructor__P2073 "game/basesprite.ts(16,9): sprites.BaseSprite.constructor"
sprites_BaseSprite_constructor__P2073_pre:
    .section code
    .balign 4
    .section code
sprites_BaseSprite_constructor__P2073:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_38
    mov lr, r7
sprites_BaseSprite_constructor__P2073_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite_constructor__P2073_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_z__P2076_nochk
_proccall293:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2974
_proccall294:
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_Scene_addSprite__P2845
_proccall295:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2073:
    @stackempty locals
.final_0_73:
sprites_BaseSprite_constructor__P2073_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(200,9): scene.Scene.addSprite
    ;
    .object scene_Scene_addSprite__P2845 "game/scene.ts(200,9): scene.Scene.addSprite"
scene_Scene_addSprite__P2845_pre:
    .section code
    .balign 4
scene_Scene_addSprite__P2845_args:
    cmp r4, #2
    bge scene_Scene_addSprite__P2845_nochk
    push {lr}
    bl _expand_args_2_18
    bl scene_Scene_addSprite__P2845_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Scene_addSprite__P2845:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2818_validate_11
    mov lr, r7
scene_Scene_addSprite__P2845_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_addSprite__P2845_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #20]
    push {r0}; tmpstore @3
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    pop {r0} ; tmpref @3
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #165
    bl _ifacecall2_set_39
_proccall296:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2845:
    @stackempty locals
    movs r0, #0
.final_0_74:
scene_Scene_addSprite__P2845_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(31,9): sprites.BaseSprite.z
    ;
    .object sprites_BaseSprite_z__P2076 "game/basesprite.ts(31,9): sprites.BaseSprite.z"
sprites_BaseSprite_z__P2076_pre:
    .section code
    .balign 4
sprites_BaseSprite_z__P2076_args:
    cmp r4, #2
    bge sprites_BaseSprite_z__P2076_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_BaseSprite_z__P2076_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_BaseSprite_z__P2076:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_38
    mov lr, r7
sprites_BaseSprite_z__P2076_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite_z__P2076_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_0_75      
.jmpz297:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    bl game_currentScene__P2974
_proccall298:
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #36]
    movs r1, #3
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_scene_Scene__C2818_validate_11
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_75:
.afterif_1_75:
.ret.2076:
    @stackempty locals
    movs r0, #0
.final_2_75:
sprites_BaseSprite_z__P2076_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(27,9): sprites.BaseSprite.z
    ;
    .object sprites_BaseSprite_z__P2075 "game/basesprite.ts(27,9): sprites.BaseSprite.z"
sprites_BaseSprite_z__P2075_pre:
    .section code
    .balign 4
sprites_BaseSprite_z__P2075_args:
    cmp r4, #1
    bge sprites_BaseSprite_z__P2075_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_BaseSprite_z__P2075_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_BaseSprite_z__P2075:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_38
    mov lr, r7
sprites_BaseSprite_z__P2075_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite_z__P2075_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2075:
    @stackempty locals
.final_0_76:
sprites_BaseSprite_z__P2075_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function src/drawCommands.ts(29,1): drawLine
    ;
    .object drawLine__P4332 "src/drawCommands.ts(29,1): drawLine"
drawLine__P4332_pre:
    .section code
    .balign 4
    .section code
drawLine__P4332:
drawLine__P4332_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
drawLine__P4332_locals:
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@0]
    bl _numops_subs
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@3]
    ldr r1, [sp, args@1]
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Math_abs__P128
_proccall299:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Math_abs__P128
_proccall300:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl setPixel__P4330
_proccall301:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@3]
    bl _cmp_gt
    beq .else_0_77      
.jmpz302:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.8007:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@2]
    bl _cmp_lt
    beq .brk.8007      
.jmpz303:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_1_77      
.jmpz304:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_subs
    b .condexprfin_2_77      
.condexprz_1_77:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
.condexprfin_2_77:
; jmp value (already in r0)
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@6]
    movs r1, #1
    bl _cmp_lt
    beq .else_3_77      
.jmpz305:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    b .afterif_4_77      
.else_3_77:
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_5_77      
.jmpz306:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_subs
    b .condexprfin_6_77      
.condexprz_5_77:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
.condexprfin_6_77:
; jmp value (already in r0)
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
.afterif_4_77:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl setPixel__P4330
_proccall307:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.8007:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .fortop.8007      
.brk.8007:
    b .afterif_7_77      
.else_0_77:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@3]
    bl _numops_subs
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@9]
    @stackempty locals
.fortop.8055:
    ldr r0, [sp, locals@9]
    ldr r1, [sp, locals@3]
    bl _cmp_lt
    beq .brk.8055      
.jmpz308:
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_8_77      
.jmpz309:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_subs
    b .condexprfin_9_77      
.condexprz_8_77:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
.condexprfin_9_77:
; jmp value (already in r0)
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@8]
    movs r1, #1
    bl _cmp_lt
    beq .else_10_77      
.jmpz310:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    b .afterif_11_77      
.else_10_77:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_12_77      
.jmpz311:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_subs
    b .condexprfin_13_77      
.condexprz_12_77:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
.condexprfin_13_77:
; jmp value (already in r0)
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
.afterif_11_77:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl setPixel__P4330
_proccall312:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.8055:
    ldr r0, [sp, locals@9]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    b .fortop.8055      
.brk.8055:
.afterif_7_77:
.ret.4332:
    @stackempty locals
    movs r0, #0
.final_14_77:
    add sp, #4*10 ; pop locals 10
drawLine__P4332_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(540,5): Math.abs
    ;
    .object Math_abs__P128 "base/pxt-helpers.ts(540,5): Math.abs"
Math_abs__P128_pre:
    .section code
    .balign 4
    .section code
Math_abs__P128:
Math_abs__P128_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_abs__P128_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_0_78      
.jmpz313:
    movs r0, #1
    ldr r1, [sp, args@0]
    bl _numops_subs
    b .condexprfin_1_78      
.condexprz_0_78:
    ldr r0, [sp, args@0]
.condexprfin_1_78:
; jmp value (already in r0)
.ret.128:
    @stackempty locals
.final_2_78:
Math_abs__P128_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(137,5): game.eventContext
    ;
    .object game_eventContext__P2977 "game/game.ts(137,5): game.eventContext"
game_eventContext__P2977_pre:
    .section code
    .balign 4
    .section code
game_eventContext__P2977:
game_eventContext__P2977_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_eventContext__P2977_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl game_init__P4895
_proccall314:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #4]
.ret.2977:
    @stackempty locals
.final_0_79:
game_eventContext__P2977_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(142,5): game.init
    ;
    .object game_init__P4895 "game/game.ts(142,5): game.init"
game_init__P4895_pre:
    .section code
    .balign 4
    .section code
game_init__P4895:
game_init__P4895_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_init__P4895_locals:
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_80      
.jmpz315:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_80      
.lazySkip_2_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
.lazy_1_80:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_80      
.jmpz316:
    ldr r0, _ldlit_70 ; scene_Scene__C2818_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    bl control_pushEventContext__P409
_proccall317:
    mov r3, r0
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_Scene_constructor__P2841
_proccall318:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #156
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_80:
.afterif_3_80:
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl scene_Scene_init__P2842
_proccall319:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4895:
    @stackempty locals
    movs r0, #0
.final_4_80:
game_init__P4895_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(128,9): scene.Scene.init
    ;
    .object scene_Scene_init__P2842 "game/scene.ts(128,9): scene.Scene.init"
scene_Scene_init__P2842_pre:
    .section code
    .balign 4
scene_Scene_init__P2842_args:
    cmp r4, #1
    bge scene_Scene_init__P2842_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_init__P2842_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_init__P2842:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2818_validate_11
    mov lr, r7
scene_Scene_init__P2842_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init__P2842_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_81      
.jmpz320:
    b .ret.2842      
.else_0_81:
.afterif_1_81:
    bl power_poke__P1911
_proccall321:
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_71 ; scene_Scene_init_inline__P8132_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #17
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall322:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_72 ; controller__moveSprites__P2110_Lit      
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall323:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_73 ; scene_Scene_init_inline__P8156_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #31
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall324:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_74 ; scene_Scene_init_inline__P8169_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #111
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall325:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_75 ; scene_Scene_init_inline__P8190_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #181
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall326:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_76 ; scene_Scene_init_inline__P8198_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall327:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_77 ; control___screen_update__P1971_Lit      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall328:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    bl multiplayer_initServer__P3363
_proccall329:
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_78 ; scene_Scene_init_inline__P8228_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall330:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2842:
    @stackempty locals
    movs r0, #0
.final_2_81:
scene_Scene_init__P2842_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(135,73): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8132 "game/scene.ts(135,73): scene.Scene.init.inline"
scene_Scene_init_inline__P8132_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8132_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8132_args@fn
scene_Scene_init_inline__P8132_args:
    .section code
scene_Scene_init_inline__P8132:
scene_Scene_init_inline__P8132_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8132_locals:
    ldr r0, [r5, #4*3]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #92]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    bl _inst_control_EventContext__C395_validate_23
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller___update__P2142
_proccall331:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.8132:
    @stackempty locals
    movs r0, #0
.final_0_82:
scene_Scene_init_inline__P8132_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(144,70): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8156 "game/scene.ts(144,70): scene.Scene.init.inline"
scene_Scene_init_inline__P8156_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8156_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8156_args@fn
scene_Scene_init_inline__P8156_args:
    .section code
scene_Scene_init_inline__P8156:
scene_Scene_init_inline__P8156_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8156_locals:
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #52
    bl _classCall_PhysicsEngine__C2486_25
_proccall332:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.8156:
    @stackempty locals
    movs r0, #0
.final_0_83:
scene_Scene_init_inline__P8156_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(153,80): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8169 "game/scene.ts(153,80): scene.Scene.init.inline"
scene_Scene_init_inline__P8169_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8169_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8169_args@fn
scene_Scene_init_inline__P8169_args:
    .section code
scene_Scene_init_inline__P8169:
scene_Scene_init_inline__P8169_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Scene_init_inline__P8169_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    bl scene_Camera_update__P2773
_proccall333:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #16]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.8180:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8180      
.jmpz334:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r1, #4
    bl _ifacecall3__40
_proccall335:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.8180:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.8180      
.brk.8180:
    movs r0, #0
    str r0, [sp, locals@2]
.ret.8169:
    @stackempty locals
    movs r0, #0
.final_0_84:
    add sp, #4*4 ; pop locals 4
scene_Scene_init_inline__P8169_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_70:
 .word scene_Scene__C2818_VT
_ldlit_71:
 .word scene_Scene_init_inline__P8132_Lit
_ldlit_72:
 .word controller__moveSprites__P2110_Lit
_ldlit_73:
 .word scene_Scene_init_inline__P8156_Lit
_ldlit_74:
 .word scene_Scene_init_inline__P8169_Lit
_ldlit_75:
 .word scene_Scene_init_inline__P8190_Lit
_ldlit_76:
 .word scene_Scene_init_inline__P8198_Lit
_ldlit_77:
 .word control___screen_update__P1971_Lit
_ldlit_78:
 .word scene_Scene_init_inline__P8228_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(164,77): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8190 "game/scene.ts(164,77): scene.Scene.init.inline"
scene_Scene_init_inline__P8190_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8190_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8190_args@fn
scene_Scene_init_inline__P8190_args:
    .section code
scene_Scene_init_inline__P8190:
scene_Scene_init_inline__P8190_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8190_locals:
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl scene_Scene_render__P2847_nochk
_proccall336:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.8190:
    @stackempty locals
    movs r0, #0
.final_0_85:
scene_Scene_init_inline__P8190_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(169,81): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8198 "game/scene.ts(169,81): scene.Scene.init.inline"
scene_Scene_init_inline__P8198_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8198_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8198_args@fn
scene_Scene_init_inline__P8198_args:
    .section code
scene_Scene_init_inline__P8198:
scene_Scene_init_inline__P8198_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8198_locals:
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_86      
.jmpz337:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_86      
.lazySkip_2_86:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_1_86:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_86      
.jmpz338:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_80 ; _str43      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    push {r1}
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_86:
.afterif_3_86:
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_86      
.jmpz340:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #28]
    push {r0} ; the one arg
    movs r1, #48
    bl _classCall_PhysicsEngine__C2486_25
_proccall341:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_86:
.afterif_5_86:
    bl game_consoleOverlay_draw__P3102
_proccall342:
    @stackempty locals
    bl power_checkDeepSleep__P1912
_proccall343:
    @stackempty locals
.ret.8198:
    @stackempty locals
    movs r0, #0
.final_6_86:
scene_Scene_init_inline__P8198_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(186,40): scene.Scene.init.inline
    ;
    .object scene_Scene_init_inline__P8228 "game/scene.ts(186,40): scene.Scene.init.inline"
scene_Scene_init_inline__P8228_pre:
    .section code
    .balign 4
scene_Scene_init_inline__P8228_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_init_inline__P8228_args@fn
scene_Scene_init_inline__P8228_args:
    cmp r4, #1
    bge scene_Scene_init_inline__P8228_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_init_inline__P8228_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_init_inline__P8228:
scene_Scene_init_inline__P8228_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_init_inline__P8228_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
.ret.8228:
    @stackempty locals
    movs r0, #0
.final_0_87:
scene_Scene_init_inline__P8228_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(30,5): multiplayer.initServer
    ;
    .object multiplayer_initServer__P3363 "game/multiplayer.ts(30,5): multiplayer.initServer"
multiplayer_initServer__P3363_pre:
    .section code
    .balign 4
    .section code
multiplayer_initServer__P3363:
multiplayer_initServer__P3363_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
multiplayer_initServer__P3363_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl multiplayer::getOrigin
    ldr r1, _ldlit_81 ; _str85      
    bl _cmp_eqq
    beq .else_0_88      
.jmpz345:
    bl game_eventContext__P2977
_proccall346:
    mov r3, r0
    ldr r0, _ldlit_82 ; multiplayer_initServer_inline__P8236_Lit      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall347:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.8243:
    ldr r0, [sp, locals@0]
    movs r1, #9
    bl _cmp_le
    beq .brk.8243      
.jmpz348:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl multiplayer_registerPlayerConnectionListeners__P5343
_proccall349:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.8243:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.8243      
.brk.8243:
.else_0_88:
.afterif_1_88:
.ret.3363:
    @stackempty locals
    movs r0, #0
.final_2_88:
    add sp, #4*1 ; pop locals 1
multiplayer_initServer__P3363_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(32,94): multiplayer.initServer.inline
    ;
    .object multiplayer_initServer_inline__P8236 "game/multiplayer.ts(32,94): multiplayer.initServer.inline"
multiplayer_initServer_inline__P8236_pre:
    .section code
    .balign 4
multiplayer_initServer_inline__P8236_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word multiplayer_initServer_inline__P8236_args@fn
multiplayer_initServer_inline__P8236_args:
    .section code
multiplayer_initServer_inline__P8236:
multiplayer_initServer_inline__P8236_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_initServer_inline__P8236_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl multiplayer::getOrigin
    ldr r1, _ldlit_81 ; _str85      
    bl _cmp_eqq
    beq .else_0_89      
.jmpz350:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl multiplayer::postImage
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_89:
.afterif_1_89:
.ret.8236:
    @stackempty locals
    movs r0, #0
.final_2_89:
multiplayer_initServer_inline__P8236_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(44,5): multiplayer.registerPlayerConnectionListeners
    ;
    .object multiplayer_registerPlayerConnectionListeners__P5343 "game/multiplayer.ts(44,5): multiplayer.registerPlayerConnectionListeners"
multiplayer_registerPlayerConnectionListeners__P5343_pre:
    .section code
    .balign 4
    .section code
multiplayer_registerPlayerConnectionListeners__P5343:
multiplayer_registerPlayerConnectionListeners__P5343_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_registerPlayerConnectionListeners__P5343_locals:
    movs r0, #1
    ldr r1, _ldlit_83 ; multiplayer_registerPlayerConnectionListeners_inline__P8253_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #25
    lsls r0, r0, #8
    adds r0, #83
    push {r0} ; proc-arg
    bl control_onEvent__P391
_proccall351:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_84 ; multiplayer_registerPlayerConnectionListeners_inline__P8259_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #25
    lsls r0, r0, #8
    adds r0, #85
    push {r0} ; proc-arg
    bl control_onEvent__P391
_proccall352:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.5343:
    @stackempty locals
    movs r0, #0
.final_0_90:
multiplayer_registerPlayerConnectionListeners__P5343_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(48,13): multiplayer.registerPlayerConnectionListeners.inline
    ;
    .object multiplayer_registerPlayerConnectionListeners_inline__P8253 "game/multiplayer.ts(48,13): multiplayer.registerPlayerConnectionListeners.inline"
multiplayer_registerPlayerConnectionListeners_inline__P8253_pre:
    .section code
    .balign 4
multiplayer_registerPlayerConnectionListeners_inline__P8253_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word multiplayer_registerPlayerConnectionListeners_inline__P8253_args@fn
multiplayer_registerPlayerConnectionListeners_inline__P8253_args:
    .section code
multiplayer_registerPlayerConnectionListeners_inline__P8253:
multiplayer_registerPlayerConnectionListeners_inline__P8253_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_registerPlayerConnectionListeners_inline__P8253_locals:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl multiplayer_receiveConnectionChangedEvent__P5344
_proccall353:
    add sp, #4*2 ; pop locals 2
.ret.8253:
    @stackempty locals
    movs r0, #0
.final_0_91:
multiplayer_registerPlayerConnectionListeners_inline__P8253_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(53,13): multiplayer.registerPlayerConnectionListeners.inline
    ;
    .object multiplayer_registerPlayerConnectionListeners_inline__P8259 "game/multiplayer.ts(53,13): multiplayer.registerPlayerConnectionListeners.inline"
multiplayer_registerPlayerConnectionListeners_inline__P8259_pre:
    .section code
    .balign 4
multiplayer_registerPlayerConnectionListeners_inline__P8259_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word multiplayer_registerPlayerConnectionListeners_inline__P8259_args@fn
multiplayer_registerPlayerConnectionListeners_inline__P8259_args:
    .section code
multiplayer_registerPlayerConnectionListeners_inline__P8259:
multiplayer_registerPlayerConnectionListeners_inline__P8259_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
multiplayer_registerPlayerConnectionListeners_inline__P8259_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl multiplayer_receiveConnectionChangedEvent__P5344
_proccall354:
    add sp, #4*2 ; pop locals 2
.ret.8259:
    @stackempty locals
    movs r0, #0
.final_0_92:
multiplayer_registerPlayerConnectionListeners_inline__P8259_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/multiplayer.ts(57,5): multiplayer.receiveConnectionChangedEvent
    ;
    .object multiplayer_receiveConnectionChangedEvent__P5344 "game/multiplayer.ts(57,5): multiplayer.receiveConnectionChangedEvent"
multiplayer_receiveConnectionChangedEvent__P5344_pre:
    .section code
    .balign 4
    .section code
multiplayer_receiveConnectionChangedEvent__P5344:
multiplayer_receiveConnectionChangedEvent__P5344_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
multiplayer_receiveConnectionChangedEvent__P5344_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz355
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_93      
.jmpz355:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz356
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_93      
.jmpz356:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz357
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_93      
.jmpz357:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz358
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_93      
.jmpz358:
    pop {r0} ; tmpref @1
    b .brk.8265      
.switch_0_93:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.8265      
.switch_1_93:
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.8265      
.switch_2_93:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.8265      
.switch_3_93:
    movs r0, #188
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@0]
    @stackempty locals
.brk.8265:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_93      
.jmpz359:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl controller_Controller_connected__P2133
_proccall360:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_93:
.afterif_5_93:
.ret.5344:
    @stackempty locals
    movs r0, #0
.final_6_93:
    add sp, #4*1 ; pop locals 1
multiplayer_receiveConnectionChangedEvent__P5344_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(255,9): controller.Controller.connected
    ;
    .object controller_Controller_connected__P2133 "game/controller.ts(255,9): controller.Controller.connected"
controller_Controller_connected__P2133_pre:
    .section code
    .balign 4
controller_Controller_connected__P2133_args:
    cmp r4, #2
    bge controller_Controller_connected__P2133_nochk
    push {lr}
    bl _expand_args_2_18
    bl controller_Controller_connected__P2133_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller_connected__P2133:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller_connected__P2133_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_connected__P2133_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_94      
.jmpz361:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_94      
.jmpz362:
    movs r0, #3
    b .condexprfin_2_94      
.condexprz_1_94:
    movs r0, #5
.condexprfin_2_94:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_94:
.afterif_3_94:
.ret.2133:
    @stackempty locals
    movs r0, #0
.final_4_94:
controller_Controller_connected__P2133_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_80:
 .word _str43
_ldlit_81:
 .word _str85
_ldlit_82:
 .word multiplayer_initServer_inline__P8236_Lit
_ldlit_83:
 .word multiplayer_registerPlayerConnectionListeners_inline__P8253_Lit
_ldlit_84:
 .word multiplayer_registerPlayerConnectionListeners_inline__P8259_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(83,9): controller.Controller.constructor
    ;
    .object controller_Controller_constructor__P2115 "game/controller.ts(83,9): controller.Controller.constructor"
controller_Controller_constructor__P2115_pre:
    .section code
    .balign 4
    .section code
controller_Controller_constructor__P2115:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller_constructor__P2115_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Controller_constructor__P2115_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_95      
.jmpz363:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    b .afterif_1_95      
.else_0_95:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #15
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.8329:
    ldr r0, [sp, locals@1]
    movs r1, #15
    bl _cmp_lt
    beq .brk.8329      
.jmpz364:
    ldr r0, _ldlit_86 ; controller_Button__C2166_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Button_constructor__P2172
_proccall365:
    add sp, #4*3 ; pop locals 3
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.8329:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.8329      
.brk.8329:
.afterif_1_95:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8346:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.8346      
.jmpz366:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@0]
    bl _inst_controller_Button__C2166_validate_16
    str r1, [r0, #4]
    @stackempty locals
.cont.8346:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.8346      
.brk.8346:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_addController__P4667
_proccall367:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.2115:
    @stackempty locals
.final_2_95:
    add sp, #4*3 ; pop locals 3
controller_Controller_constructor__P2115_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(41,5): controller.addController
    ;
    .object controller_addController__P4667 "game/controller.ts(41,5): controller.addController"
controller_addController__P4667_pre:
    .section code
    .balign 4
    .section code
controller_addController__P4667:
controller_addController__P4667_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_addController__P4667_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_96      
.jmpz368:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #16]
    @stackempty locals
.else_0_96:
.afterif_1_96:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_controller_Controller__C2111_validate_44
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4667:
    @stackempty locals
    movs r0, #0
.final_2_96:
controller_addController__P4667_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(48,5): controller._player1
    ;
    .object controller__player1__P2105 "game/controller.ts(48,5): controller._player1"
controller__player1__P2105_pre:
    .section code
    .balign 4
    .section code
controller__player1__P2105:
controller__player1__P2105_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__player1__P2105_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_97      
.jmpz369:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_97      
.lazySkip_2_97:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_97:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_97      
.jmpz370:
    ldr r0, _ldlit_87 ; controller_Controller__C2111_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #200
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    movs r0, #208
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl controller_Controller_constructor__P2115
_proccall371:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_0_97:
.afterif_3_97:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.2105:
    @stackempty locals
.final_4_97:
controller__player1__P2105_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function power/power.ts(37,5): power.checkDeepSleep
    ;
    .object power_checkDeepSleep__P1912 "power/power.ts(37,5): power.checkDeepSleep"
power_checkDeepSleep__P1912_pre:
    .section code
    .balign 4
    .section code
power_checkDeepSleep__P1912:
power_checkDeepSleep__P1912_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
power_checkDeepSleep__P1912_locals:
    bl power_init__P4526
_proccall372:
    @stackempty locals
    movs r0, #212
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_98      
.jmpz373:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_98      
.lazySkip_1_98:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_98:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_98      
.jmpz374:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_98      
.lazySkip_3_98:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_2_98:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_98      
.jmpz375:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_98      
.lazySkip_6_98:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_5_98:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_98      
.jmpz376:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_98      
.object PUSH
.balign 4
_ldlit_86:
 .word controller_Button__C2166_VT
_ldlit_87:
 .word controller_Controller__C2111_VT
.object POP
.lazySkip_8_98:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl control::isUSBInitialized
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_7_98:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_98      
.jmpz377:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::deepSleep
    @stackempty locals
.else_4_98:
.afterif_9_98:
.ret.1912:
    @stackempty locals
    movs r0, #0
.final_10_98:
    add sp, #4*2 ; pop locals 2
power_checkDeepSleep__P1912_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function power/power.ts(58,5): power.init
    ;
    .object power_init__P4526 "power/power.ts(58,5): power.init"
power_init__P4526_pre:
    .section code
    .balign 4
    .section code
power_init__P4526:
power_init__P4526_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
power_init__P4526_locals:
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_99      
.jmpz378:
    b .ret.4526      
.else_0_99:
.afterif_1_99:
    movs r0, #212
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getConfig
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #216
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_99      
.jmpz379:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_99      
.lazySkip_4_99:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r1, _ldlit_89 ; 600001      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_3_99:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_99      
.jmpz380:
    ldr r0, _ldlit_89 ; 600001      
    movs r1, #216
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_2_99:
.afterif_5_99:
.ret.4526:
    @stackempty locals
    movs r0, #0
.final_6_99:
power_init__P4526_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(45,5): game.consoleOverlay.draw
    ;
    .object game_consoleOverlay_draw__P3102 "game/console.ts(45,5): game.consoleOverlay.draw"
game_consoleOverlay_draw__P3102_pre:
    .section code
    .balign 4
    .section code
game_consoleOverlay_draw__P3102:
game_consoleOverlay_draw__P3102_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
game_consoleOverlay_draw__P3102_locals:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_100      
.jmpz381:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_100      
.lazySkip_2_100:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    bl scene_systemMenu_isVisible__P3083
_proccall382:
.lazy_1_100:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_100      
.jmpz383:
    b .ret.3102      
.else_0_100:
.afterif_3_100:
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall384:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_100      
.jmpz385:
    ldr r0, [sp, locals@0]
    b .condexprfin_5_100      
.condexprz_4_100:
    movs r0, #1
.condexprfin_5_100:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #5
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8467:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz386
    b .brk.8467      
.jmpz386:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_90 ; _str76      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_ge
    bne .jmpz387
    b .else_6_100      
.jmpz387:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_90 ; _str76      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_stringSplit__P122
_proccall388:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.8488:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz389
    b .brk.8488      
.jmpz389:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    movs r0, #224
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r0, #224
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall390:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    mov r1, r0
    movs r0, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r0, #228
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imagePrint__P1968
_proccall391:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@8]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
.cont.8488:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.8488      
.brk.8488:
    movs r0, #0
    str r0, [sp, locals@6]
    b .afterif_7_100      
.else_6_100:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r0, #228
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r1}
    movs r0, #9
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl helpers_imagePrint__P1968
_proccall392:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.afterif_7_100:
.cont.8467:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.8467      
.brk.8467:
.ret.3102:
    @stackempty locals
    movs r0, #0
.final_8_100:
    add sp, #4*9 ; pop locals 9
game_consoleOverlay_draw__P3102_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_89:
 .word 600001
_ldlit_90:
 .word _str76
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(214,5): helpers.imagePrint
    ;
    .object helpers_imagePrint__P1968 "screen---st7735/text.ts(214,5): helpers.imagePrint"
helpers_imagePrint__P1968_pre:
    .section code
    .balign 4
    .section code
helpers_imagePrint__P1968:
helpers_imagePrint__P1968_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_imagePrint__P1968_locals:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, args@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_101      
.jmpz393:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl image_getFontForText__P1955
_proccall394:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@5]
    @stackempty locals
.else_0_101:
.afterif_1_101:
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_101      
.jmpz395:
    movs r0, #3
    str r0, [sp, args@4]
    @stackempty locals
.else_2_101:
.afterif_3_101:
    ldr r0, [sp, args@2]
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #214
    bl _ifacecall1_get_8
_proccall397:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_101      
.jmpz396:
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #214
    bl _ifacecall1_get_8
_proccall398:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_5_101      
.condexprz_4_101:
    movs r0, #3
.condexprfin_5_101:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall399:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall400:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    movs r1, #15
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #7
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #5
    ldr r1, [sp, locals@6]
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #110
    bl _ifacecall1_get_8
_proccall401:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _cmp_eq
    beq .else_6_101      
.jmpz402:
    movs r0, #17
    ldr r1, [sp, locals@6]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_46
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r1, #1
    movs r2, #135
    bl _pxt_buffer_set
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r1, #3
    movs r2, #1
    bl _pxt_buffer_set
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_47
    movs r1, #5
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_47
    movs r1, #9
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_6_101:
.afterif_7_101:
.cont.8623:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz403
    b .brk.8623      
.jmpz403:
    movs r0, #1
    str r0, [sp, locals@11]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, args@6]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_101      
.jmpz404:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_101      
.lazySkip_10_101:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
.lazy_9_101:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_101      
.jmpz405:
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #103
    bl _ifacecall1_get_8
_proccall406:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #107
    bl _ifacecall1_get_8
_proccall407:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@12]
    @stackempty locals
.else_8_101:
.afterif_11_101:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_48
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, locals@13]
    movs r1, #21
    bl _cmp_eq
    beq .else_12_101      
.jmpz408:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall409:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    str r0, [sp, args@2]
    @stackempty locals
.else_12_101:
.afterif_13_101:
    ldr r0, [sp, locals@13]
    movs r1, #65
    bl _cmp_lt
    beq .else_14_101      
.jmpz410:
    b .cont.8623      
.else_14_101:
.afterif_15_101:
    movs r0, #1
    str r0, [sp, locals@14]
    @stackempty locals
    ldr r0, [sp, locals@9]
    str r0, [sp, locals@15]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, locals@13]
    movs r1, #65
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@17]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    bl _conv_49
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@13]
    bl _cmp_eq
    beq .else_16_101      
.jmpz411:
    ldr r0, [sp, locals@17]
    str r0, [sp, locals@16]
    @stackempty locals
    b .afterif_17_101      
.else_16_101:
.cont.8679:
    ldr r0, [sp, locals@14]
    ldr r1, [sp, locals@15]
    bl _cmp_le
    beq .brk.8679      
.jmpz412:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    ldr r1, [sp, locals@14]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@18]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_49
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@19]
    @stackempty locals
    ldr r0, [sp, locals@19]
    ldr r1, [sp, locals@13]
    bl _cmp_eq
    beq .else_18_101      
.jmpz413:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@16]
    @stackempty locals
    b .brk.8679      
.else_18_101:
.afterif_19_101:
    ldr r0, [sp, locals@19]
    ldr r1, [sp, locals@13]
    bl _cmp_lt
    beq .else_20_101      
.jmpz414:
    ldr r0, [sp, locals@18]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@14]
    @stackempty locals
    b .afterif_21_101      
.else_20_101:
    ldr r0, [sp, locals@18]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@15]
    @stackempty locals
.afterif_21_101:
    b .cont.8679      
.brk.8679:
.afterif_17_101:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _cmp_eq
    beq .else_22_101      
.jmpz415:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_50
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_51
    movs r1, #8
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@11]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r1, [sp, locals@12]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imageDrawIcon__P1935
_proccall416:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall417:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_23_101      
.else_22_101:
    ldr r0, [sp, locals@16]
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@16]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@20]
    @stackempty locals
.fortop.8745:
    ldr r0, [sp, locals@20]
    ldr r1, [sp, locals@3]
    bl _cmp_lt
    bne .jmpz418
    b .brk.8745      
.jmpz418:
    movs r0, #1
    str r0, [sp, locals@21]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@22]
    @stackempty locals
    ldr r0, [sp, locals@16]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@16]
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@23]
    @stackempty locals
.cont.8755:
    ldr r0, [sp, locals@21]
    ldr r1, [sp, locals@4]
    bl _cmp_lt
    bne .jmpz419
    b .brk.8755      
.jmpz419:
    ldr r0, [sp, locals@22]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_eq
    beq .else_24_101      
.jmpz420:
    ldr r0, [sp, locals@16]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@16]
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@23]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@22]
    @stackempty locals
.else_24_101:
.afterif_25_101:
    movs r0, #1
    str r0, [sp, locals@24]
    @stackempty locals
.cont.8766:
    ldr r0, [sp, locals@23]
    ldr r1, [sp, locals@22]
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.8766      
.jmpz421:
    ldr r0, [sp, locals@24]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@24]
    @stackempty locals
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@22]
    @stackempty locals
    b .cont.8766      
.brk.8766:
    ldr r0, [sp, locals@24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_26_101      
.jmpz422:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@21]
    ldr r1, [sp, locals@12]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageFillRect__P1936
_proccall423:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
    ldr r0, [sp, locals@21]
    ldr r1, [sp, locals@24]
    bl _numops_adds
    str r0, [sp, locals@21]
    @stackempty locals
    b .afterif_27_101      
.else_26_101:
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@22]
    @stackempty locals
    ldr r0, [sp, locals@21]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@21]
    @stackempty locals
.afterif_27_101:
    b .cont.8755      
.brk.8755:
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.cont.8745:
    ldr r0, [sp, locals@20]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@20]
    @stackempty locals
    b .fortop.8745      
.brk.8745:
.afterif_23_101:
    b .cont.8623      
.brk.8623:
.ret.1968:
    @stackempty locals
    movs r0, #0
.final_28_101:
    add sp, #4*25 ; pop locals 25
helpers_imagePrint__P1968_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(159,5): helpers.imageFillRect
    ;
    .object helpers_imageFillRect__P1936 "screen---st7735/image.ts(159,5): helpers.imageFillRect"
helpers_imageFillRect__P1936_pre:
    .section code
    .balign 4
    .section code
helpers_imageFillRect__P1936:
helpers_imageFillRect__P1936_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageFillRect__P1936_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_pack__P4536
_proccall424:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl helpers_pack__P4536
_proccall425:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_fillRect
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.1936:
    @stackempty locals
    movs r0, #0
.final_0_102:
helpers_imageFillRect__P1936_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(131,5): helpers.pack
    ;
    .object helpers_pack__P4536 "screen---st7735/image.ts(131,5): helpers.pack"
helpers_pack__P4536_pre:
    .section code
    .balign 4
    .section code
helpers_pack__P4536:
helpers_pack__P4536_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_pack__P4536_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #234
    lsls r0, r0, #8
    adds r0, #97
    push {r0} ; proc-arg
    ldr r0, _ldlit_92 ; -59999      
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall426:
    add sp, #4*3 ; pop locals 3
    ldr r1, _ldlit_93 ; 131071      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #234
    lsls r0, r0, #8
    adds r0, #97
    push {r0} ; proc-arg
    ldr r0, _ldlit_92 ; -59999      
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall427:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    movs r1, #33
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_orrs
    add sp, #4*2 ; pop locals 2
.ret.4536:
    @stackempty locals
.final_0_103:
helpers_pack__P4536_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(529,5): Math.clamp
    ;
    .object Math_clamp__P127 "base/pxt-helpers.ts(529,5): Math.clamp"
Math_clamp__P127_pre:
    .section code
    .balign 4
    .section code
Math_clamp__P127:
Math_clamp__P127_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_clamp__P127_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall428:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall429:
    add sp, #4*2 ; pop locals 2
.ret.127:
    @stackempty locals
.final_0_104:
Math_clamp__P127_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(569,5): Math.min
    ;
    .object Math_min__P131 "base/pxt-helpers.ts(569,5): Math.min"
Math_min__P131_pre:
    .section code
    .balign 4
    .section code
Math_min__P131:
Math_min__P131_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_min__P131_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_le
    beq .else_0_105      
.jmpz430:
    ldr r0, [sp, args@0]
    b .ret.131      
.else_0_105:
.afterif_1_105:
    ldr r0, [sp, args@1]
.ret.131:
    @stackempty locals
.final_2_105:
Math_min__P131_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(156,5): helpers.imageDrawIcon
    ;
    .object helpers_imageDrawIcon__P1935 "screen---st7735/image.ts(156,5): helpers.imageDrawIcon"
helpers_imageDrawIcon__P1935_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawIcon__P1935:
helpers_imageDrawIcon__P1935_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageDrawIcon__P1935_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_pack__P4536
_proccall431:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_52
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_drawIcon
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.1935:
    @stackempty locals
    movs r0, #0
.final_0_106:
helpers_imageDrawIcon__P1935_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(137,5): image.getFontForText
    ;
    .object image_getFontForText__P1955 "screen---st7735/text.ts(137,5): image.getFontForText"
image_getFontForText__P1955_pre:
    .section code
    .balign 4
    .section code
image_getFontForText__P1955:
image_getFontForText__P1955_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
image_getFontForText__P1955_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.8889:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.8889      
.jmpz432:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_48
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    movs r1, #64
    lsls r1, r1, #8
    adds r1, #1
    bl _cmp_gt
    beq .else_0_107      
.jmpz433:
    movs r0, #232
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .ret.1955      
.else_0_107:
.afterif_1_107:
.cont.8889:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.8889      
.brk.8889:
    movs r0, #236
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.1955:
    @stackempty locals
.final_2_107:
    add sp, #4*1 ; pop locals 1
image_getFontForText__P1955_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(435,5): helpers.stringSplit
    ;
    .object helpers_stringSplit__P122 "base/pxt-helpers.ts(435,5): helpers.stringSplit"
helpers_stringSplit__P122_pre:
    .section code
    .balign 4
    .section code
helpers_stringSplit__P122:
helpers_stringSplit__P122_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_stringSplit__P122_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_108      
.jmpz434:
    ldr r0, _ldlit_94 ; 1073741825      
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_1_108      
.else_0_108:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_108      
.jmpz435:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_3_108      
.else_2_108:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_3_108:
.afterif_1_108:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_eq
    beq .else_4_108      
.jmpz436:
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_4_108:
.afterif_5_108:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_108      
.jmpz437:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_6_108:
.afterif_7_108:
    ldr r0, [sp, locals@2]
    movs r1, #1
    bl _cmp_eq
    beq .else_8_108      
.jmpz438:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P4343
_proccall439:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_9_108      
.jmpz440:
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_9_108:
.afterif_10_108:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_8_108:
.afterif_11_108:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.cont.8955:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@2]
    bl _cmp_neq
    beq .brk.8955      
.jmpz441:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P4343
_proccall442:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    movs r1, #1
    bl _cmp_lt
    beq .else_12_108      
.jmpz443:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_13_108      
.else_12_108:
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@3]
    bl _cmp_eq
    beq .else_14_108      
.jmpz444:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_15_108      
.else_14_108:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P119
_proccall445:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@1]
    bl _cmp_eq
    beq .else_16_108      
.jmpz446:
    ldr r0, [sp, locals@0]
    b .ret.122      
.else_16_108:
.afterif_17_108:
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.afterif_15_108:
.afterif_13_108:
    b .cont.8955      
.brk.8955:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P119
_proccall447:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.122:
    @stackempty locals
.final_18_108:
    add sp, #4*9 ; pop locals 9
helpers_stringSplit__P122_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_92:
 .word -59999
_ldlit_93:
 .word 131071
_ldlit_94:
 .word 1073741825
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(385,5): helpers.stringSlice
    ;
    .object helpers_stringSlice__P119 "base/pxt-helpers.ts(385,5): helpers.stringSlice"
helpers_stringSlice__P119_pre:
    .section code
    .balign 4
    .section code
helpers_stringSlice__P119:
helpers_stringSlice__P119_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_stringSlice__P119_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_109      
.jmpz448:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall449:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_0_109:
.afterif_1_109:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_2_109      
.jmpz450:
    ldr r0, [sp, locals@0]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_3_109      
.else_2_109:
    ldr r0, [sp, args@2]
    movs r1, #6
    bl _cmp_eqq
    beq .else_4_109      
.jmpz451:
    movs r0, #1
    str r0, [sp, args@2]
    @stackempty locals
.else_4_109:
.afterif_5_109:
.afterif_3_109:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_6_109      
.jmpz452:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_6_109:
.afterif_7_109:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_53
    mov r7, sp
    str r7, [r6, #4]
    bl String_::substr
    add sp, #4*3 ; pop locals 3
.ret.119:
    @stackempty locals
.final_8_109:
    add sp, #4*1 ; pop locals 1
helpers_stringSlice__P119_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(481,5): helpers.splitMatch
    ;
    .object helpers_splitMatch__P4343 "base/pxt-helpers.ts(481,5): helpers.splitMatch"
helpers_splitMatch__P4343_pre:
    .section code
    .balign 4
    .section code
helpers_splitMatch__P4343:
helpers_splitMatch__P4343_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_splitMatch__P4343_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_0_110      
.jmpz453:
    movs r0, #1
    negs r0, r0
    b .ret.4343      
.else_0_110:
.afterif_1_110:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9047:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9047      
.jmpz454:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_48
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_48
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_2_110      
.jmpz455:
    movs r0, #1
    negs r0, r0
    b .ret.4343      
.else_2_110:
.afterif_3_110:
.cont.9047:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9047      
.brk.9047:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
.ret.4343:
    @stackempty locals
.final_4_110:
    add sp, #4*3 ; pop locals 3
helpers_splitMatch__P4343_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(396,5): scene.systemMenu.isVisible
    ;
    .object scene_systemMenu_isVisible__P3083 "game/systemmenu.ts(396,5): scene.systemMenu.isVisible"
scene_systemMenu_isVisible__P3083_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_isVisible__P3083:
scene_systemMenu_isVisible__P3083_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_isVisible__P3083_locals:
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3083:
    @stackempty locals
.final_0_111:
scene_systemMenu_isVisible__P3083_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(16,5): PhysicsEngine.draw
    ;
    .object PhysicsEngine_draw__P2491 "game/physics.ts(16,5): PhysicsEngine.draw"
PhysicsEngine_draw__P2491_pre:
    .section code
    .balign 4
PhysicsEngine_draw__P2491_args:
    cmp r4, #1
    bge PhysicsEngine_draw__P2491_nochk
    push {lr}
    bl _expand_args_1_12
    bl PhysicsEngine_draw__P2491_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
PhysicsEngine_draw__P2491:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2486_validate_29
    mov lr, r7
PhysicsEngine_draw__P2491_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_draw__P2491_locals:
.ret.2491:
    @stackempty locals
    movs r0, #0
.final_0_112:
PhysicsEngine_draw__P2491_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(228,9): scene.Scene.render
    ;
    .object scene_Scene_render__P2847 "game/scene.ts(228,9): scene.Scene.render"
scene_Scene_render__P2847_pre:
    .section code
    .balign 4
scene_Scene_render__P2847_args:
    cmp r4, #1
    bge scene_Scene_render__P2847_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_render__P2847_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_render__P2847:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2818_validate_11
    mov lr, r7
scene_Scene_render__P2847_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Scene_render__P2847_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_113      
.jmpz456:
    b .ret.2847      
.else_0_113:
.afterif_1_113:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #5
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_113      
.jmpz457:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_113      
.lazySkip_4_113:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
.lazy_3_113:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_113      
.jmpz458:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    push {r0} ; the one arg
    bl scene_Scene_render__P2847
_proccall459:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_5_113      
.else_2_113:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl scene_Background_draw__P2653
_proccall460:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_5_113:
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_113      
.jmpz461:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r3, r0
    ldr r0, _ldlit_96 ; scene_Scene_render_inline__P9104_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySort__P105
_proccall462:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    movs r1, #3
    negs r1, r1
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_6_113:
.afterif_7_113:
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9129:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.9129      
.jmpz463:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #1
    bl _ifacecall2__27
_proccall464:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.9129:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.9129      
.brk.9129:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    movs r1, #9
    negs r1, r1
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2847:
    @stackempty locals
    movs r0, #0
.final_8_113:
    add sp, #4*3 ; pop locals 3
scene_Scene_render__P2847_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(242,38): scene.Scene.render.inline
    ;
    .object scene_Scene_render_inline__P9104 "game/scene.ts(242,38): scene.Scene.render.inline"
scene_Scene_render_inline__P9104_pre:
    .section code
    .balign 4
scene_Scene_render_inline__P9104_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Scene_render_inline__P9104_args@fn
scene_Scene_render_inline__P9104_args:
    cmp r4, #2
    bge scene_Scene_render_inline__P9104_nochk
    push {lr}
    bl _expand_args_2_18
    bl scene_Scene_render_inline__P9104_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Scene_render_inline__P9104:
scene_Scene_render_inline__P9104_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_render_inline__P9104_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #183
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall466:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #183
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall467:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_114      
.jmpz465:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_114      
.lazySkip_1_114:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #165
    bl _ifacecall1_get_8
_proccall468:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #165
    bl _ifacecall1_get_8
_proccall469:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.lazy_0_114:
; jmp value (already in r0)
.ret.9104:
    @stackempty locals
.final_2_114:
scene_Scene_render_inline__P9104_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(208,5): helpers.arraySort
    ;
    .object helpers_arraySort__P105 "base/pxt-helpers.ts(208,5): helpers.arraySort"
helpers_arraySort__P105_pre:
    .section code
    .balign 4
    .section code
helpers_arraySort__P105:
helpers_arraySort__P105_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arraySort__P105_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_115      
.jmpz470:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_115      
.lazySkip_2_115:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_115:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_115      
.jmpz471:
    ldr r0, _ldlit_97 ; helpers_arraySort_inline__P9149_Lit      
    str r0, [sp, args@1]
    @stackempty locals
.else_0_115:
.afterif_3_115:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_sortHelper__P4341
_proccall472:
    add sp, #4*2 ; pop locals 2
.ret.105:
    @stackempty locals
.final_4_115:
helpers_arraySort__P105_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(210,26): helpers.arraySort.inline
    ;
    .object helpers_arraySort_inline__P9149 "base/pxt-helpers.ts(210,26): helpers.arraySort.inline"
helpers_arraySort_inline__P9149_pre:
    .section code
    .balign 4
helpers_arraySort_inline__P9149_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word helpers_arraySort_inline__P9149_args@fn
helpers_arraySort_inline__P9149_args:
    cmp r4, #2
    bge helpers_arraySort_inline__P9149_nochk
    push {lr}
    bl _expand_args_2_18
    bl helpers_arraySort_inline__P9149_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
helpers_arraySort_inline__P9149:
helpers_arraySort_inline__P9149_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySort_inline__P9149_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_116      
.jmpz473:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_116      
.lazySkip_2_116:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
.lazy_1_116:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_116      
.jmpz474:
    movs r0, #1
    b .ret.9149      
    b .afterif_3_116      
.else_0_116:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_116      
.jmpz475:
    movs r0, #3
    b .ret.9149      
    b .afterif_5_116      
.else_4_116:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_116      
.jmpz476:
    movs r0, #1
    negs r0, r0
    b .ret.9149      
.else_6_116:
.afterif_7_116:
.afterif_5_116:
.afterif_3_116:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_116      
.jmpz477:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_116      
.lazySkip_10_116:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
.lazy_9_116:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_116      
.jmpz478:
    movs r0, #1
    b .ret.9149      
    b .afterif_11_116      
.else_8_116:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_116      
.jmpz479:
    movs r0, #3
    b .ret.9149      
    b .afterif_13_116      
.else_12_116:
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz480
    b .else_14_116      
.object PUSH
.balign 4
_ldlit_96:
 .word scene_Scene_render_inline__P9104_Lit
_ldlit_97:
 .word helpers_arraySort_inline__P9149_Lit
.object POP
.jmpz480:
    movs r0, #1
    negs r0, r0
    b .ret.9149      
.else_14_116:
.afterif_15_116:
.afterif_13_116:
.afterif_11_116:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_54
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_54
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.9149:
    @stackempty locals
.final_16_116:
    add sp, #4*4 ; pop locals 4
helpers_arraySort_inline__P9149_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(192,5): helpers.sortHelper
    ;
    .object helpers_sortHelper__P4341 "base/pxt-helpers.ts(192,5): helpers.sortHelper"
helpers_sortHelper__P4341_pre:
    .section code
    .balign 4
    .section code
helpers_sortHelper__P4341:
helpers_sortHelper__P4341_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_sortHelper__P4341_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_117      
.jmpz481:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_117      
.lazySkip_2_117:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_117:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_117      
.jmpz482:
    ldr r0, [sp, args@0]
    b .ret.4341      
.else_0_117:
.afterif_3_117:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9211:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9211      
.jmpz483:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9219:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9219      
.jmpz484:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    movs r1, #1
    bl _cmp_gt
    beq .else_4_117      
.jmpz485:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_swap__P4340
_proccall487:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_117:
.afterif_5_117:
.cont.9219:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9219      
.brk.9219:
.cont.9211:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9211      
.brk.9211:
    ldr r0, [sp, args@0]
.ret.4341:
    @stackempty locals
.final_6_117:
    add sp, #4*3 ; pop locals 3
helpers_sortHelper__P4341_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(186,5): helpers.swap
    ;
    .object helpers_swap__P4340 "base/pxt-helpers.ts(186,5): helpers.swap"
helpers_swap__P4340_pre:
    .section code
    .balign 4
    .section code
helpers_swap__P4340:
helpers_swap__P4340_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_swap__P4340_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4340:
    @stackempty locals
    movs r0, #0
.final_0_118:
    add sp, #4*1 ; pop locals 1
helpers_swap__P4340_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(49,9): scene.Background.draw
    ;
    .object scene_Background_draw__P2653 "game/background.ts(49,9): scene.Background.draw"
scene_Background_draw__P2653_pre:
    .section code
    .balign 4
scene_Background_draw__P2653_args:
    cmp r4, #1
    bge scene_Background_draw__P2653_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Background_draw__P2653_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Background_draw__P2653:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Background__C2644_validate_55
    mov lr, r7
scene_Background_draw__P2653_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Background_draw__P2653_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_56
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::fill
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_119      
.jmpz488:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_57
    movs r2, #0
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_119:
.afterif_1_119:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_119      
.jmpz489:
    movs r0, #1
    ldr r1, _ldlit_99 ; scene_Background_draw_inline__P9273_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall490:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_119:
.afterif_3_119:
.ret.2653:
    @stackempty locals
    movs r0, #0
.final_4_119:
scene_Background_draw__P2653_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(54,38): scene.Background.draw.inline
    ;
    .object scene_Background_draw_inline__P9273 "game/background.ts(54,38): scene.Background.draw.inline"
scene_Background_draw_inline__P9273_pre:
    .section code
    .balign 4
scene_Background_draw_inline__P9273_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_Background_draw_inline__P9273_args@fn
scene_Background_draw_inline__P9273_args:
    cmp r4, #1
    bge scene_Background_draw_inline__P9273_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Background_draw_inline__P9273_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Background_draw_inline__P9273:
scene_Background_draw_inline__P9273_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Background_draw_inline__P9273_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_scene_BackgroundLayer__C2654_validate_59
    ldr r0, [r0, #4]
    mov r1, r0
    movs r0, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_scene_BackgroundLayer__C2654_validate_59
    ldr r0, [r0, #4]
    mov r1, r0
    movs r0, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_BackgroundLayer_draw__P2662
_proccall491:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.9273:
    @stackempty locals
    movs r0, #0
.final_0_120:
    add sp, #4*2 ; pop locals 2
scene_Background_draw_inline__P9273_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(100,9): scene.BackgroundLayer.draw
    ;
    .object scene_BackgroundLayer_draw__P2662 "game/background.ts(100,9): scene.BackgroundLayer.draw"
scene_BackgroundLayer_draw__P2662_pre:
    .section code
    .balign 4
scene_BackgroundLayer_draw__P2662_args:
    cmp r4, #3
    bge scene_BackgroundLayer_draw__P2662_nochk
    push {lr}
    bl _expand_args_3_15
    bl scene_BackgroundLayer_draw__P2662_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
scene_BackgroundLayer_draw__P2662:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_BackgroundLayer__C2654_validate_59
    mov lr, r7
scene_BackgroundLayer_draw__P2662_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_BackgroundLayer_draw__P2662_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_121      
.jmpz492:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_121      
.lazySkip_2_121:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_121:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_121      
.jmpz493:
    b .ret.2662      
.else_0_121:
.afterif_3_121:
    movs r0, #1
    ldr r1, [sp, args@1]
    bl _numops_subs
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    ldr r1, [sp, args@2]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz494
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_121      
.jmpz494:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz495
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_121      
.jmpz495:
    pop {r0} ; tmpref @1
    b .brk.9329      
.switch_4_121:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    b .brk.9329      
.switch_5_121:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
.brk.9329:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #9
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz496
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_121      
.jmpz496:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz497
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_121      
.jmpz497:
    pop {r0} ; tmpref @1
    b .brk.9348      
.switch_6_121:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    b .brk.9348      
.switch_7_121:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
.brk.9348:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _cmp_lt
    beq .else_8_121      
.jmpz498:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
.else_8_121:
.afterif_9_121:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_lt
    bne .jmpz499
    b .else_10_121      
.object PUSH
.balign 4
_ldlit_99:
 .word scene_Background_draw_inline__P9273_Lit
.object POP
.jmpz499:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
.else_10_121:
.afterif_11_121:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.cont.9395:
    ldr r0, [sp, locals@6]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    bne .jmpz500
    b .brk.9395      
.jmpz500:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r1, [sp, locals@7]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall501:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@4]
    str r0, [sp, locals@10]
    @stackempty locals
.cont.9413:
    ldr r0, [sp, locals@9]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9413      
.jmpz502:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@11]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@10]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall503:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_60
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, locals@10]
    ldr r1, [sp, locals@12]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_12_121      
.jmpz504:
    ldr r0, [sp, locals@12]
    b .condexprfin_13_121      
.condexprz_12_121:
    ldr r0, [sp, locals@0]
.condexprfin_13_121:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@9]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    b .cont.9413      
.brk.9413:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@8]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_14_121      
.jmpz505:
    ldr r0, [sp, locals@8]
    b .condexprfin_15_121      
.condexprz_14_121:
    ldr r0, [sp, locals@1]
.condexprfin_15_121:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@6]
    pop {r1} ; tmpref @1
    bl _numops_adds
    str r0, [sp, locals@6]
    @stackempty locals
    b .cont.9395      
.brk.9395:
.ret.2662:
    @stackempty locals
    movs r0, #0
.final_16_121:
    add sp, #4*13 ; pop locals 13
scene_BackgroundLayer_draw__P2662_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(84,9): scene.Camera.update
    ;
    .object scene_Camera_update__P2773 "game/camera.ts(84,9): scene.Camera.update"
scene_Camera_update__P2773_pre:
    .section code
    .balign 4
scene_Camera_update__P2773_args:
    cmp r4, #1
    bge scene_Camera_update__P2773_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_update__P2773_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_update__P2773:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_update__P2773_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_Camera_update__P2773_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_122      
.jmpz506:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_x__P2329
_proccall507:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_y__P2331
_proccall508:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_x__P2329
_proccall509:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_Camera_offsetX__P2762_nochk
_proccall510:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_y__P2331
_proccall511:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_Camera_offsetY__P2764_nochk
_proccall512:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_122:
.afterif_1_122:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    movs r1, #0
    bl _cmp_neqq
    bne .jmpz513
    b .else_2_122      
.jmpz513:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_ge
    add sp, #4*2 ; pop locals 2
    beq .else_3_122      
.jmpz514:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #32]
    @stackempty locals
    b .afterif_4_122      
.else_3_122:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, _ldlit_101 ; _dbl42      
    bl _cmp_ge
    beq .else_5_122      
.jmpz515:
    movs r0, #3
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall516:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
.else_5_122:
.afterif_6_122:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::random
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::random
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #12]
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_4_122:
.else_2_122:
.afterif_7_122:
.ret.2773:
    @stackempty locals
    movs r0, #0
.final_8_122:
    add sp, #4*6 ; pop locals 6
scene_Camera_update__P2773_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(40,9): scene.Camera.offsetY
    ;
    .object scene_Camera_offsetY__P2764 "game/camera.ts(40,9): scene.Camera.offsetY"
scene_Camera_offsetY__P2764_pre:
    .section code
    .balign 4
scene_Camera_offsetY__P2764_args:
    cmp r4, #2
    bge scene_Camera_offsetY__P2764_nochk
    push {lr}
    bl _expand_args_2_18
    bl scene_Camera_offsetY__P2764_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Camera_offsetY__P2764:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_offsetY__P2764_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_Camera_offsetY__P2764_locals:
    bl game_currentScene__P2974
_proccall517:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_123      
.jmpz518:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_123      
.lazySkip_2_123:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl tiles_TileMap_enabled__P2722
_proccall519:
    add sp, #4*1 ; pop locals 1
.lazy_1_123:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_123      
.jmpz520:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMap_offsetY__P2717
_proccall521:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_123      
.else_0_123:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_123:
.ret.2764:
    @stackempty locals
    movs r0, #0
.final_4_123:
    add sp, #4*1 ; pop locals 1
scene_Camera_offsetY__P2764_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(330,9): tiles.TileMap.offsetY
    ;
    .object tiles_TileMap_offsetY__P2717 "game/tilemap.ts(330,9): tiles.TileMap.offsetY"
tiles_TileMap_offsetY__P2717_pre:
    .section code
    .balign 4
tiles_TileMap_offsetY__P2717_args:
    cmp r4, #2
    bge tiles_TileMap_offsetY__P2717_nochk
    push {lr}
    bl _expand_args_2_18
    bl tiles_TileMap_offsetY__P2717_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_offsetY__P2717:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_offsetY__P2717_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_offsetY__P2717_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaHeight__P2719_nochk
_proccall522:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall523:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall524:
    add sp, #4*3 ; pop locals 3
.ret.2717:
    @stackempty locals
.final_0_124:
tiles_TileMap_offsetY__P2717_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(338,9): tiles.TileMap.areaHeight
    ;
    .object tiles_TileMap_areaHeight__P2719 "game/tilemap.ts(338,9): tiles.TileMap.areaHeight"
tiles_TileMap_areaHeight__P2719_pre:
    .section code
    .balign 4
tiles_TileMap_areaHeight__P2719_args:
    cmp r4, #1
    bge tiles_TileMap_areaHeight__P2719_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_areaHeight__P2719_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_areaHeight__P2719:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_areaHeight__P2719_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_areaHeight__P2719_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_125      
.jmpz525:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_125      
.condexprz_0_125:
    movs r0, #1
.condexprfin_1_125:
; jmp value (already in r0)
.ret.2719:
    @stackempty locals
.final_2_125:
tiles_TileMap_areaHeight__P2719_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(311,9): tiles.TileMap.scale
    ;
    .object tiles_TileMap_scale__P2713 "game/tilemap.ts(311,9): tiles.TileMap.scale"
tiles_TileMap_scale__P2713_pre:
    .section code
    .balign 4
tiles_TileMap_scale__P2713_args:
    cmp r4, #1
    bge tiles_TileMap_scale__P2713_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_scale__P2713_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_scale__P2713:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_scale__P2713_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_scale__P2713_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2713:
    @stackempty locals
.final_0_126:
tiles_TileMap_scale__P2713_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(219,9): tiles.TileMapData.height
    ;
    .object tiles_TileMapData_height__P2695 "game/tilemap.ts(219,9): tiles.TileMapData.height"
tiles_TileMapData_height__P2695_pre:
    .section code
    .balign 4
tiles_TileMapData_height__P2695_args:
    cmp r4, #1
    bge tiles_TileMapData_height__P2695_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMapData_height__P2695_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMapData_height__P2695:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2692_validate_62
    mov lr, r7
tiles_TileMapData_height__P2695_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_height__P2695_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
.ret.2695:
    @stackempty locals
.final_0_127:
tiles_TileMapData_height__P2695_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(352,9): tiles.TileMap.enabled
    ;
    .object tiles_TileMap_enabled__P2722 "game/tilemap.ts(352,9): tiles.TileMap.enabled"
tiles_TileMap_enabled__P2722_pre:
    .section code
    .balign 4
tiles_TileMap_enabled__P2722_args:
    cmp r4, #1
    bge tiles_TileMap_enabled__P2722_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_enabled__P2722_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_enabled__P2722:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_enabled__P2722_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_enabled__P2722_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2722:
    @stackempty locals
.final_0_128:
tiles_TileMap_enabled__P2722_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(37,9): scene.Camera.offsetY
    ;
    .object scene_Camera_offsetY__P2763 "game/camera.ts(37,9): scene.Camera.offsetY"
scene_Camera_offsetY__P2763_pre:
    .section code
    .balign 4
scene_Camera_offsetY__P2763_args:
    cmp r4, #1
    bge scene_Camera_offsetY__P2763_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_offsetY__P2763_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_offsetY__P2763:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_offsetY__P2763_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_offsetY__P2763_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2763:
    @stackempty locals
.final_0_129:
scene_Camera_offsetY__P2763_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(29,9): scene.Camera.offsetX
    ;
    .object scene_Camera_offsetX__P2762 "game/camera.ts(29,9): scene.Camera.offsetX"
scene_Camera_offsetX__P2762_pre:
    .section code
    .balign 4
scene_Camera_offsetX__P2762_args:
    cmp r4, #2
    bge scene_Camera_offsetX__P2762_nochk
    push {lr}
    bl _expand_args_2_18
    bl scene_Camera_offsetX__P2762_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_101:
 .word _dbl42
.object POP
    .section code
scene_Camera_offsetX__P2762:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_offsetX__P2762_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_Camera_offsetX__P2762_locals:
    bl game_currentScene__P2974
_proccall526:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_130      
.jmpz527:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_130      
.lazySkip_2_130:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl tiles_TileMap_enabled__P2722
_proccall528:
    add sp, #4*1 ; pop locals 1
.lazy_1_130:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_130      
.jmpz529:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMap_offsetX__P2716
_proccall530:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_130      
.else_0_130:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_130:
.ret.2762:
    @stackempty locals
    movs r0, #0
.final_4_130:
    add sp, #4*1 ; pop locals 1
scene_Camera_offsetX__P2762_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(326,9): tiles.TileMap.offsetX
    ;
    .object tiles_TileMap_offsetX__P2716 "game/tilemap.ts(326,9): tiles.TileMap.offsetX"
tiles_TileMap_offsetX__P2716_pre:
    .section code
    .balign 4
tiles_TileMap_offsetX__P2716_args:
    cmp r4, #2
    bge tiles_TileMap_offsetX__P2716_nochk
    push {lr}
    bl _expand_args_2_18
    bl tiles_TileMap_offsetX__P2716_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_offsetX__P2716:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_offsetX__P2716_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_offsetX__P2716_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaWidth__P2718_nochk
_proccall531:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall532:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall533:
    add sp, #4*3 ; pop locals 3
.ret.2716:
    @stackempty locals
.final_0_131:
tiles_TileMap_offsetX__P2716_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(334,9): tiles.TileMap.areaWidth
    ;
    .object tiles_TileMap_areaWidth__P2718 "game/tilemap.ts(334,9): tiles.TileMap.areaWidth"
tiles_TileMap_areaWidth__P2718_pre:
    .section code
    .balign 4
tiles_TileMap_areaWidth__P2718_args:
    cmp r4, #1
    bge tiles_TileMap_areaWidth__P2718_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_areaWidth__P2718_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_areaWidth__P2718:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_areaWidth__P2718_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_areaWidth__P2718_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_132      
.jmpz534:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_132      
.condexprz_0_132:
    movs r0, #1
.condexprfin_1_132:
; jmp value (already in r0)
.ret.2718:
    @stackempty locals
.final_2_132:
tiles_TileMap_areaWidth__P2718_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(215,9): tiles.TileMapData.width
    ;
    .object tiles_TileMapData_width__P2694 "game/tilemap.ts(215,9): tiles.TileMapData.width"
tiles_TileMapData_width__P2694_pre:
    .section code
    .balign 4
tiles_TileMapData_width__P2694_args:
    cmp r4, #1
    bge tiles_TileMapData_width__P2694_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMapData_width__P2694_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMapData_width__P2694:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2692_validate_62
    mov lr, r7
tiles_TileMapData_width__P2694_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_width__P2694_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
.ret.2694:
    @stackempty locals
.final_0_133:
tiles_TileMapData_width__P2694_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(26,9): scene.Camera.offsetX
    ;
    .object scene_Camera_offsetX__P2761 "game/camera.ts(26,9): scene.Camera.offsetX"
scene_Camera_offsetX__P2761_pre:
    .section code
    .balign 4
scene_Camera_offsetX__P2761_args:
    cmp r4, #1
    bge scene_Camera_offsetX__P2761_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_offsetX__P2761_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_offsetX__P2761:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_offsetX__P2761_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_offsetX__P2761_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2761:
    @stackempty locals
.final_0_134:
scene_Camera_offsetX__P2761_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(122,5): Sprite.y
    ;
    .object Sprite_y__P2331 "game/sprite.ts(122,5): Sprite.y"
Sprite_y__P2331_pre:
    .section code
    .balign 4
Sprite_y__P2331_args:
    cmp r4, #1
    bge Sprite_y__P2331_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_y__P2331_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_y__P2331:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_y__P2331_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_y__P2331_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    mov r3, r0
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_div__P162
_proccall535:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2331:
    @stackempty locals
.final_0_135:
Sprite_y__P2331_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(36,5): Fx.div
    ;
    .object Fx_div__P162 "base/fixed.ts(36,5): Fx.div"
Fx_div__P162_pre:
    .section code
    .balign 4
    .section code
Fx_div__P162:
Fx_div__P162_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_div__P162_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.162:
    @stackempty locals
.final_0_136:
Fx_div__P162_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(111,5): Sprite.x
    ;
    .object Sprite_x__P2329 "game/sprite.ts(111,5): Sprite.x"
Sprite_x__P2329_pre:
    .section code
    .balign 4
Sprite_x__P2329_args:
    cmp r4, #1
    bge Sprite_x__P2329_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_x__P2329_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_x__P2329:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_x__P2329_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_x__P2329_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_div__P162
_proccall536:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2329:
    @stackempty locals
.final_0_137:
Sprite_x__P2329_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(19,5): PhysicsEngine.move
    ;
    .object PhysicsEngine_move__P2492 "game/physics.ts(19,5): PhysicsEngine.move"
PhysicsEngine_move__P2492_pre:
    .section code
    .balign 4
PhysicsEngine_move__P2492_args:
    cmp r4, #2
    bge PhysicsEngine_move__P2492_nochk
    push {lr}
    bl _expand_args_2_18
    bl PhysicsEngine_move__P2492_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
PhysicsEngine_move__P2492:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2486_validate_29
    mov lr, r7
PhysicsEngine_move__P2492_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_move__P2492_locals:
.ret.2492:
    @stackempty locals
    movs r0, #0
.final_0_138:
PhysicsEngine_move__P2492_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(68,5): controller._moveSprites
    ;
    .object controller__moveSprites__P2110 "game/controller.ts(68,5): controller._moveSprites"
controller__moveSprites__P2110_pre:
    .section code
    .balign 4
controller__moveSprites__P2110_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller__moveSprites__P2110_args@fn
controller__moveSprites__P2110_args:
    .section code
controller__moveSprites__P2110:
controller__moveSprites__P2110_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__moveSprites__P2110_locals:
    @stackempty locals
    bl controller_players__P2106
_proccall537:
    mov r3, r0
    ldr r0, _ldlit_103 ; controller__moveSprites_inline__P9710_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall538:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2110:
    @stackempty locals
    movs r0, #0
.final_0_139:
controller__moveSprites__P2110_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(71,27): controller._moveSprites.inline
    ;
    .object controller__moveSprites_inline__P9710 "game/controller.ts(71,27): controller._moveSprites.inline"
controller__moveSprites_inline__P9710_pre:
    .section code
    .balign 4
controller__moveSprites_inline__P9710_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller__moveSprites_inline__P9710_args@fn
controller__moveSprites_inline__P9710_args:
    cmp r4, #1
    bge controller__moveSprites_inline__P9710_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller__moveSprites_inline__P9710_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller__moveSprites_inline__P9710:
controller__moveSprites_inline__P9710_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__moveSprites_inline__P9710_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller___preUpdate__P2139
_proccall539:
    add sp, #4*1 ; pop locals 1
.ret.9710:
    @stackempty locals
    movs r0, #0
.final_0_140:
controller__moveSprites_inline__P9710_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(331,9): controller.Controller.__preUpdate
    ;
    .object controller_Controller___preUpdate__P2139 "game/controller.ts(331,9): controller.Controller.__preUpdate"
controller_Controller___preUpdate__P2139_pre:
    .section code
    .balign 4
controller_Controller___preUpdate__P2139_args:
    cmp r4, #1
    bge controller_Controller___preUpdate__P2139_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller___preUpdate__P2139_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___preUpdate__P2139:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller___preUpdate__P2139_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Controller___preUpdate__P2139_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller__controlledSprites__P2116_nochk
_proccall541:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_141      
.jmpz540:
    b .ret.2139      
.else_0_141:
.afterif_1_141:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    movs r1, #10
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_141      
.jmpz542:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_right__P2121_nochk
_proccall543:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2178
_proccall544:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_left__P2120_nochk
_proccall545:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2178
_proccall546:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_down__P2123_nochk
_proccall547:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2178
_proccall548:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_up__P2122_nochk
_proccall549:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl controller_Button_pressureLevel__P2178
_proccall550:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_141      
.else_2_141:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_right__P2121_nochk
_proccall552:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_63
_proccall553:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_141      
.jmpz551:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_5_141      
.condexprz_4_141:
    movs r0, #1
.condexprfin_5_141:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_left__P2120_nochk
_proccall555:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_63
_proccall556:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_6_141      
.jmpz554:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_7_141      
.condexprz_6_141:
    movs r0, #1
.condexprfin_7_141:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    ldr r1, [sp, #4*1] ; tmpref @2
    bl _numops_subs
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_down__P2123_nochk
_proccall558:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_63
_proccall559:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_141      
.jmpz557:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_9_141      
.condexprz_8_141:
    movs r0, #1
.condexprfin_9_141:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_up__P2122_nochk
_proccall561:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_63
_proccall562:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_10_141      
.jmpz560:
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_11_141      
.condexprz_10_141:
    movs r0, #1
.condexprfin_11_141:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    ldr r1, [sp, #4*1] ; tmpref @2
    bl _numops_subs
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.afterif_3_141:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    ldr r1, _ldlit_104 ; 131073      
    bl _cmp_gt
    bne .jmpz563
    b .else_12_141      
.object PUSH
.balign 4
_ldlit_103:
 .word controller__moveSprites_inline__P9710_Lit
_ldlit_104:
 .word 131073
.object POP
.jmpz563:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_106 ; 131073      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::sqrt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_12_141:
.afterif_13_141:
    movs r0, #5
    ldr r1, _ldlit_107 ; controller_Controller___preUpdate_inline__P9790_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller__controlledSprites__P2116_nochk
_proccall564:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall565:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_141      
.jmpz566:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller__controlledSprites__P2116_nochk
_proccall567:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, _ldlit_108 ; controller_Controller___preUpdate_inline__P9847_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall568:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl controller_Controller__controlledSprites__P2117_nochk
_proccall569:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_14_141:
.afterif_15_141:
.ret.2139:
    @stackempty locals
    movs r0, #0
.final_16_141:
    add sp, #4*7 ; pop locals 7
controller_Controller___preUpdate__P2139_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(362,45): controller.Controller.__preUpdate.inline
    ;
    .object controller_Controller___preUpdate_inline__P9790 "game/controller.ts(362,45): controller.Controller.__preUpdate.inline"
controller_Controller___preUpdate_inline__P9790_pre:
    .section code
    .balign 4
controller_Controller___preUpdate_inline__P9790_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Controller___preUpdate_inline__P9790_args@fn
controller_Controller___preUpdate_inline__P9790_args:
    cmp r4, #1
    bge controller_Controller___preUpdate_inline__P9790_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller___preUpdate_inline__P9790_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___preUpdate_inline__P9790:
controller_Controller___preUpdate_inline__P9790_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Controller___preUpdate_inline__P9790_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; the one arg
    movs r1, #135
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall570:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    ldr r0, [sp, #4*0] ; tmpref @1
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #93
    bl _ifacecall1_get_8
_proccall571:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    ldr r0, [sp, #0]      
    movs r1, #175
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall572:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_142      
.jmpz573:
    ldr r0, [r5, #4*3]
    movs r1, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    b .ret.9790      
.else_0_142:
.afterif_1_142:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_142      
.jmpz574:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_142      
.jmpz575:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    @stackempty locals
.else_3_142:
.afterif_4_142:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_142      
.jmpz576:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    @stackempty locals
.else_5_142:
.afterif_6_142:
.else_2_142:
.afterif_7_142:
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_142      
.jmpz577:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_142      
.lazySkip_10_142:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
.lazy_9_142:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz578
    b .else_8_142      
.jmpz578:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_13_142      
.jmpz579:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_12_142      
.lazySkip_13_142:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
.lazy_12_142:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_142      
.jmpz580:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall581:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall582:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_14_142      
.else_11_142:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_142      
.jmpz583:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall584:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_16_142      
.else_15_142:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz585
    b .else_17_142      
.object PUSH
.balign 4
_ldlit_106:
 .word 131073
_ldlit_107:
 .word controller_Controller___preUpdate_inline__P9790_Lit
_ldlit_108:
 .word controller_Controller___preUpdate_inline__P9847_Lit
.object POP
.jmpz585:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall586:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_17_142:
.afterif_18_142:
.afterif_16_142:
.afterif_14_142:
    ldr r0, [sp, args@0]
    movs r1, #66
    bl _inst_scene_SpriteHandler__C2787_validate_26
    str r1, [r0, #4]
    @stackempty locals
    b .afterif_19_142      
.else_8_142:
    ldr r0, [sp, args@0]
    movs r1, #10
    bl _inst_scene_SpriteHandler__C2787_validate_26
    str r1, [r0, #4]
    @stackempty locals
.afterif_19_142:
.ret.9790:
    @stackempty locals
    movs r0, #0
.final_20_142:
    add sp, #4*3 ; pop locals 3
controller_Controller___preUpdate_inline__P9790_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(394,29): controller.Controller.__preUpdate.inline
    ;
    .object controller_Controller___preUpdate_inline__P9847 "game/controller.ts(394,29): controller.Controller.__preUpdate.inline"
controller_Controller___preUpdate_inline__P9847_pre:
    .section code
    .balign 4
controller_Controller___preUpdate_inline__P9847_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Controller___preUpdate_inline__P9847_args@fn
controller_Controller___preUpdate_inline__P9847_args:
    cmp r4, #1
    bge controller_Controller___preUpdate_inline__P9847_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller___preUpdate_inline__P9847_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___preUpdate_inline__P9847:
controller_Controller___preUpdate_inline__P9847_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller___preUpdate_inline__P9847_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #8]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.9847:
    @stackempty locals
.final_0_143:
controller_Controller___preUpdate_inline__P9847_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(106,9): controller.Controller._controlledSprites
    ;
    .object controller_Controller__controlledSprites__P2117 "game/controller.ts(106,9): controller.Controller._controlledSprites"
controller_Controller__controlledSprites__P2117_pre:
    .section code
    .balign 4
controller_Controller__controlledSprites__P2117_args:
    cmp r4, #2
    bge controller_Controller__controlledSprites__P2117_nochk
    push {lr}
    bl _expand_args_2_18
    bl controller_Controller__controlledSprites__P2117_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller__controlledSprites__P2117:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller__controlledSprites__P2117_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller__controlledSprites__P2117_locals:
    bl game_currentScene__P2974
_proccall587:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2117:
    @stackempty locals
    movs r0, #0
.final_0_144:
controller_Controller__controlledSprites__P2117_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(33,5): Fx.imul
    ;
    .object Fx_imul__P161 "base/fixed.ts(33,5): Fx.imul"
Fx_imul__P161_pre:
    .section code
    .balign 4
    .section code
Fx_imul__P161:
Fx_imul__P161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_imul__P161_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::imul
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.161:
    @stackempty locals
.final_0_145:
Fx_imul__P161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(186,9): controller.Button.isPressed
    ;
    .object controller_Button_isPressed__P2177 "game/controllerbutton.ts(186,9): controller.Button.isPressed"
controller_Button_isPressed__P2177_pre:
    .section code
    .balign 4
controller_Button_isPressed__P2177_args:
    cmp r4, #1
    bge controller_Button_isPressed__P2177_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_isPressed__P2177_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_isPressed__P2177:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_isPressed__P2177_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_isPressed__P2177_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.2177:
    @stackempty locals
.final_0_146:
controller_Button_isPressed__P2177_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(138,9): controller.Controller.up
    ;
    .object controller_Controller_up__P2122 "game/controller.ts(138,9): controller.Controller.up"
controller_Controller_up__P2122_pre:
    .section code
    .balign 4
controller_Controller_up__P2122_args:
    cmp r4, #1
    bge controller_Controller_up__P2122_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_up__P2122_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_up__P2122:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller_up__P2122_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_up__P2122_locals:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4668_nochk
_proccall588:
    add sp, #4*2 ; pop locals 2
.ret.2122:
    @stackempty locals
.final_0_147:
controller_Controller_up__P2122_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(221,9): controller.Controller.button
    ;
    .object controller_Controller_button__P4668 "game/controller.ts(221,9): controller.Controller.button"
controller_Controller_button__P4668_pre:
    .section code
    .balign 4
controller_Controller_button__P4668_args:
    cmp r4, #2
    bge controller_Controller_button__P4668_nochk
    push {lr}
    bl _expand_args_2_18
    bl controller_Controller_button__P4668_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller_button__P4668:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller_button__P4668_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_button__P4668_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.ret.4668:
    @stackempty locals
.final_0_148:
controller_Controller_button__P4668_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(146,9): controller.Controller.down
    ;
    .object controller_Controller_down__P2123 "game/controller.ts(146,9): controller.Controller.down"
controller_Controller_down__P2123_pre:
    .section code
    .balign 4
controller_Controller_down__P2123_args:
    cmp r4, #1
    bge controller_Controller_down__P2123_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_down__P2123_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_down__P2123:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller_down__P2123_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_down__P2123_locals:
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4668_nochk
_proccall589:
    add sp, #4*2 ; pop locals 2
.ret.2123:
    @stackempty locals
.final_0_149:
controller_Controller_down__P2123_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(122,9): controller.Controller.left
    ;
    .object controller_Controller_left__P2120 "game/controller.ts(122,9): controller.Controller.left"
controller_Controller_left__P2120_pre:
    .section code
    .balign 4
controller_Controller_left__P2120_args:
    cmp r4, #1
    bge controller_Controller_left__P2120_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_left__P2120_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_left__P2120:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller_left__P2120_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_left__P2120_locals:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4668_nochk
_proccall590:
    add sp, #4*2 ; pop locals 2
.ret.2120:
    @stackempty locals
.final_0_150:
controller_Controller_left__P2120_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(130,9): controller.Controller.right
    ;
    .object controller_Controller_right__P2121 "game/controller.ts(130,9): controller.Controller.right"
controller_Controller_right__P2121_pre:
    .section code
    .balign 4
controller_Controller_right__P2121_args:
    cmp r4, #1
    bge controller_Controller_right__P2121_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_right__P2121_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_right__P2121:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller_right__P2121_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_right__P2121_locals:
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller_button__P4668_nochk
_proccall591:
    add sp, #4*2 ; pop locals 2
.ret.2121:
    @stackempty locals
.final_0_151:
controller_Controller_right__P2121_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(193,9): controller.Button.pressureLevel
    ;
    .object controller_Button_pressureLevel__P2178 "game/controllerbutton.ts(193,9): controller.Button.pressureLevel"
controller_Button_pressureLevel__P2178_pre:
    .section code
    .balign 4
controller_Button_pressureLevel__P2178_args:
    cmp r4, #1
    bge controller_Button_pressureLevel__P2178_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_pressureLevel__P2178_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_pressureLevel__P2178:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_pressureLevel__P2178_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_pressureLevel__P2178_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceDalVersion
    ldr r1, _ldlit_110 ; _str31      
    bl _cmp_eq
    beq .else_0_152      
.jmpz592:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_Sprite__C2316_this_35
_proccall594:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_152      
.jmpz593:
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_2_152      
.condexprz_1_152:
    movs r0, #1
.condexprfin_2_152:
; jmp value (already in r0)
    b .ret.2178      
    b .afterif_3_152      
.else_0_152:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_46
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::pressureLevelByButtonId
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    b .ret.2178      
.afterif_3_152:
    movs r0, #0
.ret.2178:
    @stackempty locals
.final_4_152:
controller_Button_pressureLevel__P2178_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(102,9): controller.Controller._controlledSprites
    ;
    .object controller_Controller__controlledSprites__P2116 "game/controller.ts(102,9): controller.Controller._controlledSprites"
controller_Controller__controlledSprites__P2116_pre:
    .section code
    .balign 4
controller_Controller__controlledSprites__P2116_args:
    cmp r4, #1
    bge controller_Controller__controlledSprites__P2116_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller__controlledSprites__P2116_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller__controlledSprites__P2116:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller__controlledSprites__P2116_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller__controlledSprites__P2116_locals:
    bl game_currentScene__P2974
_proccall595:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.ret.2116:
    @stackempty locals
.final_0_153:
controller_Controller__controlledSprites__P2116_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(54,5): controller.players
    ;
    .object controller_players__P2106 "game/controller.ts(54,5): controller.players"
controller_players__P2106_pre:
    .section code
    .balign 4
    .section code
controller_players__P2106:
controller_players__P2106_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_players__P2106_locals:
    bl controller__player1__P2105
_proccall596:
    @stackempty locals
    ldr r0, _ldlit_111 ; controller_players_inline__P9918_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall597:
    add sp, #4*2 ; pop locals 2
.ret.2106:
    @stackempty locals
.final_0_154:
controller_players__P2106_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(56,32): controller.players.inline
    ;
    .object controller_players_inline__P9918 "game/controller.ts(56,32): controller.players.inline"
controller_players_inline__P9918_pre:
    .section code
    .balign 4
controller_players_inline__P9918_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_players_inline__P9918_args@fn
controller_players_inline__P9918_args:
    cmp r4, #1
    bge controller_players_inline__P9918_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_players_inline__P9918_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_players_inline__P9918:
controller_players_inline__P9918_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_players_inline__P9918_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.9918:
    @stackempty locals
.final_0_155:
controller_players_inline__P9918_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(72,9): control.EventContext.deltaTime
    ;
    .object control_EventContext_deltaTime__P400 "base/eventcontext.ts(72,9): control.EventContext.deltaTime"
control_EventContext_deltaTime__P400_pre:
    .section code
    .balign 4
control_EventContext_deltaTime__P400_args:
    cmp r4, #1
    bge control_EventContext_deltaTime__P400_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_deltaTime__P400_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_deltaTime__P400:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_deltaTime__P400_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventContext_deltaTime__P400_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.400:
    @stackempty locals
.final_0_156:
control_EventContext_deltaTime__P400_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(415,5): controller.__update
    ;
    .object controller___update__P2142 "game/controller.ts(415,5): controller.__update"
controller___update__P2142_pre:
    .section code
    .balign 4
    .section code
controller___update__P2142:
controller___update__P2142_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
controller___update__P2142_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_112 ; controller___update_inline__P9935_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    bl controller_players__P2106
_proccall598:
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall599:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2142:
    @stackempty locals
    movs r0, #0
.final_0_157:
    add sp, #4*1 ; pop locals 1
controller___update__P2142_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(417,27): controller.__update.inline
    ;
    .object controller___update_inline__P9935 "game/controller.ts(417,27): controller.__update.inline"
controller___update_inline__P9935_pre:
    .section code
    .balign 4
controller___update_inline__P9935_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller___update_inline__P9935_args@fn
controller___update_inline__P9935_args:
    cmp r4, #1
    bge controller___update_inline__P9935_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller___update_inline__P9935_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller___update_inline__P9935:
controller___update_inline__P9935_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller___update_inline__P9935_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Controller___update__P2140
_proccall600:
    add sp, #4*2 ; pop locals 2
.ret.9935:
    @stackempty locals
    movs r0, #0
.final_0_158:
controller___update_inline__P9935_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(397,9): controller.Controller.__update
    ;
    .object controller_Controller___update__P2140 "game/controller.ts(397,9): controller.Controller.__update"
controller_Controller___update__P2140_pre:
    .section code
    .balign 4
controller_Controller___update__P2140_args:
    cmp r4, #2
    bge controller_Controller___update__P2140_nochk
    push {lr}
    bl _expand_args_2_18
    bl controller_Controller___update__P2140_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Controller___update__P2140:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller___update__P2140_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller___update__P2140_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r1, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, args@1]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_113 ; controller_Controller___update_inline__P9948_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall601:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2140:
    @stackempty locals
    movs r0, #0
.final_0_159:
controller_Controller___update__P2140_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(399,34): controller.Controller.__update.inline
    ;
    .object controller_Controller___update_inline__P9948 "game/controller.ts(399,34): controller.Controller.__update.inline"
controller_Controller___update_inline__P9948_pre:
    .section code
    .balign 4
controller_Controller___update_inline__P9948_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Controller___update_inline__P9948_args@fn
controller_Controller___update_inline__P9948_args:
    cmp r4, #1
    bge controller_Controller___update_inline__P9948_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller___update_inline__P9948_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller___update_inline__P9948:
controller_Controller___update_inline__P9948_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller___update_inline__P9948_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl controller_Button___update__P2180
_proccall602:
    add sp, #4*2 ; pop locals 2
.ret.9948:
    @stackempty locals
    movs r0, #0
.final_0_160:
controller_Controller___update_inline__P9948_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(218,9): controller.Button.__update
    ;
    .object controller_Button___update__P2180 "game/controllerbutton.ts(218,9): controller.Button.__update"
controller_Button___update__P2180_pre:
    .section code
    .balign 4
controller_Button___update__P2180_args:
    cmp r4, #2
    bge controller_Button___update__P2180_nochk
    push {lr}
    bl _expand_args_2_18
    bl controller_Button___update__P2180_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button___update__P2180:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button___update__P2180_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_Button___update__P2180_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_161      
.jmpz603:
    b .ret.2180      
.else_0_161:
.afterif_1_161:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    movs r1, #0
    bl _cmp_eqq
    beq .condexprz_2_161      
.jmpz604:
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .condexprfin_3_161      
.condexprz_2_161:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    b .condexprfin_3_161      
.object PUSH
.balign 4
_ldlit_110:
 .word _str31
_ldlit_111:
 .word controller_players_inline__P9918_Lit
_ldlit_112:
 .word controller___update_inline__P9935_Lit
_ldlit_113:
 .word controller_Controller___update_inline__P9948_Lit
.object POP
.condexprfin_3_161:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    movs r1, #0
    bl _cmp_eqq
    beq .condexprz_4_161      
.jmpz605:
    movs r0, #248
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    b .condexprfin_5_161      
.condexprz_4_161:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
.condexprfin_5_161:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .else_6_161      
.jmpz606:
    b .ret.2180      
.else_6_161:
.afterif_7_161:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_8_161      
.jmpz607:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_raiseButtonRepeat__P4674_nochk
_proccall608:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@2]
    str r1, [r0, #28]
    @stackempty locals
.else_8_161:
.afterif_9_161:
.ret.2180:
    @stackempty locals
    movs r0, #0
.final_10_161:
    add sp, #4*3 ; pop locals 3
controller_Button___update__P2180_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(111,9): controller.Button.raiseButtonRepeat
    ;
    .object controller_Button_raiseButtonRepeat__P4674 "game/controllerbutton.ts(111,9): controller.Button.raiseButtonRepeat"
controller_Button_raiseButtonRepeat__P4674_pre:
    .section code
    .balign 4
controller_Button_raiseButtonRepeat__P4674_args:
    cmp r4, #1
    bge controller_Button_raiseButtonRepeat__P4674_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_raiseButtonRepeat__P4674_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_raiseButtonRepeat__P4674:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_raiseButtonRepeat__P4674_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_raiseButtonRepeat__P4674_locals:
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_162      
.jmpz609:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #6
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_162      
.else_0_162:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #7
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_162:
.ret.4674:
    @stackempty locals
    movs r0, #0
.final_2_162:
controller_Button_raiseButtonRepeat__P4674_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(148,9): control.EventContext.registerFrameHandler
    ;
    .object control_EventContext_registerFrameHandler__P403 "base/eventcontext.ts(148,9): control.EventContext.registerFrameHandler"
control_EventContext_registerFrameHandler__P403_pre:
    .section code
    .balign 4
control_EventContext_registerFrameHandler__P403_args:
    cmp r4, #3
    bge control_EventContext_registerFrameHandler__P403_nochk
    push {lr}
    bl _expand_args_3_15
    bl control_EventContext_registerFrameHandler__P403_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
control_EventContext_registerFrameHandler__P403:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_registerFrameHandler__P403_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerFrameHandler__P403_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_163      
.jmpz610:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl control_EventContext_registerFrameCallbacks__P4418_nochk
_proccall611:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_163:
.afterif_1_163:
    ldr r0, _ldlit_115 ; control_FrameCallback__C392_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@1]
    bl _inst_control_FrameCallback__C392_validate_65
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _inst_control_FrameCallback__C392_validate_65
    str r1, [r0, #8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10037:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10037      
.jmpz612:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_control_FrameCallback__C392_validate_65
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .else_2_163      
.jmpz613:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_66
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::insertAt
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.403      
.else_2_163:
.afterif_3_163:
.cont.10037:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10037      
.brk.10037:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.403:
    @stackempty locals
.final_4_163:
    add sp, #4*2 ; pop locals 2
control_EventContext_registerFrameHandler__P403_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(110,9): control.EventContext.registerFrameCallbacks
    ;
    .object control_EventContext_registerFrameCallbacks__P4418 "base/eventcontext.ts(110,9): control.EventContext.registerFrameCallbacks"
control_EventContext_registerFrameCallbacks__P4418_pre:
    .section code
    .balign 4
control_EventContext_registerFrameCallbacks__P4418_args:
    cmp r4, #1
    bge control_EventContext_registerFrameCallbacks__P4418_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_registerFrameCallbacks__P4418_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_registerFrameCallbacks__P4418:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_registerFrameCallbacks__P4418_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerFrameCallbacks__P4418_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_164      
.jmpz614:
    b .ret.4418      
.else_0_164:
.afterif_1_164:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_116 ; control_EventContext_registerFrameCallbacks_inline__P10074_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4418:
    @stackempty locals
    movs r0, #0
.final_2_164:
    add sp, #4*1 ; pop locals 1
control_EventContext_registerFrameCallbacks__P4418_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(114,35): control.EventContext.registerFrameCallbacks.inline
    ;
    .object control_EventContext_registerFrameCallbacks_inline__P10074 "base/eventcontext.ts(114,35): control.EventContext.registerFrameCallbacks.inline"
control_EventContext_registerFrameCallbacks_inline__P10074_pre:
    .section code
    .balign 4
control_EventContext_registerFrameCallbacks_inline__P10074_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_EventContext_registerFrameCallbacks_inline__P10074_args@fn
control_EventContext_registerFrameCallbacks_inline__P10074_args:
    .section code
control_EventContext_registerFrameCallbacks_inline__P10074:
control_EventContext_registerFrameCallbacks_inline__P10074_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control_EventContext_registerFrameCallbacks_inline__P10074_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_165      
.jmpz615:
    movs r0, #1
    ldr r1, _ldlit_117 ; control_EventContext_registerFrameCallbacks_inline__P10080_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl pauseUntil__P367
_proccall616:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_165:
.afterif_1_165:
    ldr r0, [r5, #4*3]
    movs r1, #66
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.10099:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .brk.10099      
.jmpz617:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl control_EventContext_runCallbacks__P4417_nochk
_proccall618:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl pause__P413
_proccall619:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.10099      
.brk.10099:
    ldr r0, [r5, #4*3]
    movs r1, #10
    str r1, [r0, #40]
    @stackempty locals
.ret.10074:
    @stackempty locals
    movs r0, #0
.final_2_165:
    add sp, #4*1 ; pop locals 1
control_EventContext_registerFrameCallbacks_inline__P10074_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(118,32): control.EventContext.registerFrameCallbacks.inline
    ;
    .object control_EventContext_registerFrameCallbacks_inline__P10080 "base/eventcontext.ts(118,32): control.EventContext.registerFrameCallbacks.inline"
control_EventContext_registerFrameCallbacks_inline__P10080_pre:
    .section code
    .balign 4
control_EventContext_registerFrameCallbacks_inline__P10080_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_EventContext_registerFrameCallbacks_inline__P10080_args@fn
control_EventContext_registerFrameCallbacks_inline__P10080_args:
    .section code
control_EventContext_registerFrameCallbacks_inline__P10080:
control_EventContext_registerFrameCallbacks_inline__P10080_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventContext_registerFrameCallbacks_inline__P10080_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.10080:
    @stackempty locals
.final_0_166:
control_EventContext_registerFrameCallbacks_inline__P10080_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(76,9): control.EventContext.runCallbacks
    ;
    .object control_EventContext_runCallbacks__P4417 "base/eventcontext.ts(76,9): control.EventContext.runCallbacks"
control_EventContext_runCallbacks__P4417_pre:
    .section code
    .balign 4
control_EventContext_runCallbacks__P4417_args:
    cmp r4, #1
    bge control_EventContext_runCallbacks__P4417_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_runCallbacks__P4417_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_runCallbacks__P4417:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_runCallbacks__P4417_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_runCallbacks__P4417_locals:
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #32]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.10127:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.10127      
.jmpz620:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall1__20
_proccall621:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.10127:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.10127      
.object PUSH
.balign 4
_ldlit_115:
 .word control_FrameCallback__C392_VT
_ldlit_116:
 .word control_EventContext_registerFrameCallbacks_inline__P10074_Lit
_ldlit_117:
 .word control_EventContext_registerFrameCallbacks_inline__P10080_Lit
.object POP
.brk.10127:
    movs r0, #0
    str r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@0]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_167      
.jmpz622:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_167      
.lazySkip_2_167:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #61
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_167:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz623
    b .else_0_167      
.jmpz623:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@4]
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_119 ; _str12      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, locals@7]
    movs r1, #199
    bl _cmp_lt
    beq .else_3_167      
.jmpz624:
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_120 ; _str13      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_3_167:
.afterif_4_167:
    mov r7, sp
    str r7, [r6, #4]
    bl control::profilingEnabled
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_167      
.jmpz625:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_121 ; _str14      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_122 ; _str15      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_123 ; _str16      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_124 ; _str17      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::gc
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::dumpPerfCounters
    @stackempty locals
.else_5_167:
.afterif_6_167:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
.else_0_167:
.afterif_7_167:
    movs r0, #41
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #3
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall626:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
.ret.4417:
    @stackempty locals
.final_8_167:
    add sp, #4*9 ; pop locals 9
control_EventContext_runCallbacks__P4417_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(74,1): pauseUntil
    ;
    .object pauseUntil__P367 "base/poll.ts(74,1): pauseUntil"
pauseUntil__P367_pre:
    .section code
    .balign 4
    .section code
pauseUntil__P367:
pauseUntil__P367_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pauseUntil__P367_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_168      
.jmpz627:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_168      
.lazySkip_2_168:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
.lazy_1_168:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_168      
.jmpz629:
    b .ret.367      
.else_0_168:
.afterif_3_168:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_168      
.jmpz630:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
.else_4_168:
.afterif_5_168:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl control___queuePollEvent__P366
_proccall631:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.367:
    @stackempty locals
    movs r0, #0
.final_6_168:
pauseUntil__P367_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(40,5): control.__queuePollEvent
    ;
    .object control___queuePollEvent__P366 "base/poll.ts(40,5): control.__queuePollEvent"
control___queuePollEvent__P366_pre:
    .section code
    .balign 4
    .section code
control___queuePollEvent__P366:
control___queuePollEvent__P366_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control___queuePollEvent__P366_locals:
    ldr r0, _ldlit_125 ; control_PollEvent__C4391_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    ldr r0, [sp, #4*11] ; tmpref @1
    push {r0} ; proc-arg
    bl control_PollEvent_constructor__P4392
_proccall632:
    add sp, #4*12 ; pop locals 12
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_169      
.jmpz633:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    ldr r0, _ldlit_126 ; control_pollEvents__P4395_Lit      
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_169      
.else_0_169:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_169:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz634
    b .else_2_169      
.object PUSH
.balign 4
_ldlit_119:
 .word _str12
_ldlit_120:
 .word _str13
_ldlit_121:
 .word _str14
_ldlit_122:
 .word _str15
_ldlit_123:
 .word _str16
_ldlit_124:
 .word _str17
_ldlit_125:
 .word control_PollEvent__C4391_VT
_ldlit_126:
 .word control_pollEvents__P4395_Lit
.object POP
.jmpz634:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl control_onEvent__P391
_proccall635:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_3_169      
.else_2_169:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_169:
.ret.366:
    @stackempty locals
    movs r0, #0
.final_4_169:
    add sp, #4*1 ; pop locals 1
control___queuePollEvent__P366_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(21,5): control.pollEvents
    ;
    .object control_pollEvents__P4395 "base/poll.ts(21,5): control.pollEvents"
control_pollEvents__P4395_pre:
    .section code
    .balign 4
control_pollEvents__P4395_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_pollEvents__P4395_args@fn
control_pollEvents__P4395_args:
    .section code
control_pollEvents__P4395:
control_pollEvents__P4395_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_pollEvents__P4395_locals:
.cont.10294:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_gt
    bne .jmpz636
    b .brk.10294      
.jmpz636:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10301:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz637
    b .brk.10301      
.jmpz637:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #101
    bl _ifacecall1__20
_proccall639:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_170      
.jmpz638:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_170      
.lazySkip_2_170:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_170      
.jmpz640:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_170      
.lazySkip_4_170:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_3_170:
; jmp value (already in r0)
.lazy_1_170:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_170      
.jmpz641:
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4391_validate_67
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_170      
.jmpz642:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl helpers_arraySplice__P100
_proccall643:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
.else_5_170:
.afterif_6_170:
.else_0_170:
.afterif_7_170:
.cont.10301:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10301      
.brk.10301:
    movs r0, #101
    push {r0} ; proc-arg
    bl pause__P413
_proccall644:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.10294      
.brk.10294:
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
.ret.4395:
    @stackempty locals
    movs r0, #0
.final_8_170:
    add sp, #4*3 ; pop locals 3
control_pollEvents__P4395_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/poll.ts(9,9): control.PollEvent.constructor
    ;
    .object control_PollEvent_constructor__P4392 "base/poll.ts(9,9): control.PollEvent.constructor"
control_PollEvent_constructor__P4392_pre:
    .section code
    .balign 4
    .section code
control_PollEvent_constructor__P4392:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_PollEvent__C4391_validate_67
    mov lr, r7
control_PollEvent_constructor__P4392_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_PollEvent_constructor__P4392_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@6]
    str r1, [r0, #24]
    @stackempty locals
    movs r0, #0
.ret.4392:
    @stackempty locals
.final_0_171:
control_PollEvent_constructor__P4392_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function power/power.ts(27,5): power.poke
    ;
    .object power_poke__P1911 "power/power.ts(27,5): power.poke"
power_poke__P1911_pre:
    .section code
    .balign 4
    .section code
power_poke__P1911:
power_poke__P1911_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
power_poke__P1911_locals:
    bl power_init__P4526
_proccall645:
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    movs r1, #212
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.1911:
    @stackempty locals
    movs r0, #0
.final_0_172:
power_poke__P1911_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(221,5): control.pushEventContext
    ;
    .object control_pushEventContext__P409 "base/eventcontext.ts(221,5): control.pushEventContext"
control_pushEventContext__P409_pre:
    .section code
    .balign 4
    .section code
control_pushEventContext__P409:
control_pushEventContext__P409_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_pushEventContext__P409_locals:
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_173      
.jmpz646:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #152
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_173:
.afterif_1_173:
    bl control_eventContext__P408
_proccall647:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_173      
.jmpz648:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventContext_unregister__P402
_proccall649:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_173:
.afterif_3_173:
    ldr r0, _ldlit_128 ; control_EventContext__C395_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl control_EventContext_constructor__P399
_proccall650:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
.ret.409:
    @stackempty locals
.final_4_173:
    add sp, #4*2 ; pop locals 2
control_pushEventContext__P409_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(60,9): control.EventContext.constructor
    ;
    .object control_EventContext_constructor__P399 "base/eventcontext.ts(60,9): control.EventContext.constructor"
control_EventContext_constructor__P399_pre:
    .section code
    .balign 4
    .section code
control_EventContext_constructor__P399:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_constructor__P399_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventContext_constructor__P399_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #36]
    @stackempty locals
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_174      
.jmpz651:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_174:
.afterif_1_174:
    movs r0, #0
.ret.399:
    @stackempty locals
.final_2_174:
control_EventContext_constructor__P399_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(142,9): control.EventContext.unregister
    ;
    .object control_EventContext_unregister__P402 "base/eventcontext.ts(142,9): control.EventContext.unregister"
control_EventContext_unregister__P402_pre:
    .section code
    .balign 4
control_EventContext_unregister__P402_args:
    cmp r4, #1
    bge control_EventContext_unregister__P402_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_unregister__P402_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_unregister__P402:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_unregister__P402_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_unregister__P402_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.10418:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.10418      
.jmpz652:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventHandler_unregister__P4414
_proccall653:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.10418:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.10418      
.brk.10418:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #12]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.402:
    @stackempty locals
    movs r0, #0
.final_0_175:
    add sp, #4*3 ; pop locals 3
control_EventContext_unregister__P402_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(37,9): control.EventHandler.unregister
    ;
    .object control_EventHandler_unregister__P4414 "base/eventcontext.ts(37,9): control.EventHandler.unregister"
control_EventHandler_unregister__P4414_pre:
    .section code
    .balign 4
control_EventHandler_unregister__P4414_args:
    cmp r4, #1
    bge control_EventHandler_unregister__P4414_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventHandler_unregister__P4414_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventHandler_unregister__P4414:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventHandler__C4412_validate_24
    mov lr, r7
control_EventHandler_unregister__P4414_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_EventHandler_unregister__P4414_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, _ldlit_129 ; control_doNothing__P4416_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.4414:
    @stackempty locals
    movs r0, #0
.final_0_176:
control_EventHandler_unregister__P4414_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(42,5): control.doNothing
    ;
    .object control_doNothing__P4416 "base/eventcontext.ts(42,5): control.doNothing"
control_doNothing__P4416_pre:
    .section code
    .balign 4
control_doNothing__P4416_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_doNothing__P4416_args@fn
control_doNothing__P4416_args:
    .section code
control_doNothing__P4416:
control_doNothing__P4416_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_doNothing__P4416_locals:
.ret.4416:
    @stackempty locals
    movs r0, #0
.final_0_177:
control_doNothing__P4416_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_128:
 .word control_EventContext__C395_VT
_ldlit_129:
 .word control_doNothing__P4416_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(107,9): scene.Scene.constructor
    ;
    .object scene_Scene_constructor__P2841 "game/scene.ts(107,9): scene.Scene.constructor"
scene_Scene_constructor__P2841_pre:
    .section code
    .balign 4
    .section code
scene_Scene_constructor__P2841:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2818_validate_11
    mov lr, r7
scene_Scene_constructor__P2841_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_constructor__P2841_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #100]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, _ldlit_131 ; ArcadePhysicsEngine__C2502_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_constructor__P2503
_proccall654:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, _ldlit_132 ; scene_Camera__C2756_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl scene_Camera_constructor__P2760
_proccall655:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #32]
    @stackempty locals
    ldr r0, _ldlit_133 ; scene_Background__C2644_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_Background_constructor__P2648
_proccall656:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #52]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #56]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #64]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #68]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #88]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #92]
    @stackempty locals
    movs r0, #0
.ret.2841:
    @stackempty locals
.final_0_178:
scene_Scene_constructor__P2841_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(21,9): scene.Background.constructor
    ;
    .object scene_Background_constructor__P2648 "game/background.ts(21,9): scene.Background.constructor"
scene_Background_constructor__P2648_pre:
    .section code
    .balign 4
    .section code
scene_Background_constructor__P2648:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Background__C2644_validate_55
    mov lr, r7
scene_Background_constructor__P2648_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Background_constructor__P2648_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2648:
    @stackempty locals
.final_0_179:
scene_Background_constructor__P2648_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(18,9): scene.Camera.constructor
    ;
    .object scene_Camera_constructor__P2760 "game/camera.ts(18,9): scene.Camera.constructor"
scene_Camera_constructor__P2760_pre:
    .section code
    .balign 4
    .section code
scene_Camera_constructor__P2760:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_constructor__P2760_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_constructor__P2760_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.2760:
    @stackempty locals
.final_0_180:
scene_Camera_constructor__P2760_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(59,5): ArcadePhysicsEngine.constructor
    ;
    .object ArcadePhysicsEngine_constructor__P2503 "game/physics.ts(59,5): ArcadePhysicsEngine.constructor"
ArcadePhysicsEngine_constructor__P2503_pre:
    .section code
    .balign 4
    .section code
ArcadePhysicsEngine_constructor__P2503:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_constructor__P2503_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_constructor__P2503_locals:
    movs r0, #0
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_134 ; sprites_SpriteMap__C2421_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl sprites_SpriteMap_constructor__P2422
_proccall657:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_maxSpeed__P2505_nochk
_proccall658:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_maxStep__P2509_nochk
_proccall659:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_minStep__P2507_nochk
_proccall660:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2503:
    @stackempty locals
.final_0_181:
ArcadePhysicsEngine_constructor__P2503_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(81,5): ArcadePhysicsEngine.minStep
    ;
    .object ArcadePhysicsEngine_minStep__P2507 "game/physics.ts(81,5): ArcadePhysicsEngine.minStep"
ArcadePhysicsEngine_minStep__P2507_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_minStep__P2507_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_minStep__P2507_nochk
    push {lr}
    bl _expand_args_2_18
    bl ArcadePhysicsEngine_minStep__P2507_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_minStep__P2507:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_minStep__P2507_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_minStep__P2507_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall661:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2507:
    @stackempty locals
    movs r0, #0
.final_0_182:
ArcadePhysicsEngine_minStep__P2507_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(77,5): ArcadePhysicsEngine.minStep
    ;
    .object ArcadePhysicsEngine_minStep__P2506 "game/physics.ts(77,5): ArcadePhysicsEngine.minStep"
ArcadePhysicsEngine_minStep__P2506_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_minStep__P2506_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_minStep__P2506_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_minStep__P2506_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_minStep__P2506:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_minStep__P2506_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_minStep__P2506_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall662:
    add sp, #4*1 ; pop locals 1
.ret.2506:
    @stackempty locals
.final_0_183:
ArcadePhysicsEngine_minStep__P2506_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(75,5): Fx.toInt
    ;
    .object Fx_toInt__P172 "base/fixed.ts(75,5): Fx.toInt"
Fx_toInt__P172_pre:
    .section code
    .balign 4
    .section code
Fx_toInt__P172:
Fx_toInt__P172_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_toInt__P172_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.ret.172:
    @stackempty locals
.final_0_184:
Fx_toInt__P172_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(89,5): ArcadePhysicsEngine.maxStep
    ;
    .object ArcadePhysicsEngine_maxStep__P2509 "game/physics.ts(89,5): ArcadePhysicsEngine.maxStep"
ArcadePhysicsEngine_maxStep__P2509_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxStep__P2509_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_maxStep__P2509_nochk
    push {lr}
    bl _expand_args_2_18
    bl ArcadePhysicsEngine_maxStep__P2509_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_maxStep__P2509:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_maxStep__P2509_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxStep__P2509_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall663:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2509:
    @stackempty locals
    movs r0, #0
.final_0_185:
ArcadePhysicsEngine_maxStep__P2509_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(85,5): ArcadePhysicsEngine.maxStep
    ;
    .object ArcadePhysicsEngine_maxStep__P2508 "game/physics.ts(85,5): ArcadePhysicsEngine.maxStep"
ArcadePhysicsEngine_maxStep__P2508_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxStep__P2508_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_maxStep__P2508_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_maxStep__P2508_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_maxStep__P2508:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_maxStep__P2508_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxStep__P2508_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall664:
    add sp, #4*1 ; pop locals 1
.ret.2508:
    @stackempty locals
.final_0_186:
ArcadePhysicsEngine_maxStep__P2508_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_131:
 .word ArcadePhysicsEngine__C2502_VT
_ldlit_132:
 .word scene_Camera__C2756_VT
_ldlit_133:
 .word scene_Background__C2644_VT
_ldlit_134:
 .word sprites_SpriteMap__C2421_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(72,5): ArcadePhysicsEngine.maxSpeed
    ;
    .object ArcadePhysicsEngine_maxSpeed__P2505 "game/physics.ts(72,5): ArcadePhysicsEngine.maxSpeed"
ArcadePhysicsEngine_maxSpeed__P2505_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxSpeed__P2505_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_maxSpeed__P2505_nochk
    push {lr}
    bl _expand_args_2_18
    bl ArcadePhysicsEngine_maxSpeed__P2505_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_maxSpeed__P2505:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_maxSpeed__P2505_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxSpeed__P2505_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall665:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2505:
    @stackempty locals
    movs r0, #0
.final_0_187:
ArcadePhysicsEngine_maxSpeed__P2505_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(68,5): ArcadePhysicsEngine.maxSpeed
    ;
    .object ArcadePhysicsEngine_maxSpeed__P2504 "game/physics.ts(68,5): ArcadePhysicsEngine.maxSpeed"
ArcadePhysicsEngine_maxSpeed__P2504_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_maxSpeed__P2504_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_maxSpeed__P2504_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_maxSpeed__P2504_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_maxSpeed__P2504:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_maxSpeed__P2504_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_maxSpeed__P2504_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall666:
    add sp, #4*1 ; pop locals 1
.ret.2504:
    @stackempty locals
.final_0_189:
ArcadePhysicsEngine_maxSpeed__P2504_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(9,9): sprites.SpriteMap.constructor
    ;
    .object sprites_SpriteMap_constructor__P2422 "game/spritemap.ts(9,9): sprites.SpriteMap.constructor"
sprites_SpriteMap_constructor__P2422_pre:
    .section code
    .balign 4
    .section code
sprites_SpriteMap_constructor__P2422:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_constructor__P2422_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteMap_constructor__P2422_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2422:
    @stackempty locals
.final_0_190:
sprites_SpriteMap_constructor__P2422_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(288,5): controller.pauseUntilAnyButtonIsPressed
    ;
    .object controller_pauseUntilAnyButtonIsPressed__P2182 "game/controllerbutton.ts(288,5): controller.pauseUntilAnyButtonIsPressed"
controller_pauseUntilAnyButtonIsPressed__P2182_pre:
    .section code
    .balign 4
controller_pauseUntilAnyButtonIsPressed__P2182_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_pauseUntilAnyButtonIsPressed__P2182_args@fn
controller_pauseUntilAnyButtonIsPressed__P2182_args:
    .section code
controller_pauseUntilAnyButtonIsPressed__P2182:
controller_pauseUntilAnyButtonIsPressed__P2182_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_pauseUntilAnyButtonIsPressed__P2182_locals:
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #1
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    @stackempty locals
.ret.2182:
    @stackempty locals
    movs r0, #0
.final_0_192:
controller_pauseUntilAnyButtonIsPressed__P2182_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(128,5): game.setWaitAnyButton
    ;
    .object game_setWaitAnyButton__P2975 "game/game.ts(128,5): game.setWaitAnyButton"
game_setWaitAnyButton__P2975_pre:
    .section code
    .balign 4
    .section code
game_setWaitAnyButton__P2975:
game_setWaitAnyButton__P2975_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_setWaitAnyButton__P2975_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    lsls r1, r1, #8
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.2975:
    @stackempty locals
    movs r0, #0
.final_0_193:
game_setWaitAnyButton__P2975_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(45,9): Math.FastRandom.constructor
    ;
    .object Math_FastRandom_constructor__P3036 "game/mathUtil.ts(45,9): Math.FastRandom.constructor"
Math_FastRandom_constructor__P3036_pre:
    .section code
    .balign 4
    .section code
Math_FastRandom_constructor__P3036:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3034_validate_70
    mov lr, r7
Math_FastRandom_constructor__P3036_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_constructor__P3036_locals:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_194      
.jmpz667:
    movs r0, #3
    ldr r1, _ldlit_136 ; 131071      
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    str r0, [sp, args@1]
    @stackempty locals
.else_0_194:
.afterif_1_194:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.3036:
    @stackempty locals
.final_2_194:
Math_FastRandom_constructor__P3036_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(27,5): game.consoleOverlay.listener
    ;
    .object game_consoleOverlay_listener__P5221 "game/console.ts(27,5): game.consoleOverlay.listener"
game_consoleOverlay_listener__P5221_pre:
    .section code
    .balign 4
game_consoleOverlay_listener__P5221_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_consoleOverlay_listener__P5221_args@fn
game_consoleOverlay_listener__P5221_args:
    cmp r4, #2
    bge game_consoleOverlay_listener__P5221_nochk
    push {lr}
    bl _expand_args_2_18
    bl game_consoleOverlay_listener__P5221_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
game_consoleOverlay_listener__P5221:
game_consoleOverlay_listener__P5221_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_consoleOverlay_listener__P5221_locals:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_195      
.jmpz668:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_195      
.lazySkip_2_195:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_195:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_195      
.jmpz669:
    b .ret.5221      
.else_0_195:
.afterif_3_195:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_137 ; _str1      
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_stringSplit__P122
_proccall670:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_138 ; forEach_inline__P10620_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall671:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, _ldlit_139 ; game_consoleOverlay_listener_inline__P10625_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall672:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r7, [r6, #0]
    ldr r1, [r7, #124]
    bl _cmp_gt
    beq .else_4_195      
.jmpz673:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r7, [r6, #0]
    ldr r1, [r7, #124]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arraySplice__P100
_proccall674:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_195:
.afterif_5_195:
.ret.5221:
    @stackempty locals
    movs r0, #0
.final_6_195:
game_consoleOverlay_listener__P5221_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(33,21): forEach.inline
    ;
    .object forEach_inline__P10620 "game/console.ts(33,21): forEach.inline"
forEach_inline__P10620_pre:
    .section code
    .balign 4
forEach_inline__P10620_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P10620_args@fn
forEach_inline__P10620_args:
    cmp r4, #1
    bge forEach_inline__P10620_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P10620_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P10620:
forEach_inline__P10620_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P10620_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.10620:
    @stackempty locals
.final_0_196:
forEach_inline__P10620_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(34,22): game.consoleOverlay.listener.inline
    ;
    .object game_consoleOverlay_listener_inline__P10625 "game/console.ts(34,22): game.consoleOverlay.listener.inline"
game_consoleOverlay_listener_inline__P10625_pre:
    .section code
    .balign 4
game_consoleOverlay_listener_inline__P10625_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_consoleOverlay_listener_inline__P10625_args@fn
game_consoleOverlay_listener_inline__P10625_args:
    cmp r4, #1
    bge game_consoleOverlay_listener_inline__P10625_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_consoleOverlay_listener_inline__P10625_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_consoleOverlay_listener_inline__P10625:
game_consoleOverlay_listener_inline__P10625_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_consoleOverlay_listener_inline__P10625_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.10628:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10628      
.jmpz675:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #132
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSlice__P119
_proccall676:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.10628:
    ldr r0, [sp, locals@0]
    movs r1, #132
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.10628      
.brk.10628:
.ret.10625:
    @stackempty locals
    movs r0, #0
.final_0_197:
    add sp, #4*1 ; pop locals 1
game_consoleOverlay_listener_inline__P10625_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(122,5): console.addListener
    ;
    .object console_addListener__P383 "base/console.ts(122,5): console.addListener"
console_addListener__P383_pre:
    .section code
    .balign 4
    .section code
console_addListener__P383:
console_addListener__P383_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_addListener__P383_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_198      
.jmpz677:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_198      
.lazySkip_2_198:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #65
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_198:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_198      
.jmpz678:
    b .ret.383      
.else_0_198:
.afterif_3_198:
    movs r0, #65
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.383:
    @stackempty locals
    movs r0, #0
.final_4_198:
console_addListener__P383_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(26,9): listeners.inline
    ;
    .object listeners_inline__P4397 "base/console.ts(26,9): listeners.inline"
listeners_inline__P4397_pre:
    .section code
    .balign 4
listeners_inline__P4397_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word listeners_inline__P4397_args@fn
listeners_inline__P4397_args:
    cmp r4, #2
    bge listeners_inline__P4397_nochk
    push {lr}
    bl _expand_args_2_18
    bl listeners_inline__P4397_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
listeners_inline__P4397:
listeners_inline__P4397_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
listeners_inline__P4397_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_71
    mov r7, sp
    str r7, [r6, #4]
    bl control::__log
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4397:
    @stackempty locals
    movs r0, #0
.final_0_199:
listeners_inline__P4397_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_136:
 .word 131071
_ldlit_137:
 .word _str1
_ldlit_138:
 .word forEach_inline__P10620_Lit
_ldlit_139:
 .word game_consoleOverlay_listener_inline__P10625_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/targetoverrides.ts(39,5): _screen_internal.createScreen
    ;
    .object _screen_internal_createScreen__P2014 "screen---st7735/targetoverrides.ts(39,5): _screen_internal.createScreen"
_screen_internal_createScreen__P2014_pre:
    .section code
    .balign 4
    .section code
_screen_internal_createScreen__P2014:
_screen_internal_createScreen__P2014_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
_screen_internal_createScreen__P2014_locals:
    movs r0, #160
    movs r1, #120
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #8
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setupScreenStatusBar
    @stackempty locals
    movs r0, #160
    movs r1, #8
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateScreenStatusBar
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_141 ; _screen_internal_createScreen_inline__P10697_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control___screen_setupUpdate__P1972
_proccall679:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_142 ; _screen_internal_createScreen_inline__P10702_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    pop {r0} ; tmpref @1
    movs r1, #164
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2014:
    @stackempty locals
.final_0_200:
    add sp, #4*2 ; pop locals 2
_screen_internal_createScreen__P2014_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/targetoverrides.ts(46,38): _screen_internal.createScreen.inline
    ;
    .object _screen_internal_createScreen_inline__P10697 "screen---st7735/targetoverrides.ts(46,38): _screen_internal.createScreen.inline"
_screen_internal_createScreen_inline__P10697_pre:
    .section code
    .balign 4
_screen_internal_createScreen_inline__P10697_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _screen_internal_createScreen_inline__P10697_args@fn
_screen_internal_createScreen_inline__P10697_args:
    .section code
_screen_internal_createScreen_inline__P10697:
_screen_internal_createScreen_inline__P10697_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_screen_internal_createScreen_inline__P10697_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateScreen
    add sp, #4*1 ; pop locals 1
.ret.10697:
    @stackempty locals
    movs r0, #0
.final_0_201:
_screen_internal_createScreen_inline__P10697_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/targetoverrides.ts(47,40): _screen_internal.createScreen.inline
    ;
    .object _screen_internal_createScreen_inline__P10702 "screen---st7735/targetoverrides.ts(47,40): _screen_internal.createScreen.inline"
_screen_internal_createScreen_inline__P10702_pre:
    .section code
    .balign 4
_screen_internal_createScreen_inline__P10702_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _screen_internal_createScreen_inline__P10702_args@fn
_screen_internal_createScreen_inline__P10702_args:
    cmp r4, #1
    bge _screen_internal_createScreen_inline__P10702_nochk
    push {lr}
    bl _expand_args_1_12
    bl _screen_internal_createScreen_inline__P10702_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
_screen_internal_createScreen_inline__P10702:
_screen_internal_createScreen_inline__P10702_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_screen_internal_createScreen_inline__P10702_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_7
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::fill
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #120]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl helpers_imagePrint__P1968
_proccall680:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateScreenStatusBar
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::updateStats
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.10702:
    @stackempty locals
    movs r0, #0
.final_0_202:
_screen_internal_createScreen_inline__P10702_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/frame.ts(11,5): control.__screen.setupUpdate
    ;
    .object control___screen_setupUpdate__P1972 "screen---st7735/frame.ts(11,5): control.__screen.setupUpdate"
control___screen_setupUpdate__P1972_pre:
    .section code
    .balign 4
    .section code
control___screen_setupUpdate__P1972:
control___screen_setupUpdate__P1972_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control___screen_setupUpdate__P1972_locals:
    movs r0, #66
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #33
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.1972:
    @stackempty locals
    movs r0, #0
.final_0_203:
control___screen_setupUpdate__P1972_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(383,5): scene.systemMenu.register
    ;
    .object scene_systemMenu_register__P3081 "game/systemmenu.ts(383,5): scene.systemMenu.register"
scene_systemMenu_register__P3081_pre:
    .section code
    .balign 4
scene_systemMenu_register__P3081_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_register__P3081_args@fn
scene_systemMenu_register__P3081_args:
    .section code
scene_systemMenu_register__P3081:
scene_systemMenu_register__P3081_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_register__P3081_locals:
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_204      
.jmpz682:
    b .ret.3081      
.else_0_204:
.afterif_1_204:
    ldr r0, _ldlit_143 ; scene_systemMenu_showSystemMenu__P3082_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    movs r0, #208
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall683:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3081:
    @stackempty locals
    movs r0, #0
.final_2_204:
scene_systemMenu_register__P3081_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(389,5): scene.systemMenu.showSystemMenu
    ;
    .object scene_systemMenu_showSystemMenu__P3082 "game/systemmenu.ts(389,5): scene.systemMenu.showSystemMenu"
scene_systemMenu_showSystemMenu__P3082_pre:
    .section code
    .balign 4
scene_systemMenu_showSystemMenu__P3082_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_showSystemMenu__P3082_args@fn
scene_systemMenu_showSystemMenu__P3082_args:
    .section code
scene_systemMenu_showSystemMenu__P3082:
scene_systemMenu_showSystemMenu__P3082_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_showSystemMenu__P3082_locals:
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_205      
.jmpz684:
    b .ret.3082      
.else_0_205:
.afterif_1_205:
    bl game_pushScene__P2978
_proccall685:
    @stackempty locals
    ldr r0, _ldlit_144 ; scene_systemMenu_PauseMenu__C3070_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_145 ; scene_systemMenu_buildOptionList__P3078_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_constructor__P3071
_proccall686:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #240
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_show__P3072
_proccall687:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3082:
    @stackempty locals
    movs r0, #0
.final_2_205:
scene_systemMenu_showSystemMenu__P3082_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(124,9): scene.systemMenu.PauseMenu.show
    ;
    .object scene_systemMenu_PauseMenu_show__P3072 "game/systemmenu.ts(124,9): scene.systemMenu.PauseMenu.show"
scene_systemMenu_PauseMenu_show__P3072_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show__P3072_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_show__P3072_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_show__P3072_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_show__P3072:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3070_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_show__P3072_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_PauseMenu_show__P3072_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #148
    bl _ifacecall1__20
_proccall688:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10758:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz689
    b .brk.10758      
.object PUSH
.balign 4
_ldlit_141:
 .word _screen_internal_createScreen_inline__P10697_Lit
_ldlit_142:
 .word _screen_internal_createScreen_inline__P10702_Lit
_ldlit_143:
 .word scene_systemMenu_showSystemMenu__P3082_Lit
_ldlit_144:
 .word scene_systemMenu_PauseMenu__C3070_VT
_ldlit_145:
 .word scene_systemMenu_buildOptionList__P3078_Lit
.object POP
.jmpz689:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_show__P3064
_proccall690:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_MenuOption_setTheme__P3067
_proccall691:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #231
    bl _ifacecall1_get_8
_proccall692:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall693:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #87
    bl _ifacecall1_get_8
_proccall694:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #86
    bl _ifacecall1_get_8
_proccall695:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #89
    bl _ifacecall1_get_8
_proccall696:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall697:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #87
    bl _ifacecall1_get_8
_proccall698:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #86
    bl _ifacecall1_get_8
_proccall699:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl scene_systemMenu_MenuOption_position__P3065
_proccall700:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.10758:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10758      
.brk.10758:
    movs r0, #10
    push {r0} ; proc-arg
    bl controller__setUserEventsEnabled__P2183
_proccall701:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_147 ; scene_systemMenu_PauseMenu_show_inline__P10819_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall702:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_148 ; scene_systemMenu_PauseMenu_show_inline__P10839_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall703:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_149 ; scene_systemMenu_PauseMenu_show_inline__P10868_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall704:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_150 ; scene_systemMenu_PauseMenu_show_inline__P10873_Lit      
    push {r0} ; proc-arg
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #208
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall705:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_151 ; scene_systemMenu_PauseMenu_show_inline__P10878_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall706:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_152 ; scene_systemMenu_PauseMenu_show_inline__P10890_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall707:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_153 ; scene_systemMenu_PauseMenu_show_inline__P10899_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall708:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_154 ; scene_systemMenu_PauseMenu_show_inline__P10915_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    movs r0, #200
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl controller_Button_onEvent__P2173
_proccall709:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_155 ; scene_systemMenu_PauseMenu_show_inline__P10927_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl game_onShade__P2992
_proccall710:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_setSelection__P3074_nochk
_proccall711:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3072:
    @stackempty locals
    movs r0, #0
.final_0_206:
    add sp, #4*2 ; pop locals 2
scene_systemMenu_PauseMenu_show__P3072_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(141,51): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10819 "game/systemmenu.ts(141,51): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10819_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10819_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10819_args@fn
scene_systemMenu_PauseMenu_show_inline__P10819_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10819:
scene_systemMenu_PauseMenu_show_inline__P10819_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10819_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_207      
.jmpz712:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_207      
.lazySkip_2_207:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_207:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_207      
.jmpz713:
    b .ret.10819      
.else_0_207:
.afterif_3_207:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3068
_proccall714:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10819:
    @stackempty locals
    movs r0, #0
.final_4_207:
scene_systemMenu_PauseMenu_show_inline__P10819_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(146,49): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10839 "game/systemmenu.ts(146,49): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10839_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10839_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10839_args@fn
scene_systemMenu_PauseMenu_show_inline__P10839_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10839:
scene_systemMenu_PauseMenu_show_inline__P10839_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10839_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_208      
.jmpz715:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_208      
.lazySkip_2_208:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_208:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_208      
.jmpz716:
    b .ret.10839      
.else_0_208:
.afterif_3_208:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3068
_proccall717:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_scene_systemMenu_MenuOption__C3062_validate_73
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.10839:
    @stackempty locals
    movs r0, #0
.final_4_208:
scene_systemMenu_PauseMenu_show_inline__P10839_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(152,51): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10868 "game/systemmenu.ts(152,51): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10868_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10868_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10868_args@fn
scene_systemMenu_PauseMenu_show_inline__P10868_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10868:
scene_systemMenu_PauseMenu_show_inline__P10868_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10868_locals:
    bl scene_systemMenu_closeMenu__P3077
_proccall718:
    @stackempty locals
.ret.10868:
    @stackempty locals
    movs r0, #0
.final_0_209:
scene_systemMenu_PauseMenu_show_inline__P10868_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_147:
 .word scene_systemMenu_PauseMenu_show_inline__P10819_Lit
_ldlit_148:
 .word scene_systemMenu_PauseMenu_show_inline__P10839_Lit
_ldlit_149:
 .word scene_systemMenu_PauseMenu_show_inline__P10868_Lit
_ldlit_150:
 .word scene_systemMenu_PauseMenu_show_inline__P10873_Lit
_ldlit_151:
 .word scene_systemMenu_PauseMenu_show_inline__P10878_Lit
_ldlit_152:
 .word scene_systemMenu_PauseMenu_show_inline__P10890_Lit
_ldlit_153:
 .word scene_systemMenu_PauseMenu_show_inline__P10899_Lit
_ldlit_154:
 .word scene_systemMenu_PauseMenu_show_inline__P10915_Lit
_ldlit_155:
 .word scene_systemMenu_PauseMenu_show_inline__P10927_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(156,54): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10873 "game/systemmenu.ts(156,54): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10873_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10873_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10873_args@fn
scene_systemMenu_PauseMenu_show_inline__P10873_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10873:
scene_systemMenu_PauseMenu_show_inline__P10873_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10873_locals:
    bl scene_systemMenu_closeMenu__P3077
_proccall719:
    @stackempty locals
.ret.10873:
    @stackempty locals
    movs r0, #0
.final_0_210:
scene_systemMenu_PauseMenu_show_inline__P10873_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(160,52): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10878 "game/systemmenu.ts(160,52): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10878_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10878_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10878_args@fn
scene_systemMenu_PauseMenu_show_inline__P10878_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10878:
scene_systemMenu_PauseMenu_show_inline__P10878_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10878_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall720:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall721:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3074_nochk
_proccall722:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10878:
    @stackempty locals
    movs r0, #0
.final_0_211:
scene_systemMenu_PauseMenu_show_inline__P10878_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(164,54): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10890 "game/systemmenu.ts(164,54): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10890_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10890_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10890_args@fn
scene_systemMenu_PauseMenu_show_inline__P10890_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10890:
scene_systemMenu_PauseMenu_show_inline__P10890_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10890_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    movs r1, #3
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall723:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3074_nochk
_proccall724:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10890:
    @stackempty locals
    movs r0, #0
.final_0_212:
scene_systemMenu_PauseMenu_show_inline__P10890_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(168,54): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10899 "game/systemmenu.ts(168,54): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10899_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10899_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10899_args@fn
scene_systemMenu_PauseMenu_show_inline__P10899_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10899:
scene_systemMenu_PauseMenu_show_inline__P10899_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10899_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall725:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall726:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3074_nochk
_proccall727:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10899:
    @stackempty locals
    movs r0, #0
.final_0_213:
scene_systemMenu_PauseMenu_show_inline__P10899_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(172,55): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10915 "game/systemmenu.ts(172,55): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10915_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10915_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10915_args@fn
scene_systemMenu_PauseMenu_show_inline__P10915_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10915:
scene_systemMenu_PauseMenu_show_inline__P10915_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10915_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #12]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall728:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_PauseMenu_setSelection__P3074_nochk
_proccall729:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.10915:
    @stackempty locals
    movs r0, #0
.final_0_214:
scene_systemMenu_PauseMenu_show_inline__P10915_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(176,26): scene.systemMenu.PauseMenu.show.inline
    ;
    .object scene_systemMenu_PauseMenu_show_inline__P10927 "game/systemmenu.ts(176,26): scene.systemMenu.PauseMenu.show.inline"
scene_systemMenu_PauseMenu_show_inline__P10927_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_show_inline__P10927_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_show_inline__P10927_args@fn
scene_systemMenu_PauseMenu_show_inline__P10927_args:
    .section code
scene_systemMenu_PauseMenu_show_inline__P10927:
scene_systemMenu_PauseMenu_show_inline__P10927_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_show_inline__P10927_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_onUpdate__P3073_nochk
_proccall730:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_drawText__P3075_nochk
_proccall731:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.10927:
    @stackempty locals
    movs r0, #0
.final_0_215:
scene_systemMenu_PauseMenu_show_inline__P10927_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(225,9): scene.systemMenu.PauseMenu.drawText
    ;
    .object scene_systemMenu_PauseMenu_drawText__P3075 "game/systemmenu.ts(225,9): scene.systemMenu.PauseMenu.drawText"
scene_systemMenu_PauseMenu_drawText__P3075_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_drawText__P3075_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_drawText__P3075_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_drawText__P3075_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_drawText__P3075:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3070_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_drawText__P3075_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_drawText__P3075_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_216      
.jmpz732:
    b .ret.3075      
.else_0_216:
.afterif_1_216:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #89
    bl _ifacecall1_get_8
_proccall733:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #31
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    bl helpers_imageFillRect__P1936
_proccall734:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #161
    bl _ifacecall1_get_8
_proccall735:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #160
    bl _ifacecall1_get_8
_proccall736:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl helpers_imagePrintCenter__P1967
_proccall737:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #170
    bl _ifacecall1_get_8
_proccall738:
    add sp, #4*1 ; pop locals 1
    movs r1, #7
    bl _numops_subs
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #170
    bl _ifacecall1_get_8
_proccall739:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #13
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    movs r0, #31
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    movs r0, #1
    push {r0} ; proc-arg
    push {r4}
    bl helpers_imageFillRect__P1936
_proccall740:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #231
    bl _ifacecall1_get_8
_proccall741:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #170
    bl _ifacecall1_get_8
_proccall742:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #231
    bl _ifacecall1_get_8
_proccall743:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #169
    bl _ifacecall1_get_8
_proccall744:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall745:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageFillRect__P1936
_proccall746:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r1, #151
    bl _ifacecall1__20
_proccall747:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #170
    bl _ifacecall1_get_8
_proccall748:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #169
    bl _ifacecall1_get_8
_proccall749:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    movs r0, #31
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imagePrintCenter__P1967
_proccall750:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.3075:
    @stackempty locals
    movs r0, #0
.final_2_216:
scene_systemMenu_PauseMenu_drawText__P3075_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(207,5): helpers.imagePrintCenter
    ;
    .object helpers_imagePrintCenter__P1967 "screen---st7735/text.ts(207,5): helpers.imagePrintCenter"
helpers_imagePrintCenter__P1967_pre:
    .section code
    .balign 4
    .section code
helpers_imagePrintCenter__P1967:
helpers_imagePrintCenter__P1967_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_imagePrintCenter__P1967_locals:
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_217      
.jmpz751:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl image_getFontForText__P1955
_proccall752:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@4]
    @stackempty locals
.else_0_217:
.afterif_1_217:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall753:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_imagePrint__P1968
_proccall754:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.ret.1967:
    @stackempty locals
    movs r0, #0
.final_2_217:
    add sp, #4*2 ; pop locals 2
helpers_imagePrintCenter__P1967_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(184,9): scene.systemMenu.PauseMenu.onUpdate
    ;
    .object scene_systemMenu_PauseMenu_onUpdate__P3073 "game/systemmenu.ts(184,9): scene.systemMenu.PauseMenu.onUpdate"
scene_systemMenu_PauseMenu_onUpdate__P3073_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_onUpdate__P3073_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_onUpdate__P3073_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_onUpdate__P3073_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_onUpdate__P3073:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3070_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_onUpdate__P3073_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_PauseMenu_onUpdate__P3073_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #245
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.11041:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.11041      
.jmpz755:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall756:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, _ldlit_157 ; _dbl50      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::sin
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_systemMenu_MenuOption_setOffset__P3066
_proccall757:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.11041:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.11041      
.brk.11041:
    bl game_currentScene__P2974
_proccall758:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #4]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .else_0_218      
.jmpz759:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_1_218      
.else_0_218:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_2_218      
.jmpz760:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_3_218      
.else_2_218:
    b .ret.3073      
.afterif_3_218:
.afterif_1_218:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Math_abs__P128
_proccall762:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _cmp_lt
    beq .else_4_218      
.jmpz761:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_218:
.afterif_5_218:
    bl game_currentScene__P2974
_proccall763:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl scene_Camera_offsetY__P2764
_proccall764:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3073:
    @stackempty locals
    movs r0, #0
.final_6_218:
    add sp, #4*3 ; pop locals 3
scene_systemMenu_PauseMenu_onUpdate__P3073_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(62,9): scene.systemMenu.MenuOption.setOffset
    ;
    .object scene_systemMenu_MenuOption_setOffset__P3066 "game/systemmenu.ts(62,9): scene.systemMenu.MenuOption.setOffset"
scene_systemMenu_MenuOption_setOffset__P3066_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_setOffset__P3066_args:
    cmp r4, #2
    bge scene_systemMenu_MenuOption_setOffset__P3066_nochk
    push {lr}
    bl _expand_args_2_18
    bl scene_systemMenu_MenuOption_setOffset__P3066_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_MenuOption_setOffset__P3066:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3062_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_setOffset__P3066_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_setOffset__P3066_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2379
_proccall765:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_y__P2331
_proccall766:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_y__P2332
_proccall767:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3066:
    @stackempty locals
    movs r0, #0
.final_0_219:
scene_systemMenu_MenuOption_setOffset__P3066_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(127,5): Sprite.y
    ;
    .object Sprite_y__P2332 "game/sprite.ts(127,5): Sprite.y"
Sprite_y__P2332_pre:
    .section code
    .balign 4
Sprite_y__P2332_args:
    cmp r4, #2
    bge Sprite_y__P2332_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_y__P2332_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_y__P2332:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_y__P2332_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_y__P2332_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2373_nochk
_proccall768:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2379_nochk
_proccall769:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2332:
    @stackempty locals
    movs r0, #0
.final_0_220:
Sprite_y__P2332_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(381,5): Sprite.height
    ;
    .object Sprite_height__P2373 "game/sprite.ts(381,5): Sprite.height"
Sprite_height__P2373_pre:
    .section code
    .balign 4
Sprite_height__P2373_args:
    cmp r4, #1
    bge Sprite_height__P2373_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_height__P2373_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_height__P2373:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_height__P2373_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_height__P2373_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2373:
    @stackempty locals
.final_0_221:
Sprite_height__P2373_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(422,5): Sprite.top
    ;
    .object Sprite_top__P2379 "game/sprite.ts(422,5): Sprite.top"
Sprite_top__P2379_pre:
    .section code
    .balign 4
Sprite_top__P2379_args:
    cmp r4, #2
    bge Sprite_top__P2379_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_top__P2379_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_top__P2379:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_top__P2379_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite_top__P2379_locals:
    bl game_currentScene__P2974
_proccall770:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #28]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall771:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @4
    ldr r0, [sp, #4*1] ; tmpref @3
    pop {r1} ; tmpref @4
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    movs r1, #44
    bl _classCall_PhysicsEngine__C2486_25
_proccall772:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.2379:
    @stackempty locals
    movs r0, #0
.final_0_222:
    add sp, #4*1 ; pop locals 1
Sprite_top__P2379_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(14,5): PhysicsEngine.moveSprite
    ;
    .object PhysicsEngine_moveSprite__P2490 "game/physics.ts(14,5): PhysicsEngine.moveSprite"
PhysicsEngine_moveSprite__P2490_pre:
    .section code
    .balign 4
PhysicsEngine_moveSprite__P2490_args:
    cmp r4, #4
    bge PhysicsEngine_moveSprite__P2490_nochk
    push {lr}
    bl _expand_args_4_74
    bl PhysicsEngine_moveSprite__P2490_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
PhysicsEngine_moveSprite__P2490:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2486_validate_29
    mov lr, r7
PhysicsEngine_moveSprite__P2490_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_moveSprite__P2490_locals:
.ret.2490:
    @stackempty locals
    movs r0, #0
.final_0_223:
PhysicsEngine_moveSprite__P2490_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(417,5): Sprite.top
    ;
    .object Sprite_top__P2378 "game/sprite.ts(417,5): Sprite.top"
Sprite_top__P2378_pre:
    .section code
    .balign 4
Sprite_top__P2378_args:
    cmp r4, #1
    bge Sprite_top__P2378_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_top__P2378_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_top__P2378:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_top__P2378_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_top__P2378_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2378:
    @stackempty locals
.final_0_224:
Sprite_top__P2378_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_157:
 .word _dbl50
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(463,5): game.onShade
    ;
    .object game_onShade__P2992 "game/game.ts(463,5): game.onShade"
game_onShade__P2992_pre:
    .section code
    .balign 4
    .section code
game_onShade__P2992:
game_onShade__P2992_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_onShade__P2992_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl game_init__P4895
_proccall773:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_225      
.jmpz774:
    b .ret.2992      
.else_0_225:
.afterif_1_225:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #161
    push {r0} ; proc-arg
    bl scene_createRenderable__P2780
_proccall775:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2992:
    @stackempty locals
    movs r0, #0
.final_2_225:
game_onShade__P2992_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(25,5): scene.createRenderable
    ;
    .object scene_createRenderable__P2780 "game/renderable.ts(25,5): scene.createRenderable"
scene_createRenderable__P2780_pre:
    .section code
    .balign 4
    .section code
scene_createRenderable__P2780:
scene_createRenderable__P2780_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_createRenderable__P2780_locals:
    ldr r0, _ldlit_159 ; scene_Renderable__C2775_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_226      
.jmpz776:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_226      
.lazySkip_1_226:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_160 ; renderable_inline__P11181_Lit      
.lazy_0_226:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*4] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_Renderable_constructor__P2776
_proccall777:
    add sp, #4*5 ; pop locals 5
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2780:
    @stackempty locals
.final_2_226:
    add sp, #4*1 ; pop locals 1
scene_createRenderable__P2780_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(32,33): renderable.inline
    ;
    .object renderable_inline__P11181 "game/renderable.ts(32,33): renderable.inline"
renderable_inline__P11181_pre:
    .section code
    .balign 4
renderable_inline__P11181_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word renderable_inline__P11181_args@fn
renderable_inline__P11181_args:
    .section code
renderable_inline__P11181:
renderable_inline__P11181_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
renderable_inline__P11181_locals:
    movs r0, #66
.ret.11181:
    @stackempty locals
.final_0_227:
renderable_inline__P11181_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(3,9): scene.Renderable.constructor
    ;
    .object scene_Renderable_constructor__P2776 "game/renderable.ts(3,9): scene.Renderable.constructor"
scene_Renderable_constructor__P2776_pre:
    .section code
    .balign 4
    .section code
scene_Renderable_constructor__P2776:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Renderable__C2775_validate_75
    mov lr, r7
scene_Renderable_constructor__P2776_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Renderable_constructor__P2776_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #16]
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_constructor__P2073
_proccall778:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2776:
    @stackempty locals
.final_0_228:
scene_Renderable_constructor__P2776_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(209,9): scene.systemMenu.PauseMenu.setSelection
    ;
    .object scene_systemMenu_PauseMenu_setSelection__P3074 "game/systemmenu.ts(209,9): scene.systemMenu.PauseMenu.setSelection"
scene_systemMenu_PauseMenu_setSelection__P3074_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_setSelection__P3074_args:
    cmp r4, #2
    bge scene_systemMenu_PauseMenu_setSelection__P3074_nochk
    push {lr}
    bl _expand_args_2_18
    bl scene_systemMenu_PauseMenu_setSelection__P3074_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_setSelection__P3074:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3070_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_setSelection__P3074_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_setSelection__P3074_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_229      
.jmpz779:
    b .ret.3074      
.else_0_229:
.afterif_1_229:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_229      
.jmpz780:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #5
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3068
_proccall781:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_229:
.afterif_3_229:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_229      
.jmpz782:
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_63
_proccall784:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_5_229      
.jmpz783:
    movs r0, #3
    b .condexprfin_6_229      
.condexprz_5_229:
    movs r0, #1
.condexprfin_6_229:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl scene_systemMenu_MenuOption_setState__P3068
_proccall785:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_229:
.afterif_7_229:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_updateScrollTarget__P5143_nochk
_proccall786:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3074:
    @stackempty locals
    movs r0, #0
.final_8_229:
scene_systemMenu_PauseMenu_setSelection__P3074_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(251,9): scene.systemMenu.PauseMenu.updateScrollTarget
    ;
    .object scene_systemMenu_PauseMenu_updateScrollTarget__P5143 "game/systemmenu.ts(251,9): scene.systemMenu.PauseMenu.updateScrollTarget"
scene_systemMenu_PauseMenu_updateScrollTarget__P5143_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_updateScrollTarget__P5143_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_updateScrollTarget__P5143_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_updateScrollTarget__P5143_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_updateScrollTarget__P5143:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3070_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_updateScrollTarget__P5143_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_PauseMenu_updateScrollTarget__P5143_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #88
    bl _ifacecall1_get_8
_proccall787:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_230      
.jmpz788:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_230      
.lazySkip_2_230:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_1_230:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_230      
.jmpz789:
    b .ret.5143      
.else_0_230:
.afterif_3_230:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_4_230      
.jmpz790:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_5_230      
.else_4_230:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_5_230:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #86
    bl _ifacecall1_get_8
_proccall791:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    movs r1, #87
    bl _ifacecall1_get_8
_proccall792:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5143:
    @stackempty locals
    movs r0, #0
.final_6_230:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_PauseMenu_updateScrollTarget__P5143_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(321,5): scene.systemMenu.closeMenu
    ;
    .object scene_systemMenu_closeMenu__P3077 "game/systemmenu.ts(321,5): scene.systemMenu.closeMenu"
scene_systemMenu_closeMenu__P3077_pre:
    .section code
    .balign 4
scene_systemMenu_closeMenu__P3077_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_closeMenu__P3077_args@fn
scene_systemMenu_closeMenu__P3077_args:
    .section code
scene_systemMenu_closeMenu__P3077:
scene_systemMenu_closeMenu__P3077_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_closeMenu__P3077_locals:
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz793
    b .else_0_231      
.object PUSH
.balign 4
_ldlit_159:
 .word scene_Renderable__C2775_VT
_ldlit_160:
 .word renderable_inline__P11181_Lit
.object POP
.jmpz793:
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl scene_systemMenu_PauseMenu_dispose__P3076
_proccall794:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    movs r1, #240
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    bl controller__setUserEventsEnabled__P2183
_proccall795:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl game_popScene__P2979
_proccall796:
    @stackempty locals
.else_0_231:
.afterif_1_231:
.ret.3077:
    @stackempty locals
    movs r0, #0
.final_2_231:
scene_systemMenu_closeMenu__P3077_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(162,5): game.popScene
    ;
    .object game_popScene__P2979 "game/game.ts(162,5): game.popScene"
game_popScene__P2979_pre:
    .section code
    .balign 4
    .section code
game_popScene__P2979:
game_popScene__P2979_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_popScene__P2979_locals:
    bl game_currentScene__P2974
_proccall797:
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #67
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_232      
.jmpz798:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_232      
.lazySkip_2_232:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #67
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_1_232:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_232      
.jmpz799:
    movs r0, #67
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    movs r1, #156
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl control_popEventContext__P410
_proccall800:
    @stackempty locals
    b .afterif_3_232      
.else_0_232:
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_232      
.jmpz801:
    bl control_popEventContext__P410
_proccall802:
    @stackempty locals
    movs r0, #0
    movs r1, #156
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_4_232:
.afterif_5_232:
.afterif_3_232:
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_232      
.jmpz803:
    bl particles_enableAll__P3158
_proccall804:
    @stackempty locals
.else_6_232:
.afterif_7_232:
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_232      
.jmpz805:
    movs r0, #1
    ldr r1, _ldlit_162 ; game_popScene_inline__P11291_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall806:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_8_232:
.afterif_9_232:
.ret.2979:
    @stackempty locals
    movs r0, #0
.final_10_232:
    add sp, #4*1 ; pop locals 1
game_popScene__P2979_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(178,39): game.popScene.inline
    ;
    .object game_popScene_inline__P11291 "game/game.ts(178,39): game.popScene.inline"
game_popScene_inline__P11291_pre:
    .section code
    .balign 4
game_popScene_inline__P11291_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_popScene_inline__P11291_args@fn
game_popScene_inline__P11291_args:
    cmp r4, #1
    bge game_popScene_inline__P11291_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_popScene_inline__P11291_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_popScene_inline__P11291:
game_popScene_inline__P11291_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_popScene_inline__P11291_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
.ret.11291:
    @stackempty locals
    movs r0, #0
.final_0_233:
game_popScene_inline__P11291_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(414,5): particles.enableAll
    ;
    .object particles_enableAll__P3158 "game/particles.ts(414,5): particles.enableAll"
particles_enableAll__P3158_pre:
    .section code
    .balign 4
    .section code
particles_enableAll__P3158:
particles_enableAll__P3158_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_enableAll__P3158_locals:
    bl particles_particleSources__P5237
_proccall808:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_234      
.jmpz809:
    ldr r0, _ldlit_163 ; particles_enableAll_inline__P11301_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall810:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_pruneParticles__P5233
_proccall811:
    @stackempty locals
.else_0_234:
.afterif_1_234:
.ret.3158:
    @stackempty locals
    movs r0, #0
.final_2_234:
    add sp, #4*1 ; pop locals 1
particles_enableAll__P3158_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(417,29): particles.enableAll.inline
    ;
    .object particles_enableAll_inline__P11301 "game/particles.ts(417,29): particles.enableAll.inline"
particles_enableAll_inline__P11301_pre:
    .section code
    .balign 4
particles_enableAll_inline__P11301_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_enableAll_inline__P11301_args@fn
particles_enableAll_inline__P11301_args:
    cmp r4, #1
    bge particles_enableAll_inline__P11301_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_enableAll_inline__P11301_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_enableAll_inline__P11301:
particles_enableAll_inline__P11301_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_enableAll_inline__P11301_locals:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3139
_proccall812:
    add sp, #4*2 ; pop locals 2
    movs r0, #66
.ret.11301:
    @stackempty locals
.final_0_235:
particles_enableAll_inline__P11301_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(328,5): particles.pruneParticles
    ;
    .object particles_pruneParticles__P5233 "game/particles.ts(328,5): particles.pruneParticles"
particles_pruneParticles__P5233_pre:
    .section code
    .balign 4
particles_pruneParticles__P5233_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_pruneParticles__P5233_args@fn
particles_pruneParticles__P5233_args:
    .section code
particles_pruneParticles__P5233:
particles_pruneParticles__P5233_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_pruneParticles__P5233_locals:
    bl particles_particleSources__P5237
_proccall813:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_236      
.jmpz814:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arraySlice__P115
_proccall815:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_164 ; particles_pruneParticles_inline__P11315_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall816:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_236:
.afterif_1_236:
.ret.5233:
    @stackempty locals
    movs r0, #0
.final_2_236:
    add sp, #4*1 ; pop locals 1
particles_pruneParticles__P5233_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(330,63): particles.pruneParticles.inline
    ;
    .object particles_pruneParticles_inline__P11315 "game/particles.ts(330,63): particles.pruneParticles.inline"
particles_pruneParticles_inline__P11315_pre:
    .section code
    .balign 4
particles_pruneParticles_inline__P11315_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_pruneParticles_inline__P11315_args@fn
particles_pruneParticles_inline__P11315_args:
    cmp r4, #1
    bge particles_pruneParticles_inline__P11315_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_pruneParticles_inline__P11315_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_pruneParticles_inline__P11315:
particles_pruneParticles_inline__P11315_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_pruneParticles_inline__P11315_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource__prune__P3134
_proccall817:
    add sp, #4*1 ; pop locals 1
.ret.11315:
    @stackempty locals
    movs r0, #0
.final_0_237:
particles_pruneParticles_inline__P11315_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(167,9): particles.ParticleSource._prune
    ;
    .object particles_ParticleSource__prune__P3134 "game/particles.ts(167,9): particles.ParticleSource._prune"
particles_ParticleSource__prune__P3134_pre:
    .section code
    .balign 4
particles_ParticleSource__prune__P3134_args:
    cmp r4, #1
    bge particles_ParticleSource__prune__P3134_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_ParticleSource__prune__P3134_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource__prune__P3134:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource__prune__P3134_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource__prune__P3134_locals:
.cont.11320:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_238      
.jmpz818:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_238      
.lazySkip_1_238:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_0_238:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.11320      
.jmpz819:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .cont.11320      
.brk.11320:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #5
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_238      
.jmpz820:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_238      
.lazySkip_4_238:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_3_238:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_238      
.jmpz821:
    bl game_currentScene__P2974
_proccall822:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_238      
.jmpz823:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.else_5_238:
.afterif_6_238:
    bl particles_particleSources__P5237
_proccall824:
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_238      
.jmpz825:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_238      
.lazySkip_9_238:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_8_238:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_238      
.jmpz826:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.else_7_238:
.afterif_10_238:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_238:
.afterif_11_238:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    str r0, [sp, locals@2]
    @stackempty locals
.cont.11372:
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .jmpz827
    b .lazySkip_13_238      
.object PUSH
.balign 4
_ldlit_162:
 .word game_popScene_inline__P11291_Lit
_ldlit_163:
 .word particles_enableAll_inline__P11301_Lit
_ldlit_164:
 .word particles_pruneParticles_inline__P11315_Lit
.object POP
.jmpz827:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_12_238      
.lazySkip_13_238:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #24]
.lazy_12_238:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.11372      
.jmpz828:
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #24]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_le
    beq .else_14_238      
.jmpz829:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #24]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_15_238      
.else_14_238:
    ldr r0, [sp, locals@2]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #24]
    str r0, [sp, locals@2]
    @stackempty locals
.afterif_15_238:
    b .cont.11372      
.brk.11372:
.ret.3134:
    @stackempty locals
    movs r0, #0
.final_16_238:
    add sp, #4*3 ; pop locals 3
particles_ParticleSource__prune__P3134_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(304,5): helpers.arraySlice
    ;
    .object helpers_arraySlice__P115 "base/pxt-helpers.ts(304,5): helpers.arraySlice"
helpers_arraySlice__P115_pre:
    .section code
    .balign 4
    .section code
helpers_arraySlice__P115:
helpers_arraySlice__P115_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySlice__P115_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_239      
.jmpz830:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
    b .afterif_1_239      
.else_0_239:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_239      
.jmpz831:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P130
_proccall832:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_2_239:
.afterif_3_239:
.afterif_1_239:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_4_239      
.jmpz833:
    ldr r0, [sp, locals@0]
    b .ret.115      
.else_4_239:
.afterif_5_239:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_239      
.jmpz834:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_7_239      
.else_6_239:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_8_239      
.jmpz835:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_8_239:
.afterif_9_239:
.afterif_7_239:
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_10_239      
.jmpz836:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
.else_10_239:
.afterif_11_239:
    ldr r0, [sp, args@1]
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.11423:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    beq .brk.11423      
.jmpz837:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.11423:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.11423      
.brk.11423:
    ldr r0, [sp, locals@0]
.ret.115:
    @stackempty locals
.final_12_239:
    add sp, #4*3 ; pop locals 3
helpers_arraySlice__P115_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(224,9): particles.ParticleSource.enabled
    ;
    .object particles_ParticleSource_enabled__P3139 "game/particles.ts(224,9): particles.ParticleSource.enabled"
particles_ParticleSource_enabled__P3139_pre:
    .section code
    .balign 4
particles_ParticleSource_enabled__P3139_args:
    cmp r4, #2
    bge particles_ParticleSource_enabled__P3139_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ParticleSource_enabled__P3139_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_enabled__P3139:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_enabled__P3139_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_enabled__P3139_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3138_nochk
_proccall839:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_240      
.jmpz838:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_240      
.jmpz840:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_orrs
    b .condexprfin_2_240      
.condexprz_1_240:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_eors
.condexprfin_2_240:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #36]
    @stackempty locals
.else_0_240:
.afterif_3_240:
.ret.3139:
    @stackempty locals
    movs r0, #0
.final_4_240:
particles_ParticleSource_enabled__P3139_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(217,9): particles.ParticleSource.enabled
    ;
    .object particles_ParticleSource_enabled__P3138 "game/particles.ts(217,9): particles.ParticleSource.enabled"
particles_ParticleSource_enabled__P3138_pre:
    .section code
    .balign 4
particles_ParticleSource_enabled__P3138_args:
    cmp r4, #1
    bge particles_ParticleSource_enabled__P3138_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_ParticleSource_enabled__P3138_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource_enabled__P3138:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_enabled__P3138_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_enabled__P3138_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3138:
    @stackempty locals
.final_0_241:
particles_ParticleSource_enabled__P3138_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(422,5): particles.particleSources
    ;
    .object particles_particleSources__P5237 "game/particles.ts(422,5): particles.particleSources"
particles_particleSources__P5237_pre:
    .section code
    .balign 4
    .section code
particles_particleSources__P5237:
particles_particleSources__P5237_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_particleSources__P5237_locals:
    bl game_currentScene__P2974
_proccall841:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #72]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5237:
    @stackempty locals
.final_0_242:
    add sp, #4*1 ; pop locals 1
particles_particleSources__P5237_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(237,5): control.popEventContext
    ;
    .object control_popEventContext__P410 "base/eventcontext.ts(237,5): control.popEventContext"
control_popEventContext__P410_pre:
    .section code
    .balign 4
    .section code
control_popEventContext__P410:
control_popEventContext__P410_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_popEventContext__P410_locals:
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_243      
.jmpz842:
    b .ret.410      
.else_0_243:
.afterif_1_243:
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_243      
.jmpz843:
    b .ret.410      
.else_2_243:
.afterif_3_243:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventContext_unregister__P402
_proccall844:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_243      
.jmpz845:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl control_EventContext_register__P401
_proccall846:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_5_243      
.else_4_243:
    movs r0, #0
    movs r1, #152
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.afterif_5_243:
.ret.410:
    @stackempty locals
    movs r0, #0
.final_6_243:
    add sp, #4*2 ; pop locals 2
control_popEventContext__P410_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/eventcontext.ts(136,9): control.EventContext.register
    ;
    .object control_EventContext_register__P401 "base/eventcontext.ts(136,9): control.EventContext.register"
control_EventContext_register__P401_pre:
    .section code
    .balign 4
control_EventContext_register__P401_args:
    cmp r4, #1
    bge control_EventContext_register__P401_nochk
    push {lr}
    bl _expand_args_1_12
    bl control_EventContext_register__P401_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
control_EventContext_register__P401:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_EventContext__C395_validate_23
    mov lr, r7
control_EventContext_register__P401_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_EventContext_register__P401_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.11493:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.11493      
.jmpz847:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl control_EventHandler_register__P4413
_proccall848:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.11493:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.11493      
.brk.11493:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl control_EventContext_registerFrameCallbacks__P4418_nochk
_proccall849:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.401:
    @stackempty locals
    movs r0, #0
.final_0_244:
    add sp, #4*3 ; pop locals 3
control_EventContext_register__P401_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(244,9): scene.systemMenu.PauseMenu.dispose
    ;
    .object scene_systemMenu_PauseMenu_dispose__P3076 "game/systemmenu.ts(244,9): scene.systemMenu.PauseMenu.dispose"
scene_systemMenu_PauseMenu_dispose__P3076_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_dispose__P3076_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_dispose__P3076_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_dispose__P3076_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_dispose__P3076:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3070_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_dispose__P3076_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_dispose__P3076_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_245      
.jmpz850:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_166 ; scene_systemMenu_PauseMenu_dispose_inline__P11503_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall851:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #4]
    @stackempty locals
.else_0_245:
.afterif_1_245:
.ret.3076:
    @stackempty locals
    movs r0, #0
.final_2_245:
scene_systemMenu_PauseMenu_dispose__P3076_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(246,38): scene.systemMenu.PauseMenu.dispose.inline
    ;
    .object scene_systemMenu_PauseMenu_dispose_inline__P11503 "game/systemmenu.ts(246,38): scene.systemMenu.PauseMenu.dispose.inline"
scene_systemMenu_PauseMenu_dispose_inline__P11503_pre:
    .section code
    .balign 4
scene_systemMenu_PauseMenu_dispose_inline__P11503_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_PauseMenu_dispose_inline__P11503_args@fn
scene_systemMenu_PauseMenu_dispose_inline__P11503_args:
    cmp r4, #1
    bge scene_systemMenu_PauseMenu_dispose_inline__P11503_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_PauseMenu_dispose_inline__P11503_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_PauseMenu_dispose_inline__P11503:
scene_systemMenu_PauseMenu_dispose_inline__P11503_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_dispose_inline__P11503_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_dispose__P3069
_proccall852:
    add sp, #4*1 ; pop locals 1
.ret.11503:
    @stackempty locals
    movs r0, #0
.final_0_246:
scene_systemMenu_PauseMenu_dispose_inline__P11503_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(78,9): scene.systemMenu.MenuOption.dispose
    ;
    .object scene_systemMenu_MenuOption_dispose__P3069 "game/systemmenu.ts(78,9): scene.systemMenu.MenuOption.dispose"
scene_systemMenu_MenuOption_dispose__P3069_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_dispose__P3069_args:
    cmp r4, #1
    bge scene_systemMenu_MenuOption_dispose__P3069_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_MenuOption_dispose__P3069_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_MenuOption_dispose__P3069:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3062_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_dispose__P3069_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_dispose__P3069_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_247      
.jmpz853:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_destroy__P2403
_proccall854:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_destroy__P2403
_proccall855:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #8]
    @stackempty locals
.else_0_247:
.afterif_1_247:
.ret.3069:
    @stackempty locals
    movs r0, #0
.final_2_247:
scene_systemMenu_MenuOption_dispose__P3069_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(857,5): Sprite.destroy
    ;
    .object Sprite_destroy__P2403 "game/sprite.ts(857,5): Sprite.destroy"
Sprite_destroy__P2403_pre:
    .section code
    .balign 4
Sprite_destroy__P2403_args:
    cmp r4, #3
    bge Sprite_destroy__P2403_nochk
    push {lr}
    bl _expand_args_3_15
    bl Sprite_destroy__P2403_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite_destroy__P2403:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_destroy__P2403_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_destroy__P2403_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_248      
.jmpz856:
    b .ret.2403      
.else_0_248:
.afterif_1_248:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_248      
.jmpz857:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl effects_ParticleEffect_destroy__P3240
_proccall858:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_3_248      
.else_2_248:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite__destroyCore__P2404_nochk
_proccall859:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_248:
.ret.2403:
    @stackempty locals
    movs r0, #0
.final_4_248:
Sprite_destroy__P2403_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(868,5): Sprite._destroyCore
    ;
    .object Sprite__destroyCore__P2404 "game/sprite.ts(868,5): Sprite._destroyCore"
Sprite__destroyCore__P2404_pre:
    .section code
    .balign 4
Sprite__destroyCore__P2404_args:
    cmp r4, #1
    bge Sprite__destroyCore__P2404_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite__destroyCore__P2404_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite__destroyCore__P2404:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite__destroyCore__P2404_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite__destroyCore__P2404_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #116]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    bl game_currentScene__P2974
_proccall860:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_249      
.jmpz861:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_249      
.lazySkip_2_249:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
.lazy_1_249:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_249      
.jmpz862:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteSet_remove__P2445
_proccall863:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_249:
.afterif_3_249:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #40
    bl _classCall_PhysicsEngine__C2486_25
_proccall864:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #120]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_249      
.jmpz865:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #116
    bl _ifacecall1__20
_proccall866:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_249:
.afterif_5_249:
    movs r0, #1
    ldr r1, _ldlit_167 ; forEach_inline__P11585_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #1
    ldr r1, _ldlit_168 ; Sprite__destroyCore_inline__P11591_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #40]
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall867:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall868:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2404:
    @stackempty locals
    movs r0, #0
.final_6_249:
    add sp, #4*1 ; pop locals 1
Sprite__destroyCore__P2404_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(878,21): forEach.inline
    ;
    .object forEach_inline__P11585 "game/sprite.ts(878,21): forEach.inline"
forEach_inline__P11585_pre:
    .section code
    .balign 4
forEach_inline__P11585_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P11585_args@fn
forEach_inline__P11585_args:
    cmp r4, #1
    bge forEach_inline__P11585_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P11585_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P11585:
forEach_inline__P11585_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P11585_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.11585:
    @stackempty locals
.final_0_250:
forEach_inline__P11585_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(879,22): Sprite._destroyCore.inline
    ;
    .object Sprite__destroyCore_inline__P11591 "game/sprite.ts(879,22): Sprite._destroyCore.inline"
Sprite__destroyCore_inline__P11591_pre:
    .section code
    .balign 4
Sprite__destroyCore_inline__P11591_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word Sprite__destroyCore_inline__P11591_args@fn
Sprite__destroyCore_inline__P11591_args:
    cmp r4, #1
    bge Sprite__destroyCore_inline__P11591_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite__destroyCore_inline__P11591_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite__destroyCore_inline__P11591:
Sprite__destroyCore_inline__P11591_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite__destroyCore_inline__P11591_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall2__27
_proccall869:
    add sp, #4*2 ; pop locals 2
    b .ret.11591      
.object PUSH
.balign 4
_ldlit_166:
 .word scene_systemMenu_PauseMenu_dispose_inline__P11503_Lit
_ldlit_167:
 .word forEach_inline__P11585_Lit
_ldlit_168:
 .word Sprite__destroyCore_inline__P11591_Lit
.object POP
.ret.11591:
    @stackempty locals
    movs r0, #0
.final_0_251:
Sprite__destroyCore_inline__P11591_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(11,5): PhysicsEngine.removeSprite
    ;
    .object PhysicsEngine_removeSprite__P2489 "game/physics.ts(11,5): PhysicsEngine.removeSprite"
PhysicsEngine_removeSprite__P2489_pre:
    .section code
    .balign 4
PhysicsEngine_removeSprite__P2489_args:
    cmp r4, #2
    bge PhysicsEngine_removeSprite__P2489_nochk
    push {lr}
    bl _expand_args_2_18
    bl PhysicsEngine_removeSprite__P2489_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
PhysicsEngine_removeSprite__P2489:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_PhysicsEngine__C2486_validate_29
    mov lr, r7
PhysicsEngine_removeSprite__P2489_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
PhysicsEngine_removeSprite__P2489_locals:
.ret.2489:
    @stackempty locals
    movs r0, #0
.final_0_252:
PhysicsEngine_removeSprite__P2489_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(454,5): Sprite.kind
    ;
    .object Sprite_kind__P2382 "game/sprite.ts(454,5): Sprite.kind"
Sprite_kind__P2382_pre:
    .section code
    .balign 4
Sprite_kind__P2382_args:
    cmp r4, #1
    bge Sprite_kind__P2382_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_kind__P2382_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_kind__P2382:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_kind__P2382_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_kind__P2382_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
.ret.2382:
    @stackempty locals
.final_0_253:
Sprite_kind__P2382_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(42,9): effects.ParticleEffect.destroy
    ;
    .object effects_ParticleEffect_destroy__P3240 "game/particleeffects.ts(42,9): effects.ParticleEffect.destroy"
effects_ParticleEffect_destroy__P3240_pre:
    .section code
    .balign 4
effects_ParticleEffect_destroy__P3240_args:
    cmp r4, #4
    bge effects_ParticleEffect_destroy__P3240_nochk
    push {lr}
    bl _expand_args_4_74
    bl effects_ParticleEffect_destroy__P3240_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
effects_ParticleEffect_destroy__P3240:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ParticleEffect__C3237_validate_78
    mov lr, r7
effects_ParticleEffect_destroy__P3240_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ParticleEffect_destroy__P3240_locals:
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #56
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_setFlag__P2394
_proccall870:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    movs r0, #6
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    push {r4}
    bl effects_ParticleEffect_start__P3239_nochk
_proccall871:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_254      
.jmpz872:
    ldr r0, [sp, args@2]
    b .condexprfin_1_254      
.condexprz_0_254:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.condexprfin_1_254:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    pop {r1} ; tmpref @1
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #69
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl effects_ImageEffect_applyTo__P3267
_proccall873:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3240:
    @stackempty locals
    movs r0, #0
.final_2_254:
effects_ParticleEffect_destroy__P3240_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(61,50): dissolve.inline
    ;
    .object dissolve_inline__P11631 "game/effects.ts(61,50): dissolve.inline"
dissolve_inline__P11631_pre:
    .section code
    .balign 4
dissolve_inline__P11631_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word dissolve_inline__P11631_args@fn
dissolve_inline__P11631_args:
    cmp r4, #2
    bge dissolve_inline__P11631_nochk
    push {lr}
    bl _expand_args_2_18
    bl dissolve_inline__P11631_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
dissolve_inline__P11631:
dissolve_inline__P11631_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
dissolve_inline__P11631_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #11
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.11642:
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_gt
    beq .brk.11642      
.jmpz874:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3038
_proccall875:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3038
_proccall876:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Math_FastRandom_randomRange__P3038
_proccall877:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Math_FastRandom_randomRange__P3038
_proccall878:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_imageDrawRect__P1939
_proccall879:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.cont.11642:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.11642      
.brk.11642:
.ret.11631:
    @stackempty locals
    movs r0, #0
.final_0_255:
    add sp, #4*5 ; pop locals 5
dissolve_inline__P11631_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(168,5): helpers.imageDrawRect
    ;
    .object helpers_imageDrawRect__P1939 "screen---st7735/image.ts(168,5): helpers.imageDrawRect"
helpers_imageDrawRect__P1939_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawRect__P1939:
helpers_imageDrawRect__P1939_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageDrawRect__P1939_locals:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_256      
.jmpz880:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_256      
.lazySkip_2_256:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_256:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_256      
.jmpz881:
    b .ret.1939      
.else_0_256:
.afterif_3_256:
    ldr r0, [sp, args@3]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, args@4]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, args@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imageDrawLine__P1938
_proccall882:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawLine__P1938
_proccall883:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl helpers_imageDrawLine__P1938
_proccall884:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@4]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawLine__P1938
_proccall885:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
.ret.1939:
    @stackempty locals
    movs r0, #0
.final_4_256:
helpers_imageDrawRect__P1939_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(165,5): helpers.imageDrawLine
    ;
    .object helpers_imageDrawLine__P1938 "screen---st7735/image.ts(165,5): helpers.imageDrawLine"
helpers_imageDrawLine__P1938_pre:
    .section code
    .balign 4
    .section code
helpers_imageDrawLine__P1938:
helpers_imageDrawLine__P1938_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageDrawLine__P1938_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_pack__P4536
_proccall886:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl helpers_pack__P4536
_proccall887:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_drawLine
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.1938:
    @stackempty locals
    movs r0, #0
.final_0_257:
helpers_imageDrawLine__P1938_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(63,9): Math.FastRandom.randomRange
    ;
    .object Math_FastRandom_randomRange__P3038 "game/mathUtil.ts(63,9): Math.FastRandom.randomRange"
Math_FastRandom_randomRange__P3038_pre:
    .section code
    .balign 4
Math_FastRandom_randomRange__P3038_args:
    cmp r4, #3
    bge Math_FastRandom_randomRange__P3038_nochk
    push {lr}
    bl _expand_args_3_15
    bl Math_FastRandom_randomRange__P3038_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Math_FastRandom_randomRange__P3038:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3034_validate_70
    mov lr, r7
Math_FastRandom_randomRange__P3038_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_randomRange__P3038_locals:
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .condexprz_0_258      
.jmpz888:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_FastRandom_next__P3037_nochk
_proccall889:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_258      
.condexprz_0_258:
    movs r0, #1
.condexprfin_1_258:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    pop {r1} ; tmpref @1
    bl _numops_adds
.ret.3038:
    @stackempty locals
.final_2_258:
Math_FastRandom_randomRange__P3038_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(54,9): Math.FastRandom.next
    ;
    .object Math_FastRandom_next__P3037 "game/mathUtil.ts(54,9): Math.FastRandom.next"
Math_FastRandom_next__P3037_pre:
    .section code
    .balign 4
Math_FastRandom_next__P3037_args:
    cmp r4, #1
    bge Math_FastRandom_next__P3037_nochk
    push {lr}
    bl _expand_args_1_12
    bl Math_FastRandom_next__P3037_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Math_FastRandom_next__P3037:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3034_validate_70
    mov lr, r7
Math_FastRandom_next__P3037_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_next__P3037_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_ands
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    ldr r1, _ldlit_170 ; 92161      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_eors
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
.ret.3037:
    @stackempty locals
.final_0_259:
Math_FastRandom_next__P3037_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(11,9): effects.ImageEffect.constructor
    ;
    .object effects_ImageEffect_constructor__P3266 "game/effects.ts(11,9): effects.ImageEffect.constructor"
effects_ImageEffect_constructor__P3266_pre:
    .section code
    .balign 4
    .section code
effects_ImageEffect_constructor__P3266:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ImageEffect__C3265_validate_79
    mov lr, r7
effects_ImageEffect_constructor__P3266_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ImageEffect_constructor__P3266_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, _ldlit_171 ; Math_FastRandom__C3034_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Math_FastRandom_constructor__P3036
_proccall890:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.3266:
    @stackempty locals
.final_0_260:
effects_ImageEffect_constructor__P3266_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(22,9): effects.ImageEffect.applyTo
    ;
    .object effects_ImageEffect_applyTo__P3267 "game/effects.ts(22,9): effects.ImageEffect.applyTo"
effects_ImageEffect_applyTo__P3267_pre:
    .section code
    .balign 4
effects_ImageEffect_applyTo__P3267_args:
    cmp r4, #2
    bge effects_ImageEffect_applyTo__P3267_nochk
    push {lr}
    bl _expand_args_2_18
    bl effects_ImageEffect_applyTo__P3267_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
effects_ImageEffect_applyTo__P3267:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ImageEffect__C3265_validate_79
    mov lr, r7
effects_ImageEffect_applyTo__P3267_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
effects_ImageEffect_applyTo__P3267_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_261      
.jmpz891:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_261      
.lazySkip_2_261:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    ldr r0, [r0, #88]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_261:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_261      
.jmpz892:
    b .ret.3267      
.else_0_261:
.afterif_3_261:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::clone
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl effects_ImageEffect_change__P3268_nochk
_proccall893:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_setImage__P2366
_proccall894:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3267:
    @stackempty locals
    movs r0, #0
.final_4_261:
    add sp, #4*1 ; pop locals 1
effects_ImageEffect_applyTo__P3267_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(33,9): effects.ImageEffect.change
    ;
    .object effects_ImageEffect_change__P3268 "game/effects.ts(33,9): effects.ImageEffect.change"
effects_ImageEffect_change__P3268_pre:
    .section code
    .balign 4
effects_ImageEffect_change__P3268_args:
    cmp r4, #2
    bge effects_ImageEffect_change__P3268_nochk
    push {lr}
    bl _expand_args_2_18
    bl effects_ImageEffect_change__P3268_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
effects_ImageEffect_change__P3268:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ImageEffect__C3265_validate_79
    mov lr, r7
effects_ImageEffect_change__P3268_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ImageEffect_change__P3268_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    movs r1, #131
    bl _ifacecall3__40
_proccall895:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3268:
    @stackempty locals
    movs r0, #0
.final_0_262:
effects_ImageEffect_change__P3268_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(27,9): effects.ParticleEffect.start
    ;
    .object effects_ParticleEffect_start__P3239 "game/particleeffects.ts(27,9): effects.ParticleEffect.start"
effects_ParticleEffect_start__P3239_pre:
    .section code
    .balign 4
effects_ParticleEffect_start__P3239_args:
    cmp r4, #5
    bge effects_ParticleEffect_start__P3239_nochk
    push {lr}
    bl _expand_args_5_22
    bl effects_ParticleEffect_start__P3239_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
effects_ParticleEffect_start__P3239:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ParticleEffect__C3237_validate_78
    mov lr, r7
effects_ParticleEffect_start__P3239_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
effects_ParticleEffect_start__P3239_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_263      
.jmpz896:
    b .ret.3239      
.else_0_263:
.afterif_1_263:
    ldr r0, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_263      
.jmpz897:
    ldr r0, [sp, args@3]
    b .condexprfin_3_263      
.condexprz_2_263:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.condexprfin_3_263:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #77
    lsls r1, r1, #2
    bl _ifacecall3__40
_proccall898:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl particles_ParticleSource_setRelativeToCamera__P3137
_proccall899:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_263      
.jmpz900:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    beq .condexprz_5_263      
.jmpz901:
    ldr r0, [sp, args@2]
    b .condexprfin_6_263      
.condexprz_5_263:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
.condexprfin_6_263:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    pop {r1} ; tmpref @1
    bl _inst_particles_ParticleSource__C3126_validate_76
    str r1, [r0, #24]
    @stackempty locals
.else_4_263:
.afterif_7_263:
.ret.3239:
    @stackempty locals
    movs r0, #0
.final_8_263:
    add sp, #4*1 ; pop locals 1
effects_ParticleEffect_start__P3239_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(212,9): particles.ParticleSource.setRelativeToCamera
    ;
    .object particles_ParticleSource_setRelativeToCamera__P3137 "game/particles.ts(212,9): particles.ParticleSource.setRelativeToCamera"
particles_ParticleSource_setRelativeToCamera__P3137_pre:
    .section code
    .balign 4
particles_ParticleSource_setRelativeToCamera__P3137_args:
    cmp r4, #2
    bge particles_ParticleSource_setRelativeToCamera__P3137_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ParticleSource_setRelativeToCamera__P3137_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setRelativeToCamera__P3137:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_setRelativeToCamera__P3137_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setRelativeToCamera__P3137_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_264      
.jmpz902:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #28]
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_1_264      
.else_0_264:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_264:
.ret.3137:
    @stackempty locals
    movs r0, #0
.final_2_264:
particles_ParticleSource_setRelativeToCamera__P3137_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(677,5): Sprite.setFlag
    ;
    .object Sprite_setFlag__P2394 "game/sprite.ts(677,5): Sprite.setFlag"
Sprite_setFlag__P2394_pre:
    .section code
    .balign 4
Sprite_setFlag__P2394_args:
    cmp r4, #3
    bge Sprite_setFlag__P2394_nochk
    push {lr}
    bl _expand_args_3_15
    bl Sprite_setFlag__P2394_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite_setFlag__P2394:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_setFlag__P2394_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_setFlag__P2394_locals:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz903
    b .else_0_265      
.object PUSH
.balign 4
_ldlit_170:
 .word 92161
_ldlit_171:
 .word Math_FastRandom__C3034_VT
.object POP
.jmpz903:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #116]
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_1_265      
.else_0_265:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::bnot
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_265:
.ret.2394:
    @stackempty locals
    movs r0, #0
.final_2_265:
Sprite_setFlag__P2394_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(72,9): scene.systemMenu.MenuOption.setState
    ;
    .object scene_systemMenu_MenuOption_setState__P3068 "game/systemmenu.ts(72,9): scene.systemMenu.MenuOption.setState"
scene_systemMenu_MenuOption_setState__P3068_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_setState__P3068_args:
    cmp r4, #2
    bge scene_systemMenu_MenuOption_setState__P3068_nochk
    push {lr}
    bl _expand_args_2_18
    bl scene_systemMenu_MenuOption_setState__P3068_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_MenuOption_setState__P3068:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3062_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_setState__P3068_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_setState__P3068_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_0_266      
.jmpz904:
    b .ret.3068      
.else_0_266:
.afterif_1_266:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_updateCard__P5142_nochk
_proccall905:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3068:
    @stackempty locals
    movs r0, #0
.final_2_266:
scene_systemMenu_MenuOption_setState__P3068_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(87,9): scene.systemMenu.MenuOption.updateCard
    ;
    .object scene_systemMenu_MenuOption_updateCard__P5142 "game/systemmenu.ts(87,9): scene.systemMenu.MenuOption.updateCard"
scene_systemMenu_MenuOption_updateCard__P5142_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_updateCard__P5142_args:
    cmp r4, #1
    bge scene_systemMenu_MenuOption_updateCard__P5142_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_MenuOption_updateCard__P5142_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_MenuOption_updateCard__P5142:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3062_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_updateCard__P5142_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_updateCard__P5142_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_267      
.jmpz906:
    b .ret.5142      
.else_0_267:
.afterif_1_267:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz907
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_267      
.jmpz907:
    movs r0, #1
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz908
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_267      
.jmpz908:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz909
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_267      
.jmpz909:
    pop {r0} ; tmpref @1
    b .brk.11911      
.switch_2_267:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #71
    bl _ifacecall1_get_8
_proccall910:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_setImage__P2366
_proccall911:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.11911      
.switch_3_267:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #27
    bl _ifacecall1_get_8
_proccall912:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_setImage__P2366
_proccall913:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.11911      
.switch_4_267:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #56
    bl _ifacecall1_get_8
_proccall914:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_setImage__P2366
_proccall915:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.brk.11911:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_x__P2329
_proccall916:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_x__P2330
_proccall917:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_y__P2331
_proccall918:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_y__P2332
_proccall919:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5142:
    @stackempty locals
    movs r0, #0
.final_5_267:
scene_systemMenu_MenuOption_updateCard__P5142_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(116,5): Sprite.x
    ;
    .object Sprite_x__P2330 "game/sprite.ts(116,5): Sprite.x"
Sprite_x__P2330_pre:
    .section code
    .balign 4
Sprite_x__P2330_args:
    cmp r4, #2
    bge Sprite_x__P2330_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_x__P2330_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_x__P2330:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_x__P2330_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_x__P2330_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2372_nochk
_proccall920:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_left__P2375_nochk
_proccall921:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2330:
    @stackempty locals
    movs r0, #0
.final_0_268:
Sprite_x__P2330_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(376,5): Sprite.width
    ;
    .object Sprite_width__P2372 "game/sprite.ts(376,5): Sprite.width"
Sprite_width__P2372_pre:
    .section code
    .balign 4
Sprite_width__P2372_args:
    cmp r4, #1
    bge Sprite_width__P2372_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_width__P2372_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_width__P2372:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_width__P2372_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_width__P2372_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2372:
    @stackempty locals
.final_0_269:
Sprite_width__P2372_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(392,5): Sprite.left
    ;
    .object Sprite_left__P2375 "game/sprite.ts(392,5): Sprite.left"
Sprite_left__P2375_pre:
    .section code
    .balign 4
Sprite_left__P2375_args:
    cmp r4, #2
    bge Sprite_left__P2375_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_left__P2375_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_left__P2375:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_left__P2375_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
Sprite_left__P2375_locals:
    bl game_currentScene__P2974
_proccall922:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #28]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall923:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @4
    ldr r0, [sp, #4*1] ; tmpref @3
    pop {r1} ; tmpref @4
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #1
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    movs r1, #44
    bl _classCall_PhysicsEngine__C2486_25
_proccall924:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.2375:
    @stackempty locals
    movs r0, #0
.final_0_270:
    add sp, #4*1 ; pop locals 1
Sprite_left__P2375_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(387,5): Sprite.left
    ;
    .object Sprite_left__P2374 "game/sprite.ts(387,5): Sprite.left"
Sprite_left__P2374_pre:
    .section code
    .balign 4
Sprite_left__P2374_args:
    cmp r4, #1
    bge Sprite_left__P2374_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_left__P2374_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_left__P2374:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_left__P2374_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_left__P2374_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
.ret.2374:
    @stackempty locals
.final_0_271:
Sprite_left__P2374_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(292,5): controller._setUserEventsEnabled
    ;
    .object controller__setUserEventsEnabled__P2183 "game/controllerbutton.ts(292,5): controller._setUserEventsEnabled"
controller__setUserEventsEnabled__P2183_pre:
    .section code
    .balign 4
    .section code
controller__setUserEventsEnabled__P2183:
controller__setUserEventsEnabled__P2183_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller__setUserEventsEnabled__P2183_locals:
    ldr r0, [sp, args@0]
    movs r1, #252
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.2183:
    @stackempty locals
    movs r0, #0
.final_0_272:
controller__setUserEventsEnabled__P2183_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(52,9): scene.systemMenu.MenuOption.position
    ;
    .object scene_systemMenu_MenuOption_position__P3065 "game/systemmenu.ts(52,9): scene.systemMenu.MenuOption.position"
scene_systemMenu_MenuOption_position__P3065_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_position__P3065_args:
    cmp r4, #3
    bge scene_systemMenu_MenuOption_position__P3065_nochk
    push {lr}
    bl _expand_args_3_15
    bl scene_systemMenu_MenuOption_position__P3065_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
scene_systemMenu_MenuOption_position__P3065:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3062_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_position__P3065_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_position__P3065_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_left__P2375
_proccall925:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Sprite_top__P2379
_proccall926:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_x__P2329
_proccall927:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_x__P2330
_proccall928:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; the one arg
    bl Sprite_y__P2331
_proccall929:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_y__P2332
_proccall930:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3065:
    @stackempty locals
    movs r0, #0
.final_0_273:
scene_systemMenu_MenuOption_position__P3065_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(67,9): scene.systemMenu.MenuOption.setTheme
    ;
    .object scene_systemMenu_MenuOption_setTheme__P3067 "game/systemmenu.ts(67,9): scene.systemMenu.MenuOption.setTheme"
scene_systemMenu_MenuOption_setTheme__P3067_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_setTheme__P3067_args:
    cmp r4, #2
    bge scene_systemMenu_MenuOption_setTheme__P3067_nochk
    push {lr}
    bl _expand_args_2_18
    bl scene_systemMenu_MenuOption_setTheme__P3067_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_systemMenu_MenuOption_setTheme__P3067:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3062_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_setTheme__P3067_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_setTheme__P3067_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_updateCard__P5142_nochk
_proccall931:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3067:
    @stackempty locals
    movs r0, #0
.final_0_274:
scene_systemMenu_MenuOption_setTheme__P3067_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(42,9): scene.systemMenu.MenuOption.show
    ;
    .object scene_systemMenu_MenuOption_show__P3064 "game/systemmenu.ts(42,9): scene.systemMenu.MenuOption.show"
scene_systemMenu_MenuOption_show__P3064_pre:
    .section code
    .balign 4
scene_systemMenu_MenuOption_show__P3064_args:
    cmp r4, #1
    bge scene_systemMenu_MenuOption_show__P3064_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_systemMenu_MenuOption_show__P3064_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_systemMenu_MenuOption_show__P3064:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3062_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_show__P3064_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_show__P3064_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_275      
.jmpz932:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #71
    bl _ifacecall1_get_8
_proccall933:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_275      
.condexprz_0_275:
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
.condexprfin_1_275:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl sprites_create__P2252
_proccall934:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #183
    lsls r1, r1, #1
    bl _ifacecall2_set_39
_proccall935:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_create__P2252
_proccall936:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    movs r0, #5
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #183
    lsls r1, r1, #1
    bl _ifacecall2_set_39
_proccall937:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #5
    str r1, [r0, #16]
    @stackempty locals
.ret.3064:
    @stackempty locals
    movs r0, #0
.final_2_275:
scene_systemMenu_MenuOption_show__P3064_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(335,5): scene.systemMenu.buildOptionList
    ;
    .object scene_systemMenu_buildOptionList__P3078 "game/systemmenu.ts(335,5): scene.systemMenu.buildOptionList"
scene_systemMenu_buildOptionList__P3078_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList__P3078_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList__P3078_args@fn
scene_systemMenu_buildOptionList__P3078_args:
    .section code
scene_systemMenu_buildOptionList__P3078:
scene_systemMenu_buildOptionList__P3078_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_buildOptionList__P3078_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_173 ; scene_systemMenu_MenuOption__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_174 ; scene_systemMenu_volumeDown__P5146_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_175 ; scene_systemMenu_buildOptionList_inline__P12046_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #96]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3063
_proccall938:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_173 ; scene_systemMenu_MenuOption__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_176 ; scene_systemMenu_volumeUp__P5145_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_177 ; scene_systemMenu_buildOptionList_inline__P12060_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3063
_proccall939:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setScreenBrightnessSupported
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_276      
.jmpz940:
    ldr r0, _ldlit_173 ; scene_systemMenu_MenuOption__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_178 ; scene_systemMenu_brightnessDown__P5148_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_179 ; scene_systemMenu_buildOptionList_inline__P12076_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3063
_proccall941:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_173 ; scene_systemMenu_MenuOption__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_180 ; scene_systemMenu_brightnessUp__P5147_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_181 ; scene_systemMenu_buildOptionList_inline__P12091_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3063
_proccall942:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_276:
.afterif_1_276:
    ldr r0, _ldlit_173 ; scene_systemMenu_MenuOption__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_182 ; scene_systemMenu_toggleStats__P5150_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_183 ; scene_systemMenu_buildOptionList_inline__P12106_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3063
_proccall943:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_173 ; scene_systemMenu_MenuOption__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_184 ; scene_systemMenu_toggleConsole__P5151_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_185 ; scene_systemMenu_buildOptionList_inline__P12115_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #104]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3063
_proccall944:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_173 ; scene_systemMenu_MenuOption__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_186 ; scene_systemMenu_sleep__P5152_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_187 ; scene_systemMenu_buildOptionList_inline__P12124_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3063
_proccall945:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #35
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_276      
.jmpz946:
    movs r0, #35
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayConcat__P113
_proccall947:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_2_276:
.afterif_3_276:
    ldr r0, _ldlit_173 ; scene_systemMenu_MenuOption__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_188 ; scene_systemMenu_closeMenu__P3077_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_189 ; scene_systemMenu_buildOptionList_inline__P12137_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #92]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl scene_systemMenu_MenuOption_constructor__P3063
_proccall948:
    add sp, #4*4 ; pop locals 4
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3078:
    @stackempty locals
.final_4_276:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_buildOptionList__P3078_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(338,55): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12046 "game/systemmenu.ts(338,55): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12046_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12046_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12046_args@fn
scene_systemMenu_buildOptionList_inline__P12046_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12046:
scene_systemMenu_buildOptionList_inline__P12046_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12046_locals:
    bl music_volume__P1618
_proccall949:
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_190 ; _str54      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_191 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.12046:
    @stackempty locals
.final_0_277:
scene_systemMenu_buildOptionList_inline__P12046_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(339,53): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12060 "game/systemmenu.ts(339,53): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12060_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12060_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12060_args@fn
scene_systemMenu_buildOptionList_inline__P12060_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12060:
scene_systemMenu_buildOptionList_inline__P12060_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12060_locals:
    bl music_volume__P1618
_proccall950:
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_192 ; _str55      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_191 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.12060:
    @stackempty locals
.final_0_278:
scene_systemMenu_buildOptionList_inline__P12060_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(341,63): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12076 "game/systemmenu.ts(341,63): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12076_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12076_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12076_args@fn
scene_systemMenu_buildOptionList_inline__P12076_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12076:
scene_systemMenu_buildOptionList_inline__P12076_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12076_locals:
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_193 ; _str56      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_191 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.12076:
    @stackempty locals
.final_0_279:
scene_systemMenu_buildOptionList_inline__P12076_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(342,61): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12091 "game/systemmenu.ts(342,61): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12091_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12091_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12091_args@fn
scene_systemMenu_buildOptionList_inline__P12091_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12091:
scene_systemMenu_buildOptionList_inline__P12091_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12091_locals:
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_194 ; _str57      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_191 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.12091:
    @stackempty locals
.final_0_280:
scene_systemMenu_buildOptionList_inline__P12091_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(344,49): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12106 "game/systemmenu.ts(344,49): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12106_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12106_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12106_args@fn
scene_systemMenu_buildOptionList_inline__P12106_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12106:
scene_systemMenu_buildOptionList_inline__P12106_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12106_locals:
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_281      
.jmpz951:
    ldr r0, _ldlit_195 ; _str58      
    b .condexprfin_1_281      
.condexprz_0_281:
    ldr r0, _ldlit_196 ; _str59      
.condexprfin_1_281:
; jmp value (already in r0)
.ret.12106:
    @stackempty locals
.final_2_281:
scene_systemMenu_buildOptionList_inline__P12106_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_173:
 .word scene_systemMenu_MenuOption__C3062_VT
_ldlit_174:
 .word scene_systemMenu_volumeDown__P5146_Lit
_ldlit_175:
 .word scene_systemMenu_buildOptionList_inline__P12046_Lit
_ldlit_176:
 .word scene_systemMenu_volumeUp__P5145_Lit
_ldlit_177:
 .word scene_systemMenu_buildOptionList_inline__P12060_Lit
_ldlit_178:
 .word scene_systemMenu_brightnessDown__P5148_Lit
_ldlit_179:
 .word scene_systemMenu_buildOptionList_inline__P12076_Lit
_ldlit_180:
 .word scene_systemMenu_brightnessUp__P5147_Lit
_ldlit_181:
 .word scene_systemMenu_buildOptionList_inline__P12091_Lit
_ldlit_182:
 .word scene_systemMenu_toggleStats__P5150_Lit
_ldlit_183:
 .word scene_systemMenu_buildOptionList_inline__P12106_Lit
_ldlit_184:
 .word scene_systemMenu_toggleConsole__P5151_Lit
_ldlit_185:
 .word scene_systemMenu_buildOptionList_inline__P12115_Lit
_ldlit_186:
 .word scene_systemMenu_sleep__P5152_Lit
_ldlit_187:
 .word scene_systemMenu_buildOptionList_inline__P12124_Lit
_ldlit_188:
 .word scene_systemMenu_closeMenu__P3077_Lit
_ldlit_189:
 .word scene_systemMenu_buildOptionList_inline__P12137_Lit
_ldlit_190:
 .word _str54
_ldlit_191:
 .word _str34
_ldlit_192:
 .word _str55
_ldlit_193:
 .word _str56
_ldlit_194:
 .word _str57
_ldlit_195:
 .word _str58
_ldlit_196:
 .word _str59
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(345,51): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12115 "game/systemmenu.ts(345,51): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12115_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12115_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12115_args@fn
scene_systemMenu_buildOptionList_inline__P12115_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12115:
scene_systemMenu_buildOptionList_inline__P12115_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12115_locals:
    bl game_consoleOverlay_isVisible__P3099
_proccall953:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_282      
.jmpz952:
    ldr r0, _ldlit_198 ; _str60      
    b .condexprfin_1_282      
.condexprz_0_282:
    ldr r0, _ldlit_199 ; _str61      
.condexprfin_1_282:
; jmp value (already in r0)
.ret.12115:
    @stackempty locals
.final_2_282:
scene_systemMenu_buildOptionList_inline__P12115_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(346,49): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12124 "game/systemmenu.ts(346,49): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12124_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12124_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12124_args@fn
scene_systemMenu_buildOptionList_inline__P12124_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12124:
scene_systemMenu_buildOptionList_inline__P12124_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12124_locals:
    ldr r0, _ldlit_200 ; _str62      
.ret.12124:
    @stackempty locals
.final_0_283:
scene_systemMenu_buildOptionList_inline__P12124_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(352,54): scene.systemMenu.buildOptionList.inline
    ;
    .object scene_systemMenu_buildOptionList_inline__P12137 "game/systemmenu.ts(352,54): scene.systemMenu.buildOptionList.inline"
scene_systemMenu_buildOptionList_inline__P12137_pre:
    .section code
    .balign 4
scene_systemMenu_buildOptionList_inline__P12137_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_buildOptionList_inline__P12137_args@fn
scene_systemMenu_buildOptionList_inline__P12137_args:
    .section code
scene_systemMenu_buildOptionList_inline__P12137:
scene_systemMenu_buildOptionList_inline__P12137_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_buildOptionList_inline__P12137_locals:
    ldr r0, _ldlit_201 ; _str63      
.ret.12137:
    @stackempty locals
.final_0_284:
scene_systemMenu_buildOptionList_inline__P12137_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(289,5): helpers.arrayConcat
    ;
    .object helpers_arrayConcat__P113 "base/pxt-helpers.ts(289,5): helpers.arrayConcat"
helpers_arrayConcat__P113_pre:
    .section code
    .balign 4
    .section code
helpers_arrayConcat__P113:
helpers_arrayConcat__P113_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayConcat__P113_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.12146:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12146      
.jmpz954:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.12146:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.12146      
.brk.12146:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #0
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@5]
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.12153:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12153      
.jmpz955:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.12153:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    b .fortop.12153      
.brk.12153:
    movs r0, #0
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@0]
.ret.113:
    @stackempty locals
.final_0_285:
    add sp, #4*7 ; pop locals 7
helpers_arrayConcat__P113_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(317,5): scene.systemMenu.sleep
    ;
    .object scene_systemMenu_sleep__P5152 "game/systemmenu.ts(317,5): scene.systemMenu.sleep"
scene_systemMenu_sleep__P5152_pre:
    .section code
    .balign 4
scene_systemMenu_sleep__P5152_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_sleep__P5152_args@fn
scene_systemMenu_sleep__P5152_args:
    .section code
scene_systemMenu_sleep__P5152:
scene_systemMenu_sleep__P5152_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_sleep__P5152_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::deepSleep
    @stackempty locals
.ret.5152:
    @stackempty locals
    movs r0, #0
.final_0_286:
scene_systemMenu_sleep__P5152_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(308,5): scene.systemMenu.toggleConsole
    ;
    .object scene_systemMenu_toggleConsole__P5151 "game/systemmenu.ts(308,5): scene.systemMenu.toggleConsole"
scene_systemMenu_toggleConsole__P5151_pre:
    .section code
    .balign 4
scene_systemMenu_toggleConsole__P5151_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_toggleConsole__P5151_args@fn
scene_systemMenu_toggleConsole__P5151_args:
    .section code
scene_systemMenu_toggleConsole__P5151:
scene_systemMenu_toggleConsole__P5151_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_toggleConsole__P5151_locals:
    bl game_consoleOverlay_isVisible__P3099
_proccall957:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_287      
.jmpz956:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #10
    push {r0} ; proc-arg
    bl game_consoleOverlay_setVisible__P3101
_proccall958:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_287      
.else_0_287:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    bl game_consoleOverlay_setVisible__P3101
_proccall959:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_202 ; _str53      
    push {r0} ; proc-arg
    bl console_log__P380
_proccall960:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_287:
.ret.5151:
    @stackempty locals
    movs r0, #0
.final_2_287:
scene_systemMenu_toggleConsole__P5151_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(59,5): console.log
    ;
    .object console_log__P380 "base/console.ts(59,5): console.log"
console_log__P380_pre:
    .section code
    .balign 4
    .section code
console_log__P380:
console_log__P380_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_log__P380_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    bl console_add__P376
_proccall961:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.380:
    @stackempty locals
    movs r0, #0
.final_0_288:
console_log__P380_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(29,5): console.add
    ;
    .object console_add__P376 "base/console.ts(29,5): console.add"
console_add__P376_pre:
    .section code
    .balign 4
    .section code
console_add__P376:
console_add__P376_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_add__P376_locals:
    ldr r0, [sp, args@0]
    movs r1, #71
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _cmp_lt
    beq .else_0_289      
.jmpz962:
    b .ret.376      
.else_0_289:
.afterif_1_289:
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl console_inspect__P382
_proccall963:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_203 ; _str1      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.12185:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r0, #65
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.12185      
.jmpz964:
    movs r0, #65
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    push {r3} ; the one arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.12185:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.12185      
.brk.12185:
.ret.376:
    @stackempty locals
    movs r0, #0
.final_2_289:
    add sp, #4*2 ; pop locals 2
console_add__P376_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(82,5): console.inspect
    ;
    .object console_inspect__P382 "base/console.ts(82,5): console.inspect"
console_inspect__P382_pre:
    .section code
    .balign 4
    .section code
console_inspect__P382:
console_inspect__P382_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_inspect__P382_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_204 ; _str2      
    bl _cmp_eq
    beq .else_0_290      
.jmpz966:
    ldr r0, [sp, args@0]
    b .ret.382      
    b .afterif_1_290      
.else_0_290:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_205 ; _str3      
    bl _cmp_eq
    beq .else_2_290      
.jmpz967:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    b .ret.382      
    b .afterif_3_290      
.else_2_290:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::isArray
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_290      
.jmpz968:
    ldr r0, [sp, args@0]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, args@1]
    bl _cmp_le
    bne .jmpz969
    b .else_5_290      
.object PUSH
.balign 4
_ldlit_198:
 .word _str60
_ldlit_199:
 .word _str61
_ldlit_200:
 .word _str62
_ldlit_201:
 .word _str63
_ldlit_202:
 .word _str53
_ldlit_203:
 .word _str1
_ldlit_204:
 .word _str2
_ldlit_205:
 .word _str3
.object POP
.jmpz969:
    ldr r0, _ldlit_207 ; _str0      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayJoin__P103
_proccall970:
    add sp, #4*2 ; pop locals 2
    b .ret.382      
    b .afterif_6_290      
.else_5_290:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P115
_proccall971:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_207 ; _str0      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayJoin__P103
_proccall972:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_208 ; _str4      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.382      
.afterif_6_290:
    b .afterif_7_290      
.else_4_290:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_54
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_209 ; _str5      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_290      
.jmpz973:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_290      
.lazySkip_10_290:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_210 ; _str6      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_9_290:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_290      
.jmpz974:
    ldr r0, [sp, locals@1]
    b .ret.382      
.else_8_290:
.afterif_11_290:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::keysOf
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_290      
.jmpz975:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P115
_proccall976:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
.else_12_290:
.afterif_13_290:
    movs r0, #1
    ldr r1, _ldlit_211 ; console_inspect_inline__P12260_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_14_290      
.jmpz977:
    ldr r0, _ldlit_212 ; _str10      
    b .condexprfin_15_290      
.condexprz_14_290:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_15_290:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arrayReduce__P112
_proccall978:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*4 ; pop locals 4
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_213 ; _str7      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_214 ; _str11      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.382      
.afterif_7_290:
.afterif_3_290:
.afterif_1_290:
    movs r0, #0
.ret.382:
    @stackempty locals
.final_16_290:
    add sp, #4*4 ; pop locals 4
console_inspect__P382_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/console.ts(109,21): console.inspect.inline
    ;
    .object console_inspect_inline__P12260 "base/console.ts(109,21): console.inspect.inline"
console_inspect_inline__P12260_pre:
    .section code
    .balign 4
console_inspect_inline__P12260_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word console_inspect_inline__P12260_args@fn
console_inspect_inline__P12260_args:
    cmp r4, #2
    bge console_inspect_inline__P12260_nochk
    push {lr}
    bl _expand_args_2_18
    bl console_inspect_inline__P12260_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
console_inspect_inline__P12260:
console_inspect_inline__P12260_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_inspect_inline__P12260_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_215 ; _str8      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_216 ; _str9      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_31
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.12260:
    @stackempty locals
.final_0_291:
console_inspect_inline__P12260_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(281,5): helpers.arrayReduce
    ;
    .object helpers_arrayReduce__P112 "base/pxt-helpers.ts(281,5): helpers.arrayReduce"
helpers_arrayReduce__P112_pre:
    .section code
    .balign 4
    .section code
helpers_arrayReduce__P112:
helpers_arrayReduce__P112_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayReduce__P112_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.12291:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.12291      
.jmpz979:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    ldr r0, [sp, #4*3] ; estack
    bl _lambda_call3_80
    add sp, #4*4 ; pop locals 4
    str r0, [sp, args@2]
    @stackempty locals
.cont.12291:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.12291      
.brk.12291:
    ldr r0, [sp, args@2]
.ret.112:
    @stackempty locals
.final_0_292:
    add sp, #4*2 ; pop locals 2
helpers_arrayReduce__P112_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(158,5): helpers.arrayJoin
    ;
    .object helpers_arrayJoin__P103 "base/pxt-helpers.ts(158,5): helpers.arrayJoin"
helpers_arrayJoin__P103_pre:
    .section code
    .balign 4
    .section code
helpers_arrayJoin__P103:
helpers_arrayJoin__P103_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayJoin__P103_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_293      
.jmpz981:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_293      
.lazySkip_2_293:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_1_293:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_293      
.jmpz982:
    ldr r0, _ldlit_207 ; _str0      
    str r0, [sp, args@1]
    @stackempty locals
    b .afterif_3_293      
.object PUSH
.balign 4
_ldlit_207:
 .word _str0
_ldlit_208:
 .word _str4
_ldlit_209:
 .word _str5
_ldlit_210:
 .word _str6
_ldlit_211:
 .word console_inspect_inline__P12260_Lit
_ldlit_212:
 .word _str10
_ldlit_213:
 .word _str7
_ldlit_214:
 .word _str11
_ldlit_215:
 .word _str8
_ldlit_216:
 .word _str9
.object POP
.else_0_293:
.afterif_3_293:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.12320:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.12320      
.jmpz983:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_293      
.jmpz984:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_293      
.lazySkip_6_293:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
.lazy_5_293:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_293      
.jmpz985:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_4_293:
.afterif_7_293:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_11_293      
.jmpz986:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_293      
.lazySkip_11_293:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_10_293:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_293      
.jmpz987:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    b .condexprfin_9_293      
.condexprz_8_293:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.condexprfin_9_293:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12320:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.12320      
.brk.12320:
    ldr r0, [sp, locals@0]
.ret.103:
    @stackempty locals
.final_12_293:
    add sp, #4*3 ; pop locals 3
helpers_arrayJoin__P103_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(20,5): game.consoleOverlay.setVisible
    ;
    .object game_consoleOverlay_setVisible__P3101 "game/console.ts(20,5): game.consoleOverlay.setVisible"
game_consoleOverlay_setVisible__P3101_pre:
    .section code
    .balign 4
    .section code
game_consoleOverlay_setVisible__P3101:
game_consoleOverlay_setVisible__P3101_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_consoleOverlay_setVisible__P3101_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_294      
.jmpz988:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_294      
.jmpz989:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .condexprfin_2_294      
.condexprz_1_294:
    movs r0, #0
.condexprfin_2_294:
; jmp value (already in r0)
    movs r1, #220
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_294:
.afterif_3_294:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_neqq
    beq .else_4_294      
.jmpz990:
    ldr r0, [sp, args@1]
    movs r1, #228
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_4_294:
.afterif_5_294:
.ret.3101:
    @stackempty locals
    movs r0, #0
.final_6_294:
game_consoleOverlay_setVisible__P3101_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/console.ts(12,5): game.consoleOverlay.isVisible
    ;
    .object game_consoleOverlay_isVisible__P3099 "game/console.ts(12,5): game.consoleOverlay.isVisible"
game_consoleOverlay_isVisible__P3099_pre:
    .section code
    .balign 4
    .section code
game_consoleOverlay_isVisible__P3099:
game_consoleOverlay_isVisible__P3099_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_consoleOverlay_isVisible__P3099_locals:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3099:
    @stackempty locals
.final_0_295:
game_consoleOverlay_isVisible__P3099_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(301,5): scene.systemMenu.toggleStats
    ;
    .object scene_systemMenu_toggleStats__P5150 "game/systemmenu.ts(301,5): scene.systemMenu.toggleStats"
scene_systemMenu_toggleStats__P5150_pre:
    .section code
    .balign 4
scene_systemMenu_toggleStats__P5150_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_toggleStats__P5150_args@fn
scene_systemMenu_toggleStats__P5150_args:
    .section code
scene_systemMenu_toggleStats__P5150:
scene_systemMenu_toggleStats__P5150_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_toggleStats__P5150_locals:
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    movs r1, #160
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_296      
.jmpz991:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_296      
.lazySkip_2_296:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_1_296:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_296      
.jmpz992:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    push {r1}
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_296:
.afterif_3_296:
.ret.5150:
    @stackempty locals
    movs r0, #0
.final_4_296:
scene_systemMenu_toggleStats__P5150_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(286,5): scene.systemMenu.brightnessUp
    ;
    .object scene_systemMenu_brightnessUp__P5147 "game/systemmenu.ts(286,5): scene.systemMenu.brightnessUp"
scene_systemMenu_brightnessUp__P5147_pre:
    .section code
    .balign 4
scene_systemMenu_brightnessUp__P5147_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_brightnessUp__P5147_args@fn
scene_systemMenu_brightnessUp__P5147_args:
    .section code
scene_systemMenu_brightnessUp__P5147:
scene_systemMenu_brightnessUp__P5147_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_brightnessUp__P5147_locals:
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #11
    bl _numops_adds
    push {r0} ; the one arg
    bl scene_systemMenu_setScreenBrightness__P5149
_proccall994:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5147:
    @stackempty locals
    movs r0, #0
.final_0_297:
scene_systemMenu_brightnessUp__P5147_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(294,5): scene.systemMenu.setScreenBrightness
    ;
    .object scene_systemMenu_setScreenBrightness__P5149 "game/systemmenu.ts(294,5): scene.systemMenu.setScreenBrightness"
scene_systemMenu_setScreenBrightness__P5149_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_setScreenBrightness__P5149:
scene_systemMenu_setScreenBrightness__P5149_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_setScreenBrightness__P5149_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_setScreenBrightness__P1943
_proccall995:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; the one arg
    ldr r0, _ldlit_218 ; _str52      
    push {r0} ; proc-arg
    bl settings_writeNumber__P2040
_proccall996:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5149:
    @stackempty locals
    movs r0, #0
.final_0_298:
scene_systemMenu_setScreenBrightness__P5149_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(90,5): settings.writeNumber
    ;
    .object settings_writeNumber__P2040 "settings/settings.ts(90,5): settings.writeNumber"
settings_writeNumber__P2040_pre:
    .section code
    .balign 4
    .section code
settings_writeNumber__P2040:
settings_writeNumber__P2040_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeNumber__P2040_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl msgpack_packNumberArray__P184
_proccall997:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2037
_proccall998:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2040:
    @stackempty locals
    movs r0, #0
.final_0_299:
settings_writeNumber__P2040_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(118,5): msgpack.packNumberArray
    ;
    .object msgpack_packNumberArray__P184 "base/buffer.ts(118,5): msgpack.packNumberArray"
msgpack_packNumberArray__P184_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberArray__P184:
msgpack_packNumberArray__P184_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberArray__P184_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.12406:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12406      
.jmpz999:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #6
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4357
_proccall1000:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12406:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.12406      
.brk.12406:
    movs r0, #0
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_46
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.12422:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12422      
.jmpz1001:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4357
_proccall1002:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12422:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.12422      
.brk.12422:
    movs r0, #0
    str r0, [sp, locals@6]
    ldr r0, [sp, locals@4]
.ret.184:
    @stackempty locals
.final_0_300:
    add sp, #4*8 ; pop locals 8
msgpack_packNumberArray__P184_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(57,5): msgpack.packNumberCore
    ;
    .object msgpack_packNumberCore__P4357 "base/buffer.ts(57,5): msgpack.packNumberCore"
msgpack_packNumberCore__P4357_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberCore__P4357:
msgpack_packNumberCore__P4357_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberCore__P4357_locals:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_301      
.jmpz1003:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_301      
.lazySkip_2_301:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_301:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_301      
.jmpz1004:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_301      
.jmpz1005:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_301      
.lazySkip_5_301:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_4_301:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_301      
.jmpz1006:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_301      
.jmpz1007:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_81
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_6_301:
.afterif_7_301:
    movs r0, #3
    b .ret.4357      
    b .afterif_8_301      
.else_3_301:
    movs r0, #1
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_9_301      
.jmpz1008:
    ldr r0, [sp, args@2]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _cmp_le
    beq .else_10_301      
.jmpz1009:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_11_301      
.else_10_301:
    ldr r0, [sp, args@2]
    ldr r1, _ldlit_219 ; 131071      
    bl _cmp_le
    beq .else_12_301      
.jmpz1010:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_13_301      
.else_12_301:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_13_301:
.afterif_11_301:
    b .afterif_14_301      
.else_9_301:
    movs r0, #253
    negs r0, r0
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_15_301      
.jmpz1011:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_16_301      
.else_15_301:
    ldr r0, _ldlit_220 ; -65533      
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_17_301      
.jmpz1012:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_18_301      
.else_17_301:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_18_301:
.afterif_16_301:
.afterif_14_301:
.afterif_8_301:
.else_0_301:
.afterif_19_301:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_tagFormat__P4356
_proccall1013:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1014
    b .else_20_301      
.object PUSH
.balign 4
_ldlit_218:
 .word _str52
_ldlit_219:
 .word 131071
_ldlit_220:
 .word -65533
.object POP
.jmpz1014:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_81
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_82
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_20_301:
.afterif_21_301:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P175
_proccall1015:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
.ret.4357:
    @stackempty locals
.final_22_301:
    add sp, #4*2 ; pop locals 2
msgpack_packNumberCore__P4357_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(3,5): pins.sizeOf
    ;
    .object pins_sizeOf__P175 "base/buffer.ts(3,5): pins.sizeOf"
pins_sizeOf__P175_pre:
    .section code
    .balign 4
    .section code
pins_sizeOf__P175:
pins_sizeOf__P175_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pins_sizeOf__P175_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Buffer_sizeOfNumberFormat__P215
_proccall1016:
    add sp, #4*1 ; pop locals 1
.ret.175:
    @stackempty locals
.final_0_302:
pins_sizeOf__P175_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(509,5): Buffer.sizeOfNumberFormat
    ;
    .object Buffer_sizeOfNumberFormat__P215 "base/buffer.ts(509,5): Buffer.sizeOfNumberFormat"
Buffer_sizeOfNumberFormat__P215_pre:
    .section code
    .balign 4
    .section code
Buffer_sizeOfNumberFormat__P215:
Buffer_sizeOfNumberFormat__P215_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Buffer_sizeOfNumberFormat__P215_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1017
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_303      
.jmpz1017:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1018
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_303      
.jmpz1018:
    movs r0, #13
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1019
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_303      
.jmpz1019:
    movs r0, #15
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1020
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_303      
.jmpz1020:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1021
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_303      
.jmpz1021:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1022
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_303      
.jmpz1022:
    movs r0, #17
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1023
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_303      
.jmpz1023:
    movs r0, #19
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1024
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_303      
.jmpz1024:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1025
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_8_303      
.jmpz1025:
    movs r0, #21
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1026
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_9_303      
.jmpz1026:
    movs r0, #25
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1027
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_10_303      
.jmpz1027:
    movs r0, #23
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1028
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_11_303      
.jmpz1028:
    movs r0, #31
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1029
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_12_303      
.jmpz1029:
    movs r0, #27
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1030
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_303      
.jmpz1030:
    movs r0, #33
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1031
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_303      
.jmpz1031:
    movs r0, #29
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1032
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_303      
.jmpz1032:
    pop {r0} ; tmpref @1
    b .brk.12498      
.switch_0_303:
.switch_1_303:
.switch_2_303:
.switch_3_303:
    movs r0, #3
    b .ret.215      
.switch_4_303:
.switch_5_303:
.switch_6_303:
.switch_7_303:
    movs r0, #5
    b .ret.215      
.switch_8_303:
.switch_9_303:
.switch_10_303:
.switch_11_303:
.switch_12_303:
.switch_13_303:
    movs r0, #9
    b .ret.215      
.switch_14_303:
.switch_15_303:
    movs r0, #17
    b .ret.215      
.brk.12498:
    movs r0, #1
.ret.215:
    @stackempty locals
.final_16_303:
Buffer_sizeOfNumberFormat__P215_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(43,5): msgpack.tagFormat
    ;
    .object msgpack_tagFormat__P4356 "base/buffer.ts(43,5): msgpack.tagFormat"
msgpack_tagFormat__P4356_pre:
    .section code
    .balign 4
    .section code
msgpack_tagFormat__P4356:
msgpack_tagFormat__P4356_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
msgpack_tagFormat__P4356_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1033
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_304      
.jmpz1033:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1034
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_304      
.jmpz1034:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1035
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_304      
.jmpz1035:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1036
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_304      
.jmpz1036:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1037
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_304      
.jmpz1037:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1038
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_304      
.jmpz1038:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1039
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_304      
.jmpz1039:
    pop {r0} ; tmpref @1
    b .switch_7_304      
.switch_0_304:
    movs r0, #33
    b .ret.4356      
.switch_1_304:
    movs r0, #15
    b .ret.4356      
.switch_2_304:
    movs r0, #19
    b .ret.4356      
.switch_3_304:
    movs r0, #25
    b .ret.4356      
.switch_4_304:
    movs r0, #13
    b .ret.4356      
.switch_5_304:
    movs r0, #17
    b .ret.4356      
.switch_6_304:
    movs r0, #21
    b .ret.4356      
.switch_7_304:
    movs r0, #6
    b .ret.4356      
.brk.12517:
    movs r0, #0
.ret.4356:
    @stackempty locals
.final_8_304:
msgpack_tagFormat__P4356_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(64,5): settings.writeBuffer
    ;
    .object settings_writeBuffer__P2037 "settings/settings.ts(64,5): settings.writeBuffer"
settings_writeBuffer__P2037_pre:
    .section code
    .balign 4
    .section code
settings_writeBuffer__P2037:
settings_writeBuffer__P2037_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeBuffer__P2037_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_83
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_set
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_305      
.jmpz1040:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    movs r0, #115
    lsls r0, r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_305:
.afterif_1_305:
.ret.2037:
    @stackempty locals
    movs r0, #0
.final_2_305:
settings_writeBuffer__P2037_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(239,5): helpers.setScreenBrightness
    ;
    .object helpers_setScreenBrightness__P1943 "screen---st7735/image.ts(239,5): helpers.setScreenBrightness"
helpers_setScreenBrightness__P1943_pre:
    .section code
    .balign 4
    .section code
helpers_setScreenBrightness__P1943:
helpers_setScreenBrightness__P1943_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_setScreenBrightness__P1943_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #21
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1041:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #9
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_46
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setScreenBrightness
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.1943:
    @stackempty locals
    movs r0, #0
.final_0_306:
helpers_setScreenBrightness__P1943_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(290,5): scene.systemMenu.brightnessDown
    ;
    .object scene_systemMenu_brightnessDown__P5148 "game/systemmenu.ts(290,5): scene.systemMenu.brightnessDown"
scene_systemMenu_brightnessDown__P5148_pre:
    .section code
    .balign 4
scene_systemMenu_brightnessDown__P5148_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_brightnessDown__P5148_args@fn
scene_systemMenu_brightnessDown__P5148_args:
    .section code
scene_systemMenu_brightnessDown__P5148:
scene_systemMenu_brightnessDown__P5148_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_brightnessDown__P5148_locals:
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #11
    bl _numops_subs
    push {r0} ; the one arg
    bl scene_systemMenu_setScreenBrightness__P5149
_proccall1042:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5148:
    @stackempty locals
    movs r0, #0
.final_0_307:
scene_systemMenu_brightnessDown__P5148_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(272,5): scene.systemMenu.volumeUp
    ;
    .object scene_systemMenu_volumeUp__P5145 "game/systemmenu.ts(272,5): scene.systemMenu.volumeUp"
scene_systemMenu_volumeUp__P5145_pre:
    .section code
    .balign 4
scene_systemMenu_volumeUp__P5145_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_volumeUp__P5145_args@fn
scene_systemMenu_volumeUp__P5145_args:
    .section code
scene_systemMenu_volumeUp__P5145:
scene_systemMenu_volumeUp__P5145_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_volumeUp__P5145_locals:
    bl music_volume__P1618
_proccall1043:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #65
    bl _numops_adds
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl scene_systemMenu_setVolume__P5144
_proccall1044:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5145:
    @stackempty locals
    movs r0, #0
.final_0_309:
    add sp, #4*3 ; pop locals 3
scene_systemMenu_volumeUp__P5145_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(266,5): scene.systemMenu.setVolume
    ;
    .object scene_systemMenu_setVolume__P5144 "game/systemmenu.ts(266,5): scene.systemMenu.setVolume"
scene_systemMenu_setVolume__P5144_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_setVolume__P5144:
scene_systemMenu_setVolume__P5144_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_setVolume__P5144_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl music_setVolume__P1617
_proccall1045:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #113
    push {r0} ; proc-arg
    bl music_playTone__P1619
_proccall1046:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, _ldlit_222 ; _str51      
    push {r0} ; proc-arg
    bl settings_writeNumber__P2040
_proccall1047:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5144:
    @stackempty locals
    movs r0, #0
.final_0_310:
scene_systemMenu_setVolume__P5144_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(85,5): music.playTone
    ;
    .object music_playTone__P1619 "mixer---nrf52/melody.ts(85,5): music.playTone"
music_playTone__P1619_pre:
    .section code
    .balign 4
    .section code
music_playTone__P1619:
music_playTone__P1619_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_playTone__P1619_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r1, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, args@1]
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _cmp_eq
    beq .else_0_311      
.jmpz1048:
    ldr r0, [sp, args@1]
    ldr r1, _ldlit_223 ; 172800001      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
.else_0_311:
.afterif_1_311:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #15
    lsls r1, r1, #8
    adds r1, #161
    bl _cmp_le
    beq .else_2_311      
.jmpz1049:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    bl music_playNoteCore__P4456
_proccall1050:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; the one arg
    bl pause__P413
_proccall1051:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_3_311      
.else_2_311:
    movs r0, #73
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #3
    bl _numops_adds
    push {r0}; tmpstore @1
    movs r1, #73
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_224 ; music_playTone_inline__P12595_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_311:
.ret.1619:
    @stackempty locals
    movs r0, #0
.final_4_311:
    add sp, #4*1 ; pop locals 1
music_playTone__P1619_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(94,35): music.playTone.inline
    ;
    .object music_playTone_inline__P12595 "mixer---nrf52/melody.ts(94,35): music.playTone.inline"
music_playTone_inline__P12595_pre:
    .section code
    .balign 4
music_playTone_inline__P12595_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word music_playTone_inline__P12595_args@fn
music_playTone_inline__P12595_args:
    .section code
music_playTone_inline__P12595:
music_playTone_inline__P12595_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
music_playTone_inline__P12595_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12599:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    movs r0, #73
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_312      
.jmpz1052:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_312      
.lazySkip_1_312:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_0_312:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.12599      
.jmpz1053:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #233
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_min__P131
_proccall1054:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    ldr r1, [sp, locals@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_subs
    mov r3, r0
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl music_playNoteCore__P4456
_proccall1055:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _cmp_eq
    beq .else_2_312      
.jmpz1056:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    push {r0} ; the one arg
    bl pause__P413
_proccall1057:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_3_312      
.else_2_312:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@3]
    bl _numops_adds
    movs r1, #201
    bl _numops_subs
    push {r0} ; the one arg
    bl pause__P413
_proccall1058:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_312:
    b .cont.12599      
.brk.12599:
.ret.12595:
    @stackempty locals
    movs r0, #0
.final_4_312:
    add sp, #4*4 ; pop locals 4
music_playTone_inline__P12595_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(67,5): music.playNoteCore
    ;
    .object music_playNoteCore__P4456 "mixer---nrf52/melody.ts(67,5): music.playNoteCore"
music_playNoteCore__P4456_pre:
    .section code
    .balign 4
    .section code
music_playNoteCore__P4456:
music_playNoteCore__P4456_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_playNoteCore__P4456_locals:
    movs r0, #12
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl music_volume__P1618
_proccall1059:
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    push {r3}
    movs r0, #1
    push {r0} ; proc-arg
    push {r4}
    bl music_addNote__P1633
_proccall1060:
    add sp, #4*9 ; pop locals 9
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_84
    mov r7, sp
    str r7, [r6, #4]
    bl music::queuePlayInstructions
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4456:
    @stackempty locals
    movs r0, #0
.final_0_313:
    add sp, #4*1 ; pop locals 1
music_playNoteCore__P4456_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(324,5): music.addNote
    ;
    .object music_addNote__P1633 "mixer---nrf52/melody.ts(324,5): music.addNote"
music_addNote__P1633_pre:
    .section code
    .balign 4
    .section code
music_addNote__P1633:
music_addNote__P1633_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_addNote__P1633_locals:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    bne .jmpz1061
    b .else_0_314      
.object PUSH
.balign 4
_ldlit_222:
 .word _str51
_ldlit_223:
 .word 172800001
_ldlit_224:
 .word music_playTone_inline__P12595_Lit
.object POP
.jmpz1061:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_49
    movs r1, #2
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #13
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #13
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #17
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #13
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #21
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@8]
    push {r0} ; proc-arg
    bl _conv_85
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #25
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
.else_0_314:
.afterif_1_314:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_49
    movs r1, #2
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
.ret.1633:
    @stackempty locals
.final_2_314:
music_addNote__P1633_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(52,5): music.setVolume
    ;
    .object music_setVolume__P1617 "mixer---nrf52/melody.ts(52,5): music.setVolume"
music_setVolume__P1617_pre:
    .section code
    .balign 4
    .section code
music_setVolume__P1617:
music_setVolume__P1617_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_setVolume__P1617_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; the one arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1062:
    add sp, #4*3 ; pop locals 3
    movs r1, #37
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #37
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #1
    bl _cmp_gt
    beq .condexprz_0_315      
.jmpz1063:
    movs r0, #3
    b .condexprfin_1_315      
.condexprz_0_315:
    movs r0, #1
.condexprfin_1_315:
; jmp value (already in r0)
    push {r0} ; proc-arg
    bl _conv_46
    mov r7, sp
    str r7, [r6, #4]
    bl music::enableAmp
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.1617:
    @stackempty locals
    movs r0, #0
.final_2_315:
music_setVolume__P1617_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(279,5): scene.systemMenu.volumeDown
    ;
    .object scene_systemMenu_volumeDown__P5146 "game/systemmenu.ts(279,5): scene.systemMenu.volumeDown"
scene_systemMenu_volumeDown__P5146_pre:
    .section code
    .balign 4
scene_systemMenu_volumeDown__P5146_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word scene_systemMenu_volumeDown__P5146_args@fn
scene_systemMenu_volumeDown__P5146_args:
    .section code
scene_systemMenu_volumeDown__P5146:
scene_systemMenu_volumeDown__P5146_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_volumeDown__P5146_locals:
    bl music_volume__P1618
_proccall1064:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_316      
.jmpz1065:
    ldr r0, [sp, locals@1]
    b .condexprfin_1_316      
.condexprz_0_316:
    movs r0, #65
.condexprfin_1_316:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    pop {r1} ; tmpref @1
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl scene_systemMenu_setVolume__P5144
_proccall1066:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5146:
    @stackempty locals
    movs r0, #0
.final_2_316:
    add sp, #4*3 ; pop locals 3
scene_systemMenu_volumeDown__P5146_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(62,5): music.volume
    ;
    .object music_volume__P1618 "mixer---nrf52/melody.ts(62,5): music.volume"
music_volume__P1618_pre:
    .section code
    .balign 4
    .section code
music_volume__P1618:
music_volume__P1618_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_volume__P1618_locals:
    bl music_initVolume__P4455
_proccall1067:
    @stackempty locals
    movs r0, #37
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.1618:
    @stackempty locals
.final_0_317:
music_volume__P1618_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(34,5): music.initVolume
    ;
    .object music_initVolume__P4455 "mixer---nrf52/melody.ts(34,5): music.initVolume"
music_initVolume__P4455_pre:
    .section code
    .balign 4
    .section code
music_initVolume__P4455:
music_initVolume__P4455_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_initVolume__P4455_locals:
    movs r0, #37
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #6
    bl _cmp_eqq
    beq .else_0_318      
.jmpz1068:
    movs r0, #1
    movs r1, #37
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #59
    movs r1, #128
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getConfig
    bl _numops_fromInt
    push {r0} ; the one arg
    bl music_setVolume__P1617
_proccall1069:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_318:
.afterif_1_318:
.ret.4455:
    @stackempty locals
    movs r0, #0
.final_2_318:
music_initVolume__P4455_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(39,9): scene.systemMenu.MenuOption.constructor
    ;
    .object scene_systemMenu_MenuOption_constructor__P3063 "game/systemmenu.ts(39,9): scene.systemMenu.MenuOption.constructor"
scene_systemMenu_MenuOption_constructor__P3063_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_MenuOption_constructor__P3063:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_MenuOption__C3062_validate_73
    mov lr, r7
scene_systemMenu_MenuOption_constructor__P3063_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_MenuOption_constructor__P3063_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #28]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #32]
    movs r0, #0
.ret.3063:
    @stackempty locals
.final_0_319:
scene_systemMenu_MenuOption_constructor__P3063_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(117,9): scene.systemMenu.PauseMenu.constructor
    ;
    .object scene_systemMenu_PauseMenu_constructor__P3071 "game/systemmenu.ts(117,9): scene.systemMenu.PauseMenu.constructor"
scene_systemMenu_PauseMenu_constructor__P3071_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_PauseMenu_constructor__P3071:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_systemMenu_PauseMenu__C3070_validate_72
    mov lr, r7
scene_systemMenu_PauseMenu_constructor__P3071_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_systemMenu_PauseMenu_constructor__P3071_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #28]
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_320      
.jmpz1070:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_320      
.lazySkip_1_320:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl scene_systemMenu_buildMenuTheme__P3079
_proccall1071:
    add sp, #4*4 ; pop locals 4
.lazy_0_320:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #0
.ret.3071:
    @stackempty locals
.final_2_320:
scene_systemMenu_PauseMenu_constructor__P3071_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(357,5): scene.systemMenu.buildMenuTheme
    ;
    .object scene_systemMenu_buildMenuTheme__P3079 "game/systemmenu.ts(357,5): scene.systemMenu.buildMenuTheme"
scene_systemMenu_buildMenuTheme__P3079_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_buildMenuTheme__P3079:
scene_systemMenu_buildMenuTheme__P3079_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_buildMenuTheme__P3079_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_321      
.jmpz1072:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_321      
.lazySkip_1_321:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #236
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_0_321:
; jmp value (already in r0)
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_321      
.jmpz1073:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_321      
.lazySkip_3_321:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl image_doubledFont__P1956
_proccall1074:
    add sp, #4*1 ; pop locals 1
.lazy_2_321:
; jmp value (already in r0)
    str r0, [sp, args@3]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #86
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #87
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #88
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #231
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #169
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #160
    ldr r2, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1075:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #89
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1076:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #5
    bl _numops_subs
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #170
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #161
    ldr r2, _ldlit_226 ; _str64      
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #27
    ldr r7, [r6, #0]
    ldr r2, [r7, #76]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #56
    ldr r7, [r6, #0]
    ldr r2, [r7, #80]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #71
    ldr r7, [r6, #0]
    ldr r2, [r7, #72]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
.ret.3079:
    @stackempty locals
.final_4_321:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_buildMenuTheme__P3079_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(147,5): image.doubledFont
    ;
    .object image_doubledFont__P1956 "screen---st7735/text.ts(147,5): image.doubledFont"
image_doubledFont__P1956_pre:
    .section code
    .balign 4
    .section code
image_doubledFont__P1956:
image_doubledFont__P1956_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
image_doubledFont__P1956_locals:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl image_scaledFont__P1957
_proccall1077:
    add sp, #4*2 ; pop locals 2
.ret.1956:
    @stackempty locals
.final_0_322:
image_doubledFont__P1956_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/text.ts(151,5): image.scaledFont
    ;
    .object image_scaledFont__P1957 "screen---st7735/text.ts(151,5): image.scaledFont"
image_scaledFont__P1957_pre:
    .section code
    .balign 4
    .section code
image_scaledFont__P1957:
image_scaledFont__P1957_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
image_scaledFont__P1957_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #5
    bl _cmp_lt
    beq .else_0_323      
.jmpz1078:
    ldr r0, [sp, args@0]
    b .ret.1957      
.else_0_323:
.afterif_1_323:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall1079:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #94
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1080:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #93
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #110
    bl _ifacecall1_get_8
_proccall1081:
    add sp, #4*1 ; pop locals 1
    mov r2, r0
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #110
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #214
    bl _ifacecall1_get_8
_proccall1083:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_323      
.jmpz1082:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #214
    bl _ifacecall1_get_8
_proccall1084:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    b .condexprfin_3_323      
.condexprz_2_323:
    ldr r0, [sp, args@1]
.condexprfin_3_323:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    movs r1, #214
    pop {r2} ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
.ret.1957:
    @stackempty locals
.final_4_323:
image_scaledFont__P1957_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(149,5): game.pushScene
    ;
    .object game_pushScene__P2978 "game/game.ts(149,5): game.pushScene"
game_pushScene__P2978_pre:
    .section code
    .balign 4
    .section code
game_pushScene__P2978:
game_pushScene__P2978_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_pushScene__P2978_locals:
    bl game_currentScene__P2974
_proccall1085:
    str r0, [sp, locals@0]
    @stackempty locals
    bl particles_clearAll__P3156
_proccall1086:
    @stackempty locals
    bl particles_disableAll__P3157
_proccall1087:
    @stackempty locals
    movs r0, #67
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_324      
.jmpz1088:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #67
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_324:
.afterif_1_324:
    movs r0, #67
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    bl game_init__P4895
_proccall1089:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_324      
.jmpz1090:
    movs r0, #1
    ldr r1, _ldlit_227 ; game_pushScene_inline__P12888_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1091:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_324:
.afterif_3_324:
.ret.2978:
    @stackempty locals
    movs r0, #0
.final_4_324:
    add sp, #4*1 ; pop locals 1
game_pushScene__P2978_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(158,40): game.pushScene.inline
    ;
    .object game_pushScene_inline__P12888 "game/game.ts(158,40): game.pushScene.inline"
game_pushScene_inline__P12888_pre:
    .section code
    .balign 4
game_pushScene_inline__P12888_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_pushScene_inline__P12888_args@fn
game_pushScene_inline__P12888_args:
    cmp r4, #1
    bge game_pushScene_inline__P12888_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_pushScene_inline__P12888_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_pushScene_inline__P12888:
game_pushScene_inline__P12888_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_pushScene_inline__P12888_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_43
    add sp, #4*2 ; pop locals 2
.ret.12888:
    @stackempty locals
    movs r0, #0
.final_0_325:
game_pushScene_inline__P12888_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(403,5): particles.disableAll
    ;
    .object particles_disableAll__P3157 "game/particles.ts(403,5): particles.disableAll"
particles_disableAll__P3157_pre:
    .section code
    .balign 4
    .section code
particles_disableAll__P3157:
particles_disableAll__P3157_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_disableAll__P3157_locals:
    bl particles_particleSources__P5237
_proccall1093:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_326      
.jmpz1094:
    ldr r0, _ldlit_228 ; particles_disableAll_inline__P12898_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1095:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_pruneParticles__P5233
_proccall1096:
    @stackempty locals
.else_0_326:
.afterif_1_326:
.ret.3157:
    @stackempty locals
    movs r0, #0
.final_2_326:
    add sp, #4*1 ; pop locals 1
particles_disableAll__P3157_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(406,29): particles.disableAll.inline
    ;
    .object particles_disableAll_inline__P12898 "game/particles.ts(406,29): particles.disableAll.inline"
particles_disableAll_inline__P12898_pre:
    .section code
    .balign 4
particles_disableAll_inline__P12898_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_disableAll_inline__P12898_args@fn
particles_disableAll_inline__P12898_args:
    cmp r4, #1
    bge particles_disableAll_inline__P12898_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_disableAll_inline__P12898_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_disableAll_inline__P12898:
particles_disableAll_inline__P12898_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_disableAll_inline__P12898_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3139
_proccall1097:
    add sp, #4*2 ; pop locals 2
    movs r0, #10
.ret.12898:
    @stackempty locals
.final_0_327:
particles_disableAll_inline__P12898_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(392,5): particles.clearAll
    ;
    .object particles_clearAll__P3156 "game/particles.ts(392,5): particles.clearAll"
particles_clearAll__P3156_pre:
    .section code
    .balign 4
    .section code
particles_clearAll__P3156:
particles_clearAll__P3156_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_clearAll__P3156_locals:
    bl particles_particleSources__P5237
_proccall1098:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_328      
.jmpz1099:
    ldr r0, _ldlit_229 ; particles_clearAll_inline__P12909_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1100:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_pruneParticles__P5233
_proccall1101:
    @stackempty locals
.else_0_328:
.afterif_1_328:
.ret.3156:
    @stackempty locals
    movs r0, #0
.final_2_328:
    add sp, #4*1 ; pop locals 1
particles_clearAll__P3156_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(395,29): particles.clearAll.inline
    ;
    .object particles_clearAll_inline__P12909 "game/particles.ts(395,29): particles.clearAll.inline"
particles_clearAll_inline__P12909_pre:
    .section code
    .balign 4
particles_clearAll_inline__P12909_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_clearAll_inline__P12909_args@fn
particles_clearAll_inline__P12909_args:
    cmp r4, #1
    bge particles_clearAll_inline__P12909_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_clearAll_inline__P12909_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_clearAll_inline__P12909:
particles_clearAll_inline__P12909_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_clearAll_inline__P12909_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_clear__P3141
_proccall1102:
    add sp, #4*1 ; pop locals 1
.ret.12909:
    @stackempty locals
    movs r0, #0
.final_0_329:
particles_clearAll_inline__P12909_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_226:
 .word _str64
_ldlit_227:
 .word game_pushScene_inline__P12888_Lit
_ldlit_228:
 .word particles_disableAll_inline__P12898_Lit
_ldlit_229:
 .word particles_clearAll_inline__P12909_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(244,9): particles.ParticleSource.clear
    ;
    .object particles_ParticleSource_clear__P3141 "game/particles.ts(244,9): particles.ParticleSource.clear"
particles_ParticleSource_clear__P3141_pre:
    .section code
    .balign 4
particles_ParticleSource_clear__P3141_args:
    cmp r4, #1
    bge particles_ParticleSource_clear__P3141_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_ParticleSource_clear__P3141_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource_clear__P3141:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_clear__P3141_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_clear__P3141_locals:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #32]
    @stackempty locals
.ret.3141:
    @stackempty locals
    movs r0, #0
.final_0_330:
particles_ParticleSource_clear__P3141_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(406,5): scene.systemMenu.initScreen
    ;
    .object scene_systemMenu_initScreen__P5155 "game/systemmenu.ts(406,5): scene.systemMenu.initScreen"
scene_systemMenu_initScreen__P5155_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_initScreen__P5155:
scene_systemMenu_initScreen__P5155_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_initScreen__P5155_locals:
    ldr r0, _ldlit_231 ; _str52      
    push {r0} ; proc-arg
    bl settings_readNumber__P2045
_proccall1103:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_331      
.jmpz1104:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_setScreenBrightness__P1943
_proccall1105:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_331:
.afterif_1_331:
.ret.5155:
    @stackempty locals
    movs r0, #0
.final_2_331:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_initScreen__P5155_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(132,5): settings.readNumber
    ;
    .object settings_readNumber__P2045 "settings/settings.ts(132,5): settings.readNumber"
settings_readNumber__P2045_pre:
    .section code
    .balign 4
    .section code
settings_readNumber__P2045:
settings_readNumber__P2045_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
settings_readNumber__P2045_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_332      
.jmpz1106:
    movs r0, #0
    b .ret.2045      
    b .afterif_1_332      
.else_0_332:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_unpackNumberArray__P183
_proccall1107:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_332      
.jmpz1108:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_332      
.lazySkip_4_332:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
.lazy_3_332:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_332      
.jmpz1109:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    b .ret.2045      
.else_2_332:
.afterif_5_332:
    movs r0, #0
    b .ret.2045      
.afterif_1_332:
    movs r0, #0
.ret.2045:
    @stackempty locals
.final_6_332:
    add sp, #4*2 ; pop locals 2
settings_readNumber__P2045_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/buffer.ts(92,5): msgpack.unpackNumberArray
    ;
    .object msgpack_unpackNumberArray__P183 "base/buffer.ts(92,5): msgpack.unpackNumberArray"
msgpack_unpackNumberArray__P183_pre:
    .section code
    .balign 4
    .section code
msgpack_unpackNumberArray__P183:
msgpack_unpackNumberArray__P183_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_unpackNumberArray__P183_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
.cont.12951:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1110
    b .brk.12951      
.jmpz1110:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    push {r0} ; the one arg
    bl msgpack_tagFormat__P4356
_proccall1111:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #6
    bl _cmp_eqq
    beq .else_0_333      
.jmpz1112:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_49
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_333      
.jmpz1113:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_333      
.lazySkip_3_333:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_2_333:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_333      
.jmpz1114:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_4_333      
.else_1_333:
    movs r0, #6
    b .ret.183      
.afterif_4_333:
    b .afterif_5_333      
.else_0_333:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_50
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P175
_proccall1115:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.afterif_5_333:
.cont.12996:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #131
    bl _cmp_eqq
    beq .brk.12996      
.jmpz1116:
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
    b .cont.12996      
.brk.12996:
    b .cont.12951      
.brk.12951:
    ldr r0, [sp, locals@0]
.ret.183:
    @stackempty locals
.final_6_333:
    add sp, #4*3 ; pop locals 3
msgpack_unpackNumberArray__P183_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/systemmenu.ts(400,5): scene.systemMenu.initVolume
    ;
    .object scene_systemMenu_initVolume__P5154 "game/systemmenu.ts(400,5): scene.systemMenu.initVolume"
scene_systemMenu_initVolume__P5154_pre:
    .section code
    .balign 4
    .section code
scene_systemMenu_initVolume__P5154:
scene_systemMenu_initVolume__P5154_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
scene_systemMenu_initVolume__P5154_locals:
    ldr r0, _ldlit_232 ; _str51      
    push {r0} ; proc-arg
    bl settings_readNumber__P2045
_proccall1117:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_335      
.jmpz1118:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setVolume__P1617
_proccall1119:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_335:
.afterif_1_335:
.ret.5154:
    @stackempty locals
    movs r0, #0
.final_2_335:
    add sp, #4*1 ; pop locals 1
scene_systemMenu_initVolume__P5154_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(36,9): game.GameOverConfig.constructor
    ;
    .object game_GameOverConfig_constructor__P2963 "game/game.ts(36,9): game.GameOverConfig.constructor"
game_GameOverConfig_constructor__P2963_pre:
    .section code
    .balign 4
    .section code
game_GameOverConfig_constructor__P2963:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_GameOverConfig__C2948_validate_86
    mov lr, r7
game_GameOverConfig_constructor__P2963_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_GameOverConfig_constructor__P2963_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_GameOverConfig_init__P2964_nochk
_proccall1120:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.2963:
    @stackempty locals
.final_0_336:
game_GameOverConfig_constructor__P2963_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(40,9): game.GameOverConfig.init
    ;
    .object game_GameOverConfig_init__P2964 "game/game.ts(40,9): game.GameOverConfig.init"
game_GameOverConfig_init__P2964_pre:
    .section code
    .balign 4
game_GameOverConfig_init__P2964_args:
    cmp r4, #1
    bge game_GameOverConfig_init__P2964_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_GameOverConfig_init__P2964_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_231:
 .word _str52
_ldlit_232:
 .word _str51
.object POP
    .section code
game_GameOverConfig_init__P2964:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_GameOverConfig__C2948_validate_86
    mov lr, r7
game_GameOverConfig_init__P2964_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_GameOverConfig_init__P2964_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #19
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #77
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #39
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl music_melodyPlayable__P1905
_proccall1121:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #79
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl music_melodyPlayable__P1905
_proccall1122:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_234 ; _str47      
    str r1, [r0, #32]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_235 ; _str48      
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_236 ; _str49      
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #48]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #52]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #56]
    @stackempty locals
.ret.2964:
    @stackempty locals
    movs r0, #0
.final_0_337:
game_GameOverConfig_init__P2964_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(204,9): music.Melody.constructor
    ;
    .object music_Melody_constructor__P1626 "mixer---nrf52/melody.ts(204,9): music.Melody.constructor"
music_Melody_constructor__P1626_pre:
    .section code
    .balign 4
    .section code
music_Melody_constructor__P1626:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_Melody__C1623_validate_87
    mov lr, r7
music_Melody_constructor__P1626_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_Melody_constructor__P1626_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.1626:
    @stackempty locals
.final_0_338:
music_Melody_constructor__P1626_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/playable.ts(122,5): music.melodyPlayable
    ;
    .object music_melodyPlayable__P1905 "mixer---nrf52/playable.ts(122,5): music.melodyPlayable"
music_melodyPlayable__P1905_pre:
    .section code
    .balign 4
    .section code
music_melodyPlayable__P1905:
music_melodyPlayable__P1905_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_melodyPlayable__P1905_locals:
    ldr r0, _ldlit_237 ; music_MelodyPlayable__C1898_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl music_MelodyPlayable_constructor__P1899
_proccall1123:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
.ret.1905:
    @stackempty locals
.final_0_339:
music_melodyPlayable__P1905_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/playable.ts(69,9): music.MelodyPlayable.constructor
    ;
    .object music_MelodyPlayable_constructor__P1899 "mixer---nrf52/playable.ts(69,9): music.MelodyPlayable.constructor"
music_MelodyPlayable_constructor__P1899_pre:
    .section code
    .balign 4
    .section code
music_MelodyPlayable_constructor__P1899:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_MelodyPlayable__C1898_validate_88
    mov lr, r7
music_MelodyPlayable_constructor__P1899_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_MelodyPlayable_constructor__P1899_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    movs r0, #0
    @stackempty locals
    movs r0, #0
.ret.1899:
    @stackempty locals
.final_0_340:
music_MelodyPlayable_constructor__P1899_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/effects.ts(73,46): melt.inline
    ;
    .object melt_inline__P13069 "game/effects.ts(73,46): melt.inline"
melt_inline__P13069_pre:
    .section code
    .balign 4
melt_inline__P13069_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word melt_inline__P13069_args@fn
melt_inline__P13069_args:
    cmp r4, #2
    bge melt_inline__P13069_nochk
    push {lr}
    bl _expand_args_2_18
    bl melt_inline__P13069_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
melt_inline__P13069:
melt_inline__P13069_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
melt_inline__P13069_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #11
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.13081:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.13081      
.jmpz1124:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3038
_proccall1125:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #7
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3038
_proccall1126:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.cont.13081:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.13081      
.brk.13081:
.ret.13069:
    @stackempty locals
    movs r0, #0
.final_0_342:
    add sp, #4*5 ; pop locals 5
melt_inline__P13069_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(192,60): confetti.inline
    ;
    .object confetti_inline__P13122 "game/particleeffects.ts(192,60): confetti.inline"
confetti_inline__P13122_pre:
    .section code
    .balign 4
confetti_inline__P13122_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word confetti_inline__P13122_args@fn
confetti_inline__P13122_args:
    cmp r4, #2
    bge confetti_inline__P13122_nochk
    push {lr}
    bl _expand_args_2_18
    bl confetti_inline__P13122_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
confetti_inline__P13122:
confetti_inline__P13122_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
confetti_inline__P13122_locals:
    ldr r0, _ldlit_238 ; particles_ConfettiFactory__C3193_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #11
    lsls r1, r1, #5
    bl _ifacecall1_get_8
_proccall1128:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_343      
.jmpz1127:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #11
    lsls r1, r1, #5
    bl _ifacecall1_get_8
_proccall1129:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_343      
.condexprz_0_343:
    movs r0, #33
.condexprfin_1_343:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    movs r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl particles_ConfettiFactory_constructor__P3194
_proccall1130:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #61
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_setSpeed__P3170
_proccall1131:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_239 ; particles_ParticleSource__C3126_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl particles_ParticleSource_constructor__P3131
_proccall1132:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
.ret.13122:
    @stackempty locals
.final_2_343:
    add sp, #4*1 ; pop locals 1
confetti_inline__P13122_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(88,9): particles.ParticleSource.constructor
    ;
    .object particles_ParticleSource_constructor__P3131 "game/particles.ts(88,9): particles.ParticleSource.constructor"
particles_ParticleSource_constructor__P3131_pre:
    .section code
    .balign 4
    .section code
particles_ParticleSource_constructor__P3131:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_constructor__P3131_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource_constructor__P3131_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_BaseSprite_constructor__P2073
_proccall1133:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl particles_init__P5231
_proccall1134:
    @stackempty locals
    bl particles_particleSources__P5237
_proccall1135:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #5
    lsls r1, r1, #6
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _cmp_ge
    beq .else_0_344      
.jmpz1136:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl particles_sortSources__P5234
_proccall1137:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayShift__P102
_proccall1138:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl particles_ParticleSource_clear__P3141
_proccall1139:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl particles_ParticleSource_destroy__P3140
_proccall1140:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_344      
.object PUSH
.balign 4
_ldlit_234:
 .word _str47
_ldlit_235:
 .word _str48
_ldlit_236:
 .word _str49
_ldlit_237:
 .word music_MelodyPlayable__C1898_VT
_ldlit_238:
 .word particles_ConfettiFactory__C3193_VT
_ldlit_239:
 .word particles_ParticleSource__C3126_VT
.object POP
.else_0_344:
.afterif_1_344:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setRate__P3143_nochk
_proccall1141:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setAcceleration__P3135_nochk
_proccall1142:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setAnchor__P3142_nochk
_proccall1143:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_344      
.jmpz1144:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_344      
.lazySkip_3_344:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #81
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_2_344:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_setFactory__P3145_nochk
_proccall1145:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3139_nochk
_proccall1146:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3131:
    @stackempty locals
.final_4_344:
    add sp, #4*2 ; pop locals 2
particles_ParticleSource_constructor__P3131_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(99,9): particles.SprayFactory.constructor
    ;
    .object particles_SprayFactory_constructor__P3167 "game/particlefactories.ts(99,9): particles.SprayFactory.constructor"
particles_SprayFactory_constructor__P3167_pre:
    .section code
    .balign 4
    .section code
particles_SprayFactory_constructor__P3167:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3166_validate_89
    mov lr, r7
particles_SprayFactory_constructor__P3167_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_constructor__P3167_locals:
    movs r0, #0
    @stackempty locals
    bl particles_initTrig__P5252
_proccall1147:
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_setSpeed__P3170_nochk
_proccall1148:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_setDirection__P3171_nochk
_proccall1149:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3167:
    @stackempty locals
.final_0_345:
particles_SprayFactory_constructor__P3167_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(124,9): particles.SprayFactory.setDirection
    ;
    .object particles_SprayFactory_setDirection__P3171 "game/particlefactories.ts(124,9): particles.SprayFactory.setDirection"
particles_SprayFactory_setDirection__P3171_pre:
    .section code
    .balign 4
particles_SprayFactory_setDirection__P3171_args:
    cmp r4, #3
    bge particles_SprayFactory_setDirection__P3171_nochk
    push {lr}
    bl _expand_args_3_15
    bl particles_SprayFactory_setDirection__P3171_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
particles_SprayFactory_setDirection__P3171:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3166_validate_89
    mov lr, r7
particles_SprayFactory_setDirection__P3171_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_setDirection__P3171_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl particles_toRadians__P5257
_proccall1150:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #41
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl particles_toRadians__P5257
_proccall1151:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #41
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3171:
    @stackempty locals
    movs r0, #0
.final_0_346:
particles_SprayFactory_setDirection__P3171_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(46,5): particles.toRadians
    ;
    .object particles_toRadians__P5257 "game/particlefactories.ts(46,5): particles.toRadians"
particles_toRadians__P5257_pre:
    .section code
    .balign 4
    .section code
particles_toRadians__P5257:
particles_toRadians__P5257_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_toRadians__P5257_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_347      
.jmpz1152:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_abs__P128
_proccall1153:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #209
    bl _numops_subs
    str r0, [sp, args@0]
    @stackempty locals
    b .afterif_1_347      
.else_0_347:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@0]
    @stackempty locals
.afterif_1_347:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r1, _ldlit_241 ; _dbl79      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
.ret.5257:
    @stackempty locals
.final_2_347:
particles_toRadians__P5257_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(12,5): particles.initTrig
    ;
    .object particles_initTrig__P5252 "game/particlefactories.ts(12,5): particles.initTrig"
particles_initTrig__P5252_pre:
    .section code
    .balign 4
    .section code
particles_initTrig__P5252:
particles_initTrig__P5252_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_initTrig__P5252_locals:
    movs r0, #83
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_348      
.jmpz1154:
    movs r0, #201
    push {r0} ; proc-arg
    bl particles_cacheSin__P3160
_proccall1155:
    add sp, #4*1 ; pop locals 1
    movs r1, #83
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #201
    push {r0} ; proc-arg
    bl particles_cacheCos__P3161
_proccall1156:
    add sp, #4*1 ; pop locals 1
    movs r1, #21
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_348:
.afterif_1_348:
.ret.5252:
    @stackempty locals
    movs r0, #0
.final_2_348:
particles_initTrig__P5252_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(36,5): particles.cacheCos
    ;
    .object particles_cacheCos__P3161 "game/particlefactories.ts(36,5): particles.cacheCos"
particles_cacheCos__P3161_pre:
    .section code
    .balign 4
    .section code
particles_cacheCos__P3161:
particles_cacheCos__P3161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_cacheCos__P3161_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_242 ; _dbl78      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.13257:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@0]
    bl _cmp_lt
    beq .brk.13257      
.jmpz1157:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::cos
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1158:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13257:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.13257      
.brk.13257:
    ldr r0, [sp, locals@0]
.ret.3161:
    @stackempty locals
.final_0_349:
    add sp, #4*3 ; pop locals 3
particles_cacheCos__P3161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(23,5): particles.cacheSin
    ;
    .object particles_cacheSin__P3160 "game/particlefactories.ts(23,5): particles.cacheSin"
particles_cacheSin__P3160_pre:
    .section code
    .balign 4
    .section code
particles_cacheSin__P3160:
particles_cacheSin__P3160_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_cacheSin__P3160_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_242 ; _dbl78      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.13284:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@0]
    bl _cmp_lt
    beq .brk.13284      
.jmpz1159:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::sin
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1160:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13284:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.13284      
.brk.13284:
    ldr r0, [sp, locals@0]
.ret.3160:
    @stackempty locals
.final_0_350:
    add sp, #4*3 ; pop locals 3
particles_cacheSin__P3160_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(273,9): particles.ParticleSource.setFactory
    ;
    .object particles_ParticleSource_setFactory__P3145 "game/particles.ts(273,9): particles.ParticleSource.setFactory"
particles_ParticleSource_setFactory__P3145_pre:
    .section code
    .balign 4
particles_ParticleSource_setFactory__P3145_args:
    cmp r4, #2
    bge particles_ParticleSource_setFactory__P3145_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ParticleSource_setFactory__P3145_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setFactory__P3145:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_setFactory__P3145_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setFactory__P3145_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_352      
.jmpz1161:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #44]
    @stackempty locals
.else_0_352:
.afterif_1_352:
.ret.3145:
    @stackempty locals
    movs r0, #0
.final_2_352:
particles_ParticleSource_setFactory__P3145_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(252,9): particles.ParticleSource.setAnchor
    ;
    .object particles_ParticleSource_setAnchor__P3142 "game/particles.ts(252,9): particles.ParticleSource.setAnchor"
particles_ParticleSource_setAnchor__P3142_pre:
    .section code
    .balign 4
particles_ParticleSource_setAnchor__P3142_args:
    cmp r4, #2
    bge particles_ParticleSource_setAnchor__P3142_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ParticleSource_setAnchor__P3142_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setAnchor__P3142:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_setAnchor__P3142_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setAnchor__P3142_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
.ret.3142:
    @stackempty locals
    movs r0, #0
.final_0_353:
particles_ParticleSource_setAnchor__P3142_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(195,9): particles.ParticleSource.setAcceleration
    ;
    .object particles_ParticleSource_setAcceleration__P3135 "game/particles.ts(195,9): particles.ParticleSource.setAcceleration"
particles_ParticleSource_setAcceleration__P3135_pre:
    .section code
    .balign 4
particles_ParticleSource_setAcceleration__P3135_args:
    cmp r4, #3
    bge particles_ParticleSource_setAcceleration__P3135_nochk
    push {lr}
    bl _expand_args_3_15
    bl particles_ParticleSource_setAcceleration__P3135_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
particles_ParticleSource_setAcceleration__P3135:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_setAcceleration__P3135_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setAcceleration__P3135_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1162:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1163:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #52]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3135:
    @stackempty locals
    movs r0, #0
.final_0_354:
particles_ParticleSource_setAcceleration__P3135_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(260,9): particles.ParticleSource.setRate
    ;
    .object particles_ParticleSource_setRate__P3143 "game/particles.ts(260,9): particles.ParticleSource.setRate"
particles_ParticleSource_setRate__P3143_pre:
    .section code
    .balign 4
particles_ParticleSource_setRate__P3143_args:
    cmp r4, #2
    bge particles_ParticleSource_setRate__P3143_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ParticleSource_setRate__P3143_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource_setRate__P3143:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_setRate__P3143_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_setRate__P3143_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::ceil
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #36]
    @stackempty locals
.ret.3143:
    @stackempty locals
    movs r0, #0
.final_0_355:
particles_ParticleSource_setRate__P3143_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(234,9): particles.ParticleSource.destroy
    ;
    .object particles_ParticleSource_destroy__P3140 "game/particles.ts(234,9): particles.ParticleSource.destroy"
particles_ParticleSource_destroy__P3140_pre:
    .section code
    .balign 4
particles_ParticleSource_destroy__P3140_args:
    cmp r4, #1
    bge particles_ParticleSource_destroy__P3140_nochk
    push {lr}
    bl _expand_args_1_12
    bl particles_ParticleSource_destroy__P3140_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
particles_ParticleSource_destroy__P3140:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_destroy__P3140_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_destroy__P3140_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3139_nochk
_proccall1164:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #28]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource__prune__P3134_nochk
_proccall1165:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3140:
    @stackempty locals
    movs r0, #0
.final_0_356:
particles_ParticleSource_destroy__P3140_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(154,5): helpers.arrayShift
    ;
    .object helpers_arrayShift__P102 "base/pxt-helpers.ts(154,5): helpers.arrayShift"
helpers_arrayShift__P102_pre:
    .section code
    .balign 4
    .section code
helpers_arrayShift__P102:
helpers_arrayShift__P102_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arrayShift__P102_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*1 ; pop locals 1
.ret.102:
    @stackempty locals
.final_0_357:
helpers_arrayShift__P102_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(333,5): particles.sortSources
    ;
    .object particles_sortSources__P5234 "game/particles.ts(333,5): particles.sortSources"
particles_sortSources__P5234_pre:
    .section code
    .balign 4
    .section code
particles_sortSources__P5234:
particles_sortSources__P5234_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_sortSources__P5234_locals:
    ldr r0, _ldlit_243 ; particles_sortSources_inline__P13354_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_arraySort__P105
_proccall1166:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5234:
    @stackempty locals
    movs r0, #0
.final_0_358:
particles_sortSources__P5234_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(334,22): particles.sortSources.inline
    ;
    .object particles_sortSources_inline__P13354 "game/particles.ts(334,22): particles.sortSources.inline"
particles_sortSources_inline__P13354_pre:
    .section code
    .balign 4
particles_sortSources_inline__P13354_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_sortSources_inline__P13354_args@fn
particles_sortSources_inline__P13354_args:
    cmp r4, #2
    bge particles_sortSources_inline__P13354_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_sortSources_inline__P13354_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_241:
 .word _dbl79
_ldlit_242:
 .word _dbl78
_ldlit_243:
 .word particles_sortSources_inline__P13354_Lit
.object POP
    .section code
particles_sortSources_inline__P13354:
particles_sortSources_inline__P13354_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_sortSources_inline__P13354_locals:
    ldr r0, [sp, args@0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_ParticleSource__C3126_validate_76
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_359      
.jmpz1167:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_359      
.lazySkip_1_359:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_ParticleSource__C3126_validate_76
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.lazy_0_359:
; jmp value (already in r0)
.ret.13354:
    @stackempty locals
.final_2_359:
particles_sortSources_inline__P13354_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(10,26): MAX_SOURCES.inline
    ;
    .object MAX_SOURCES_inline__P13369 "game/particles.ts(10,26): MAX_SOURCES.inline"
MAX_SOURCES_inline__P13369_pre:
    .section code
    .balign 4
MAX_SOURCES_inline__P13369_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word MAX_SOURCES_inline__P13369_args@fn
MAX_SOURCES_inline__P13369_args:
    .section code
MAX_SOURCES_inline__P13369:
MAX_SOURCES_inline__P13369_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
MAX_SOURCES_inline__P13369_locals:
    bl control_ramSize__P346
_proccall1168:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, _ldlit_245 ; 204801      
    bl _cmp_le
    beq .else_0_360      
.jmpz1169:
    movs r0, #17
    b .ret.13369      
    b .afterif_1_360      
.else_0_360:
    ldr r0, [sp, locals@0]
    ldr r1, _ldlit_246 ; 409601      
    bl _cmp_le
    beq .else_2_360      
.jmpz1170:
    movs r0, #33
    b .ret.13369      
    b .afterif_3_360      
.else_2_360:
    movs r0, #101
    b .ret.13369      
.afterif_3_360:
.afterif_1_360:
    movs r0, #0
.ret.13369:
    @stackempty locals
.final_4_360:
    add sp, #4*1 ; pop locals 1
MAX_SOURCES_inline__P13369_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/control.ts(166,5): control.ramSize
    ;
    .object control_ramSize__P346 "base/control.ts(166,5): control.ramSize"
control_ramSize__P346_pre:
    .section code
    .balign 4
    .section code
control_ramSize__P346:
control_ramSize__P346_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_ramSize__P346_locals:
    movs r0, #205
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getConfig
    bl _numops_fromInt
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_361      
.jmpz1171:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_361      
.lazySkip_1_361:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl control::_ramSize
    bl _numops_fromInt
.lazy_0_361:
; jmp value (already in r0)
.ret.346:
    @stackempty locals
.final_2_361:
control_ramSize__P346_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(305,5): particles.init
    ;
    .object particles_init__P5231 "game/particles.ts(305,5): particles.init"
particles_init__P5231_pre:
    .section code
    .balign 4
    .section code
particles_init__P5231:
particles_init__P5231_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_init__P5231_locals:
    bl game_currentScene__P2974
_proccall1172:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #72]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_362      
.jmpz1173:
    b .ret.5231      
.else_0_362:
.afterif_1_362:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_scene_Scene__C2818_validate_11
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    movs r1, #85
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_247 ; particles_updateParticles__P5232_Lit      
    push {r0} ; proc-arg
    bl game_onUpdate__P2998
_proccall1174:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_248 ; particles_pruneParticles__P5233_Lit      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #245
    push {r0} ; proc-arg
    bl game_onUpdateInterval__P2999
_proccall1175:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5231:
    @stackempty locals
    movs r0, #0
.final_2_362:
    add sp, #4*1 ; pop locals 1
particles_init__P5231_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameutil.ts(27,5): game.onUpdateInterval
    ;
    .object game_onUpdateInterval__P2999 "game/gameutil.ts(27,5): game.onUpdateInterval"
game_onUpdateInterval__P2999_pre:
    .section code
    .balign 4
    .section code
game_onUpdateInterval__P2999:
game_onUpdateInterval__P2999_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_onUpdateInterval__P2999_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_363      
.jmpz1176:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_363      
.lazySkip_2_363:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_1_363:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_363      
.jmpz1177:
    b .ret.2999      
.else_0_363:
.afterif_3_363:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_249 ; game_onUpdateInterval_inline__P13413_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    bl game_eventContext__P2977
_proccall1178:
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #39
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall1179:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2999:
    @stackempty locals
    movs r0, #0
.final_4_363:
    add sp, #4*1 ; pop locals 1
game_onUpdateInterval__P2999_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameutil.ts(30,82): game.onUpdateInterval.inline
    ;
    .object game_onUpdateInterval_inline__P13413 "game/gameutil.ts(30,82): game.onUpdateInterval.inline"
game_onUpdateInterval_inline__P13413_pre:
    .section code
    .balign 4
game_onUpdateInterval_inline__P13413_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word game_onUpdateInterval_inline__P13413_args@fn
game_onUpdateInterval_inline__P13413_args:
    .section code
game_onUpdateInterval_inline__P13413:
game_onUpdateInterval_inline__P13413_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
game_onUpdateInterval_inline__P13413_locals:
    bl game_currentScene__P2974
_proccall1180:
    ldr r0, [r0, #92]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    ldr r1, [sp, locals@0]
    bl _cmp_le
    beq .else_0_364      
.jmpz1181:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    ldr r1, [r5, #4*4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_364:
.afterif_1_364:
.ret.13413:
    @stackempty locals
    movs r0, #0
.final_2_364:
    add sp, #4*1 ; pop locals 1
game_onUpdateInterval_inline__P13413_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(196,9): scene.Scene.millis
    ;
    .object scene_Scene_millis__P2844 "game/scene.ts(196,9): scene.Scene.millis"
scene_Scene_millis__P2844_pre:
    .section code
    .balign 4
scene_Scene_millis__P2844_args:
    cmp r4, #1
    bge scene_Scene_millis__P2844_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_millis__P2844_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_millis__P2844:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2818_validate_11
    mov lr, r7
scene_Scene_millis__P2844_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_millis__P2844_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
.ret.2844:
    @stackempty locals
.final_0_365:
scene_Scene_millis__P2844_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(314,5): particles.updateParticles
    ;
    .object particles_updateParticles__P5232 "game/particles.ts(314,5): particles.updateParticles"
particles_updateParticles__P5232_pre:
    .section code
    .balign 4
particles_updateParticles__P5232_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word particles_updateParticles__P5232_args@fn
particles_updateParticles__P5232_args:
    .section code
particles_updateParticles__P5232:
particles_updateParticles__P5232_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_updateParticles__P5232_locals:
    bl particles_particleSources__P5237
_proccall1183:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_366      
.jmpz1184:
    b .ret.5232      
.else_0_366:
.afterif_1_366:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl particles_sortSources__P5234
_proccall1185:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #85
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #85
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.13445:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.13445      
.jmpz1186:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl particles_ParticleSource__update__P3133
_proccall1187:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13445:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.13445      
.brk.13445:
.ret.5232:
    @stackempty locals
    movs r0, #0
.final_2_366:
    add sp, #4*4 ; pop locals 4
particles_updateParticles__P5232_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_245:
 .word 204801
_ldlit_246:
 .word 409601
_ldlit_247:
 .word particles_updateParticles__P5232_Lit
_ldlit_248:
 .word particles_pruneParticles__P5233_Lit
_ldlit_249:
 .word game_onUpdateInterval_inline__P13413_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(125,9): particles.ParticleSource._update
    ;
    .object particles_ParticleSource__update__P3133 "game/particles.ts(125,9): particles.ParticleSource._update"
particles_ParticleSource__update__P3133_pre:
    .section code
    .balign 4
particles_ParticleSource__update__P3133_args:
    cmp r4, #2
    bge particles_ParticleSource__update__P3133_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ParticleSource__update__P3133_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource__update__P3133:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource__update__P3133_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource__update__P3133_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_367      
.jmpz1188:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #24]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    movs r1, #1
    bl _cmp_le
    beq .else_1_367      
.jmpz1189:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_destroy__P3140_nochk
_proccall1190:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_1_367:
.afterif_2_367:
    b .afterif_3_367      
.else_0_367:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_367      
.jmpz1191:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_367      
.lazySkip_6_367:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #139
    bl _ifacecall1_get_8
_proccall1192:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.lazy_5_367:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_367      
.jmpz1193:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_367      
.lazySkip_8_367:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    movs r1, #139
    bl _ifacecall1_get_8
_proccall1194:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_ands
.lazy_7_367:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_367      
.jmpz1195:
    ldr r0, [sp, args@0]
    movs r1, #5
    lsls r1, r1, #8
    adds r1, #221
    str r1, [r0, #24]
    @stackempty locals
.else_4_367:
.afterif_9_367:
.afterif_3_367:
.cont.13492:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_11_367      
.jmpz1196:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_367      
.lazySkip_11_367:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_enabled__P3138_nochk
_proccall1197:
    add sp, #4*1 ; pop locals 1
.lazy_10_367:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.13492      
.jmpz1198:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #36]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #36
    bl _classCall_particles_ParticleFactory__C3162_90
_proccall1199:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_367      
.jmpz1200:
    b .cont.13492      
.else_12_367:
.afterif_13_367:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #32]
    @stackempty locals
    b .cont.13492      
.brk.13492:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_367      
.jmpz1201:
    b .ret.3133      
.else_14_367:
.afterif_15_367:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #16]
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1202:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_16_367      
.jmpz1203:
.cont.13536:
    ldr r0, [sp, locals@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_gt
    beq .else_17_367      
.jmpz1204:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #20]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2316_this_35
_proccall1205:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_17_367:
.afterif_18_367:
    ldr r0, [sp, locals@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.13536      
.jmpz1206:
    b .cont.13536      
.brk.13536:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    b .afterif_19_367      
.else_16_367:
.cont.13552:
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #20]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.13552      
.jmpz1207:
    b .cont.13552      
.brk.13552:
.afterif_19_367:
.ret.3133:
    @stackempty locals
    movs r0, #0
.final_20_367:
    add sp, #4*3 ; pop locals 3
particles_ParticleSource__update__P3133_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(278,9): particles.ParticleSource.updateParticle
    ;
    .object particles_ParticleSource_updateParticle__P5228 "game/particles.ts(278,9): particles.ParticleSource.updateParticle"
particles_ParticleSource_updateParticle__P5228_pre:
    .section code
    .balign 4
particles_ParticleSource_updateParticle__P5228_args:
    cmp r4, #3
    bge particles_ParticleSource_updateParticle__P5228_nochk
    push {lr}
    bl _expand_args_3_15
    bl particles_ParticleSource_updateParticle__P5228_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
particles_ParticleSource_updateParticle__P5228:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_updateParticle__P5228_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_updateParticle__P5228_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #21
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1208:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1209:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #4]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1210:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #8]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #16]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_mul__P160
_proccall1211:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5228:
    @stackempty locals
    movs r0, #0
.final_0_368:
particles_ParticleSource_updateParticle__P5228_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(68,9): particles.ParticleFactory.createParticle
    ;
    .object particles_ParticleFactory_createParticle__P3164 "game/particlefactories.ts(68,9): particles.ParticleFactory.createParticle"
particles_ParticleFactory_createParticle__P3164_pre:
    .section code
    .balign 4
particles_ParticleFactory_createParticle__P3164_args:
    cmp r4, #2
    bge particles_ParticleFactory_createParticle__P3164_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ParticleFactory_createParticle__P3164_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleFactory_createParticle__P3164:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleFactory__C3162_validate_91
    mov lr, r7
particles_ParticleFactory_createParticle__P3164_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_ParticleFactory_createParticle__P3164_locals:
    ldr r0, _ldlit_251 ; particles_Particle__C3107_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #179
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall1212:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1213:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #181
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall1214:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1215:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #233
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3164:
    @stackempty locals
.final_0_370:
    add sp, #4*1 ; pop locals 1
particles_ParticleFactory_createParticle__P3164_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/gameutil.ts(14,5): game.onUpdate
    ;
    .object game_onUpdate__P2998 "game/gameutil.ts(14,5): game.onUpdate"
game_onUpdate__P2998_pre:
    .section code
    .balign 4
    .section code
game_onUpdate__P2998:
game_onUpdate__P2998_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_onUpdate__P2998_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_371      
.jmpz1216:
    b .ret.2998      
.else_0_371:
.afterif_1_371:
    bl game_eventContext__P2977
_proccall1217:
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl control_EventContext_registerFrameHandler__P403
_proccall1218:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2998:
    @stackempty locals
    movs r0, #0
.final_2_371:
game_onUpdate__P2998_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(120,9): particles.SprayFactory.setSpeed
    ;
    .object particles_SprayFactory_setSpeed__P3170 "game/particlefactories.ts(120,9): particles.SprayFactory.setSpeed"
particles_SprayFactory_setSpeed__P3170_pre:
    .section code
    .balign 4
particles_SprayFactory_setSpeed__P3170_args:
    cmp r4, #2
    bge particles_SprayFactory_setSpeed__P3170_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_SprayFactory_setSpeed__P3170_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_SprayFactory_setSpeed__P3170:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3166_validate_89
    mov lr, r7
particles_SprayFactory_setSpeed__P3170_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_setSpeed__P3170_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1219:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3170:
    @stackempty locals
    movs r0, #0
.final_0_372:
particles_SprayFactory_setSpeed__P3170_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(248,9): particles.ConfettiFactory.constructor
    ;
    .object particles_ConfettiFactory_constructor__P3194 "game/particlefactories.ts(248,9): particles.ConfettiFactory.constructor"
particles_ConfettiFactory_constructor__P3194_pre:
    .section code
    .balign 4
    .section code
particles_ConfettiFactory_constructor__P3194:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ConfettiFactory__C3193_validate_92
    mov lr, r7
particles_ConfettiFactory_constructor__P3194_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ConfettiFactory_constructor__P3194_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, _ldlit_252 ; _hexlit80      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, _ldlit_253 ; _hexlit81      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_254 ; _hexlit82      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_255 ; _hexlit83      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_256 ; _hexlit84      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl particles_ShapeFactory_constructor__P3189
_proccall1220:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.13669:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.13669      
.jmpz1221:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl particles_ShapeFactory_addShape__P3190_nochk
_proccall1222:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.13669:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.13669      
.brk.13669:
    ldr r0, [sp, args@0]
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #35
    lsls r1, r1, #8
    adds r1, #41
    str r1, [r0, #28]
    @stackempty locals
    movs r0, #0
.ret.3194:
    @stackempty locals
.final_0_373:
    add sp, #4*2 ; pop locals 2
particles_ConfettiFactory_constructor__P3194_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(226,9): particles.ShapeFactory.addShape
    ;
    .object particles_ShapeFactory_addShape__P3190 "game/particlefactories.ts(226,9): particles.ShapeFactory.addShape"
particles_ShapeFactory_addShape__P3190_pre:
    .section code
    .balign 4
particles_ShapeFactory_addShape__P3190_args:
    cmp r4, #2
    bge particles_ShapeFactory_addShape__P3190_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ShapeFactory_addShape__P3190_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ShapeFactory_addShape__P3190:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3188_validate_93
    mov lr, r7
particles_ShapeFactory_addShape__P3190_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ShapeFactory_addShape__P3190_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_374      
.jmpz1223:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_374:
.afterif_1_374:
.ret.3190:
    @stackempty locals
    movs r0, #0
.final_2_374:
particles_ShapeFactory_addShape__P3190_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_251:
 .word particles_Particle__C3107_VT
_ldlit_252:
 .word _hexlit80
_ldlit_253:
 .word _hexlit81
_ldlit_254:
 .word _hexlit82
_ldlit_255:
 .word _hexlit83
_ldlit_256:
 .word _hexlit84
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(213,9): particles.ShapeFactory.constructor
    ;
    .object particles_ShapeFactory_constructor__P3189 "game/particlefactories.ts(213,9): particles.ShapeFactory.constructor"
particles_ShapeFactory_constructor__P3189_pre:
    .section code
    .balign 4
    .section code
particles_ShapeFactory_constructor__P3189:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3188_validate_93
    mov lr, r7
particles_ShapeFactory_constructor__P3189_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ShapeFactory_constructor__P3189_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_AreaFactory_constructor__P3177
_proccall1224:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1225:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1226:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3189:
    @stackempty locals
.final_0_375:
particles_ShapeFactory_constructor__P3189_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(140,9): particles.AreaFactory.constructor
    ;
    .object particles_AreaFactory_constructor__P3177 "game/particlefactories.ts(140,9): particles.AreaFactory.constructor"
particles_AreaFactory_constructor__P3177_pre:
    .section code
    .balign 4
    .section code
particles_AreaFactory_constructor__P3177:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_AreaFactory__C3172_validate_94
    mov lr, r7
particles_AreaFactory_constructor__P3177_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_AreaFactory_constructor__P3177_locals:
    movs r0, #181
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_constructor__P3167
_proccall1227:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_376      
.jmpz1228:
    ldr r0, [sp, args@3]
    b .condexprfin_1_376      
.condexprz_0_376:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
.condexprfin_1_376:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_376      
.jmpz1229:
    ldr r0, [sp, args@4]
    b .condexprfin_3_376      
.condexprz_2_376:
    movs r0, #6
    lsls r0, r0, #8
    adds r0, #165
.condexprfin_3_376:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, _ldlit_258 ; Math_FastRandom__C3034_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Math_FastRandom_constructor__P3036
_proccall1230:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #32]
    @stackempty locals
    movs r0, #0
.ret.3177:
    @stackempty locals
.final_4_376:
particles_AreaFactory_constructor__P3177_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(82,9): effects.ScreenEffect.constructor
    ;
    .object effects_ScreenEffect_constructor__P3242 "game/particleeffects.ts(82,9): effects.ScreenEffect.constructor"
effects_ScreenEffect_constructor__P3242_pre:
    .section code
    .balign 4
    .section code
effects_ScreenEffect_constructor__P3242:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ScreenEffect__C3241_validate_95
    mov lr, r7
effects_ScreenEffect_constructor__P3242_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ScreenEffect_constructor__P3242_locals:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl effects_ParticleEffect_constructor__P3238
_proccall1231:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #0
.ret.3242:
    @stackempty locals
.final_0_377:
effects_ScreenEffect_constructor__P3242_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particleeffects.ts(14,9): effects.ParticleEffect.constructor
    ;
    .object effects_ParticleEffect_constructor__P3238 "game/particleeffects.ts(14,9): effects.ParticleEffect.constructor"
effects_ParticleEffect_constructor__P3238_pre:
    .section code
    .balign 4
    .section code
effects_ParticleEffect_constructor__P3238:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_effects_ParticleEffect__C3237_validate_78
    mov lr, r7
effects_ParticleEffect_constructor__P3238_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
effects_ParticleEffect_constructor__P3238_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #0
.ret.3238:
    @stackempty locals
.final_0_378:
effects_ParticleEffect_constructor__P3238_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(5,1): Fx8
    ;
    .object Fx8__P149 "base/fixed.ts(5,1): Fx8"
Fx8__P149_pre:
    .section code
    .balign 4
    .section code
Fx8__P149:
Fx8__P149_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx8__P149_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
.ret.149:
    @stackempty locals
.final_0_379:
Fx8__P149_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritekind.ts(27,5): SpriteKind.create
    ;
    .object SpriteKind_create__P2454 "game/spritekind.ts(27,5): SpriteKind.create"
SpriteKind_create__P2454_pre:
    .section code
    .balign 4
    .section code
SpriteKind_create__P2454:
SpriteKind_create__P2454_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
SpriteKind_create__P2454_locals:
    movs r0, #43
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_380      
.jmpz1232:
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    movs r1, #43
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_380:
.afterif_1_380:
    movs r0, #43
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    movs r1, #43
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    pop {r0} ; tmpref @1
.ret.2454:
    @stackempty locals
.final_2_380:
SpriteKind_create__P2454_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(78,9): controller.Button.constructor
    ;
    .object controller_Button_constructor__P2172 "game/controllerbutton.ts(78,9): controller.Button.constructor"
controller_Button_constructor__P2172_pre:
    .section code
    .balign 4
    .section code
controller_Button_constructor__P2172:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_constructor__P2172_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_constructor__P2172_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_gt
    beq .else_0_381      
.jmpz1233:
    movs r0, #1
    ldr r1, _ldlit_259 ; controller_Button_inline__P13801_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_96
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #2
    movs r3, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_260 ; controller_Button_inline__P13808_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_96
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #3
    movs r3, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::internalOnEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    beq .else_1_381      
.jmpz1234:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::setupButton
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_381:
.afterif_2_381:
.else_0_381:
.afterif_3_381:
    movs r0, #0
.ret.2172:
    @stackempty locals
.final_4_381:
controller_Button_constructor__P2172_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(89,67): controller.Button.inline
    ;
    .object controller_Button_inline__P13801 "game/controllerbutton.ts(89,67): controller.Button.inline"
controller_Button_inline__P13801_pre:
    .section code
    .balign 4
controller_Button_inline__P13801_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Button_inline__P13801_args@fn
controller_Button_inline__P13801_args:
    .section code
controller_Button_inline__P13801:
controller_Button_inline__P13801_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_inline__P13801_locals:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl controller_Button_setPressed__P2179_nochk
_proccall1235:
    add sp, #4*2 ; pop locals 2
.ret.13801:
    @stackempty locals
    movs r0, #0
.final_0_382:
controller_Button_inline__P13801_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(90,69): controller.Button.inline
    ;
    .object controller_Button_inline__P13808 "game/controllerbutton.ts(90,69): controller.Button.inline"
controller_Button_inline__P13808_pre:
    .section code
    .balign 4
controller_Button_inline__P13808_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word controller_Button_inline__P13808_args@fn
controller_Button_inline__P13808_args:
    .section code
controller_Button_inline__P13808:
controller_Button_inline__P13808_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_inline__P13808_locals:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl controller_Button_setPressed__P2179_nochk
_proccall1236:
    add sp, #4*2 ; pop locals 2
.ret.13808:
    @stackempty locals
    movs r0, #0
.final_0_383:
controller_Button_inline__P13808_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(202,9): controller.Button.setPressed
    ;
    .object controller_Button_setPressed__P2179 "game/controllerbutton.ts(202,9): controller.Button.setPressed"
controller_Button_setPressed__P2179_pre:
    .section code
    .balign 4
controller_Button_setPressed__P2179_args:
    cmp r4, #2
    bge controller_Button_setPressed__P2179_nochk
    push {lr}
    bl _expand_args_2_18
    bl controller_Button_setPressed__P2179_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
controller_Button_setPressed__P2179:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_setPressed__P2179_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_setPressed__P2179_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    ldr r1, [sp, args@1]
    bl _cmp_neq
    beq .else_0_384      
.jmpz1237:
    bl power_poke__P1911
_proccall1238:
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_384      
.jmpz1239:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #66
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl controller_Controller_connected__P2133
_proccall1240:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_384:
.afterif_2_384:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_384      
.jmpz1241:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_raiseButtonDown__P4673_nochk
_proccall1242:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_4_384      
.else_3_384:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl controller_Button_raiseButtonUp__P4672_nochk
_proccall1243:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_4_384:
.else_0_384:
.afterif_5_384:
.ret.2179:
    @stackempty locals
    movs r0, #0
.final_6_384:
controller_Button_setPressed__P2179_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(97,9): controller.Button.raiseButtonUp
    ;
    .object controller_Button_raiseButtonUp__P4672 "game/controllerbutton.ts(97,9): controller.Button.raiseButtonUp"
controller_Button_raiseButtonUp__P4672_pre:
    .section code
    .balign 4
controller_Button_raiseButtonUp__P4672_args:
    cmp r4, #1
    bge controller_Button_raiseButtonUp__P4672_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_raiseButtonUp__P4672_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_raiseButtonUp__P4672:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_raiseButtonUp__P4672_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_raiseButtonUp__P4672_locals:
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_385      
.jmpz1244:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #1
    lsls r0, r0, #11
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_385      
.else_0_385:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #4
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_385:
.ret.4672:
    @stackempty locals
    movs r0, #0
.final_2_385:
controller_Button_raiseButtonUp__P4672_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(104,9): controller.Button.raiseButtonDown
    ;
    .object controller_Button_raiseButtonDown__P4673 "game/controllerbutton.ts(104,9): controller.Button.raiseButtonDown"
controller_Button_raiseButtonDown__P4673_pre:
    .section code
    .balign 4
controller_Button_raiseButtonDown__P4673_args:
    cmp r4, #1
    bge controller_Button_raiseButtonDown__P4673_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_raiseButtonDown__P4673_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_raiseButtonDown__P4673:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_raiseButtonDown__P4673_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_raiseButtonDown__P4673_locals:
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1245
    b .else_0_386      
.object PUSH
.balign 4
_ldlit_258:
 .word Math_FastRandom__C3034_VT
_ldlit_259:
 .word controller_Button_inline__P13801_Lit
_ldlit_260:
 .word controller_Button_inline__P13808_Lit
.object POP
.jmpz1245:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_386      
.else_0_386:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_64
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_386:
.ret.4673:
    @stackempty locals
    movs r0, #0
.final_2_386:
controller_Button_raiseButtonDown__P4673_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(478,5): game.addScenePushHandler
    ;
    .object game_addScenePushHandler__P2993 "game/game.ts(478,5): game.addScenePushHandler"
game_addScenePushHandler__P2993_pre:
    .section code
    .balign 4
    .section code
game_addScenePushHandler__P2993:
game_addScenePushHandler__P2993_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_addScenePushHandler__P2993_locals:
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_387      
.jmpz1246:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_387:
.afterif_1_387:
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_387      
.jmpz1247:
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_387:
.afterif_3_387:
.ret.2993:
    @stackempty locals
    movs r0, #0
.final_4_387:
game_addScenePushHandler__P2993_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(110,9): controller.Controller.id
    ;
    .object controller_Controller_id__P2118 "game/controller.ts(110,9): controller.Controller.id"
controller_Controller_id__P2118_pre:
    .section code
    .balign 4
controller_Controller_id__P2118_args:
    cmp r4, #1
    bge controller_Controller_id__P2118_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_id__P2118_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_id__P2118:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller_id__P2118_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_id__P2118_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
.ret.2118:
    @stackempty locals
.final_0_388:
controller_Controller_id__P2118_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(251,9): controller.Controller.connected
    ;
    .object controller_Controller_connected__P2132 "game/controller.ts(251,9): controller.Controller.connected"
controller_Controller_connected__P2132_pre:
    .section code
    .balign 4
controller_Controller_connected__P2132_args:
    cmp r4, #1
    bge controller_Controller_connected__P2132_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Controller_connected__P2132_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Controller_connected__P2132:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Controller__C2111_validate_44
    mov lr, r7
controller_Controller_connected__P2132_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Controller_connected__P2132_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.2132:
    @stackempty locals
.final_0_389:
controller_Controller_connected__P2132_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(119,5): game.currentScene
    ;
    .object game_currentScene__P2974 "game/game.ts(119,5): game.currentScene"
game_currentScene__P2974_pre:
    .section code
    .balign 4
    .section code
game_currentScene__P2974:
game_currentScene__P2974_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_currentScene__P2974_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl game_init__P4895
_proccall1248:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.ret.2974:
    @stackempty locals
.final_0_390:
game_currentScene__P2974_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/game.ts(502,5): game.addScenePopHandler
    ;
    .object game_addScenePopHandler__P2995 "game/game.ts(502,5): game.addScenePopHandler"
game_addScenePopHandler__P2995_pre:
    .section code
    .balign 4
    .section code
game_addScenePopHandler__P2995:
game_addScenePopHandler__P2995_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_addScenePopHandler__P2995_locals:
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_391      
.jmpz1249:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #17
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_0_391:
.afterif_1_391:
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_391      
.jmpz1250:
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_391:
.afterif_3_391:
.ret.2995:
    @stackempty locals
    movs r0, #0
.final_4_391:
game_addScenePopHandler__P2995_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(42,5): settings.initScopes
    ;
    .object settings_initScopes__P4578 "settings/settings.ts(42,5): settings.initScopes"
settings_initScopes__P4578_pre:
    .section code
    .balign 4
    .section code
settings_initScopes__P4578:
settings_initScopes__P4578_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_initScopes__P4578_locals:
    bl settings_runNumber__P2035
_proccall1251:
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #87
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeNumber__P2040
_proccall1252:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceSerialNumber
    bl _numops_fromInt
    ldr r1, _ldlit_262 ; _dbl26      
    bl _numops_ands
    push {r0} ; proc-arg
    bl _conv_46
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_46
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::programName
    push {r0} ; the one arg
    bl settings_setScope__P4577
_proccall1253:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4578:
    @stackempty locals
    movs r0, #0
.final_0_392:
    add sp, #4*1 ; pop locals 1
settings_initScopes__P4578_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(32,5): settings.setScope
    ;
    .object settings_setScope__P4577 "settings/settings.ts(32,5): settings.setScope"
settings_setScope__P4577_pre:
    .section code
    .balign 4
    .section code
settings_setScope__P4577:
settings_setScope__P4577_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_setScope__P4577_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_393      
.jmpz1254:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_393      
.lazySkip_2_393:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_393:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_393      
.jmpz1255:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #154
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_393:
.afterif_3_393:
    movs r0, #11
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readString__P2043
_proccall1256:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@0]
    bl _cmp_neq
    beq .else_4_393      
.jmpz1257:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #11
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeString__P2038
_proccall1258:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_393:
.afterif_5_393:
.ret.4577:
    @stackempty locals
    movs r0, #0
.final_6_393:
    add sp, #4*1 ; pop locals 1
settings_setScope__P4577_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(76,5): settings.writeString
    ;
    .object settings_writeString__P2038 "settings/settings.ts(76,5): settings.writeString"
settings_writeString__P2038_pre:
    .section code
    .balign 4
    .section code
settings_writeString__P2038:
settings_writeString__P2038_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeString__P2038_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2037
_proccall1259:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2038:
    @stackempty locals
    movs r0, #0
.final_0_394:
settings_writeString__P2038_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(111,5): settings.readString
    ;
    .object settings_readString__P2043 "settings/settings.ts(111,5): settings.readString"
settings_readString__P2043_pre:
    .section code
    .balign 4
    .section code
settings_readString__P2043:
settings_readString__P2043_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_readString__P2043_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_395      
.jmpz1260:
    movs r0, #0
    b .ret.2043      
    b .afterif_1_395      
.else_0_395:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    b .ret.2043      
.afterif_1_395:
    movs r0, #0
.ret.2043:
    @stackempty locals
.final_2_395:
    add sp, #4*1 ; pop locals 1
settings_readString__P2043_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(28,5): settings.runNumber
    ;
    .object settings_runNumber__P2035 "settings/settings.ts(28,5): settings.runNumber"
settings_runNumber__P2035_pre:
    .section code
    .balign 4
    .section code
settings_runNumber__P2035:
settings_runNumber__P2035_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_runNumber__P2035_locals:
    movs r0, #87
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readNumber__P2045
_proccall1262:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_396      
.jmpz1261:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_396      
.lazySkip_1_396:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_396:
; jmp value (already in r0)
.ret.2035:
    @stackempty locals
.final_2_396:
settings_runNumber__P2035_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/frame.ts(5,5): control.__screen.update
    ;
    .object control___screen_update__P1971 "screen---st7735/frame.ts(5,5): control.__screen.update"
control___screen_update__P1971_pre:
    .section code
    .balign 4
control___screen_update__P1971_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control___screen_update__P1971_args@fn
control___screen_update__P1971_args:
    .section code
control___screen_update__P1971:
control___screen_update__P1971_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control___screen_update__P1971_locals:
    movs r0, #33
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_397      
.jmpz1263:
    movs r0, #33
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _lambda_call0_9
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_397:
.afterif_1_397:
    movs r0, #66
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
.ret.1971:
    @stackempty locals
    movs r0, #0
.final_2_397:
control___screen_update__P1971_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pause.ts(8,1): pause
    ;
    .object pause__P413 "base/pause.ts(8,1): pause"
pause__P413_pre:
    .section code
    .balign 4
    .section code
pause__P413:
pause__P413_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pause__P413_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_46
    mov r7, sp
    str r7, [r6, #4]
    bl loops::pause
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.413:
    @stackempty locals
    movs r0, #0
.final_0_398:
pause__P413_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(240,9): particles.ShapeFactory.createParticle
    ;
    .object particles_ShapeFactory_createParticle__P3192 "game/particlefactories.ts(240,9): particles.ShapeFactory.createParticle"
particles_ShapeFactory_createParticle__P3192_pre:
    .section code
    .balign 4
particles_ShapeFactory_createParticle__P3192_args:
    cmp r4, #2
    bge particles_ShapeFactory_createParticle__P3192_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ShapeFactory_createParticle__P3192_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ShapeFactory_createParticle__P3192:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3188_validate_93
    mov lr, r7
particles_ShapeFactory_createParticle__P3192_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_ShapeFactory_createParticle__P3192_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_AreaFactory_createParticle__P3178
_proccall1265:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r3, r0
    movs r0, #29
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_FastRandom_randomRange__P3038
_proccall1266:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3192:
    @stackempty locals
.final_0_399:
    add sp, #4*1 ; pop locals 1
particles_ShapeFactory_createParticle__P3192_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(149,9): particles.AreaFactory.createParticle
    ;
    .object particles_AreaFactory_createParticle__P3178 "game/particlefactories.ts(149,9): particles.AreaFactory.createParticle"
particles_AreaFactory_createParticle__P3178_pre:
    .section code
    .balign 4
particles_AreaFactory_createParticle__P3178_args:
    cmp r4, #2
    bge particles_AreaFactory_createParticle__P3178_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_AreaFactory_createParticle__P3178_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_262:
 .word _dbl26
.object POP
    .section code
particles_AreaFactory_createParticle__P3178:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_AreaFactory__C3172_validate_94
    mov lr, r7
particles_AreaFactory_createParticle__P3178_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_AreaFactory_createParticle__P3178_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_SprayFactory_createParticle__P3168
_proccall1267:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl Math_FastRandom_randomRange__P3038
_proccall1268:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3038
_proccall1269:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1270:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall1_get_8
_proccall1272:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_400      
.jmpz1271:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #162
    bl _ifacecall1_get_8
_proccall1273:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_400      
.condexprz_0_400:
    movs r0, #1
.condexprfin_1_400:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3038
_proccall1274:
    add sp, #4*3 ; pop locals 3
    ldr r1, [sp, #4*1] ; tmpref @1
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1275:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #8]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3178:
    @stackempty locals
.final_2_400:
    add sp, #4*1 ; pop locals 1
particles_AreaFactory_createParticle__P3178_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(24,5): Fx.iadd
    ;
    .object Fx_iadd__P158 "base/fixed.ts(24,5): Fx.iadd"
Fx_iadd__P158_pre:
    .section code
    .balign 4
    .section code
Fx_iadd__P158:
Fx_iadd__P158_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_iadd__P158_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@1]
    bl _numops_adds
.ret.158:
    @stackempty locals
.final_0_401:
Fx_iadd__P158_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(106,9): particles.SprayFactory.createParticle
    ;
    .object particles_SprayFactory_createParticle__P3168 "game/particlefactories.ts(106,9): particles.SprayFactory.createParticle"
particles_SprayFactory_createParticle__P3168_pre:
    .section code
    .balign 4
particles_SprayFactory_createParticle__P3168_args:
    cmp r4, #2
    bge particles_SprayFactory_createParticle__P3168_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_SprayFactory_createParticle__P3168_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_SprayFactory_createParticle__P3168:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3166_validate_89
    mov lr, r7
particles_SprayFactory_createParticle__P3168_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_SprayFactory_createParticle__P3168_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleFactory_createParticle__P3164
_proccall1276:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3038
_proccall1277:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #83
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall1278:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #21
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_mul__P160
_proccall1279:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_particles_Particle__C3107_validate_77
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3168:
    @stackempty locals
.final_0_402:
    add sp, #4*2 ; pop locals 2
particles_SprayFactory_createParticle__P3168_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function mixer---nrf52/melody.ts(319,9): music.Melody.toString
    ;
    .object music_Melody_toString__P1632 "mixer---nrf52/melody.ts(319,9): music.Melody.toString"
music_Melody_toString__P1632_pre:
    .section code
    .balign 4
music_Melody_toString__P1632_args:
    cmp r4, #1
    bge music_Melody_toString__P1632_nochk
    push {lr}
    bl _expand_args_1_12
    bl music_Melody_toString__P1632_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
music_Melody_toString__P1632:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_Melody__C1623_validate_87
    mov lr, r7
music_Melody_toString__P1632_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_Melody_toString__P1632_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.1632:
    @stackempty locals
.final_0_403:
music_Melody_toString__P1632_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(113,9): particles.ParticleSource.__draw
    ;
    .object particles_ParticleSource___draw__P3132 "game/particles.ts(113,9): particles.ParticleSource.__draw"
particles_ParticleSource___draw__P3132_pre:
    .section code
    .balign 4
particles_ParticleSource___draw__P3132_args:
    cmp r4, #2
    bge particles_ParticleSource___draw__P3132_nochk
    push {lr}
    bl _expand_args_2_18
    bl particles_ParticleSource___draw__P3132_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
particles_ParticleSource___draw__P3132:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource___draw__P3132_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
particles_ParticleSource___draw__P3132_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_404      
.jmpz1280:
    movs r0, #1
    b .condexprfin_1_404      
.condexprz_0_404:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1281:
    add sp, #4*1 ; pop locals 1
.condexprfin_1_404:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_404      
.jmpz1282:
    movs r0, #1
    b .condexprfin_3_404      
.condexprz_2_404:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1283:
    add sp, #4*1 ; pop locals 1
.condexprfin_3_404:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
.cont.14107:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.14107      
.jmpz1284:
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_gt
    beq .else_4_404      
.jmpz1285:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl particles_ParticleSource_drawParticle__P5229_nochk
_proccall1286:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_4_404:
.afterif_5_404:
    ldr r0, [sp, locals@0]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #24]
    str r0, [sp, locals@0]
    @stackempty locals
    b .cont.14107      
.brk.14107:
.ret.3132:
    @stackempty locals
    movs r0, #0
.final_6_404:
    add sp, #4*3 ; pop locals 3
particles_ParticleSource___draw__P3132_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particles.ts(288,9): particles.ParticleSource.drawParticle
    ;
    .object particles_ParticleSource_drawParticle__P5229 "game/particles.ts(288,9): particles.ParticleSource.drawParticle"
particles_ParticleSource_drawParticle__P5229_pre:
    .section code
    .balign 4
particles_ParticleSource_drawParticle__P5229_args:
    cmp r4, #4
    bge particles_ParticleSource_drawParticle__P5229_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_ParticleSource_drawParticle__P5229_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_ParticleSource_drawParticle__P5229:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleSource__C3126_validate_76
    mov lr, r7
particles_ParticleSource_drawParticle__P5229_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleSource_drawParticle__P5229_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #4]
    ldr r1, [sp, args@2]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #8]
    ldr r1, [sp, args@3]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    movs r1, #40
    bl _classCall_particles_ParticleFactory__C3162_90
_proccall1287:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.5229:
    @stackempty locals
    movs r0, #0
.final_0_405:
particles_ParticleSource_drawParticle__P5229_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(86,9): particles.ParticleFactory.drawParticle
    ;
    .object particles_ParticleFactory_drawParticle__P3165 "game/particlefactories.ts(86,9): particles.ParticleFactory.drawParticle"
particles_ParticleFactory_drawParticle__P3165_pre:
    .section code
    .balign 4
particles_ParticleFactory_drawParticle__P3165_args:
    cmp r4, #4
    bge particles_ParticleFactory_drawParticle__P3165_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_ParticleFactory_drawParticle__P3165_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_ParticleFactory_drawParticle__P3165:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ParticleFactory__C3162_validate_91
    mov lr, r7
particles_ParticleFactory_drawParticle__P3165_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_ParticleFactory_drawParticle__P3165_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1288:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1289:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_36
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3165:
    @stackempty locals
    movs r0, #0
.final_0_406:
particles_ParticleFactory_drawParticle__P3165_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(113,9): sprites.SpriteMap.toString
    ;
    .object sprites_SpriteMap_toString__P2429 "game/spritemap.ts(113,9): sprites.SpriteMap.toString"
sprites_SpriteMap_toString__P2429_pre:
    .section code
    .balign 4
sprites_SpriteMap_toString__P2429_args:
    cmp r4, #1
    bge sprites_SpriteMap_toString__P2429_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteMap_toString__P2429_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteMap_toString__P2429:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_toString__P2429_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteMap_toString__P2429_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_264 ; _str37      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r3, r0
    ldr r0, _ldlit_265 ; length_inline__P14162_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P110
_proccall1290:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_266 ; _str38      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.2429:
    @stackempty locals
.final_0_407:
sprites_SpriteMap_toString__P2429_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(114,75): length.inline
    ;
    .object length_inline__P14162 "game/spritemap.ts(114,75): length.inline"
length_inline__P14162_pre:
    .section code
    .balign 4
length_inline__P14162_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word length_inline__P14162_args@fn
length_inline__P14162_args:
    cmp r4, #1
    bge length_inline__P14162_nochk
    push {lr}
    bl _expand_args_1_12
    bl length_inline__P14162_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
length_inline__P14162:
length_inline__P14162_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
length_inline__P14162_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.14162:
    @stackempty locals
.final_0_408:
length_inline__P14162_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(655,5): ArcadePhysicsEngine.moveSprite
    ;
    .object ArcadePhysicsEngine_moveSprite__P2516 "game/physics.ts(655,5): ArcadePhysicsEngine.moveSprite"
ArcadePhysicsEngine_moveSprite__P2516_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_moveSprite__P2516_args:
    cmp r4, #4
    bge ArcadePhysicsEngine_moveSprite__P2516_nochk
    push {lr}
    bl _expand_args_4_74
    bl ArcadePhysicsEngine_moveSprite__P2516_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
ArcadePhysicsEngine_moveSprite__P2516:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_moveSprite__P2516_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_moveSprite__P2516_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    ldr r1, [sp, args@2]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2974
_proccall1291:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_409      
.jmpz1292:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_409      
.lazySkip_2_409:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2722
_proccall1293:
    add sp, #4*1 ; pop locals 1
.lazy_1_409:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1294
    b .else_0_409      
.jmpz1294:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1295:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1297:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_abs__P128
_proccall1298:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_409      
.jmpz1296:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_409      
.lazySkip_5_409:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1299:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_abs__P128
_proccall1300:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_4_409:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_409      
.jmpz1301:
    ldr r0, _ldlit_267 ; MovingSprite__C2500_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    ldr r0, [sp, #4*7] ; tmpref @1
    push {r0} ; proc-arg
    bl MovingSprite_constructor__P2501
_proccall1302:
    add sp, #4*8 ; pop locals 8
    pop {r0} ; tmpref @1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_tilemapCollisions__P4743_nochk
_proccall1303:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_6_409      
.else_3_409:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2733
_proccall1305:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_409      
.jmpz1304:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_409      
.lazySkip_9_409:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_canResolveClipping__P4745_nochk
_proccall1306:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_8_409:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_409      
.jmpz1307:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_10_409      
.else_7_409:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    ldr r1, _ldlit_268 ; -513      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_10_409:
.afterif_6_409:
.else_0_409:
.afterif_11_409:
.ret.2516:
    @stackempty locals
    movs r0, #0
.final_12_409:
    add sp, #4*3 ; pop locals 3
ArcadePhysicsEngine_moveSprite__P2516_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(689,5): ArcadePhysicsEngine.canResolveClipping
    ;
    .object ArcadePhysicsEngine_canResolveClipping__P4745 "game/physics.ts(689,5): ArcadePhysicsEngine.canResolveClipping"
ArcadePhysicsEngine_canResolveClipping__P4745_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_canResolveClipping__P4745_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_canResolveClipping__P4745_nochk
    push {lr}
    bl _expand_args_3_15
    bl ArcadePhysicsEngine_canResolveClipping__P4745_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
.object PUSH
.balign 4
_ldlit_264:
 .word _str37
_ldlit_265:
 .word length_inline__P14162_Lit
_ldlit_266:
 .word _str38
_ldlit_267:
 .word MovingSprite__C2500_VT
_ldlit_268:
 .word -513
.object POP
    .section code
ArcadePhysicsEngine_canResolveClipping__P4745:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_canResolveClipping__P4745_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_canResolveClipping__P4745_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_isStatic__P2370
_proccall1309:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_410      
.jmpz1308:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2316_97
_proccall1310:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_410:
.afterif_1_410:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_maxStep__P2508_nochk
_proccall1311:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1312:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1313:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1314:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1315:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1316:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1317:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1318:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1319:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@9]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_2_410      
.jmpz1320:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1321:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2733
_proccall1323:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_410      
.jmpz1322:
    movs r0, #66
    b .ret.4745      
    b .afterif_4_410      
.else_3_410:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@3]
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #16]
    @stackempty locals
.afterif_4_410:
.else_2_410:
.afterif_5_410:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@7]
    bl _numops_subs
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_6_410      
.jmpz1324:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1325:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2733
_proccall1327:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_410      
.jmpz1326:
    movs r0, #66
    b .ret.4745      
    b .afterif_8_410      
.else_7_410:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@3]
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #16]
    @stackempty locals
.afterif_8_410:
.else_6_410:
.afterif_9_410:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_10_410      
.jmpz1328:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1329:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2733
_proccall1331:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_410      
.jmpz1330:
    movs r0, #66
    b .ret.4745      
    b .afterif_12_410      
.else_11_410:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@4]
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #12]
    @stackempty locals
.afterif_12_410:
.else_10_410:
.afterif_13_410:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@5]
    bl _numops_subs
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@12]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .else_14_410      
.jmpz1332:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    bl Fx8__P149
_proccall1333:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2733
_proccall1335:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_410      
.jmpz1334:
    movs r0, #66
    b .ret.4745      
    b .afterif_16_410      
.else_15_410:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@4]
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #12]
    @stackempty locals
.afterif_16_410:
.else_14_410:
.afterif_17_410:
    movs r0, #10
.ret.4745:
    @stackempty locals
.final_18_410:
    add sp, #4*13 ; pop locals 13
ArcadePhysicsEngine_canResolveClipping__P4745_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(34,9): game.Hitbox.bottom
    ;
    .object game_Hitbox_bottom__P2196 "game/hitbox.ts(34,9): game.Hitbox.bottom"
game_Hitbox_bottom__P2196_pre:
    .section code
    .balign 4
game_Hitbox_bottom__P2196_args:
    cmp r4, #1
    bge game_Hitbox_bottom__P2196_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_bottom__P2196_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_bottom__P2196:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_37
    mov lr, r7
game_Hitbox_bottom__P2196_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_bottom__P2196_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194_nochk
_proccall1336:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.ret.2196:
    @stackempty locals
.final_0_411:
game_Hitbox_bottom__P2196_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(23,9): game.Hitbox.top
    ;
    .object game_Hitbox_top__P2194 "game/hitbox.ts(23,9): game.Hitbox.top"
game_Hitbox_top__P2194_pre:
    .section code
    .balign 4
game_Hitbox_top__P2194_args:
    cmp r4, #1
    bge game_Hitbox_top__P2194_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_top__P2194_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_top__P2194:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_37
    mov lr, r7
game_Hitbox_top__P2194_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_top__P2194_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
.ret.2194:
    @stackempty locals
.final_0_412:
game_Hitbox_top__P2194_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(27,9): game.Hitbox.right
    ;
    .object game_Hitbox_right__P2195 "game/hitbox.ts(27,9): game.Hitbox.right"
game_Hitbox_right__P2195_pre:
    .section code
    .balign 4
game_Hitbox_right__P2195_args:
    cmp r4, #1
    bge game_Hitbox_right__P2195_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_right__P2195_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_right__P2195:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_37
    mov lr, r7
game_Hitbox_right__P2195_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_right__P2195_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193_nochk
_proccall1337:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.ret.2195:
    @stackempty locals
.final_0_413:
game_Hitbox_right__P2195_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(19,9): game.Hitbox.left
    ;
    .object game_Hitbox_left__P2193 "game/hitbox.ts(19,9): game.Hitbox.left"
game_Hitbox_left__P2193_pre:
    .section code
    .balign 4
game_Hitbox_left__P2193_args:
    cmp r4, #1
    bge game_Hitbox_left__P2193_nochk
    push {lr}
    bl _expand_args_1_12
    bl game_Hitbox_left__P2193_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
game_Hitbox_left__P2193:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_37
    mov lr, r7
game_Hitbox_left__P2193_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_left__P2193_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
.ret.2193:
    @stackempty locals
.final_0_414:
game_Hitbox_left__P2193_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(356,5): Sprite.isStatic
    ;
    .object Sprite_isStatic__P2370 "game/sprite.ts(356,5): Sprite.isStatic"
Sprite_isStatic__P2370_pre:
    .section code
    .balign 4
Sprite_isStatic__P2370_args:
    cmp r4, #1
    bge Sprite_isStatic__P2370_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_isStatic__P2370_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_isStatic__P2370:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_isStatic__P2370_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_isStatic__P2370_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::isStatic
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2370:
    @stackempty locals
.final_0_415:
Sprite_isStatic__P2370_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(535,9): tiles.TileMap.isOnWall
    ;
    .object tiles_TileMap_isOnWall__P2733 "game/tilemap.ts(535,9): tiles.TileMap.isOnWall"
tiles_TileMap_isOnWall__P2733_pre:
    .section code
    .balign 4
tiles_TileMap_isOnWall__P2733_args:
    cmp r4, #2
    bge tiles_TileMap_isOnWall__P2733_nochk
    push {lr}
    bl _expand_args_2_18
    bl tiles_TileMap_isOnWall__P2733_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_isOnWall__P2733:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_isOnWall__P2733_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMap_isOnWall__P2733_locals:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1338:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1339:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1340:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1341:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1342:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1343:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1344:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_toIntShifted__P156
_proccall1345:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@1]
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.14475:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .brk.14475      
.jmpz1346:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.14480:
    ldr r0, [sp, locals@6]
    ldr r1, [sp, locals@4]
    bl _cmp_le
    beq .brk.14480      
.jmpz1347:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2731_nochk
_proccall1349:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_416      
.jmpz1348:
    movs r0, #66
    b .ret.2733      
.else_0_416:
.afterif_1_416:
.cont.14480:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    @stackempty locals
    b .fortop.14480      
.brk.14480:
.cont.14475:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    b .fortop.14475      
.brk.14475:
    movs r0, #10
.ret.2733:
    @stackempty locals
.final_2_416:
    add sp, #4*7 ; pop locals 7
tiles_TileMap_isOnWall__P2733_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(516,9): tiles.TileMap.isObstacle
    ;
    .object tiles_TileMap_isObstacle__P2731 "game/tilemap.ts(516,9): tiles.TileMap.isObstacle"
tiles_TileMap_isObstacle__P2731_pre:
    .section code
    .balign 4
tiles_TileMap_isObstacle__P2731_args:
    cmp r4, #3
    bge tiles_TileMap_isObstacle__P2731_nochk
    push {lr}
    bl _expand_args_3_15
    bl tiles_TileMap_isObstacle__P2731_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_isObstacle__P2731:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_isObstacle__P2731_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_isObstacle__P2731_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2722_nochk
_proccall1351:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_417      
.jmpz1350:
    movs r0, #10
    b .ret.2731      
.else_0_417:
.afterif_1_417:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_isOutsideMap__P2704
_proccall1353:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_417      
.jmpz1352:
    movs r0, #66
    b .ret.2731      
.else_2_417:
.afterif_3_417:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_isWall__P2703
_proccall1354:
    add sp, #4*3 ; pop locals 3
.ret.2731:
    @stackempty locals
.final_4_417:
tiles_TileMap_isObstacle__P2731_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(275,9): tiles.TileMapData.isWall
    ;
    .object tiles_TileMapData_isWall__P2703 "game/tilemap.ts(275,9): tiles.TileMapData.isWall"
tiles_TileMapData_isWall__P2703_pre:
    .section code
    .balign 4
tiles_TileMapData_isWall__P2703_args:
    cmp r4, #3
    bge tiles_TileMapData_isWall__P2703_nochk
    push {lr}
    bl _expand_args_3_15
    bl tiles_TileMapData_isWall__P2703_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMapData_isWall__P2703:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2692_validate_62
    mov lr, r7
tiles_TileMapData_isWall__P2703_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_isWall__P2703_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_36
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::getPixel
    add sp, #4*3 ; pop locals 3
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.ret.2703:
    @stackempty locals
.final_0_418:
tiles_TileMapData_isWall__P2703_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(279,9): tiles.TileMapData.isOutsideMap
    ;
    .object tiles_TileMapData_isOutsideMap__P2704 "game/tilemap.ts(279,9): tiles.TileMapData.isOutsideMap"
tiles_TileMapData_isOutsideMap__P2704_pre:
    .section code
    .balign 4
tiles_TileMapData_isOutsideMap__P2704_args:
    cmp r4, #3
    bge tiles_TileMapData_isOutsideMap__P2704_nochk
    push {lr}
    bl _expand_args_3_15
    bl tiles_TileMapData_isOutsideMap__P2704_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMapData_isOutsideMap__P2704:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2692_validate_62
    mov lr, r7
tiles_TileMapData_isOutsideMap__P2704_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_isOutsideMap__P2704_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_419      
.jmpz1355:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_419      
.lazySkip_1_419:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_0_419:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_419      
.jmpz1356:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_419      
.lazySkip_3_419:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_2_419:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_5_419      
.jmpz1357:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_419      
.lazySkip_5_419:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_4_419:
; jmp value (already in r0)
.ret.2704:
    @stackempty locals
.final_6_419:
tiles_TileMapData_isOutsideMap__P2704_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(380,5): ArcadePhysicsEngine.tilemapCollisions
    ;
    .object ArcadePhysicsEngine_tilemapCollisions__P4743 "game/physics.ts(380,5): ArcadePhysicsEngine.tilemapCollisions"
ArcadePhysicsEngine_tilemapCollisions__P4743_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapCollisions__P4743_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_tilemapCollisions__P4743_nochk
    push {lr}
    bl _expand_args_3_15
    bl ArcadePhysicsEngine_tilemapCollisions__P4743_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapCollisions__P4743:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_tilemapCollisions__P4743_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_tilemapCollisions__P4743_locals:
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_420      
.jmpz1358:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2733
_proccall1360:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_420      
.jmpz1359:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    ldr r1, _ldlit_270 ; -513      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_1_420:
.afterif_2_420:
.else_0_420:
.afterif_3_420:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_isStatic__P2370
_proccall1362:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_420      
.jmpz1361:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2316_97
_proccall1363:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_420:
.afterif_5_420:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    ldr r0, [r0, #4]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #72]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #76]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1364
    bb .else_6_420
.jmpz1364:
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _cmp_neqq
    bne .jmpz1365
    b .else_7_420      
.jmpz1365:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_420      
.jmpz1366:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1367:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    b .condexprfin_9_420      
.condexprz_8_420:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1368:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.condexprfin_9_420:
; jmp value (already in r0)
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1369:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1370:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    str r0, [sp, locals@9]
    @stackempty locals
.fortop.14621:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1372:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1373:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.14621      
.jmpz1371:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1374:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1375:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1376:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2731
_proccall1378:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_420      
.jmpz1377:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_getObstacle__P2732
_proccall1379:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@11]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_271 ; ArcadePhysicsEngine_tilemapCollisions_inline__P14653_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@11]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl helpers_arraySome__P107
_proccall1381:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_420      
.jmpz1380:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_11_420:
.afterif_12_420:
.else_10_420:
.afterif_13_420:
.cont.14621:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1382:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
    b .fortop.14621      
.brk.14621:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1383
    b .else_14_420      
.jmpz1383:
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_15_420      
.jmpz1384:
    movs r0, #5
    b .condexprfin_16_420      
.condexprz_15_420:
    movs r0, #1
.condexprfin_16_420:
; jmp value (already in r0)
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_17_420      
.jmpz1385:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1386:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    b .condexprfin_18_420      
.object PUSH
.balign 4
_ldlit_270:
 .word -513
_ldlit_271:
 .word ArcadePhysicsEngine_tilemapCollisions_inline__P14653_Lit
.object POP
.condexprz_17_420:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1387:
    add sp, #4*1 ; pop locals 1
.condexprfin_18_420:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #12]
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*2] ; tmpref @1
    pop {r1} ; tmpref @3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #12]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@14]
    movs r0, #1
    str r0, [sp, locals@15]
    @stackempty locals
.fortop.14699:
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.14699      
.jmpz1388:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@13]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_420      
.jmpz1389:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_registerObstacle__P2401
_proccall1390:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_19_420:
.afterif_20_420:
.cont.14699:
    ldr r0, [sp, locals@15]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@15]
    b .fortop.14699      
.brk.14699:
    movs r0, #0
    str r0, [sp, locals@14]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #33
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_21_420      
.jmpz1391:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_destroy__P2403
_proccall1392:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_22_420      
.else_21_420:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_25_420      
.jmpz1393:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_24_420      
.lazySkip_25_420:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_24_420:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1394
    b .else_23_420      
.jmpz1394:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #65
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1395
    b .else_26_420      
.jmpz1395:
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_29_420      
.jmpz1396:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_28_420      
.lazySkip_29_420:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2333
_proccall1397:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_28_420:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_31_420      
.jmpz1398:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_30_420      
.lazySkip_31_420:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_33_420      
.jmpz1399:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_32_420      
.lazySkip_33_420:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2333
_proccall1400:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_32_420:
; jmp value (already in r0)
.lazy_30_420:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_27_420      
.jmpz1401:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_27_420:
.afterif_34_420:
    b .afterif_35_420      
.else_26_420:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    @stackempty locals
.afterif_35_420:
    b .afterif_36_420      
.else_23_420:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1403:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1404:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1405:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1406:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_37_420      
.jmpz1402:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #16]
    @stackempty locals
.else_37_420:
.afterif_38_420:
.afterif_36_420:
.afterif_22_420:
.else_14_420:
.afterif_39_420:
.else_7_420:
.afterif_40_420:
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_neqq
    bne .jmpz1407
    b .else_41_420      
.jmpz1407:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_42_420      
.jmpz1408:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1409:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    b .condexprfin_43_420      
.condexprz_42_420:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1410:
    add sp, #4*1 ; pop locals 1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_subs
.condexprfin_43_420:
; jmp value (already in r0)
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1411:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@17]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@18]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1412:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@19]
    @stackempty locals
.fortop.14809:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1414:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1415:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.14809      
.jmpz1413:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1416:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1417:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1418:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@20]
    @stackempty locals
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2731
_proccall1420:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_44_420      
.jmpz1419:
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_getObstacle__P2732
_proccall1421:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@21]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_273 ; ArcadePhysicsEngine_tilemapCollisions_inline__P14837_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@21]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    bl helpers_arraySome__P107
_proccall1423:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_45_420      
.jmpz1422:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@21]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_45_420:
.afterif_46_420:
.else_44_420:
.afterif_47_420:
.cont.14809:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1424:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@19]
    @stackempty locals
    b .fortop.14809      
.brk.14809:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1425
    b .else_48_420      
.jmpz1425:
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_49_420      
.jmpz1426:
    movs r0, #7
    b .condexprfin_50_420      
.condexprz_49_420:
    movs r0, #3
.condexprfin_50_420:
; jmp value (already in r0)
    str r0, [sp, locals@22]
    @stackempty locals
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_51_420      
.jmpz1427:
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1428:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    ldr r0, [sp, #4*1] ; tmpref @1
    pop {r1} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    bl _numops_subs
    b .condexprfin_52_420      
.condexprz_51_420:
    ldr r0, [sp, locals@17]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1429:
    add sp, #4*1 ; pop locals 1
.condexprfin_52_420:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #16]
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*2] ; tmpref @1
    pop {r1} ; tmpref @3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@23]
    @stackempty locals
    ldr r0, [sp, locals@18]
    str r0, [sp, locals@24]
    movs r0, #1
    str r0, [sp, locals@25]
    @stackempty locals
.fortop.14883:
    ldr r0, [sp, locals@25]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@24]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.14883      
.jmpz1430:
    ldr r0, [sp, locals@24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@25]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@23]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_53_420      
.jmpz1431:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@23]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_registerObstacle__P2401
_proccall1432:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_53_420:
.afterif_54_420:
.cont.14883:
    ldr r0, [sp, locals@25]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@25]
    b .fortop.14883      
.brk.14883:
    movs r0, #0
    str r0, [sp, locals@24]
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #33
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_55_420      
.jmpz1433:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_destroy__P2403
_proccall1434:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_56_420      
.else_55_420:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_59_420      
.jmpz1435:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_58_420      
.lazySkip_59_420:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #22
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_58_420:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1436
    b .else_57_420      
.jmpz1436:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #65
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1437
    b .else_60_420      
.jmpz1437:
    ldr r0, [sp, locals@16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_63_420      
.jmpz1438:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_62_420      
.lazySkip_63_420:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2335
_proccall1439:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_62_420:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_65_420      
.jmpz1440:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_64_420      
.lazySkip_65_420:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@16]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_67_420      
.jmpz1441:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_66_420      
.object PUSH
.balign 4
_ldlit_273:
 .word ArcadePhysicsEngine_tilemapCollisions_inline__P14837_Lit
.object POP
.lazySkip_67_420:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2335
_proccall1442:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_66_420:
; jmp value (already in r0)
.lazy_64_420:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_61_420      
.jmpz1443:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #28]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_61_420:
.afterif_68_420:
    b .afterif_69_420      
.else_60_420:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    @stackempty locals
.afterif_69_420:
    b .afterif_70_420      
.else_57_420:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1445:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1446:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #12]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1447:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Math_sign__P129
_proccall1448:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_71_420      
.jmpz1444:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #20]
    @stackempty locals
.else_71_420:
.afterif_72_420:
.afterif_70_420:
.afterif_56_420:
.else_48_420:
.afterif_73_420:
.else_41_420:
.afterif_74_420:
.else_6_420:
.afterif_75_420:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #12
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1449
    b .else_76_420      
.jmpz1449:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@26]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1450:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@27]
    @stackempty locals
.fortop.14978:
    ldr r0, [sp, locals@27]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1452:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1453:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1451
    b .brk.14978      
.jmpz1451:
    ldr r0, [sp, locals@27]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1454:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1455:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1456:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@28]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1457:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@29]
    @stackempty locals
.fortop.14997:
    ldr r0, [sp, locals@29]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1459:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_iadd__P158
_proccall1460:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1458
    b .brk.14997      
.jmpz1458:
    ldr r0, [sp, locals@29]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1461:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_min__P166
_proccall1462:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_toIntShifted__P156
_proccall1463:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@30]
    @stackempty locals
    ldr r0, [sp, locals@30]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_isObstacle__P2731
_proccall1465:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_79_420      
.jmpz1464:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_78_420      
.lazySkip_79_420:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #16
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_78_420:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_77_420      
.jmpz1466:
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@30]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl tiles_TileMap_getTile__P2724
_proccall1467:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_77_420:
.afterif_80_420:
.cont.14997:
    ldr r0, [sp, locals@29]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1468:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@29]
    @stackempty locals
    b .fortop.14997      
.brk.14997:
.cont.14978:
    ldr r0, [sp, locals@27]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl Fx_iadd__P158
_proccall1469:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@27]
    @stackempty locals
    b .fortop.14978      
.brk.14978:
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_81_420      
.jmpz1470:
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_tilemapOverlaps__P4744_nochk
_proccall1471:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_81_420:
.afterif_82_420:
.else_76_420:
.afterif_83_420:
.ret.4743:
    @stackempty locals
    movs r0, #0
.final_84_420:
    add sp, #4*31 ; pop locals 31
ArcadePhysicsEngine_tilemapCollisions__P4743_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(442,49): ArcadePhysicsEngine.tilemapCollisions.inline
    ;
    .object ArcadePhysicsEngine_tilemapCollisions_inline__P14653 "game/physics.ts(442,49): ArcadePhysicsEngine.tilemapCollisions.inline"
ArcadePhysicsEngine_tilemapCollisions_inline__P14653_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapCollisions_inline__P14653_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapCollisions_inline__P14653_args@fn
ArcadePhysicsEngine_tilemapCollisions_inline__P14653_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapCollisions_inline__P14653_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_tilemapCollisions_inline__P14653_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapCollisions_inline__P14653:
ArcadePhysicsEngine_tilemapCollisions_inline__P14653_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapCollisions_inline__P14653_locals:
    ldr r0, [sp, args@0]
    bl _inst_sprites_StaticObstacle__C2473_validate_99
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    bl _inst_sprites_StaticObstacle__C2473_validate_99
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.14653:
    @stackempty locals
.final_0_421:
ArcadePhysicsEngine_tilemapCollisions_inline__P14653_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(523,49): ArcadePhysicsEngine.tilemapCollisions.inline
    ;
    .object ArcadePhysicsEngine_tilemapCollisions_inline__P14837 "game/physics.ts(523,49): ArcadePhysicsEngine.tilemapCollisions.inline"
ArcadePhysicsEngine_tilemapCollisions_inline__P14837_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapCollisions_inline__P14837_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapCollisions_inline__P14837_args@fn
ArcadePhysicsEngine_tilemapCollisions_inline__P14837_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapCollisions_inline__P14837_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_tilemapCollisions_inline__P14837_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapCollisions_inline__P14837:
ArcadePhysicsEngine_tilemapCollisions_inline__P14837_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapCollisions_inline__P14837_locals:
    ldr r0, [sp, args@0]
    bl _inst_sprites_StaticObstacle__C2473_validate_99
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    bl _inst_sprites_StaticObstacle__C2473_validate_99
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.14837:
    @stackempty locals
.final_0_422:
ArcadePhysicsEngine_tilemapCollisions_inline__P14837_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(627,5): ArcadePhysicsEngine.tilemapOverlaps
    ;
    .object ArcadePhysicsEngine_tilemapOverlaps__P4744 "game/physics.ts(627,5): ArcadePhysicsEngine.tilemapOverlaps"
ArcadePhysicsEngine_tilemapOverlaps__P4744_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapOverlaps__P4744_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_tilemapOverlaps__P4744_nochk
    push {lr}
    bl _expand_args_3_15
    bl ArcadePhysicsEngine_tilemapOverlaps__P4744_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapOverlaps__P4744:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_tilemapOverlaps__P4744_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_tilemapOverlaps__P4744_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.15055:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1472
    b .brk.15055      
.jmpz1472:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    movs r0, #1
    ldr r1, _ldlit_275 ; ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arraySome__P107
_proccall1474:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_423      
.jmpz1473:
    b .cont.15055      
.else_0_423:
.afterif_1_423:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2974
_proccall1475:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #56]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_423      
.jmpz1476:
    movs r0, #2
    ldr r1, _ldlit_276 ; forEach_inline__P15083_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #2
    ldr r1, _ldlit_277 ; ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1477:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1478:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_423:
.afterif_3_423:
.cont.15055:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.15055      
.brk.15055:
    movs r0, #0
    str r0, [sp, locals@2]
.ret.4744:
    @stackempty locals
    movs r0, #0
.final_4_423:
    add sp, #4*5 ; pop locals 5
ArcadePhysicsEngine_tilemapOverlaps__P4744_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(631,37): ArcadePhysicsEngine.tilemapOverlaps.inline
    ;
    .object ArcadePhysicsEngine_tilemapOverlaps_inline__P15058 "game/physics.ts(631,37): ArcadePhysicsEngine.tilemapOverlaps.inline"
ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_args@fn
ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapOverlaps_inline__P15058:
ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_424      
.jmpz1479:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_424      
.lazySkip_1_424:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_0_424:
; jmp value (already in r0)
.ret.15058:
    @stackempty locals
.final_2_424:
ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(639,29): forEach.inline
    ;
    .object forEach_inline__P15083 "game/physics.ts(639,29): forEach.inline"
forEach_inline__P15083_pre:
    .section code
    .balign 4
forEach_inline__P15083_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P15083_args@fn
forEach_inline__P15083_args:
    cmp r4, #1
    bge forEach_inline__P15083_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P15083_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P15083:
forEach_inline__P15083_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P15083_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_425      
.jmpz1480:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_425      
.lazySkip_1_425:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    bl tiles_getTileImage__P2743
_proccall1481:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_57
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::equals
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_0_425:
; jmp value (already in r0)
.ret.15083:
    @stackempty locals
.final_2_425:
forEach_inline__P15083_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(640,30): ArcadePhysicsEngine.tilemapOverlaps.inline
    ;
    .object ArcadePhysicsEngine_tilemapOverlaps_inline__P15100 "game/physics.ts(640,30): ArcadePhysicsEngine.tilemapOverlaps.inline"
ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_args@fn
ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_tilemapOverlaps_inline__P15100:
ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_locals:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall3__40
_proccall1482:
    add sp, #4*3 ; pop locals 3
.ret.15100:
    @stackempty locals
    movs r0, #0
.final_0_426:
ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(674,5): tiles.getTileImage
    ;
    .object tiles_getTileImage__P2743 "game/tilemap.ts(674,5): tiles.getTileImage"
tiles_getTileImage__P2743_pre:
    .section code
    .balign 4
    .section code
tiles_getTileImage__P2743:
tiles_getTileImage__P2743_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
tiles_getTileImage__P2743_locals:
    bl game_currentScene__P2974
_proccall1483:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_427      
.jmpz1484:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_427      
.lazySkip_2_427:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_427:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_427      
.jmpz1485:
    ldr r0, _ldlit_278 ; _hexlit41      
    mov r7, sp
    str r7, [r6, #4]
    bl image::ofBuffer
    b .ret.2743      
.else_0_427:
.afterif_3_427:
    ldr r0, [sp, locals@0]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileSet__P2679
_proccall1486:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl tiles_TileMap_getTileImage__P2734
_proccall1487:
    add sp, #4*2 ; pop locals 2
.ret.2743:
    @stackempty locals
.final_4_427:
    add sp, #4*1 ; pop locals 1
tiles_getTileImage__P2743_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(87,9): tiles.Location.tileSet
    ;
    .object tiles_Location_tileSet__P2679 "game/tilemap.ts(87,9): tiles.Location.tileSet"
tiles_Location_tileSet__P2679_pre:
    .section code
    .balign 4
tiles_Location_tileSet__P2679_args:
    cmp r4, #1
    bge tiles_Location_tileSet__P2679_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_tileSet__P2679_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_tileSet__P2679:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2668_validate_100
    mov lr, r7
tiles_Location_tileSet__P2679_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_tileSet__P2679_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2670_nochk
_proccall1488:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl tiles_TileMap_getTileIndex__P2725
_proccall1489:
    add sp, #4*3 ; pop locals 3
.ret.2679:
    @stackempty locals
.final_0_428:
tiles_Location_tileSet__P2679_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_275:
 .word ArcadePhysicsEngine_tilemapOverlaps_inline__P15058_Lit
_ldlit_276:
 .word forEach_inline__P15083_Lit
_ldlit_277:
 .word ArcadePhysicsEngine_tilemapOverlaps_inline__P15100_Lit
_ldlit_278:
 .word _hexlit41
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(25,9): tiles.Location.tileMap
    ;
    .object tiles_Location_tileMap__P2670 "game/tilemap.ts(25,9): tiles.Location.tileMap"
tiles_Location_tileMap__P2670_pre:
    .section code
    .balign 4
tiles_Location_tileMap__P2670_args:
    cmp r4, #1
    bge tiles_Location_tileMap__P2670_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_tileMap__P2670_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_tileMap__P2670:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2668_validate_100
    mov lr, r7
tiles_Location_tileMap__P2670_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_tileMap__P2670_locals:
    bl game_currentScene__P2974
_proccall1490:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
.ret.2670:
    @stackempty locals
.final_0_429:
tiles_Location_tileMap__P2670_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(385,9): tiles.TileMap.getTileIndex
    ;
    .object tiles_TileMap_getTileIndex__P2725 "game/tilemap.ts(385,9): tiles.TileMap.getTileIndex"
tiles_TileMap_getTileIndex__P2725_pre:
    .section code
    .balign 4
tiles_TileMap_getTileIndex__P2725_args:
    cmp r4, #3
    bge tiles_TileMap_getTileIndex__P2725_nochk
    push {lr}
    bl _expand_args_3_15
    bl tiles_TileMap_getTileIndex__P2725_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_getTileIndex__P2725:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_getTileIndex__P2725_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_getTileIndex__P2725_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTile__P2698
_proccall1491:
    add sp, #4*3 ; pop locals 3
.ret.2725:
    @stackempty locals
.final_0_430:
tiles_TileMap_getTileIndex__P2725_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(232,9): tiles.TileMapData.getTile
    ;
    .object tiles_TileMapData_getTile__P2698 "game/tilemap.ts(232,9): tiles.TileMapData.getTile"
tiles_TileMapData_getTile__P2698_pre:
    .section code
    .balign 4
tiles_TileMapData_getTile__P2698_args:
    cmp r4, #3
    bge tiles_TileMapData_getTile__P2698_nochk
    push {lr}
    bl _expand_args_3_15
    bl tiles_TileMapData_getTile__P2698_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMapData_getTile__P2698:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2692_validate_62
    mov lr, r7
tiles_TileMapData_getTile__P2698_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_getTile__P2698_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMapData_isOutsideMap__P2704_nochk
_proccall1493:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_431      
.jmpz1492:
    movs r0, #1
    b .ret.2698      
.else_0_431:
.afterif_1_431:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    mov r1, r0
    movs r0, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_101
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getUint8
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.2698:
    @stackempty locals
.final_2_431:
tiles_TileMapData_getTile__P2698_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(554,9): tiles.TileMap.getTileImage
    ;
    .object tiles_TileMap_getTileImage__P2734 "game/tilemap.ts(554,9): tiles.TileMap.getTileImage"
tiles_TileMap_getTileImage__P2734_pre:
    .section code
    .balign 4
tiles_TileMap_getTileImage__P2734_args:
    cmp r4, #2
    bge tiles_TileMap_getTileImage__P2734_nochk
    push {lr}
    bl _expand_args_2_18
    bl tiles_TileMap_getTileImage__P2734_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_getTileImage__P2734:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_getTileImage__P2734_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_getTileImage__P2734_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTileImage__P2701
_proccall1494:
    add sp, #4*2 ; pop locals 2
.ret.2734:
    @stackempty locals
.final_0_432:
tiles_TileMap_getTileImage__P2734_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(252,9): tiles.TileMapData.getTileImage
    ;
    .object tiles_TileMapData_getTileImage__P2701 "game/tilemap.ts(252,9): tiles.TileMapData.getTileImage"
tiles_TileMapData_getTileImage__P2701_pre:
    .section code
    .balign 4
tiles_TileMapData_getTileImage__P2701_args:
    cmp r4, #2
    bge tiles_TileMapData_getTileImage__P2701_nochk
    push {lr}
    bl _expand_args_2_18
    bl tiles_TileMapData_getTileImage__P2701_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMapData_getTileImage__P2701:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2692_validate_62
    mov lr, r7
tiles_TileMapData_getTileImage__P2701_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMapData_getTileImage__P2701_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_433      
.jmpz1495:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_433      
.jmpz1496:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_433      
.jmpz1497:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_433      
.lazySkip_4_433:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_3_433:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_433      
.jmpz1498:
    ldr r0, [sp, locals@2]
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_5_433      
.else_2_433:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl image::create
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_57
    movs r2, #0
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawImage
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_5_433:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_1_433:
.afterif_6_433:
.else_0_433:
.afterif_7_433:
    ldr r0, [sp, locals@1]
.ret.2701:
    @stackempty locals
.final_8_433:
    add sp, #4*3 ; pop locals 3
tiles_TileMapData_getTileImage__P2701_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(223,9): tiles.TileMapData.scale
    ;
    .object tiles_TileMapData_scale__P2696 "game/tilemap.ts(223,9): tiles.TileMapData.scale"
tiles_TileMapData_scale__P2696_pre:
    .section code
    .balign 4
tiles_TileMapData_scale__P2696_args:
    cmp r4, #1
    bge tiles_TileMapData_scale__P2696_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMapData_scale__P2696_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMapData_scale__P2696:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2692_validate_62
    mov lr, r7
tiles_TileMapData_scale__P2696_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_scale__P2696_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.2696:
    @stackempty locals
.final_0_434:
tiles_TileMapData_scale__P2696_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(39,9): tiles.Location.row
    ;
    .object tiles_Location_row__P2672 "game/tilemap.ts(39,9): tiles.Location.row"
tiles_Location_row__P2672_pre:
    .section code
    .balign 4
tiles_Location_row__P2672_args:
    cmp r4, #1
    bge tiles_Location_row__P2672_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_row__P2672_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_row__P2672:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2668_validate_100
    mov lr, r7
tiles_Location_row__P2672_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_row__P2672_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2672:
    @stackempty locals
.final_0_435:
tiles_Location_row__P2672_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(32,9): tiles.Location.column
    ;
    .object tiles_Location_column__P2671 "game/tilemap.ts(32,9): tiles.Location.column"
tiles_Location_column__P2671_pre:
    .section code
    .balign 4
tiles_Location_column__P2671_args:
    cmp r4, #1
    bge tiles_Location_column__P2671_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_column__P2671_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_column__P2671:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2668_validate_100
    mov lr, r7
tiles_Location_column__P2671_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_column__P2671_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2671:
    @stackempty locals
.final_0_436:
tiles_Location_column__P2671_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(381,9): tiles.TileMap.getTile
    ;
    .object tiles_TileMap_getTile__P2724 "game/tilemap.ts(381,9): tiles.TileMap.getTile"
tiles_TileMap_getTile__P2724_pre:
    .section code
    .balign 4
tiles_TileMap_getTile__P2724_args:
    cmp r4, #3
    bge tiles_TileMap_getTile__P2724_nochk
    push {lr}
    bl _expand_args_3_15
    bl tiles_TileMap_getTile__P2724_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_getTile__P2724:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_getTile__P2724_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_getTile__P2724_locals:
    ldr r0, _ldlit_280 ; tiles_Location__C2668_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl tiles_Location_constructor__P2669
_proccall1499:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
.ret.2724:
    @stackempty locals
.final_0_437:
tiles_TileMap_getTile__P2724_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(20,9): tiles.Location.constructor
    ;
    .object tiles_Location_constructor__P2669 "game/tilemap.ts(20,9): tiles.Location.constructor"
tiles_Location_constructor__P2669_pre:
    .section code
    .balign 4
    .section code
tiles_Location_constructor__P2669:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2668_validate_100
    mov lr, r7
tiles_Location_constructor__P2669_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_constructor__P2669_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #0
.ret.2669:
    @stackempty locals
.final_0_438:
tiles_Location_constructor__P2669_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(548,5): Math.sign
    ;
    .object Math_sign__P129 "base/pxt-helpers.ts(548,5): Math.sign"
Math_sign__P129_pre:
    .section code
    .balign 4
    .section code
Math_sign__P129:
Math_sign__P129_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_sign__P129_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_eq
    beq .else_0_439      
.jmpz1500:
    movs r0, #1
    b .ret.129      
.else_0_439:
.afterif_1_439:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_gt
    beq .else_2_439      
.jmpz1501:
    movs r0, #3
    b .ret.129      
.else_2_439:
.afterif_3_439:
    movs r0, #1
    negs r0, r0
.ret.129:
    @stackempty locals
.final_4_439:
Math_sign__P129_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(816,5): Sprite.registerObstacle
    ;
    .object Sprite_registerObstacle__P2401 "game/sprite.ts(816,5): Sprite.registerObstacle"
Sprite_registerObstacle__P2401_pre:
    .section code
    .balign 4
Sprite_registerObstacle__P2401_args:
    cmp r4, #4
    bge Sprite_registerObstacle__P2401_nochk
    push {lr}
    bl _expand_args_4_74
    bl Sprite_registerObstacle__P2401_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
Sprite_registerObstacle__P2401:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_registerObstacle__P2401_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_registerObstacle__P2401_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    bl game_currentScene__P2974
_proccall1502:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #60]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #163
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall1503:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    bl game_currentScene__P2974
_proccall1504:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #64]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_440      
.jmpz1505:
    movs r0, #1
    ldr r1, _ldlit_281 ; forEach_inline__P15273_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #1
    ldr r1, _ldlit_282 ; Sprite_registerObstacle_inline__P15279_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1506:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1507:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_440:
.afterif_1_440:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1508
    b .else_2_440      
.jmpz1508:
    ldr r0, [sp, args@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_440      
.jmpz1509:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_440      
.lazySkip_4_440:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    bl game_currentScene__P2974
_proccall1510:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
.lazy_3_440:
; jmp value (already in r0)
    str r0, [sp, args@3]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_283 ; wallHandlersToRun_inline__P15292_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1511:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_440      
.jmpz1512:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #189
    bl _ifacecall1_get_8
_proccall1513:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #169
    lsls r1, r1, #1
    bl _ifacecall1_get_8
_proccall1514:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl tiles_TileMap_getTile__P2724
_proccall1515:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_284 ; Sprite_registerObstacle_inline__P15319_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P109
_proccall1516:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_5_440:
.afterif_6_440:
.else_2_440:
.afterif_7_440:
.ret.2401:
    @stackempty locals
    movs r0, #0
.final_8_440:
    add sp, #4*4 ; pop locals 4
Sprite_registerObstacle__P2401_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(823,25): forEach.inline
    ;
    .object forEach_inline__P15273 "game/sprite.ts(823,25): forEach.inline"
forEach_inline__P15273_pre:
    .section code
    .balign 4
forEach_inline__P15273_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P15273_args@fn
forEach_inline__P15273_args:
    cmp r4, #1
    bge forEach_inline__P15273_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P15273_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P15273:
forEach_inline__P15273_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P15273_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.15273:
    @stackempty locals
.final_0_441:
forEach_inline__P15273_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(824,26): Sprite.registerObstacle.inline
    ;
    .object Sprite_registerObstacle_inline__P15279 "game/sprite.ts(824,26): Sprite.registerObstacle.inline"
Sprite_registerObstacle_inline__P15279_pre:
    .section code
    .balign 4
Sprite_registerObstacle_inline__P15279_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word Sprite_registerObstacle_inline__P15279_args@fn
Sprite_registerObstacle_inline__P15279_args:
    cmp r4, #1
    bge Sprite_registerObstacle_inline__P15279_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_registerObstacle_inline__P15279_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_registerObstacle_inline__P15279:
Sprite_registerObstacle_inline__P15279_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_registerObstacle_inline__P15279_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall2__27
_proccall1517:
    add sp, #4*2 ; pop locals 2
.ret.15279:
    @stackempty locals
    movs r0, #0
.final_0_442:
Sprite_registerObstacle_inline__P15279_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(829,25): wallHandlersToRun.inline
    ;
    .object wallHandlersToRun_inline__P15292 "game/sprite.ts(829,25): wallHandlersToRun.inline"
wallHandlersToRun_inline__P15292_pre:
    .section code
    .balign 4
wallHandlersToRun_inline__P15292_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word wallHandlersToRun_inline__P15292_args@fn
wallHandlersToRun_inline__P15292_args:
    cmp r4, #1
    bge wallHandlersToRun_inline__P15292_nochk
    push {lr}
    bl _expand_args_1_12
    bl wallHandlersToRun_inline__P15292_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
wallHandlersToRun_inline__P15292:
wallHandlersToRun_inline__P15292_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
wallHandlersToRun_inline__P15292_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.15292:
    @stackempty locals
.final_0_443:
wallHandlersToRun_inline__P15292_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_280:
 .word tiles_Location__C2668_VT
_ldlit_281:
 .word forEach_inline__P15273_Lit
_ldlit_282:
 .word Sprite_registerObstacle_inline__P15279_Lit
_ldlit_283:
 .word wallHandlersToRun_inline__P15292_Lit
_ldlit_284:
 .word Sprite_registerObstacle_inline__P15319_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(833,30): Sprite.registerObstacle.inline
    ;
    .object Sprite_registerObstacle_inline__P15319 "game/sprite.ts(833,30): Sprite.registerObstacle.inline"
Sprite_registerObstacle_inline__P15319_pre:
    .section code
    .balign 4
Sprite_registerObstacle_inline__P15319_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word Sprite_registerObstacle_inline__P15319_args@fn
Sprite_registerObstacle_inline__P15319_args:
    cmp r4, #1
    bge Sprite_registerObstacle_inline__P15319_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_registerObstacle_inline__P15319_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_registerObstacle_inline__P15319:
Sprite_registerObstacle_inline__P15319_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_registerObstacle_inline__P15319_locals:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall3__40
_proccall1518:
    add sp, #4*3 ; pop locals 3
.ret.15319:
    @stackempty locals
    movs r0, #0
.final_0_444:
Sprite_registerObstacle_inline__P15319_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(239,5): helpers.arraySome
    ;
    .object helpers_arraySome__P107 "base/pxt-helpers.ts(239,5): helpers.arraySome"
helpers_arraySome__P107_pre:
    .section code
    .balign 4
    .section code
helpers_arraySome__P107:
helpers_arraySome__P107_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySome__P107_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.15331:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.15331      
.jmpz1519:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_445      
.jmpz1520:
    movs r0, #66
    b .ret.107      
.else_0_445:
.afterif_1_445:
.cont.15331:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.15331      
.brk.15331:
    movs r0, #10
.ret.107:
    @stackempty locals
.final_2_445:
    add sp, #4*2 ; pop locals 2
helpers_arraySome__P107_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(523,9): tiles.TileMap.getObstacle
    ;
    .object tiles_TileMap_getObstacle__P2732 "game/tilemap.ts(523,9): tiles.TileMap.getObstacle"
tiles_TileMap_getObstacle__P2732_pre:
    .section code
    .balign 4
tiles_TileMap_getObstacle__P2732_args:
    cmp r4, #3
    bge tiles_TileMap_getObstacle__P2732_nochk
    push {lr}
    bl _expand_args_3_15
    bl tiles_TileMap_getObstacle__P2732_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_getObstacle__P2732:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_getObstacle__P2732_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMap_getObstacle__P2732_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_isOutsideMap__P2704
_proccall1523:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_446      
.jmpz1522:
    movs r0, #1
    b .condexprfin_1_446      
.condexprz_0_446:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTile__P2698
_proccall1524:
    add sp, #4*3 ; pop locals 3
.condexprfin_1_446:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTileImage__P2701
_proccall1525:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, _ldlit_286 ; sprites_StaticObstacle__C2473_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    ldr r0, [sp, #4*5] ; tmpref @1
    push {r0} ; proc-arg
    bl sprites_StaticObstacle_constructor__P2479
_proccall1526:
    add sp, #4*6 ; pop locals 6
    pop {r0} ; tmpref @1
.ret.2732:
    @stackempty locals
.final_2_446:
    add sp, #4*2 ; pop locals 2
tiles_TileMap_getObstacle__P2732_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(342,9): tiles.TileMap.layer
    ;
    .object tiles_TileMap_layer__P2720 "game/tilemap.ts(342,9): tiles.TileMap.layer"
tiles_TileMap_layer__P2720_pre:
    .section code
    .balign 4
tiles_TileMap_layer__P2720_args:
    cmp r4, #1
    bge tiles_TileMap_layer__P2720_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_layer__P2720_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_layer__P2720:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_layer__P2720_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_layer__P2720_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2720:
    @stackempty locals
.final_0_447:
tiles_TileMap_layer__P2720_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(29,9): sprites.StaticObstacle.constructor
    ;
    .object sprites_StaticObstacle_constructor__P2479 "game/obstacle.ts(29,9): sprites.StaticObstacle.constructor"
sprites_StaticObstacle_constructor__P2479_pre:
    .section code
    .balign 4
    .section code
sprites_StaticObstacle_constructor__P2479:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2473_validate_99
    mov lr, r7
sprites_StaticObstacle_constructor__P2479_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_constructor__P2479_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #0
.ret.2479:
    @stackempty locals
.final_0_448:
sprites_StaticObstacle_constructor__P2479_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(34,5): MovingSprite.constructor
    ;
    .object MovingSprite_constructor__P2501 "game/physics.ts(34,5): MovingSprite.constructor"
MovingSprite_constructor__P2501_pre:
    .section code
    .balign 4
    .section code
MovingSprite_constructor__P2501:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_MovingSprite__C2500_validate_98
    mov lr, r7
MovingSprite_constructor__P2501_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
MovingSprite_constructor__P2501_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@6]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@7]
    str r1, [r0, #28]
    movs r0, #0
.ret.2501:
    @stackempty locals
.final_0_449:
MovingSprite_constructor__P2501_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(113,5): ArcadePhysicsEngine.move
    ;
    .object ArcadePhysicsEngine_move__P2514 "game/physics.ts(113,5): ArcadePhysicsEngine.move"
ArcadePhysicsEngine_move__P2514_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_move__P2514_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_move__P2514_nochk
    push {lr}
    bl _expand_args_2_18
    bl ArcadePhysicsEngine_move__P2514_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_move__P2514:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_move__P2514_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_move__P2514_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    movs r0, #201
    push {r0} ; proc-arg
    bl Math_min__P131
_proccall1527:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_46
    movs r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    bl game_currentScene__P2974
_proccall1528:
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_287 ; movingSprites_inline__P15419_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayMap__P106
_proccall1529:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_288 ; ArcadePhysicsEngine_move_inline__P15431_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1530:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl sprites_SpriteMap_clear__P2427
_proccall1531:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl sprites_SpriteMap_resizeBuckets__P2426
_proccall1532:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_div__P162
_proccall1533:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1534:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1535:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1536:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #48]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySlice__P115
_proccall1537:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@9]
    @stackempty locals
.fortop.15473:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_450      
.jmpz1538:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_450      
.lazySkip_1_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.lazy_0_450:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1539
    b .brk.15473      
.object PUSH
.balign 4
_ldlit_286:
 .word sprites_StaticObstacle__C2473_VT
_ldlit_287:
 .word movingSprites_inline__P15419_Lit
_ldlit_288:
 .word ArcadePhysicsEngine_move_inline__P15431_Lit
.object POP
.jmpz1539:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_eors
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@11]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@10]
    str r0, [sp, locals@13]
    movs r0, #1
    str r0, [sp, locals@14]
    @stackempty locals
.fortop.15496:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1540
    b .brk.15496      
.jmpz1540:
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #4]
    str r0, [sp, locals@15]
    @stackempty locals
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    bne .jmpz1541
    b .else_2_450      
.jmpz1541:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    movs r1, #1
    bl _cmp_eq
    beq .else_3_450      
.jmpz1542:
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #16]
    @stackempty locals
    b .afterif_4_450      
.else_3_450:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_7_450      
.jmpz1543:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_450      
.lazySkip_7_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_6_450:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_9_450      
.jmpz1544:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_450      
.lazySkip_9_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_11_450      
.jmpz1545:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_450      
.lazySkip_11_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_10_450:
; jmp value (already in r0)
.lazy_8_450:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_450      
.jmpz1546:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_5_450:
.afterif_12_450:
.afterif_4_450:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_450:
.afterif_13_450:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    bne .jmpz1547
    b .else_14_450      
.jmpz1547:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    movs r1, #1
    bl _cmp_eq
    beq .else_15_450      
.jmpz1548:
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #20]
    @stackempty locals
    b .afterif_16_450      
.else_15_450:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_19_450      
.jmpz1549:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_18_450      
.lazySkip_19_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_18_450:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_21_450      
.jmpz1550:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_20_450      
.lazySkip_21_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_23_450      
.jmpz1551:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_22_450      
.lazySkip_23_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_22_450:
; jmp value (already in r0)
.lazy_20_450:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_17_450      
.jmpz1552:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #28]
    push {r0}; tmpstore @2
    movs r0, #1
    pop {r1} ; tmpref @2
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_17_450:
.afterif_24_450:
.afterif_16_450:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_14_450:
.afterif_25_450:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1554:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1555:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .condexprz_26_450      
.jmpz1553:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #16]
    b .condexprfin_27_450      
.condexprz_26_450:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #24]
.condexprfin_27_450:
; jmp value (already in r0)
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #28]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1557:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1558:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .condexprz_28_450      
.jmpz1556:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #20]
    b .condexprfin_29_450      
.condexprz_28_450:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #28]
.condexprfin_29_450:
; jmp value (already in r0)
    str r0, [sp, locals@17]
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@16]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@17]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_MovingSprite__C2500_validate_98
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    ldr r1, [sp, locals@16]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@17]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_30_450      
.jmpz1559:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl sprites_SpriteMap_insertAABB__P2428
_proccall1560:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_30_450:
.afterif_31_450:
    ldr r0, [sp, locals@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_34_450      
.jmpz1561:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_33_450      
.lazySkip_34_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2722
_proccall1562:
    add sp, #4*1 ; pop locals 1
.lazy_33_450:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_32_450      
.jmpz1563:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_tilemapCollisions__P4743_nochk
_proccall1564:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_32_450:
.afterif_35_450:
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #65
    bl _numops_ands
    str r0, [sp, locals@18]
    @stackempty locals
    ldr r0, [sp, locals@15]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #17
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_38_450      
.jmpz1565:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_37_450      
.lazySkip_38_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@18]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_40_450      
.jmpz1566:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_39_450      
.lazySkip_40_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_39_450:
; jmp value (already in r0)
.lazy_37_450:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_36_450      
.jmpz1567:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl ArcadePhysicsEngine_screenEdgeCollisions__P4742_nochk
_proccall1568:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_36_450:
.afterif_41_450:
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #16]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1570:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_44_450      
.jmpz1569:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_43_450      
.lazySkip_44_450:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_abs__P165
_proccall1571:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_43_450:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_42_450      
.jmpz1572:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_42_450:
.afterif_45_450:
.cont.15496:
    ldr r0, [sp, locals@14]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@14]
    b .fortop.15496      
.brk.15496:
    movs r0, #0
    str r0, [sp, locals@13]
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_spriteCollisions__P4741_nochk
_proccall1573:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.15698:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.15698      
.jmpz1574:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.15698      
.brk.15698:
.cont.15473:
    ldr r0, [sp, locals@9]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    b .fortop.15473      
.brk.15473:
.ret.2514:
    @stackempty locals
    movs r0, #0
.final_46_450:
    add sp, #4*19 ; pop locals 19
ArcadePhysicsEngine_move__P2514_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(122,18): movingSprites.inline
    ;
    .object movingSprites_inline__P15419 "game/physics.ts(122,18): movingSprites.inline"
movingSprites_inline__P15419_pre:
    .section code
    .balign 4
movingSprites_inline__P15419_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word movingSprites_inline__P15419_args@fn
movingSprites_inline__P15419_args:
    cmp r4, #1
    bge movingSprites_inline__P15419_nochk
    push {lr}
    bl _expand_args_1_12
    bl movingSprites_inline__P15419_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
movingSprites_inline__P15419:
movingSprites_inline__P15419_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
movingSprites_inline__P15419_locals:
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl ArcadePhysicsEngine_createMovingSprite__P4740_nochk
_proccall1575:
    add sp, #4*4 ; pop locals 4
.ret.15419:
    @stackempty locals
.final_0_451:
movingSprites_inline__P15419_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(125,30): ArcadePhysicsEngine.move.inline
    ;
    .object ArcadePhysicsEngine_move_inline__P15431 "game/physics.ts(125,30): ArcadePhysicsEngine.move.inline"
ArcadePhysicsEngine_move_inline__P15431_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_move_inline__P15431_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_move_inline__P15431_args@fn
ArcadePhysicsEngine_move_inline__P15431_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_move_inline__P15431_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_move_inline__P15431_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_move_inline__P15431:
ArcadePhysicsEngine_move_inline__P15431_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_move_inline__P15431_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2333
_proccall1577:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_452      
.jmpz1576:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_452      
.lazySkip_2_452:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2335
_proccall1578:
    add sp, #4*1 ; pop locals 1
.lazy_1_452:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_452      
.jmpz1579:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_clearObstacles__P2400
_proccall1580:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_452:
.afterif_3_452:
.ret.15431:
    @stackempty locals
    movs r0, #0
.final_4_452:
ArcadePhysicsEngine_move_inline__P15431_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(310,5): ArcadePhysicsEngine.spriteCollisions
    ;
    .object ArcadePhysicsEngine_spriteCollisions__P4741 "game/physics.ts(310,5): ArcadePhysicsEngine.spriteCollisions"
ArcadePhysicsEngine_spriteCollisions__P4741_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_spriteCollisions__P4741_args:
    cmp r4, #3
    bge ArcadePhysicsEngine_spriteCollisions__P4741_nochk
    push {lr}
    bl _expand_args_3_15
    bl ArcadePhysicsEngine_spriteCollisions__P4741_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
ArcadePhysicsEngine_spriteCollisions__P4741:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_spriteCollisions__P4741_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_spriteCollisions__P4741_locals:
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_453      
.jmpz1581:
    b .ret.4741      
.else_0_453:
.afterif_1_453:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.15717:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1582
    b .brk.15717      
.jmpz1582:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #4]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_453      
.jmpz1583:
    b .cont.15717      
.else_2_453:
.afterif_3_453:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl sprites_SpriteMap_overlaps__P2424
_proccall1584:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@4]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.15734:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1585
    b .brk.15734      
.jmpz1585:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@5]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_453      
.jmpz1586:
    b .cont.15734      
.else_4_453:
.afterif_5_453:
    ldr r0, [sp, locals@3]
    ldr r0, [r0, #64]
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@5]
    ldr r0, [r0, #64]
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@3]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #112]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    negs r1, r1
    bl _cmp_eqq
    beq .else_6_453      
.jmpz1587:
    b .cont.15734      
.else_6_453:
.afterif_7_453:
    ldr r0, [sp, locals@3]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .condexprz_8_453      
.jmpz1588:
    ldr r0, [sp, locals@3]
    b .condexprfin_9_453      
.condexprz_8_453:
    ldr r0, [sp, locals@5]
.condexprfin_9_453:
; jmp value (already in r0)
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    ldr r1, [sp, locals@3]
    bl _cmp_eqq
    beq .condexprz_10_453      
.jmpz1589:
    ldr r0, [sp, locals@5]
    b .condexprfin_11_453      
.condexprz_10_453:
    ldr r0, [sp, locals@3]
.condexprfin_11_453:
; jmp value (already in r0)
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@10]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    negs r1, r1
    bl _cmp_eqq
    beq .else_12_453      
.jmpz1590:
    movs r0, #2
    ldr r1, _ldlit_290 ; forEach_inline__P15781_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@9]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    movs r0, #5
    ldr r1, _ldlit_291 ; ArcadePhysicsEngine_spriteCollisions_inline__P15805_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @2
    movs r1, #0
    ldr r2, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #1
    ldr r2, [sp, locals@11]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #2
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #3
    ldr r2, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @2
    movs r1, #4
    ldr r2, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1591:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r3, r0
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P109
_proccall1592:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_12_453:
.afterif_13_453:
.cont.15734:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.15734      
.brk.15734:
    movs r0, #0
    str r0, [sp, locals@6]
.cont.15717:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.15717      
.brk.15717:
    movs r0, #0
    str r0, [sp, locals@1]
.ret.4741:
    @stackempty locals
    movs r0, #0
.final_14_453:
    add sp, #4*12 ; pop locals 12
ArcadePhysicsEngine_spriteCollisions__P4741_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(336,33): forEach.inline
    ;
    .object forEach_inline__P15781 "game/physics.ts(336,33): forEach.inline"
forEach_inline__P15781_pre:
    .section code
    .balign 4
forEach_inline__P15781_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P15781_args@fn
forEach_inline__P15781_args:
    cmp r4, #1
    bge forEach_inline__P15781_nochk
    push {lr}
    bl _expand_args_1_12
    bl forEach_inline__P15781_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P15781:
forEach_inline__P15781_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P15781_locals:
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_454      
.jmpz1593:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_454      
.lazySkip_1_454:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_0_454:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_454      
.jmpz1594:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_454      
.lazySkip_3_454:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_454      
.jmpz1595:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_454      
.lazySkip_5_454:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_4_454:
; jmp value (already in r0)
.lazy_2_454:
; jmp value (already in r0)
.ret.15781:
    @stackempty locals
.final_6_454:
forEach_inline__P15781_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(339,34): ArcadePhysicsEngine.spriteCollisions.inline
    ;
    .object ArcadePhysicsEngine_spriteCollisions_inline__P15805 "game/physics.ts(339,34): ArcadePhysicsEngine.spriteCollisions.inline"
ArcadePhysicsEngine_spriteCollisions_inline__P15805_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_spriteCollisions_inline__P15805_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_spriteCollisions_inline__P15805_args@fn
ArcadePhysicsEngine_spriteCollisions_inline__P15805_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_spriteCollisions_inline__P15805_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_spriteCollisions_inline__P15805_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_spriteCollisions_inline__P15805:
ArcadePhysicsEngine_spriteCollisions_inline__P15805_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_spriteCollisions_inline__P15805_locals:
    ldr r0, [r5, #4*3]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #108]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #6
    ldr r1, _ldlit_292 ; ArcadePhysicsEngine_spriteCollisions_inline__P15815_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [r5, #4*6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [r5, #4*7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #5
    ldr r2, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_1
    mov r7, sp
    str r7, [r6, #4]
    bl control::runInParallel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.15805:
    @stackempty locals
    movs r0, #0
.final_0_455:
ArcadePhysicsEngine_spriteCollisions_inline__P15805_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(341,51): ArcadePhysicsEngine.spriteCollisions.inline
    ;
    .object ArcadePhysicsEngine_spriteCollisions_inline__P15815 "game/physics.ts(341,51): ArcadePhysicsEngine.spriteCollisions.inline"
ArcadePhysicsEngine_spriteCollisions_inline__P15815_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_spriteCollisions_inline__P15815_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ArcadePhysicsEngine_spriteCollisions_inline__P15815_args@fn
ArcadePhysicsEngine_spriteCollisions_inline__P15815_args:
    .section code
ArcadePhysicsEngine_spriteCollisions_inline__P15815:
ArcadePhysicsEngine_spriteCollisions_inline__P15815_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_spriteCollisions_inline__P15815_locals:
    ldr r0, [r5, #4*3]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_orrs
    add sp, #4*2 ; pop locals 2
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_456      
.jmpz1596:
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .condexprz_1_456      
.jmpz1597:
    ldr r0, [r5, #4*3]
    b .condexprfin_2_456      
.condexprz_1_456:
    ldr r0, [r5, #4*4]
.condexprfin_2_456:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    bl _inst_scene_SpriteHandler__C2787_validate_26
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .condexprz_3_456      
.jmpz1598:
    ldr r0, [r5, #4*4]
    b .condexprfin_4_456      
.condexprz_3_456:
    ldr r0, [r5, #4*3]
.condexprfin_4_456:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall3__40
_proccall1599:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_5_456      
.object PUSH
.balign 4
_ldlit_290:
 .word forEach_inline__P15781_Lit
_ldlit_291:
 .word ArcadePhysicsEngine_spriteCollisions_inline__P15805_Lit
_ldlit_292:
 .word ArcadePhysicsEngine_spriteCollisions_inline__P15815_Lit
.object POP
.else_0_456:
.afterif_5_456:
    ldr r0, [r5, #4*7]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #108]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*8]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.ret.15815:
    @stackempty locals
    movs r0, #0
.final_6_456:
ArcadePhysicsEngine_spriteCollisions_inline__P15815_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(31,9): sprites.SpriteMap.overlaps
    ;
    .object sprites_SpriteMap_overlaps__P2424 "game/spritemap.ts(31,9): sprites.SpriteMap.overlaps"
sprites_SpriteMap_overlaps__P2424_pre:
    .section code
    .balign 4
sprites_SpriteMap_overlaps__P2424_args:
    cmp r4, #2
    bge sprites_SpriteMap_overlaps__P2424_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_SpriteMap_overlaps__P2424_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_overlaps__P2424:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_overlaps__P2424_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_overlaps__P2424_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_neighbors__P2423_nochk
_proccall1600:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_294 ; o_inline__P15853_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P110
_proccall1601:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
.ret.2424:
    @stackempty locals
.final_0_457:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_overlaps__P2424_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(33,32): o.inline
    ;
    .object o_inline__P15853 "game/spritemap.ts(33,32): o.inline"
o_inline__P15853_pre:
    .section code
    .balign 4
o_inline__P15853_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word o_inline__P15853_args@fn
o_inline__P15853_args:
    cmp r4, #1
    bge o_inline__P15853_nochk
    push {lr}
    bl _expand_args_1_12
    bl o_inline__P15853_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
o_inline__P15853:
o_inline__P15853_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
o_inline__P15853_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl Sprite_overlapsWith__P2395
_proccall1602:
    add sp, #4*2 ; pop locals 2
.ret.15853:
    @stackempty locals
.final_0_458:
o_inline__P15853_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(690,5): Sprite.overlapsWith
    ;
    .object Sprite_overlapsWith__P2395 "game/sprite.ts(690,5): Sprite.overlapsWith"
Sprite_overlapsWith__P2395_pre:
    .section code
    .balign 4
Sprite_overlapsWith__P2395_args:
    cmp r4, #2
    bge Sprite_overlapsWith__P2395_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_overlapsWith__P2395_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_overlapsWith__P2395:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_overlapsWith__P2395_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_overlapsWith__P2395_locals:
    @stackempty locals
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@0]
    bl _cmp_eq
    beq .else_0_459      
.jmpz1603:
    movs r0, #10
    b .ret.2395      
.else_0_459:
.afterif_1_459:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_459      
.jmpz1604:
    movs r0, #10
    b .ret.2395      
.else_2_459:
.afterif_3_459:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #36
    lsls r1, r1, #8
    adds r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_459      
.jmpz1605:
    movs r0, #10
    b .ret.2395      
.else_4_459:
.afterif_5_459:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl game_Hitbox_overlapsWith__P2200
_proccall1607:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_459      
.jmpz1606:
    movs r0, #10
    b .ret.2395      
.else_6_459:
.afterif_7_459:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isScaled__P4696_nochk
_proccall1609:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_459      
.jmpz1608:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_459      
.lazySkip_10_459:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_isScaled__P4696
_proccall1610:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_9_459:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_459      
.jmpz1611:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2374_nochk
_proccall1612:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2374
_proccall1613:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2378_nochk
_proccall1614:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2378
_proccall1615:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_60
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::overlapsWith
    add sp, #4*4 ; pop locals 4
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    b .ret.2395      
    b .afterif_11_459      
.else_8_459:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2345_nochk
_proccall1617:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_14_459      
.jmpz1616:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_459      
.lazySkip_14_459:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2347_nochk
_proccall1618:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_13_459:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_16_459      
.jmpz1619:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_15_459      
.lazySkip_16_459:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sx__P2345
_proccall1620:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_15_459:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_18_459      
.jmpz1621:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_17_459      
.lazySkip_18_459:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sy__P2347
_proccall1622:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_17_459:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_459      
.jmpz1623:
    movs r0, #10
    b .ret.2395      
    b .afterif_19_459      
.object PUSH
.balign 4
_ldlit_294:
 .word o_inline__P15853_Lit
.object POP
.else_12_459:
.afterif_19_459:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2345_nochk
_proccall1625:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2347_nochk
_proccall1626:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sx__P2345
_proccall1627:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_sy__P2347
_proccall1628:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .else_20_459      
.jmpz1624:
    ldr r0, [sp, args@0]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_21_459      
.else_20_459:
    ldr r0, [sp, args@1]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_21_459:
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2374
_proccall1629:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2374
_proccall1630:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2345
_proccall1631:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2378
_proccall1632:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2378
_proccall1633:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2347
_proccall1634:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_width__P2372
_proccall1635:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sx__P2345
_proccall1636:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl Sprite_height__P2373
_proccall1637:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_sy__P2347
_proccall1638:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    ldr r0, [sp, #4*12] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*13] ; estack
    ldr r0, [sp, #4*14] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*15] ; estack
    ldr r0, [sp, #4*16] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*17] ; estack
    ldr r0, [sp, #4*18] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*19] ; estack
    bl helpers_imageBlit__P1933
_proccall1639:
    add sp, #4*20 ; pop locals 20
    b .ret.2395      
.afterif_11_459:
    movs r0, #0
.ret.2395:
    @stackempty locals
.final_22_459:
    add sp, #4*2 ; pop locals 2
Sprite_overlapsWith__P2395_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function screen---st7735/image.ts(137,5): helpers.imageBlit
    ;
    .object helpers_imageBlit__P1933 "screen---st7735/image.ts(137,5): helpers.imageBlit"
helpers_imageBlit__P1933_pre:
    .section code
    .balign 4
    .section code
helpers_imageBlit__P1933:
helpers_imageBlit__P1933_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_imageBlit__P1933_locals:
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_460      
.jmpz1640:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_460      
.lazySkip_1_460:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
.lazy_0_460:
; jmp value (already in r0)
    movs r1, #89
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #3
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #5
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #7
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #9
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@7]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #11
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@8]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #13
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@9]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #15
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@10]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_460      
.jmpz1641:
    movs r0, #3
    b .condexprfin_3_460      
.condexprz_2_460:
    movs r0, #1
.condexprfin_3_460:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #17
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@11]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_460      
.jmpz1642:
    movs r0, #3
    b .condexprfin_5_460      
.condexprz_4_460:
    movs r0, #1
.condexprfin_5_460:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #19
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_102
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::_blit
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.1933:
    @stackempty locals
.final_6_460:
helpers_imageBlit__P1933_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(370,5): Sprite.isScaled
    ;
    .object Sprite_isScaled__P4696 "game/sprite.ts(370,5): Sprite.isScaled"
Sprite_isScaled__P4696_pre:
    .section code
    .balign 4
Sprite_isScaled__P4696_args:
    cmp r4, #1
    bge Sprite_isScaled__P4696_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_isScaled__P4696_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_isScaled__P4696:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_isScaled__P4696_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_isScaled__P4696_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_461      
.jmpz1643:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_461      
.lazySkip_1_461:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.lazy_0_461:
; jmp value (already in r0)
.ret.4696:
    @stackempty locals
.final_2_461:
Sprite_isScaled__P4696_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(88,9): game.Hitbox.overlapsWith
    ;
    .object game_Hitbox_overlapsWith__P2200 "game/hitbox.ts(88,9): game.Hitbox.overlapsWith"
game_Hitbox_overlapsWith__P2200_pre:
    .section code
    .balign 4
game_Hitbox_overlapsWith__P2200_args:
    cmp r4, #2
    bge game_Hitbox_overlapsWith__P2200_nochk
    push {lr}
    bl _expand_args_2_18
    bl game_Hitbox_overlapsWith__P2200_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
game_Hitbox_overlapsWith__P2200:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_37
    mov lr, r7
game_Hitbox_overlapsWith__P2200_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_overlapsWith__P2200_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_updateIfInvalid__P2199_nochk
_proccall1644:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_updateIfInvalid__P2199
_proccall1645:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1647:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1648:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198_nochk
_proccall1649:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_462      
.jmpz1646:
    movs r0, #66
    b .ret.2200      
.else_0_462:
.afterif_1_462:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193
_proccall1651:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1652:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198_nochk
_proccall1653:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_462      
.jmpz1650:
    movs r0, #66
    b .ret.2200      
.else_2_462:
.afterif_3_462:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1655:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194
_proccall1656:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198_nochk
_proccall1657:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_462      
.jmpz1654:
    movs r0, #66
    b .ret.2200      
.else_4_462:
.afterif_5_462:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195
_proccall1659:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196
_proccall1660:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198_nochk
_proccall1661:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_462      
.jmpz1658:
    movs r0, #66
    b .ret.2200      
.else_6_462:
.afterif_7_462:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193_nochk
_proccall1663:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194_nochk
_proccall1664:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198
_proccall1665:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_462      
.jmpz1662:
    movs r0, #66
    b .ret.2200      
.else_8_462:
.afterif_9_462:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193_nochk
_proccall1667:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196_nochk
_proccall1668:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198
_proccall1669:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_462      
.jmpz1666:
    movs r0, #66
    b .ret.2200      
.else_10_462:
.afterif_11_462:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195_nochk
_proccall1671:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194_nochk
_proccall1672:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198
_proccall1673:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_462      
.jmpz1670:
    movs r0, #66
    b .ret.2200      
.else_12_462:
.afterif_13_462:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195_nochk
_proccall1675:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196_nochk
_proccall1676:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl game_Hitbox_contains__P2198
_proccall1677:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_462      
.jmpz1674:
    movs r0, #66
    b .ret.2200      
.else_14_462:
.afterif_15_462:
    movs r0, #10
.ret.2200:
    @stackempty locals
.final_16_462:
game_Hitbox_overlapsWith__P2200_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/hitbox.ts(45,9): game.Hitbox.contains
    ;
    .object game_Hitbox_contains__P2198 "game/hitbox.ts(45,9): game.Hitbox.contains"
game_Hitbox_contains__P2198_pre:
    .section code
    .balign 4
game_Hitbox_contains__P2198_args:
    cmp r4, #3
    bge game_Hitbox_contains__P2198_nochk
    push {lr}
    bl _expand_args_3_15
    bl game_Hitbox_contains__P2198_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
game_Hitbox_contains__P2198:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_game_Hitbox__C2185_validate_37
    mov lr, r7
game_Hitbox_contains__P2198_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
game_Hitbox_contains__P2198_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_left__P2193_nochk
_proccall1679:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_463      
.jmpz1678:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_463      
.lazySkip_1_463:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_right__P2195_nochk
_proccall1680:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_0_463:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_463      
.jmpz1681:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_463      
.lazySkip_3_463:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_top__P2194_nochk
_proccall1682:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_2_463:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_463      
.jmpz1683:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_463      
.lazySkip_5_463:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl game_Hitbox_bottom__P2196_nochk
_proccall1684:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_4_463:
; jmp value (already in r0)
.ret.2198:
    @stackempty locals
.final_6_463:
game_Hitbox_contains__P2198_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(16,9): sprites.SpriteMap.neighbors
    ;
    .object sprites_SpriteMap_neighbors__P2423 "game/spritemap.ts(16,9): sprites.SpriteMap.neighbors"
sprites_SpriteMap_neighbors__P2423_pre:
    .section code
    .balign 4
sprites_SpriteMap_neighbors__P2423_args:
    cmp r4, #2
    bge sprites_SpriteMap_neighbors__P2423_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_SpriteMap_neighbors__P2423_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_neighbors__P2423:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_neighbors__P2423_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_neighbors__P2423_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #68]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2374
_proccall1685:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2378
_proccall1686:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4705_nochk
_proccall1687:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2374
_proccall1688:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_bottom__P2380
_proccall1689:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4705_nochk
_proccall1690:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_right__P2376
_proccall1691:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2378
_proccall1692:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4705_nochk
_proccall1693:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_right__P2376
_proccall1694:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_bottom__P2380
_proccall1695:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_mergeAtKey__P4705_nochk
_proccall1696:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2423:
    @stackempty locals
.final_0_464:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_neighbors__P2423_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(406,5): Sprite.right
    ;
    .object Sprite_right__P2376 "game/sprite.ts(406,5): Sprite.right"
Sprite_right__P2376_pre:
    .section code
    .balign 4
Sprite_right__P2376_args:
    cmp r4, #1
    bge Sprite_right__P2376_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_right__P2376_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_right__P2376:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_right__P2376_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_right__P2376_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2374_nochk
_proccall1697:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2372_nochk
_proccall1698:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2376:
    @stackempty locals
.final_0_465:
Sprite_right__P2376_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(436,5): Sprite.bottom
    ;
    .object Sprite_bottom__P2380 "game/sprite.ts(436,5): Sprite.bottom"
Sprite_bottom__P2380_pre:
    .section code
    .balign 4
Sprite_bottom__P2380_args:
    cmp r4, #1
    bge Sprite_bottom__P2380_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_bottom__P2380_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_bottom__P2380:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_bottom__P2380_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_bottom__P2380_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2378_nochk
_proccall1699:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2373_nochk
_proccall1700:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2380:
    @stackempty locals
.final_0_466:
Sprite_bottom__P2380_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(102,9): sprites.SpriteMap.mergeAtKey
    ;
    .object sprites_SpriteMap_mergeAtKey__P4705 "game/spritemap.ts(102,9): sprites.SpriteMap.mergeAtKey"
sprites_SpriteMap_mergeAtKey__P4705_pre:
    .section code
    .balign 4
sprites_SpriteMap_mergeAtKey__P4705_args:
    cmp r4, #5
    bge sprites_SpriteMap_mergeAtKey__P4705_nochk
    push {lr}
    bl _expand_args_5_22
    bl sprites_SpriteMap_mergeAtKey__P4705_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
sprites_SpriteMap_mergeAtKey__P4705:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_mergeAtKey__P4705_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_mergeAtKey__P4705_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_key__P4703_nochk
_proccall1701:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_467      
.jmpz1702:
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16171:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.16171      
.jmpz1703:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #68]
    ldr r1, [sp, args@3]
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_467      
.jmpz1704:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_467      
.lazySkip_3_467:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_2_467:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_467      
.jmpz1705:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_467:
.afterif_4_467:
.cont.16171:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.16171      
.brk.16171:
    movs r0, #0
    str r0, [sp, locals@3]
.else_0_467:
.afterif_5_467:
.ret.4705:
    @stackempty locals
    movs r0, #0
.final_6_467:
    add sp, #4*5 ; pop locals 5
sprites_SpriteMap_mergeAtKey__P4705_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(77,9): sprites.SpriteMap.key
    ;
    .object sprites_SpriteMap_key__P4703 "game/spritemap.ts(77,9): sprites.SpriteMap.key"
sprites_SpriteMap_key__P4703_pre:
    .section code
    .balign 4
sprites_SpriteMap_key__P4703_args:
    cmp r4, #3
    bge sprites_SpriteMap_key__P4703_nochk
    push {lr}
    bl _expand_args_3_15
    bl sprites_SpriteMap_key__P4703_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
sprites_SpriteMap_key__P4703:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_key__P4703_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_key__P4703_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1706:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1707:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.4703:
    @stackempty locals
.final_0_468:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_key__P4703_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(356,5): ArcadePhysicsEngine.screenEdgeCollisions
    ;
    .object ArcadePhysicsEngine_screenEdgeCollisions__P4742 "game/physics.ts(356,5): ArcadePhysicsEngine.screenEdgeCollisions"
ArcadePhysicsEngine_screenEdgeCollisions__P4742_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_screenEdgeCollisions__P4742_args:
    cmp r4, #4
    bge ArcadePhysicsEngine_screenEdgeCollisions__P4742_nochk
    push {lr}
    bl _expand_args_4_74
    bl ArcadePhysicsEngine_screenEdgeCollisions__P4742_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
ArcadePhysicsEngine_screenEdgeCollisions__P4742:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_screenEdgeCollisions__P4742_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_screenEdgeCollisions__P4742_locals:
    ldr r0, [sp, args@1]
    bl _inst_MovingSprite__C2500_validate_98
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_isStatic__P2370
_proccall1709:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_469      
.jmpz1708:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #52
    bl _classCall_Sprite__C2316_97
_proccall1710:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_469:
.afterif_1_469:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl scene_Camera_isUpdated__P2772
_proccall1712:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_469      
.jmpz1711:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl scene_Camera_update__P2773
_proccall1713:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_469:
.afterif_3_469:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_left__P2193
_proccall1714:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_4_469      
.jmpz1715:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_left__P2374
_proccall1716:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_left__P2375
_proccall1717:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_469      
.jmpz1718:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2333
_proccall1719:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vx__P2334
_proccall1720:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_5_469:
.afterif_6_469:
    b .afterif_7_469      
.else_4_469:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_right__P2195
_proccall1721:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    movs r1, #1
    bl _cmp_gt
    beq .else_8_469      
.jmpz1722:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_right__P2376
_proccall1723:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_right__P2377
_proccall1724:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_9_469      
.jmpz1725:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2333
_proccall1726:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vx__P2334
_proccall1727:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_9_469:
.afterif_10_469:
.else_8_469:
.afterif_11_469:
.afterif_7_469:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_top__P2194
_proccall1728:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    movs r1, #1
    bl _cmp_lt
    beq .else_12_469      
.jmpz1729:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_top__P2378
_proccall1730:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2379
_proccall1731:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_13_469      
.jmpz1732:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2335
_proccall1733:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vy__P2336
_proccall1734:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_13_469:
.afterif_14_469:
    b .afterif_15_469      
.else_12_469:
    ldr r0, [sp, locals@0]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_bottom__P2196
_proccall1735:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    str r0, [sp, locals@1]
    pop {r0} ; tmpref @1
    movs r1, #1
    bl _cmp_gt
    beq .else_16_469      
.jmpz1736:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl Sprite_bottom__P2380
_proccall1737:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_bottom__P2381
_proccall1738:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_17_469      
.jmpz1739:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2335
_proccall1740:
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #1
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_vy__P2336
_proccall1741:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_17_469:
.afterif_18_469:
.else_16_469:
.afterif_19_469:
.afterif_15_469:
.ret.4742:
    @stackempty locals
    movs r0, #0
.final_20_469:
    add sp, #4*2 ; pop locals 2
ArcadePhysicsEngine_screenEdgeCollisions__P4742_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(441,5): Sprite.bottom
    ;
    .object Sprite_bottom__P2381 "game/sprite.ts(441,5): Sprite.bottom"
Sprite_bottom__P2381_pre:
    .section code
    .balign 4
Sprite_bottom__P2381_args:
    cmp r4, #2
    bge Sprite_bottom__P2381_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_bottom__P2381_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_bottom__P2381:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_bottom__P2381_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_bottom__P2381_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2373_nochk
_proccall1742:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_top__P2379_nochk
_proccall1743:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2381:
    @stackempty locals
    movs r0, #0
.final_0_470:
Sprite_bottom__P2381_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(411,5): Sprite.right
    ;
    .object Sprite_right__P2377 "game/sprite.ts(411,5): Sprite.right"
Sprite_right__P2377_pre:
    .section code
    .balign 4
Sprite_right__P2377_args:
    cmp r4, #2
    bge Sprite_right__P2377_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_right__P2377_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_right__P2377:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_right__P2377_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_right__P2377_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2372_nochk
_proccall1744:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Sprite_left__P2375_nochk
_proccall1745:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2377:
    @stackempty locals
    movs r0, #0
.final_0_471:
Sprite_right__P2377_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(80,9): scene.Camera.isUpdated
    ;
    .object scene_Camera_isUpdated__P2772 "game/camera.ts(80,9): scene.Camera.isUpdated"
scene_Camera_isUpdated__P2772_pre:
    .section code
    .balign 4
scene_Camera_isUpdated__P2772_args:
    cmp r4, #1
    bge scene_Camera_isUpdated__P2772_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_isUpdated__P2772_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_isUpdated__P2772:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_isUpdated__P2772_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_isUpdated__P2772_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_472      
.jmpz1746:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_472      
.lazySkip_1_472:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_x__P2329
_proccall1748:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_472      
.jmpz1747:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_472      
.lazySkip_3_472:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Sprite_y__P2331
_proccall1749:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_2_472:
; jmp value (already in r0)
.lazy_0_472:
; jmp value (already in r0)
.ret.2772:
    @stackempty locals
.final_4_472:
scene_Camera_isUpdated__P2772_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(92,9): sprites.SpriteMap.insertAABB
    ;
    .object sprites_SpriteMap_insertAABB__P2428 "game/spritemap.ts(92,9): sprites.SpriteMap.insertAABB"
sprites_SpriteMap_insertAABB__P2428_pre:
    .section code
    .balign 4
sprites_SpriteMap_insertAABB__P2428_args:
    cmp r4, #2
    bge sprites_SpriteMap_insertAABB__P2428_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_SpriteMap_insertAABB__P2428_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_insertAABB__P2428:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_insertAABB__P2428_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_insertAABB__P2428_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_left__P2374
_proccall1750:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_top__P2378
_proccall1751:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_width__P2372
_proccall1752:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_height__P2373
_proccall1753:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16388:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@2]
    bl _cmp_le
    beq .brk.16388      
.jmpz1754:
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.16392:
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@3]
    bl _cmp_le
    beq .brk.16392      
.jmpz1755:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_width__P2372
_proccall1756:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1757:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Sprite_height__P2373
_proccall1758:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1759:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl sprites_SpriteMap_insertAtKey__P4704_nochk
_proccall1760:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.cont.16392:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    b .fortop.16392      
.brk.16392:
.cont.16388:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    b .fortop.16388      
.brk.16388:
.ret.2428:
    @stackempty locals
    movs r0, #0
.final_0_473:
    add sp, #4*6 ; pop locals 6
sprites_SpriteMap_insertAABB__P2428_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(83,9): sprites.SpriteMap.insertAtKey
    ;
    .object sprites_SpriteMap_insertAtKey__P4704 "game/spritemap.ts(83,9): sprites.SpriteMap.insertAtKey"
sprites_SpriteMap_insertAtKey__P4704_pre:
    .section code
    .balign 4
sprites_SpriteMap_insertAtKey__P4704_args:
    cmp r4, #4
    bge sprites_SpriteMap_insertAtKey__P4704_nochk
    push {lr}
    bl _expand_args_4_74
    bl sprites_SpriteMap_insertAtKey__P4704_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
sprites_SpriteMap_insertAtKey__P4704:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_insertAtKey__P4704_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_insertAtKey__P4704_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_key__P4703_nochk
_proccall1761:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_474      
.jmpz1762:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; estack
    ldr r1, [sp, #4*2] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    str r7, [sp, #4*2] ; estack
    pop {r0} ; tmpref @3
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
.else_0_474:
.afterif_1_474:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_13
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_474      
.jmpz1763:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_474:
.afterif_3_474:
.ret.4704:
    @stackempty locals
    movs r0, #0
.final_4_474:
    add sp, #4*2 ; pop locals 2
sprites_SpriteMap_insertAtKey__P4704_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/fixed.ts(39,5): Fx.idiv
    ;
    .object Fx_idiv__P163 "base/fixed.ts(39,5): Fx.idiv"
Fx_idiv__P163_pre:
    .section code
    .balign 4
    .section code
Fx_idiv__P163:
Fx_idiv__P163_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Fx_idiv__P163_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.163:
    @stackempty locals
.final_0_475:
Fx_idiv__P163_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(53,9): sprites.SpriteMap.resizeBuckets
    ;
    .object sprites_SpriteMap_resizeBuckets__P2426 "game/spritemap.ts(53,9): sprites.SpriteMap.resizeBuckets"
sprites_SpriteMap_resizeBuckets__P2426_pre:
    .section code
    .balign 4
sprites_SpriteMap_resizeBuckets__P2426_args:
    cmp r4, #2
    bge sprites_SpriteMap_resizeBuckets__P2426_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_SpriteMap_resizeBuckets__P2426_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_SpriteMap_resizeBuckets__P2426:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_resizeBuckets__P2426_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_resizeBuckets__P2426_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16464:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.16464      
.jmpz1764:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_width__P2372
_proccall1766:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _cmp_gt
    beq .else_0_476      
.jmpz1765:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_width__P2372
_proccall1767:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
.else_0_476:
.afterif_1_476:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_height__P2373
_proccall1769:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_2_476      
.jmpz1768:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl Sprite_height__P2373
_proccall1770:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
.else_2_476:
.afterif_3_476:
.cont.16464:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.16464      
.brk.16464:
    movs r0, #0
    str r0, [sp, locals@3]
    bl game_currentScene__P2974
_proccall1771:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_476      
.jmpz1772:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaWidth__P2718
_proccall1773:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_5_476      
.condexprz_4_476:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.condexprfin_5_476:
; jmp value (already in r0)
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_6_476      
.jmpz1774:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl tiles_TileMap_areaHeight__P2719
_proccall1775:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_7_476      
.condexprz_6_476:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.condexprfin_7_476:
; jmp value (already in r0)
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #17
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1776:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r0, #17
    push {r0} ; proc-arg
    bl Math_clamp__P127
_proccall1777:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2426:
    @stackempty locals
    movs r0, #0
.final_8_476:
    add sp, #4*8 ; pop locals 8
sprites_SpriteMap_resizeBuckets__P2426_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(73,9): sprites.SpriteMap.clear
    ;
    .object sprites_SpriteMap_clear__P2427 "game/spritemap.ts(73,9): sprites.SpriteMap.clear"
sprites_SpriteMap_clear__P2427_pre:
    .section code
    .balign 4
sprites_SpriteMap_clear__P2427_args:
    cmp r4, #1
    bge sprites_SpriteMap_clear__P2427_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteMap_clear__P2427_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteMap_clear__P2427:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_clear__P2427_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteMap_clear__P2427_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2427:
    @stackempty locals
    movs r0, #0
.final_0_477:
sprites_SpriteMap_clear__P2427_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(812,5): Sprite.clearObstacles
    ;
    .object Sprite_clearObstacles__P2400 "game/sprite.ts(812,5): Sprite.clearObstacles"
Sprite_clearObstacles__P2400_pre:
    .section code
    .balign 4
Sprite_clearObstacles__P2400_args:
    cmp r4, #1
    bge Sprite_clearObstacles__P2400_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_clearObstacles__P2400_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_clearObstacles__P2400:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_clearObstacles__P2400_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_clearObstacles__P2400_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2400:
    @stackempty locals
    movs r0, #0
.final_0_478:
Sprite_clearObstacles__P2400_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(218,5): ArcadePhysicsEngine.createMovingSprite
    ;
    .object ArcadePhysicsEngine_createMovingSprite__P4740 "game/physics.ts(218,5): ArcadePhysicsEngine.createMovingSprite"
ArcadePhysicsEngine_createMovingSprite__P4740_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_createMovingSprite__P4740_args:
    cmp r4, #4
    bge ArcadePhysicsEngine_createMovingSprite__P4740_nochk
    push {lr}
    bl _expand_args_4_74
    bl ArcadePhysicsEngine_createMovingSprite__P4740_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
ArcadePhysicsEngine_createMovingSprite__P4740:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_createMovingSprite__P4740_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_createMovingSprite__P4740_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4746_nochk
_proccall1778:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4746_nochk
_proccall1779:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #28]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_479      
.jmpz1780:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1781:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1782:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_479      
.else_0_479:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #36]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_479      
.jmpz1783:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #36]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1784:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1785:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _cmp_lt
    beq .else_3_479      
.jmpz1786:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall1787:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_4_479      
.else_3_479:
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _cmp_gt
    beq .else_5_479      
.jmpz1788:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall1789:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_6_479      
.else_5_479:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    @stackempty locals
.afterif_6_479:
.afterif_4_479:
.else_2_479:
.afterif_7_479:
.afterif_1_479:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_479      
.jmpz1790:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0}; tmpstore @2
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #32]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1791:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1792:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @3
    ldr r0, [sp, #4*1] ; tmpref @2
    pop {r1} ; tmpref @3
    add sp, #4*1 ; pop locals 1
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_9_479      
.else_8_479:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_479      
.jmpz1793:
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #40]
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_imul__P161
_proccall1794:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_idiv__P163
_proccall1795:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@4]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_lt
    beq .else_11_479      
.jmpz1796:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_min__P166
_proccall1797:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_12_479      
.else_11_479:
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_gt
    beq .else_13_479      
.jmpz1798:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@4]
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Fx_max__P167
_proccall1799:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_14_479      
.else_13_479:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    @stackempty locals
.afterif_14_479:
.afterif_12_479:
.else_10_479:
.afterif_15_479:
.afterif_9_479:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4746_nochk
_proccall1800:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl ArcadePhysicsEngine_constrain__P4746_nochk
_proccall1801:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1802:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx8__P149
_proccall1803:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@6]
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@7]
    str r0, [sp, locals@9]
    @stackempty locals
.cont.16689:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1805:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_17_479      
.jmpz1804:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_16_479      
.lazySkip_17_479:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1806:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_16_479:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.16689      
.jmpz1807:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1809:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_18_479      
.jmpz1808:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl Fx_idiv__P163
_proccall1810:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
.else_18_479:
.afterif_19_479:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx_abs__P165
_proccall1812:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_20_479      
.jmpz1811:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl Fx_idiv__P163
_proccall1813:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
.else_20_479:
.afterif_21_479:
    b .cont.16689      
.brk.16689:
    ldr r0, _ldlit_296 ; MovingSprite__C2500_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    ldr r0, [sp, #4*7] ; tmpref @1
    push {r0} ; proc-arg
    bl MovingSprite_constructor__P2501
_proccall1814:
    add sp, #4*8 ; pop locals 8
    pop {r0} ; tmpref @1
.ret.4740:
    @stackempty locals
.final_22_479:
    add sp, #4*10 ; pop locals 10
ArcadePhysicsEngine_createMovingSprite__P4740_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(762,5): ArcadePhysicsEngine.constrain
    ;
    .object ArcadePhysicsEngine_constrain__P4746 "game/physics.ts(762,5): ArcadePhysicsEngine.constrain"
ArcadePhysicsEngine_constrain__P4746_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_constrain__P4746_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_constrain__P4746_nochk
    push {lr}
    bl _expand_args_2_18
    bl ArcadePhysicsEngine_constrain__P4746_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_constrain__P4746:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_constrain__P4746_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_constrain__P4746_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Fx_min__P166
_proccall1815:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Fx_max__P167
_proccall1816:
    add sp, #4*2 ; pop locals 2
.ret.4746:
    @stackempty locals
.final_0_481:
ArcadePhysicsEngine_constrain__P4746_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function base/pxt-helpers.ts(230,5): helpers.arrayMap
    ;
    .object helpers_arrayMap__P106 "base/pxt-helpers.ts(230,5): helpers.arrayMap"
helpers_arrayMap__P106_pre:
    .section code
    .balign 4
    .section code
helpers_arrayMap__P106:
helpers_arrayMap__P106_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayMap__P106_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.16751:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.16751      
.jmpz1817:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_28
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.16751:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.16751      
.brk.16751:
    ldr r0, [sp, locals@0]
.ret.106:
    @stackempty locals
.final_0_482:
    add sp, #4*3 ; pop locals 3
helpers_arrayMap__P106_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(109,5): ArcadePhysicsEngine.draw
    ;
    .object ArcadePhysicsEngine_draw__P2513 "game/physics.ts(109,5): ArcadePhysicsEngine.draw"
ArcadePhysicsEngine_draw__P2513_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_draw__P2513_args:
    cmp r4, #1
    bge ArcadePhysicsEngine_draw__P2513_nochk
    push {lr}
    bl _expand_args_1_12
    bl ArcadePhysicsEngine_draw__P2513_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ArcadePhysicsEngine_draw__P2513:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_draw__P2513_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_draw__P2513_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl sprites_SpriteMap_draw__P2425
_proccall1819:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2513:
    @stackempty locals
    movs r0, #0
.final_0_483:
ArcadePhysicsEngine_draw__P2513_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritemap.ts(37,9): sprites.SpriteMap.draw
    ;
    .object sprites_SpriteMap_draw__P2425 "game/spritemap.ts(37,9): sprites.SpriteMap.draw"
sprites_SpriteMap_draw__P2425_pre:
    .section code
    .balign 4
sprites_SpriteMap_draw__P2425_args:
    cmp r4, #1
    bge sprites_SpriteMap_draw__P2425_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteMap_draw__P2425_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteMap_draw__P2425:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteMap__C2421_validate_69
    mov lr, r7
sprites_SpriteMap_draw__P2425_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
sprites_SpriteMap_draw__P2425_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.16772:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1820
    b .brk.16772      
.jmpz1820:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.16777:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.16777      
.jmpz1821:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteMap_key__P4703_nochk
_proccall1822:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_484      
.jmpz1823:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_484      
.lazySkip_2_484:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.lazy_1_484:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_484      
.jmpz1824:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawRect__P1939
_proccall1825:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
.else_0_484:
.afterif_3_484:
.cont.16777:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.16777      
.brk.16777:
.cont.16772:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.16772      
.brk.16772:
.ret.2425:
    @stackempty locals
    movs r0, #0
.final_4_484:
    add sp, #4*6 ; pop locals 6
sprites_SpriteMap_draw__P2425_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(105,5): ArcadePhysicsEngine.removeSprite
    ;
    .object ArcadePhysicsEngine_removeSprite__P2512 "game/physics.ts(105,5): ArcadePhysicsEngine.removeSprite"
ArcadePhysicsEngine_removeSprite__P2512_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_removeSprite__P2512_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_removeSprite__P2512_nochk
    push {lr}
    bl _expand_args_2_18
    bl ArcadePhysicsEngine_removeSprite__P2512_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
ArcadePhysicsEngine_removeSprite__P2512:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_removeSprite__P2512_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ArcadePhysicsEngine_removeSprite__P2512_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.ret.2512:
    @stackempty locals
    movs r0, #0
.final_0_485:
ArcadePhysicsEngine_removeSprite__P2512_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/physics.ts(97,5): ArcadePhysicsEngine.addSprite
    ;
    .object ArcadePhysicsEngine_addSprite__P2511 "game/physics.ts(97,5): ArcadePhysicsEngine.addSprite"
ArcadePhysicsEngine_addSprite__P2511_pre:
    .section code
    .balign 4
ArcadePhysicsEngine_addSprite__P2511_args:
    cmp r4, #2
    bge ArcadePhysicsEngine_addSprite__P2511_nochk
    push {lr}
    bl _expand_args_2_18
    bl ArcadePhysicsEngine_addSprite__P2511_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_296:
 .word MovingSprite__C2500_VT
.object POP
    .section code
ArcadePhysicsEngine_addSprite__P2511:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_ArcadePhysicsEngine__C2502_validate_68
    mov lr, r7
ArcadePhysicsEngine_addSprite__P2511_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
ArcadePhysicsEngine_addSprite__P2511_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl game_currentScene__P2974
_proccall1826:
    bl _inst_scene_Scene__C2818_validate_11
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_486      
.jmpz1827:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_486      
.lazySkip_2_486:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_isOnWall__P2733
_proccall1828:
    add sp, #4*2 ; pop locals 2
.lazy_1_486:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_486      
.jmpz1829:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_Sprite__C2316_validate_30
    ldr r0, [r0, #116]
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_Sprite__C2316_validate_30
    str r1, [r0, #116]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_486:
.afterif_3_486:
.ret.2511:
    @stackempty locals
    movs r0, #0
.final_4_486:
    add sp, #4*1 ; pop locals 1
ArcadePhysicsEngine_addSprite__P2511_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(205,9): tiles.TileMapData.constructor
    ;
    .object tiles_TileMapData_constructor__P2693 "game/tilemap.ts(205,9): tiles.TileMapData.constructor"
tiles_TileMapData_constructor__P2693_pre:
    .section code
    .balign 4
    .section code
tiles_TileMapData_constructor__P2693:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2692_validate_62
    mov lr, r7
tiles_TileMapData_constructor__P2693_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_constructor__P2693_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMapData_scale__P2697_nochk
_proccall1830:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #4
    movs r2, #2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.2693:
    @stackempty locals
.final_0_487:
tiles_TileMapData_constructor__P2693_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(227,9): tiles.TileMapData.scale
    ;
    .object tiles_TileMapData_scale__P2697 "game/tilemap.ts(227,9): tiles.TileMapData.scale"
tiles_TileMapData_scale__P2697_pre:
    .section code
    .balign 4
tiles_TileMapData_scale__P2697_args:
    cmp r4, #2
    bge tiles_TileMapData_scale__P2697_nochk
    push {lr}
    bl _expand_args_2_18
    bl tiles_TileMapData_scale__P2697_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMapData_scale__P2697:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMapData__C2692_validate_62
    mov lr, r7
tiles_TileMapData_scale__P2697_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMapData_scale__P2697_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2697:
    @stackempty locals
    movs r0, #0
.final_0_488:
tiles_TileMapData_scale__P2697_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(301,9): tiles.TileMap.constructor
    ;
    .object tiles_TileMap_constructor__P2712 "game/tilemap.ts(301,9): tiles.TileMap.constructor"
tiles_TileMap_constructor__P2712_pre:
    .section code
    .balign 4
    .section code
tiles_TileMap_constructor__P2712:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_constructor__P2712_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_constructor__P2712_locals:
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_scale__P2714_nochk
_proccall1831:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_298 ; tiles_TileMap_inline__P16894_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    bl scene_createRenderable__P2780
_proccall1832:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.2712:
    @stackempty locals
.final_0_489:
tiles_TileMap_constructor__P2712_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(307,17): tiles.TileMap.inline
    ;
    .object tiles_TileMap_inline__P16894 "game/tilemap.ts(307,17): tiles.TileMap.inline"
tiles_TileMap_inline__P16894_pre:
    .section code
    .balign 4
tiles_TileMap_inline__P16894_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word tiles_TileMap_inline__P16894_args@fn
tiles_TileMap_inline__P16894_args:
    cmp r4, #2
    bge tiles_TileMap_inline__P16894_nochk
    push {lr}
    bl _expand_args_2_18
    bl tiles_TileMap_inline__P16894_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_inline__P16894:
tiles_TileMap_inline__P16894_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_inline__P16894_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl tiles_TileMap_draw__P4816_nochk
_proccall1833:
    add sp, #4*3 ; pop locals 3
.ret.16894:
    @stackempty locals
    movs r0, #0
.final_0_490:
tiles_TileMap_inline__P16894_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(459,9): tiles.TileMap.draw
    ;
    .object tiles_TileMap_draw__P4816 "game/tilemap.ts(459,9): tiles.TileMap.draw"
tiles_TileMap_draw__P4816_pre:
    .section code
    .balign 4
tiles_TileMap_draw__P4816_args:
    cmp r4, #3
    bge tiles_TileMap_draw__P4816_nochk
    push {lr}
    bl _expand_args_3_15
    bl tiles_TileMap_draw__P4816_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
tiles_TileMap_draw__P4816:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_draw__P4816_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
tiles_TileMap_draw__P4816_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_TileMap_enabled__P2722_nochk
_proccall1835:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_491      
.jmpz1834:
    b .ret.4816      
.else_0_491:
.afterif_1_491:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #12]
    ldr r1, [sp, locals@0]
    bl _numops_ands
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@0]
    bl _numops_ands
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall1836:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1837:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall1838:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_asrs
    add sp, #4*2 ; pop locals 2
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P131
_proccall1839:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.16971:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@4]
    bl _cmp_le
    beq .brk.16971      
.jmpz1840:
    ldr r0, [sp, locals@5]
    str r0, [sp, locals@8]
    @stackempty locals
.fortop.16976:
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@6]
    bl _cmp_le
    beq .brk.16976      
.jmpz1841:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTile__P2698
_proccall1842:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_getTileImage__P2701
_proccall1843:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_491      
.jmpz1844:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_60
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_2_491:
.afterif_3_491:
.cont.16976:
    ldr r0, [sp, locals@8]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@8]
    @stackempty locals
    b .fortop.16976      
.brk.16976:
.cont.16971:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .fortop.16971      
.brk.16971:
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1845
    b .else_4_491      
.jmpz1845:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@11]
    @stackempty locals
.fortop.17024:
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@4]
    bl _cmp_le
    bne .jmpz1846
    b .brk.17024      
.object PUSH
.balign 4
_ldlit_298:
 .word tiles_TileMap_inline__P16894_Lit
.object POP
.jmpz1846:
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_7_491      
.jmpz1847:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_491      
.lazySkip_7_491:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_6_491:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_491      
.jmpz1848:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    movs r0, #3
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    push {r4}
    bl helpers_imageDrawLine__P1938
_proccall1849:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.else_5_491:
.afterif_8_491:
.cont.17024:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    @stackempty locals
    b .fortop.17024      
.brk.17024:
    ldr r0, [sp, locals@5]
    str r0, [sp, locals@13]
    @stackempty locals
.fortop.17055:
    ldr r0, [sp, locals@13]
    ldr r1, [sp, locals@6]
    bl _cmp_le
    beq .brk.17055      
.jmpz1850:
    ldr r0, [sp, locals@13]
    ldr r1, [sp, locals@5]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@14]
    @stackempty locals
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_11_491      
.jmpz1851:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_491      
.lazySkip_11_491:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
.lazy_10_491:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_9_491      
.jmpz1852:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r0, #1
    push {r0} ; proc-arg
    push {r3}
    bl helpers_imageDrawLine__P1938
_proccall1853:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.else_9_491:
.afterif_12_491:
.cont.17055:
    ldr r0, [sp, locals@13]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@13]
    @stackempty locals
    b .fortop.17055      
.brk.17055:
.else_4_491:
.afterif_13_491:
.ret.4816:
    @stackempty locals
    movs r0, #0
.final_14_491:
    add sp, #4*15 ; pop locals 15
tiles_TileMap_draw__P4816_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(315,9): tiles.TileMap.scale
    ;
    .object tiles_TileMap_scale__P2714 "game/tilemap.ts(315,9): tiles.TileMap.scale"
tiles_TileMap_scale__P2714_pre:
    .section code
    .balign 4
tiles_TileMap_scale__P2714_args:
    cmp r4, #2
    bge tiles_TileMap_scale__P2714_nochk
    push {lr}
    bl _expand_args_2_18
    bl tiles_TileMap_scale__P2714_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
tiles_TileMap_scale__P2714:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_scale__P2714_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_scale__P2714_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_492      
.jmpz1854:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl tiles_TileMapData_scale__P2697
_proccall1855:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_492:
.afterif_1_492:
.ret.2714:
    @stackempty locals
    movs r0, #0
.final_2_492:
tiles_TileMap_scale__P2714_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(322,9): tiles.TileMap.data
    ;
    .object tiles_TileMap_data__P2715 "game/tilemap.ts(322,9): tiles.TileMap.data"
tiles_TileMap_data__P2715_pre:
    .section code
    .balign 4
tiles_TileMap_data__P2715_args:
    cmp r4, #1
    bge tiles_TileMap_data__P2715_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_TileMap_data__P2715_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_TileMap_data__P2715:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_TileMap__C2710_validate_61
    mov lr, r7
tiles_TileMap_data__P2715_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_TileMap_data__P2715_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
.ret.2715:
    @stackempty locals
.final_0_493:
tiles_TileMap_data__P2715_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/background.ts(73,9): scene.BackgroundLayer.constructor
    ;
    .object scene_BackgroundLayer_constructor__P2661 "game/background.ts(73,9): scene.BackgroundLayer.constructor"
scene_BackgroundLayer_constructor__P2661_pre:
    .section code
    .balign 4
    .section code
scene_BackgroundLayer_constructor__P2661:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_BackgroundLayer__C2654_validate_59
    mov lr, r7
scene_BackgroundLayer_constructor__P2661_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_BackgroundLayer_constructor__P2661_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    bl Math_max__P130
_proccall1856:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #11
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1857
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_494      
.jmpz1857:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1858
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_494      
.jmpz1858:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1859
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_494      
.jmpz1859:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1860
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_494      
.jmpz1860:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1861
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_494      
.jmpz1861:
    pop {r0} ; tmpref @1
    b .brk.17109      
.switch_0_494:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #24]
    @stackempty locals
    b .brk.17109      
.switch_1_494:
.switch_2_494:
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #24]
    @stackempty locals
    b .brk.17109      
.switch_3_494:
.switch_4_494:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #24]
    @stackempty locals
.brk.17109:
    movs r0, #0
.ret.2661:
    @stackempty locals
.final_5_494:
scene_BackgroundLayer_constructor__P2661_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(52,9): scene.Camera.y
    ;
    .object scene_Camera_y__P2766 "game/camera.ts(52,9): scene.Camera.y"
scene_Camera_y__P2766_pre:
    .section code
    .balign 4
scene_Camera_y__P2766_args:
    cmp r4, #1
    bge scene_Camera_y__P2766_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_y__P2766_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_y__P2766:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_y__P2766_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_y__P2766_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2766:
    @stackempty locals
.final_0_495:
scene_Camera_y__P2766_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(49,9): scene.Camera.x
    ;
    .object scene_Camera_x__P2765 "game/camera.ts(49,9): scene.Camera.x"
scene_Camera_x__P2765_pre:
    .section code
    .balign 4
scene_Camera_x__P2765_args:
    cmp r4, #1
    bge scene_Camera_x__P2765_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_x__P2765_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_x__P2765:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_x__P2765_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_x__P2765_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2765:
    @stackempty locals
.final_0_496:
scene_Camera_x__P2765_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/scene.ts(189,9): scene.Scene.data
    ;
    .object scene_Scene_data__P2843 "game/scene.ts(189,9): scene.Scene.data"
scene_Scene_data__P2843_pre:
    .section code
    .balign 4
scene_Scene_data__P2843_args:
    cmp r4, #1
    bge scene_Scene_data__P2843_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Scene_data__P2843_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Scene_data__P2843:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Scene__C2818_validate_11
    mov lr, r7
scene_Scene_data__P2843_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Scene_data__P2843_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
.ret.2843:
    @stackempty locals
.final_0_497:
scene_Scene_data__P2843_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(98,9): sprites.SpriteSet.toString
    ;
    .object sprites_SpriteSet_toString__P2449 "game/spriteset.ts(98,9): sprites.SpriteSet.toString"
sprites_SpriteSet_toString__P2449_pre:
    .section code
    .balign 4
sprites_SpriteSet_toString__P2449_args:
    cmp r4, #1
    bge sprites_SpriteSet_toString__P2449_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteSet_toString__P2449_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteSet_toString__P2449:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2438_validate_33
    mov lr, r7
sprites_SpriteSet_toString__P2449_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_toString__P2449_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_SpriteSet_length__P2441_nochk
_proccall1862:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_300 ; _str39      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.2449:
    @stackempty locals
.final_0_498:
sprites_SpriteSet_toString__P2449_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spriteset.ts(27,9): sprites.SpriteSet.length
    ;
    .object sprites_SpriteSet_length__P2441 "game/spriteset.ts(27,9): sprites.SpriteSet.length"
sprites_SpriteSet_length__P2441_pre:
    .section code
    .balign 4
sprites_SpriteSet_length__P2441_args:
    cmp r4, #1
    bge sprites_SpriteSet_length__P2441_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_SpriteSet_length__P2441_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_SpriteSet_length__P2441:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_SpriteSet__C2438_validate_33
    mov lr, r7
sprites_SpriteSet_length__P2441_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_SpriteSet_length__P2441_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.2441:
    @stackempty locals
.final_0_499:
sprites_SpriteSet_length__P2441_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1064,5): Sprite.toString
    ;
    .object Sprite_toString__P2409 "game/sprite.ts(1064,5): Sprite.toString"
Sprite_toString__P2409_pre:
    .section code
    .balign 4
Sprite_toString__P2409_args:
    cmp r4, #1
    bge Sprite_toString__P2409_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_toString__P2409_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_toString__P2409:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_toString__P2409_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_toString__P2409_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_301 ; _str32      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_x__P2329_nochk
_proccall1863:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_302 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_y__P2331_nochk
_proccall1864:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_303 ; _str33      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2333_nochk
_proccall1865:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_302 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2335_nochk
_proccall1866:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_304 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.ret.2409:
    @stackempty locals
.final_0_500:
Sprite_toString__P2409_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(629,5): Sprite.__update
    ;
    .object Sprite___update__P2391 "game/sprite.ts(629,5): Sprite.__update"
Sprite___update__P2391_pre:
    .section code
    .balign 4
Sprite___update__P2391_args:
    cmp r4, #3
    bge Sprite___update__P2391_nochk
    push {lr}
    bl _expand_args_3_15
    bl Sprite___update__P2391_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite___update__P2391:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite___update__P2391_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite___update__P2391_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #84]
    movs r1, #0
    bl _cmp_neqq
    beq .else_0_501      
.jmpz1867:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #84]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #84]
    movs r1, #1
    bl _cmp_le
    beq .else_1_501      
.jmpz1868:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite__destroyCore__P2404_nochk
_proccall1869:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_1_501:
.afterif_2_501:
.else_0_501:
.afterif_3_501:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #9
    bl _numops_ands
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_501      
.jmpz1870:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_501      
.lazySkip_6_501:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isOutOfScreen__P2389_nochk
_proccall1871:
    add sp, #4*2 ; pop locals 2
.lazy_5_501:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_501      
.jmpz1872:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_destroy__P2403_nochk
_proccall1873:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_501:
.afterif_7_501:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_501      
.jmpz1874:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #40
    bl _classCall_sprites_BaseSpriteSayRenderer__C2236_103
_proccall1875:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_8_501:
.afterif_9_501:
.ret.2391:
    @stackempty locals
    movs r0, #0
.final_10_501:
Sprite___update__P2391_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(10,9): sprites.BaseSpriteSayRenderer.update
    ;
    .object sprites_BaseSpriteSayRenderer_update__P2239 "game/spritesay.ts(10,9): sprites.BaseSpriteSayRenderer.update"
sprites_BaseSpriteSayRenderer_update__P2239_pre:
    .section code
    .balign 4
sprites_BaseSpriteSayRenderer_update__P2239_args:
    cmp r4, #4
    bge sprites_BaseSpriteSayRenderer_update__P2239_nochk
    push {lr}
    bl _expand_args_4_74
    bl sprites_BaseSpriteSayRenderer_update__P2239_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
sprites_BaseSpriteSayRenderer_update__P2239:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2236_validate_104
    mov lr, r7
sprites_BaseSpriteSayRenderer_update__P2239_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_update__P2239_locals:
.ret.2239:
    @stackempty locals
    movs r0, #0
.final_0_502:
sprites_BaseSpriteSayRenderer_update__P2239_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(608,5): Sprite.isOutOfScreen
    ;
    .object Sprite_isOutOfScreen__P2389 "game/sprite.ts(608,5): Sprite.isOutOfScreen"
Sprite_isOutOfScreen__P2389_pre:
    .section code
    .balign 4
Sprite_isOutOfScreen__P2389_args:
    cmp r4, #2
    bge Sprite_isOutOfScreen__P2389_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_isOutOfScreen__P2389_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_isOutOfScreen__P2389:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_isOutOfScreen__P2389_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_isOutOfScreen__P2389_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_503      
.jmpz1876:
    movs r0, #1
    b .condexprfin_1_503      
.condexprz_0_503:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #12]
.condexprfin_1_503:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_503      
.jmpz1877:
    movs r0, #1
    b .condexprfin_3_503      
.condexprz_2_503:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #16]
    b .condexprfin_3_503      
.object PUSH
.balign 4
_ldlit_300:
 .word _str39
_ldlit_301:
 .word _str32
_ldlit_302:
 .word _str0
_ldlit_303:
 .word _str33
_ldlit_304:
 .word _str34
.object POP
.condexprfin_3_503:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_right__P2376_nochk
_proccall1879:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_5_503      
.jmpz1878:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_503      
.lazySkip_5_503:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_bottom__P2380_nochk
_proccall1880:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_4_503:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_503      
.jmpz1881:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_503      
.lazySkip_7_503:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2374_nochk
_proccall1882:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_6_503:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_9_503      
.jmpz1883:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_503      
.lazySkip_9_503:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2378_nochk
_proccall1884:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_8_503:
; jmp value (already in r0)
.ret.2389:
    @stackempty locals
.final_10_503:
    add sp, #4*2 ; pop locals 2
Sprite_isOutOfScreen__P2389_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(242,5): Sprite.data
    ;
    .object Sprite_data__P2352 "game/sprite.ts(242,5): Sprite.data"
Sprite_data__P2352_pre:
    .section code
    .balign 4
Sprite_data__P2352_args:
    cmp r4, #2
    bge Sprite_data__P2352_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_data__P2352_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_data__P2352:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_data__P2352_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_data__P2352_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #60]
    @stackempty locals
.ret.2352:
    @stackempty locals
    movs r0, #0
.final_0_504:
Sprite_data__P2352_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(237,5): Sprite.data
    ;
    .object Sprite_data__P2351 "game/sprite.ts(237,5): Sprite.data"
Sprite_data__P2351_pre:
    .section code
    .balign 4
Sprite_data__P2351_args:
    cmp r4, #1
    bge Sprite_data__P2351_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite_data__P2351_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite_data__P2351:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_data__P2351_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_data__P2351_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_505      
.jmpz1885:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_505:
.afterif_1_505:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
.ret.2351:
    @stackempty locals
.final_2_505:
Sprite_data__P2351_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(46,9): sprites.BaseSprite.__update
    ;
    .object sprites_BaseSprite___update__P2079 "game/basesprite.ts(46,9): sprites.BaseSprite.__update"
sprites_BaseSprite___update__P2079_pre:
    .section code
    .balign 4
sprites_BaseSprite___update__P2079_args:
    cmp r4, #3
    bge sprites_BaseSprite___update__P2079_nochk
    push {lr}
    bl _expand_args_3_15
    bl sprites_BaseSprite___update__P2079_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
sprites_BaseSprite___update__P2079:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_38
    mov lr, r7
sprites_BaseSprite___update__P2079_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___update__P2079_locals:
.ret.2079:
    @stackempty locals
    movs r0, #0
.final_0_506:
sprites_BaseSprite___update__P2079_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(38,9): sprites.BaseSprite.__draw
    ;
    .object sprites_BaseSprite___draw__P2077 "game/basesprite.ts(38,9): sprites.BaseSprite.__draw"
sprites_BaseSprite___draw__P2077_pre:
    .section code
    .balign 4
sprites_BaseSprite___draw__P2077_args:
    cmp r4, #2
    bge sprites_BaseSprite___draw__P2077_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_BaseSprite___draw__P2077_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_BaseSprite___draw__P2077:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_38
    mov lr, r7
sprites_BaseSprite___draw__P2077_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___draw__P2077_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_Sprite__C2316_this_35
_proccall1887:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_507      
.jmpz1886:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_Sprite__C2316_this_35
_proccall1888:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_507:
.afterif_1_507:
.ret.2077:
    @stackempty locals
    movs r0, #0
.final_2_507:
sprites_BaseSprite___draw__P2077_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(44,9): sprites.BaseSprite.__drawCore
    ;
    .object sprites_BaseSprite___drawCore__P2078 "game/basesprite.ts(44,9): sprites.BaseSprite.__drawCore"
sprites_BaseSprite___drawCore__P2078_pre:
    .section code
    .balign 4
sprites_BaseSprite___drawCore__P2078_args:
    cmp r4, #2
    bge sprites_BaseSprite___drawCore__P2078_nochk
    push {lr}
    bl _expand_args_2_18
    bl sprites_BaseSprite___drawCore__P2078_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
sprites_BaseSprite___drawCore__P2078:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_38
    mov lr, r7
sprites_BaseSprite___drawCore__P2078_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___drawCore__P2078_locals:
.ret.2078:
    @stackempty locals
    movs r0, #0
.final_0_508:
sprites_BaseSprite___drawCore__P2078_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/basesprite.ts(23,9): sprites.BaseSprite.__visible
    ;
    .object sprites_BaseSprite___visible__P2074 "game/basesprite.ts(23,9): sprites.BaseSprite.__visible"
sprites_BaseSprite___visible__P2074_pre:
    .section code
    .balign 4
sprites_BaseSprite___visible__P2074_args:
    cmp r4, #1
    bge sprites_BaseSprite___visible__P2074_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_BaseSprite___visible__P2074_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_BaseSprite___visible__P2074:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSprite__C2071_validate_38
    mov lr, r7
sprites_BaseSprite___visible__P2074_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSprite___visible__P2074_locals:
    movs r0, #66
.ret.2074:
    @stackempty locals
.final_0_509:
sprites_BaseSprite___visible__P2074_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controller.ts(470,9): controller.AnyButton.isPressed
    ;
    .object controller_AnyButton_isPressed__P4677 "game/controller.ts(470,9): controller.AnyButton.isPressed"
controller_AnyButton_isPressed__P4677_pre:
    .section code
    .balign 4
controller_AnyButton_isPressed__P4677_args:
    cmp r4, #1
    bge controller_AnyButton_isPressed__P4677_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_AnyButton_isPressed__P4677_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_AnyButton_isPressed__P4677:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_AnyButton__C4669_validate_105
    mov lr, r7
controller_AnyButton_isPressed__P4677_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
controller_AnyButton_isPressed__P4677_locals:
    bl controller__player1__P2105
_proccall1889:
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_controller_Controller__C2111_validate_44
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.17316:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.17316      
.jmpz1890:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_controller_Button__C2166_63
_proccall1892:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_510      
.jmpz1891:
    movs r0, #66
    b .ret.4677      
.else_0_510:
.afterif_1_510:
.cont.17316:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.17316      
.brk.17316:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #10
.ret.4677:
    @stackempty locals
.final_2_510:
    add sp, #4*4 ; pop locals 4
controller_AnyButton_isPressed__P4677_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/controllerbutton.ts(74,9): controller.Button.toString
    ;
    .object controller_Button_toString__P2171 "game/controllerbutton.ts(74,9): controller.Button.toString"
controller_Button_toString__P2171_pre:
    .section code
    .balign 4
controller_Button_toString__P2171_args:
    cmp r4, #1
    bge controller_Button_toString__P2171_nochk
    push {lr}
    bl _expand_args_1_12
    bl controller_Button_toString__P2171_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
controller_Button_toString__P2171:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_controller_Button__C2166_validate_16
    mov lr, r7
controller_Button_toString__P2171_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
controller_Button_toString__P2171_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_511      
.jmpz1893:
    ldr r0, _ldlit_306 ; _str29      
    b .condexprfin_1_511      
.condexprz_0_511:
    ldr r0, _ldlit_307 ; _str30      
.condexprfin_1_511:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_308 ; _str27      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_309 ; _str28      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
.ret.2171:
    @stackempty locals
.final_2_511:
controller_Button_toString__P2171_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(3,9): sprites.BaseSpriteSayRenderer.constructor
    ;
    .object sprites_BaseSpriteSayRenderer_constructor__P2237 "game/spritesay.ts(3,9): sprites.BaseSpriteSayRenderer.constructor"
sprites_BaseSpriteSayRenderer_constructor__P2237_pre:
    .section code
    .balign 4
    .section code
sprites_BaseSpriteSayRenderer_constructor__P2237:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2236_validate_104
    mov lr, r7
sprites_BaseSpriteSayRenderer_constructor__P2237_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_constructor__P2237_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    movs r0, #0
.ret.2237:
    @stackempty locals
.final_0_512:
sprites_BaseSpriteSayRenderer_constructor__P2237_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(49,9): sprites.StaticObstacle.width
    ;
    .object sprites_StaticObstacle_width__P2483 "game/obstacle.ts(49,9): sprites.StaticObstacle.width"
sprites_StaticObstacle_width__P2483_pre:
    .section code
    .balign 4
sprites_StaticObstacle_width__P2483_args:
    cmp r4, #1
    bge sprites_StaticObstacle_width__P2483_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_StaticObstacle_width__P2483_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_width__P2483:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2473_validate_99
    mov lr, r7
sprites_StaticObstacle_width__P2483_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_width__P2483_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.2483:
    @stackempty locals
.final_0_513:
sprites_StaticObstacle_width__P2483_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(45,9): sprites.StaticObstacle.height
    ;
    .object sprites_StaticObstacle_height__P2482 "game/obstacle.ts(45,9): sprites.StaticObstacle.height"
sprites_StaticObstacle_height__P2482_pre:
    .section code
    .balign 4
sprites_StaticObstacle_height__P2482_args:
    cmp r4, #1
    bge sprites_StaticObstacle_height__P2482_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_StaticObstacle_height__P2482_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_height__P2482:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2473_validate_99
    mov lr, r7
sprites_StaticObstacle_height__P2482_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_height__P2482_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.2482:
    @stackempty locals
.final_0_514:
sprites_StaticObstacle_height__P2482_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(41,9): sprites.StaticObstacle.y
    ;
    .object sprites_StaticObstacle_y__P2481 "game/obstacle.ts(41,9): sprites.StaticObstacle.y"
sprites_StaticObstacle_y__P2481_pre:
    .section code
    .balign 4
sprites_StaticObstacle_y__P2481_args:
    cmp r4, #1
    bge sprites_StaticObstacle_y__P2481_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_StaticObstacle_y__P2481_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_y__P2481:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2473_validate_99
    mov lr, r7
sprites_StaticObstacle_y__P2481_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_y__P2481_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_StaticObstacle_height__P2482_nochk
_proccall1894:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2481:
    @stackempty locals
.final_0_515:
sprites_StaticObstacle_y__P2481_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/obstacle.ts(37,9): sprites.StaticObstacle.x
    ;
    .object sprites_StaticObstacle_x__P2480 "game/obstacle.ts(37,9): sprites.StaticObstacle.x"
sprites_StaticObstacle_x__P2480_pre:
    .section code
    .balign 4
sprites_StaticObstacle_x__P2480_args:
    cmp r4, #1
    bge sprites_StaticObstacle_x__P2480_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_StaticObstacle_x__P2480_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_StaticObstacle_x__P2480:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_StaticObstacle__C2473_validate_99
    mov lr, r7
sprites_StaticObstacle_x__P2480_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_StaticObstacle_x__P2480_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl sprites_StaticObstacle_width__P2483_nochk
_proccall1895:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2480:
    @stackempty locals
.final_0_516:
sprites_StaticObstacle_x__P2480_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(69,9): tiles.Location.top
    ;
    .object tiles_Location_top__P2676 "game/tilemap.ts(69,9): tiles.Location.top"
tiles_Location_top__P2676_pre:
    .section code
    .balign 4
tiles_Location_top__P2676_args:
    cmp r4, #1
    bge tiles_Location_top__P2676_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_top__P2676_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_top__P2676:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2668_validate_100
    mov lr, r7
tiles_Location_top__P2676_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_top__P2676_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2670_nochk
_proccall1896:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
.ret.2676:
    @stackempty locals
.final_0_517:
tiles_Location_top__P2676_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(62,9): tiles.Location.left
    ;
    .object tiles_Location_left__P2675 "game/tilemap.ts(62,9): tiles.Location.left"
tiles_Location_left__P2675_pre:
    .section code
    .balign 4
tiles_Location_left__P2675_args:
    cmp r4, #1
    bge tiles_Location_left__P2675_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_left__P2675_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_left__P2675:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2668_validate_100
    mov lr, r7
tiles_Location_left__P2675_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
tiles_Location_left__P2675_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2670_nochk
_proccall1897:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
.ret.2675:
    @stackempty locals
.final_0_518:
tiles_Location_left__P2675_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(54,9): tiles.Location.y
    ;
    .object tiles_Location_y__P2674 "game/tilemap.ts(54,9): tiles.Location.y"
tiles_Location_y__P2674_pre:
    .section code
    .balign 4
tiles_Location_y__P2674_args:
    cmp r4, #1
    bge tiles_Location_y__P2674_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_y__P2674_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_y__P2674:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2668_validate_100
    mov lr, r7
tiles_Location_y__P2674_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
tiles_Location_y__P2674_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2670_nochk
_proccall1898:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2674:
    @stackempty locals
.final_0_519:
    add sp, #4*1 ; pop locals 1
tiles_Location_y__P2674_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/tilemap.ts(46,9): tiles.Location.x
    ;
    .object tiles_Location_x__P2673 "game/tilemap.ts(46,9): tiles.Location.x"
tiles_Location_x__P2673_pre:
    .section code
    .balign 4
tiles_Location_x__P2673_args:
    cmp r4, #1
    bge tiles_Location_x__P2673_nochk
    push {lr}
    bl _expand_args_1_12
    bl tiles_Location_x__P2673_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
tiles_Location_x__P2673:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_tiles_Location__C2668_validate_100
    mov lr, r7
tiles_Location_x__P2673_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
tiles_Location_x__P2673_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl tiles_Location_tileMap__P2670_nochk
_proccall1899:
    add sp, #4*1 ; pop locals 1
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
.ret.2673:
    @stackempty locals
.final_0_520:
    add sp, #4*1 ; pop locals 1
tiles_Location_x__P2673_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(230,9): particles.ShapeFactory.drawParticle
    ;
    .object particles_ShapeFactory_drawParticle__P3191 "game/particlefactories.ts(230,9): particles.ShapeFactory.drawParticle"
particles_ShapeFactory_drawParticle__P3191_pre:
    .section code
    .balign 4
particles_ShapeFactory_drawParticle__P3191_args:
    cmp r4, #4
    bge particles_ShapeFactory_drawParticle__P3191_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_ShapeFactory_drawParticle__P3191_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
.object PUSH
.balign 4
_ldlit_306:
 .word _str29
_ldlit_307:
 .word _str30
_ldlit_308:
 .word _str27
_ldlit_309:
 .word _str28
.object POP
    .section code
particles_ShapeFactory_drawParticle__P3191:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_ShapeFactory__C3188_validate_93
    mov lr, r7
particles_ShapeFactory_drawParticle__P3191_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_ShapeFactory_drawParticle__P3191_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_FastRandom_pickRandom__P3039
_proccall1900:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::clone
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_106
    movs r1, #15
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::replace
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0}; tmpstore @3
    ldr r0, [sp, args@2]
    pop {r1} ; tmpref @3
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1901:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0}; tmpstore @4
    ldr r0, [sp, args@3]
    pop {r1} ; tmpref @4
    bl _numops_subs
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1902:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_60
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.3191:
    @stackempty locals
    movs r0, #0
.final_0_521:
    add sp, #4*1 ; pop locals 1
particles_ShapeFactory_drawParticle__P3191_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/mathUtil.ts(71,9): Math.FastRandom.pickRandom
    ;
    .object Math_FastRandom_pickRandom__P3039 "game/mathUtil.ts(71,9): Math.FastRandom.pickRandom"
Math_FastRandom_pickRandom__P3039_pre:
    .section code
    .balign 4
Math_FastRandom_pickRandom__P3039_args:
    cmp r4, #2
    bge Math_FastRandom_pickRandom__P3039_nochk
    push {lr}
    bl _expand_args_2_18
    bl Math_FastRandom_pickRandom__P3039_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Math_FastRandom_pickRandom__P3039:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Math_FastRandom__C3034_validate_70
    mov lr, r7
Math_FastRandom_pickRandom__P3039_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_FastRandom_pickRandom__P3039_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_522      
.jmpz1903:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_522      
.lazySkip_2_522:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_522:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_522      
.jmpz1904:
    movs r0, #0
    b .ret.3039      
.else_0_522:
.afterif_3_522:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_5
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_FastRandom_randomRange__P3038_nochk
_proccall1905:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.ret.3039:
    @stackempty locals
.final_4_522:
Math_FastRandom_pickRandom__P3039_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(159,9): particles.AreaFactory.drawParticle
    ;
    .object particles_AreaFactory_drawParticle__P3179 "game/particlefactories.ts(159,9): particles.AreaFactory.drawParticle"
particles_AreaFactory_drawParticle__P3179_pre:
    .section code
    .balign 4
particles_AreaFactory_drawParticle__P3179_args:
    cmp r4, #4
    bge particles_AreaFactory_drawParticle__P3179_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_AreaFactory_drawParticle__P3179_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_AreaFactory_drawParticle__P3179:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_AreaFactory__C3172_validate_94
    mov lr, r7
particles_AreaFactory_drawParticle__P3179_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
particles_AreaFactory_drawParticle__P3179_locals:
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #20]
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #233
    bl _cmp_gt
    beq .condexprz_0_523      
.jmpz1906:
    movs r0, #9
    b .condexprfin_1_523      
.condexprz_0_523:
    ldr r0, [sp, args@1]
    bl _inst_particles_Particle__C3107_validate_77
    ldr r0, [r0, #20]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #245
    bl _cmp_gt
    beq .condexprz_2_523      
.jmpz1907:
    movs r0, #11
    b .condexprfin_3_523      
.condexprz_2_523:
    movs r0, #3
.condexprfin_3_523:
; jmp value (already in r0)
.condexprfin_1_523:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1908:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1909:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.3179:
    @stackempty locals
    movs r0, #0
.final_4_523:
    add sp, #4*1 ; pop locals 1
particles_AreaFactory_drawParticle__P3179_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/particlefactories.ts(116,9): particles.SprayFactory.drawParticle
    ;
    .object particles_SprayFactory_drawParticle__P3169 "game/particlefactories.ts(116,9): particles.SprayFactory.drawParticle"
particles_SprayFactory_drawParticle__P3169_pre:
    .section code
    .balign 4
particles_SprayFactory_drawParticle__P3169_args:
    cmp r4, #4
    bge particles_SprayFactory_drawParticle__P3169_nochk
    push {lr}
    bl _expand_args_4_74
    bl particles_SprayFactory_drawParticle__P3169_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
particles_SprayFactory_drawParticle__P3169:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_particles_SprayFactory__C3166_validate_89
    mov lr, r7
particles_SprayFactory_drawParticle__P3169_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
particles_SprayFactory_drawParticle__P3169_locals:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1910:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl Fx_toInt__P172
_proccall1911:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_36
    movs r3, #1
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3169:
    @stackempty locals
    movs r0, #0
.final_0_524:
particles_SprayFactory_drawParticle__P3169_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(15,9): scene.Renderable.__drawCore
    ;
    .object scene_Renderable___drawCore__P2778 "game/renderable.ts(15,9): scene.Renderable.__drawCore"
scene_Renderable___drawCore__P2778_pre:
    .section code
    .balign 4
scene_Renderable___drawCore__P2778_args:
    cmp r4, #2
    bge scene_Renderable___drawCore__P2778_nochk
    push {lr}
    bl _expand_args_2_18
    bl scene_Renderable___drawCore__P2778_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
scene_Renderable___drawCore__P2778:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Renderable__C2775_validate_75
    mov lr, r7
scene_Renderable___drawCore__P2778_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Renderable___drawCore__P2778_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #155
    bl _ifacecall3__40
_proccall1912:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2778:
    @stackempty locals
    movs r0, #0
.final_0_525:
scene_Renderable___drawCore__P2778_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/renderable.ts(11,9): scene.Renderable.__visible
    ;
    .object scene_Renderable___visible__P2777 "game/renderable.ts(11,9): scene.Renderable.__visible"
scene_Renderable___visible__P2777_pre:
    .section code
    .balign 4
scene_Renderable___visible__P2777_args:
    cmp r4, #1
    bge scene_Renderable___visible__P2777_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Renderable___visible__P2777_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Renderable___visible__P2777:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Renderable__C2775_validate_75
    mov lr, r7
scene_Renderable___visible__P2777_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Renderable___visible__P2777_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #19
    lsls r1, r1, #4
    bl _ifacecall1__20
_proccall1913:
    add sp, #4*1 ; pop locals 1
.ret.2777:
    @stackempty locals
.final_0_526:
scene_Renderable___visible__P2777_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(61,9): scene.Camera.top
    ;
    .object scene_Camera_top__P2769 "game/camera.ts(61,9): scene.Camera.top"
scene_Camera_top__P2769_pre:
    .section code
    .balign 4
scene_Camera_top__P2769_args:
    cmp r4, #1
    bge scene_Camera_top__P2769_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_top__P2769_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_top__P2769:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_top__P2769_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_top__P2769_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2769:
    @stackempty locals
.final_0_527:
scene_Camera_top__P2769_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/camera.ts(55,9): scene.Camera.left
    ;
    .object scene_Camera_left__P2767 "game/camera.ts(55,9): scene.Camera.left"
scene_Camera_left__P2767_pre:
    .section code
    .balign 4
scene_Camera_left__P2767_args:
    cmp r4, #1
    bge scene_Camera_left__P2767_nochk
    push {lr}
    bl _expand_args_1_12
    bl scene_Camera_left__P2767_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
scene_Camera_left__P2767:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_scene_Camera__C2756_validate_58
    mov lr, r7
scene_Camera_left__P2767_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
scene_Camera_left__P2767_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
.ret.2767:
    @stackempty locals
.final_0_528:
scene_Camera_left__P2767_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(614,5): Sprite.__drawCore
    ;
    .object Sprite___drawCore__P2390 "game/sprite.ts(614,5): Sprite.__drawCore"
Sprite___drawCore__P2390_pre:
    .section code
    .balign 4
Sprite___drawCore__P2390_args:
    cmp r4, #2
    bge Sprite___drawCore__P2390_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite___drawCore__P2390_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite___drawCore__P2390:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite___drawCore__P2390_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite___drawCore__P2390_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_drawSay__P4697_nochk
_proccall1914:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isOutOfScreen__P2389_nochk
_proccall1916:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_529      
.jmpz1915:
    b .ret.2390      
.else_0_529:
.afterif_1_529:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_529      
.jmpz1917:
    movs r0, #1
    b .condexprfin_3_529      
.condexprz_2_529:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #12]
.condexprfin_3_529:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_529      
.jmpz1918:
    movs r0, #1
    b .condexprfin_5_529      
.condexprz_4_529:
    ldr r0, [sp, args@1]
    bl _inst_scene_Camera__C2756_validate_58
    ldr r0, [r0, #16]
.condexprfin_5_529:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_left__P2374_nochk
_proccall1919:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_top__P2378_nochk
_proccall1920:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_subs
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #60
    bl _classCall_Sprite__C2316_this_35
_proccall1921:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_drawDebug__P4698_nochk
_proccall1922:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.2390:
    @stackempty locals
    movs r0, #0
.final_6_529:
    add sp, #4*4 ; pop locals 4
Sprite___drawCore__P2390_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1086,5): Sprite.drawDebug
    ;
    .object Sprite_drawDebug__P4698 "game/sprite.ts(1086,5): Sprite.drawDebug"
Sprite_drawDebug__P4698_pre:
    .section code
    .balign 4
Sprite_drawDebug__P4698_args:
    cmp r4, #5
    bge Sprite_drawDebug__P4698_nochk
    push {lr}
    bl _expand_args_5_22
    bl Sprite_drawDebug__P4698_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
Sprite_drawDebug__P4698:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_drawDebug__P4698_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Sprite_drawDebug__P4698_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #129
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1923
    b .else_0_530      
.jmpz1923:
    ldr r7, [r6, #0]
    ldr r0, [r7, #120]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2373_nochk
_proccall1924:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_x__P2329_nochk
_proccall1925:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_31
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_311 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_y__P2331_nochk
_proccall1926:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_imagePrint__P1968
_proccall1927:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #94
    bl _ifacecall1_get_8
_proccall1928:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2333_nochk
_proccall1930:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_530      
.jmpz1929:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_530      
.lazySkip_3_530:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2335_nochk
_proccall1931:
    add sp, #4*1 ; pop locals 1
.lazy_2_530:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_530      
.jmpz1932:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1933:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vx__P2333_nochk
_proccall1934:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_312 ; _str35      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_311 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_vy__P2335_nochk
_proccall1935:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_imagePrint__P1968
_proccall1936:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.else_1_530:
.afterif_4_530:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ax__P2337_nochk
_proccall1938:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_530      
.jmpz1937:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_530      
.lazySkip_7_530:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ay__P2339_nochk
_proccall1939:
    add sp, #4*1 ; pop locals 1
.lazy_6_530:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_530      
.jmpz1940:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #93
    bl _ifacecall1_get_8
_proccall1941:
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ax__P2337_nochk
_proccall1942:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_41
    ldr r0, _ldlit_313 ; _str36      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_45
    ldr r1, _ldlit_311 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_ay__P2339_nochk
_proccall1943:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_imagePrint__P1968
_proccall1944:
    add sp, #4*7 ; pop locals 7
    @stackempty locals
.else_5_530:
.afterif_8_530:
.else_0_530:
.afterif_9_530:
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_530      
.jmpz1945:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_left__P2193
_proccall1946:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1947:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    push {r0} ; the one arg
    bl game_Hitbox_top__P2194
_proccall1948:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1949:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@4]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1950:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #104]
    bl _inst_game_Hitbox__C2185_validate_37
    ldr r0, [r0, #24]
    push {r0} ; the one arg
    bl Fx_toInt__P172
_proccall1951:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*2] ; estack
    ldr r0, [sp, #4*3] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*4] ; estack
    ldr r0, [sp, #4*5] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*6] ; estack
    ldr r0, [sp, #4*7] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*8] ; estack
    ldr r0, [sp, #4*9] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*10] ; estack
    bl helpers_imageDrawRect__P1939
_proccall1952:
    add sp, #4*11 ; pop locals 11
    @stackempty locals
.else_10_530:
.afterif_11_530:
.ret.4698:
    @stackempty locals
    movs r0, #0
.final_12_530:
    add sp, #4*3 ; pop locals 3
Sprite_drawDebug__P4698_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1116,5): Sprite.drawSprite
    ;
    .object Sprite_drawSprite__P4699 "game/sprite.ts(1116,5): Sprite.drawSprite"
Sprite_drawSprite__P4699_pre:
    .section code
    .balign 4
Sprite_drawSprite__P4699_args:
    cmp r4, #3
    bge Sprite_drawSprite__P4699_nochk
    push {lr}
    bl _expand_args_3_15
    bl Sprite_drawSprite__P4699_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
Sprite_drawSprite__P4699:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_drawSprite__P4699_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_drawSprite__P4699_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_isScaled__P4696_nochk
_proccall1954:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1953
    b .else_0_531      
.object PUSH
.balign 4
_ldlit_311:
 .word _str0
_ldlit_312:
 .word _str35
_ldlit_313:
 .word _str36
.object POP
.jmpz1953:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_60
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::drawTransparentImage
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_1_531      
.else_0_531:
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_width__P2372_nochk
_proccall1955:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Sprite_height__P2373_nochk
_proccall1956:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::width
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::height
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r7, #0
    movs r0, #10
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    ldr r0, [sp, #4*12] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*13] ; estack
    ldr r0, [sp, #4*14] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*15] ; estack
    ldr r0, [sp, #4*16] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*17] ; estack
    ldr r0, [sp, #4*18] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*19] ; estack
    bl helpers_imageBlit__P1933
_proccall1957:
    add sp, #4*20 ; pop locals 20
    @stackempty locals
.afterif_1_531:
.ret.4699:
    @stackempty locals
    movs r0, #0
.final_2_531:
Sprite_drawSprite__P4699_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(1068,5): Sprite.drawSay
    ;
    .object Sprite_drawSay__P4697 "game/sprite.ts(1068,5): Sprite.drawSay"
Sprite_drawSay__P4697_pre:
    .section code
    .balign 4
Sprite_drawSay__P4697_args:
    cmp r4, #2
    bge Sprite_drawSay__P4697_nochk
    push {lr}
    bl _expand_args_2_18
    bl Sprite_drawSay__P4697_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
Sprite_drawSay__P4697:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite_drawSay__P4697_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite_drawSay__P4697_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_532      
.jmpz1958:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    movs r1, #0
    bl _cmp_neqq
    beq .else_1_532      
.jmpz1959:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .else_2_532      
.jmpz1960:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_sprites_BaseSpriteSayRenderer__C2236_103
_proccall1961:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_3_532      
.else_2_532:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    push {r0} ; the one arg
    movs r1, #44
    bl _classCall_sprites_BaseSpriteSayRenderer__C2236_103
_proccall1962:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #100]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #96]
    @stackempty locals
.afterif_3_532:
    b .afterif_4_532      
.else_1_532:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    movs r1, #36
    bl _classCall_sprites_BaseSpriteSayRenderer__C2236_103
_proccall1963:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.afterif_4_532:
.else_0_532:
.afterif_5_532:
.ret.4697:
    @stackempty locals
    movs r0, #0
.final_6_532:
Sprite_drawSay__P4697_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(14,9): sprites.BaseSpriteSayRenderer.destroy
    ;
    .object sprites_BaseSpriteSayRenderer_destroy__P2240 "game/spritesay.ts(14,9): sprites.BaseSpriteSayRenderer.destroy"
sprites_BaseSpriteSayRenderer_destroy__P2240_pre:
    .section code
    .balign 4
sprites_BaseSpriteSayRenderer_destroy__P2240_args:
    cmp r4, #1
    bge sprites_BaseSpriteSayRenderer_destroy__P2240_nochk
    push {lr}
    bl _expand_args_1_12
    bl sprites_BaseSpriteSayRenderer_destroy__P2240_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
sprites_BaseSpriteSayRenderer_destroy__P2240:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2236_validate_104
    mov lr, r7
sprites_BaseSpriteSayRenderer_destroy__P2240_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_destroy__P2240_locals:
.ret.2240:
    @stackempty locals
    movs r0, #0
.final_0_533:
sprites_BaseSpriteSayRenderer_destroy__P2240_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/spritesay.ts(6,9): sprites.BaseSpriteSayRenderer.draw
    ;
    .object sprites_BaseSpriteSayRenderer_draw__P2238 "game/spritesay.ts(6,9): sprites.BaseSpriteSayRenderer.draw"
sprites_BaseSpriteSayRenderer_draw__P2238_pre:
    .section code
    .balign 4
sprites_BaseSpriteSayRenderer_draw__P2238_args:
    cmp r4, #4
    bge sprites_BaseSpriteSayRenderer_draw__P2238_nochk
    push {lr}
    bl _expand_args_4_74
    bl sprites_BaseSpriteSayRenderer_draw__P2238_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
sprites_BaseSpriteSayRenderer_draw__P2238:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_sprites_BaseSpriteSayRenderer__C2236_validate_104
    mov lr, r7
sprites_BaseSpriteSayRenderer_draw__P2238_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
sprites_BaseSpriteSayRenderer_draw__P2238_locals:
.ret.2238:
    @stackempty locals
    movs r0, #0
.final_0_534:
sprites_BaseSpriteSayRenderer_draw__P2238_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function game/sprite.ts(360,5): Sprite.__visible
    ;
    .object Sprite___visible__P2371 "game/sprite.ts(360,5): Sprite.__visible"
Sprite___visible__P2371_pre:
    .section code
    .balign 4
Sprite___visible__P2371_args:
    cmp r4, #1
    bge Sprite___visible__P2371_nochk
    push {lr}
    bl _expand_args_1_12
    bl Sprite___visible__P2371_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
Sprite___visible__P2371:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_Sprite__C2316_validate_30
    mov lr, r7
Sprite___visible__P2371_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Sprite___visible__P2371_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2371:
    @stackempty locals
.final_0_535:
Sprite___visible__P2371_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    .object _pxt_helper_trampoline "helper: trampoline"
    .section code
_pxt_lambda_trampoline:
    push { r4, r5, r6, r7, lr}
    mov r4, r8
    mov r5, r9
    mov r6, r10
    mov r7, r11
    push {r4, r5, r6, r7} ; save high registers
    mov r4, r1
    mov r5, r2
    mov r6, r3
    mov r7, r0
    bl _inst_builtin4_validate_0
    mov r0, sp
    push {r4, r5, r6, r7} ; push args and the lambda
    mov r1, sp
    bl pxt::pushThreadContext
    mov r6, r0          ; save ctx or globals
    mov r5, r7          ; save lambda for closure
    mov r0, r5          ; also save lambda pointer in r0 - needed by pxt::bindMethod
    ldr r1, [r5, #8]    ; ld fnptr
    movs r4, #3         ; 3 args
    blx r1              ; execute the actual lambda
    mov r7, r0          ; save result
    @dummystack 4
    add sp, #4*4        ; remove arguments and lambda
    mov r0, r6   ; or pop the thread context
    bl pxt::popThreadContext
    mov r0, r7 ; restore result
    pop {r4, r5, r6, r7} ; restore high registers
    mov r8, r4
    mov r9, r5
    mov r10, r6
    mov r11, r7
    pop { r4, r5, r6, r7, pc}
    .object _pxt_helper_exn "helper: exn"
    .section code
; r0 - try frame
; r1 - handler PC
_pxt_save_exception_state:
    push {r0, lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::beginTry
    pop {r1, r4}
    str r1, [r0, #1*4] ; PC
    mov r1, sp
    str r1, [r0, #2*4] ; SP
    str r5, [r0, #3*4] ; lambda ptr
    bx r4
    .section code
; r0 - try frame
; r1 - thread context
_pxt_restore_exception_state:
    mov r6, r1
    ldr r1, [r0, #2*4] ; SP
    mov sp, r1
    ldr r5, [r0, #3*4] ; lambda ptr
    ldr r1, [r0, #1*4] ; PC
    movs r0, #1
    orrs r1, r0
    bx r1
    .object _pxt_helper_stringconv "helper: stringconv"
    .section code
_pxt_stringConv:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #1
    bne .notstring
    bx lr
.notstring:
    ldr r7, [r3, #4*8]
    cmp r7, #0
    beq .fail
    push {r0, lr}
    movs r4, #1
    blx r7
    str r0, [sp, #0]
    b .numops
.fail:
    push {r0, lr}
.numops:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toString
    pop {r1, pc}      
    .object _pxt_helper_get_buffer "helper: get buffer"
    .section code
_pxt_buffer_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    ldrb r0, [r4, #8]
    lsls r0, r0, #1
    adds r0, #1
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    lsls r0, r0, #1
    adds r0, #1
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #1 ; 0 or undefined
    bx lr
    .object _pxt_helper_get_array "helper: get array"
    .section code
_pxt_array_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    ldr r0, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #0 ; 0 or undefined
    bx lr
    .object _pxt_helper_set_buffer "helper: set buffer"
    .section code
_pxt_buffer_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    strb r2, [r4, #8]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_set_array "helper: set array"
    .section code
_pxt_array_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    str r2, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_get "helper: get"
    .section code
_pxt_map_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*1 ; pop locals 1
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_set "helper: set"
    .section code
_pxt_map_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, r2, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*2 ; pop locals 2
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_bind "helper: bind"
    .section code
_pxt_bind_helper:
    push {r0, r2}
    movs r0, #2
    ldr r1, _ldlit_315 ; _pxt_bind_lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    pop {r1, r2}
    str r1, [r0, #12]
    str r2, [r0, #16]
    bx r4 ; return
_pxt_bind_lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word .bindCode@fn
.bindCode:
; r0-bind object, r4-#args
    cmp r4, #12
    bge .fail
    lsls r3, r4, #2
    ldr r2, _ldlit_316 ; _pxt_copy_list      
    ldr r1, [r2, r3]
    ldr r3, [r0, #12]
    ldr r2, [r0, #16]
    adds r4, r4, #1
    bx r1
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
_pxt_copy_list:
    .word _pxt_bind_0@fn
    .word _pxt_bind_1@fn
    .word _pxt_bind_2@fn
    .word _pxt_bind_3@fn
    .word _pxt_bind_4@fn
    .word _pxt_bind_5@fn
    .word _pxt_bind_6@fn
    .word _pxt_bind_7@fn
    .word _pxt_bind_8@fn
    .word _pxt_bind_9@fn
    .word _pxt_bind_10@fn
    .word _pxt_bind_11@fn
_pxt_bind_0:
    sub sp, #4
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*1] ; store LR
    blx r2
    ldr r1, [sp, #4*1]
    add sp, #8
    bx r1
_pxt_bind_1:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*2] ; store LR
    blx r2
    ldr r1, [sp, #4*2]
    add sp, #8
    bx r1
_pxt_bind_2:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*3] ; store LR
    blx r2
    ldr r1, [sp, #4*3]
    add sp, #8
    bx r1
_pxt_bind_3:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*4] ; store LR
    blx r2
    ldr r1, [sp, #4*4]
    add sp, #8
    bx r1
_pxt_bind_4:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*5] ; store LR
    blx r2
    ldr r1, [sp, #4*5]
    add sp, #8
    bx r1
_pxt_bind_5:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*6] ; store LR
    blx r2
    ldr r1, [sp, #4*6]
    add sp, #8
    bx r1
_pxt_bind_6:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*7] ; store LR
    blx r2
    ldr r1, [sp, #4*7]
    add sp, #8
    bx r1
_pxt_bind_7:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*8] ; store LR
    blx r2
    ldr r1, [sp, #4*8]
    add sp, #8
    bx r1
_pxt_bind_8:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*9] ; store LR
    blx r2
    ldr r1, [sp, #4*9]
    add sp, #8
    bx r1
_pxt_bind_9:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*10] ; store LR
    blx r2
    ldr r1, [sp, #4*10]
    add sp, #8
    bx r1
_pxt_bind_10:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*11] ; store LR
    blx r2
    ldr r1, [sp, #4*11]
    add sp, #8
    bx r1
_pxt_bind_11:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    ldr r1, [sp, #4*11]
    str r1, [sp, #4*10]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*12] ; store LR
    blx r2
    ldr r1, [sp, #4*12]
    add sp, #8
    bx r1
_code_end:
    .section code
    .object _code_helper__inst_builtin4_validate_0
_inst_builtin4_validate_0:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_1
_conv_1:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin4_validate_0
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin3_validate_2
_inst_builtin3_validate_2:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #3
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_3
_conv_3:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin3_validate_2
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin6_validate_4
_inst_builtin6_validate_4:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #6
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_5
_conv_5:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin6_validate_4
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin5_validate_6
_inst_builtin5_validate_6:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #5
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_7
_conv_7:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin5_validate_6
    pop {pc}
.object PUSH
.balign 4
_ldlit_315:
 .word _pxt_bind_lit
_ldlit_316:
 .word _pxt_copy_list
.object POP
    @stackempty args
    .section code
    .object _code_helper__ifacecall1_get_8
_ifacecall1_get_8:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    bx r4
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__lambda_call0_9
_lambda_call0_9:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_10
_conv_10:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_scene_Scene__C2818_validate_11
_inst_scene_Scene__C2818_validate_11:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #33
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_1_12
_expand_args_1_12:
    movs r0, #0
    movs r1, #0
    push {r0}
    bx lr
    .section code
    .object _code_helper__conv_13
_conv_13:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_4
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_14
_conv_14:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__expand_args_3_15
_expand_args_3_15:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_controller_Button__C2166_validate_16
_inst_controller_Button__C2166_validate_16:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #17
    blt .fail
    cmp r2, #18
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_ButtonHandler__C2160_validate_17
_inst_controller_ButtonHandler__C2160_validate_17:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #22
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_2_18
_expand_args_2_18:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #2*4]
    str r1, [sp, #2*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_controller_ButtonEventHandlerState__C2162_validate_19
_inst_controller_ButtonEventHandlerState__C2162_validate_19:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #21
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall1__20
_ifacecall1__20:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #1
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    movs r1, r0
    str r1, [sp, #4*0]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_21
_conv_21:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin4_validate_0
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__expand_args_5_22
_expand_args_5_22:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #4
    blt .zero4
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero4:
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_control_EventContext__C395_validate_23
_inst_control_EventContext__C395_validate_23:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #23
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_control_EventHandler__C4412_validate_24
_inst_control_EventHandler__C4412_validate_24:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #24
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_PhysicsEngine__C2486_25
_classCall_PhysicsEngine__C2486_25:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #29
    blt .fail
    cmp r2, #30
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_SpriteHandler__C2787_validate_26
_inst_scene_SpriteHandler__C2787_validate_26:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    b .fail ; always fails; class never instantiated
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall2__27
_ifacecall2__27:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #2
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    movs r1, r0
    str r1, [sp, #4*1]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__lambda_call2_28
_lambda_call2_28:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #2
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    str r5, [sp, #4*2]
    mov r1, lr
    str r1, [sp, #4*3]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*3] ; restore what was in LR
    ldr r5, [sp, #4*2] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_PhysicsEngine__C2486_validate_29
_inst_PhysicsEngine__C2486_validate_29:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #29
    blt .fail
    cmp r2, #30
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_Sprite__C2316_validate_30
_inst_Sprite__C2316_validate_30:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #26
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_31
_conv_31:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_32
_conv_32:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    ldr r0, [sp, #4*3] ; estack
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_sprites_SpriteSet__C2438_validate_33
_inst_sprites_SpriteSet__C2438_validate_33:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #31
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_34
_conv_34:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_4
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__classCall_Sprite__C2316_this_35
_classCall_Sprite__C2316_this_35:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_36
_conv_36:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_game_Hitbox__C2185_validate_37
_inst_game_Hitbox__C2185_validate_37:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #32
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_BaseSprite__C2071_validate_38
_inst_sprites_BaseSprite__C2071_validate_38:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #25
    blt .fail
    cmp r2, #28
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall2_set_39
_ifacecall2_set_39:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    ldr r2, [sp, #4] ; ld-val
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    bx r4
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__ifacecall3__40
_ifacecall3__40:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #3
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    movs r1, r0
    str r1, [sp, #4*2]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #2
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    str r5, [sp, #4*2]
    mov r1, lr
    str r1, [sp, #4*3]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*3] ; restore what was in LR
    ldr r5, [sp, #4*2] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_41
_conv_41:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_42
_conv_42:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__lambda_call1_43
_lambda_call1_43:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_Controller__C2111_validate_44
_inst_controller_Controller__C2111_validate_44:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #16
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_45
_conv_45:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_46
_conv_46:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_47
_conv_47:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_48
_conv_48:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_49
_conv_49:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_50
_conv_50:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_51
_conv_51:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_52
_conv_52:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_53
_conv_53:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*3] ; estack
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_54
_conv_54:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_scene_Background__C2644_validate_55
_inst_scene_Background__C2644_validate_55:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #35
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_56
_conv_56:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_57
_conv_57:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_scene_Camera__C2756_validate_58
_inst_scene_Camera__C2756_validate_58:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #34
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_BackgroundLayer__C2654_validate_59
_inst_scene_BackgroundLayer__C2654_validate_59:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #36
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_60
_conv_60:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint4
    lsls r0, r0, #1
    bl _numops_toInt
.isint4:
    mov r3, r0      
    pop {r2}
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_tiles_TileMap__C2710_validate_61
_inst_tiles_TileMap__C2710_validate_61:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #37
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_tiles_TileMapData__C2692_validate_62
_inst_tiles_TileMapData__C2692_validate_62:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #38
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_controller_Button__C2166_63
_classCall_controller_Button__C2166_63:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #17
    blt .fail
    cmp r2, #18
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_64
_conv_64:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_control_FrameCallback__C392_validate_65
_inst_control_FrameCallback__C392_validate_65:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #39
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_66
_conv_66:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin6_validate_4
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0}
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_control_PollEvent__C4391_validate_67
_inst_control_PollEvent__C4391_validate_67:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #40
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_ArcadePhysicsEngine__C2502_validate_68
_inst_ArcadePhysicsEngine__C2502_validate_68:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #30
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_SpriteMap__C2421_validate_69
_inst_sprites_SpriteMap__C2421_validate_69:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #41
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_Math_FastRandom__C3034_validate_70
_inst_Math_FastRandom__C3034_validate_70:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #20
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_71
_conv_71:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_scene_systemMenu_PauseMenu__C3070_validate_72
_inst_scene_systemMenu_PauseMenu__C3070_validate_72:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #42
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_scene_systemMenu_MenuOption__C3062_validate_73
_inst_scene_systemMenu_MenuOption__C3062_validate_73:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #43
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_4_74
_expand_args_4_74:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_scene_Renderable__C2775_validate_75
_inst_scene_Renderable__C2775_validate_75:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #27
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ParticleSource__C3126_validate_76
_inst_particles_ParticleSource__C3126_validate_76:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #28
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_Particle__C3107_validate_77
_inst_particles_Particle__C3107_validate_77:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #55
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_effects_ParticleEffect__C3237_validate_78
_inst_effects_ParticleEffect__C3237_validate_78:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #44
    blt .fail
    cmp r2, #45
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_effects_ImageEffect__C3265_validate_79
_inst_effects_ImageEffect__C3265_validate_79:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #46
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__lambda_call3_80
_lambda_call3_80:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #3
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*2]
    str r5, [sp, #4*3]
    mov r1, lr
    str r1, [sp, #4*4]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*4] ; restore what was in LR
    ldr r5, [sp, #4*3] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*4]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_81
_conv_81:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*3] ; estack
    ldr r1, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_82
_conv_82:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_83
_conv_83:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_84
_conv_84:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_85
_conv_85:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_game_GameOverConfig__C2948_validate_86
_inst_game_GameOverConfig__C2948_validate_86:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #19
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_music_Melody__C1623_validate_87
_inst_music_Melody__C1623_validate_87:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #47
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_music_MelodyPlayable__C1898_validate_88
_inst_music_MelodyPlayable__C1898_validate_88:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #49
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_SprayFactory__C3166_validate_89
_inst_particles_SprayFactory__C3166_validate_89:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #51
    blt .fail
    cmp r2, #54
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_particles_ParticleFactory__C3162_90
_classCall_particles_ParticleFactory__C3162_90:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #50
    blt .fail
    cmp r2, #54
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ParticleFactory__C3162_validate_91
_inst_particles_ParticleFactory__C3162_validate_91:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #50
    blt .fail
    cmp r2, #54
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ConfettiFactory__C3193_validate_92
_inst_particles_ConfettiFactory__C3193_validate_92:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #54
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_ShapeFactory__C3188_validate_93
_inst_particles_ShapeFactory__C3188_validate_93:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #53
    blt .fail
    cmp r2, #54
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_particles_AreaFactory__C3172_validate_94
_inst_particles_AreaFactory__C3172_validate_94:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #52
    blt .fail
    cmp r2, #54
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_effects_ScreenEffect__C3241_validate_95
_inst_effects_ScreenEffect__C3241_validate_95:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #45
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_96
_conv_96:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin4_validate_0
    mov r2, r0      
    pop {r1, pc}      
    @stackempty args
    .section code
    .object _code_helper__classCall_Sprite__C2316_97
_classCall_Sprite__C2316_97:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #26
    bne .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_MovingSprite__C2500_validate_98
_inst_MovingSprite__C2500_validate_98:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #56
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_StaticObstacle__C2473_validate_99
_inst_sprites_StaticObstacle__C2473_validate_99:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #58
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_tiles_Location__C2668_validate_100
_inst_tiles_Location__C2668_validate_100:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #57
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_101
_conv_101:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_2
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_102
_conv_102:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin5_validate_6
    mov r1, r0      
    pop {r0}
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__classCall_sprites_BaseSpriteSayRenderer__C2236_103
_classCall_sprites_BaseSpriteSayRenderer__C2236_103:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #59
    bne .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_sprites_BaseSpriteSayRenderer__C2236_validate_104
_inst_sprites_BaseSpriteSayRenderer__C2236_validate_104:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #59
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_controller_AnyButton__C4669_validate_105
_inst_controller_AnyButton__C4669_validate_105:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #18
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_106
_conv_106:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin5_validate_6
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
_numops_adds:
    @scope _numops_adds
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    adds r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::adds
                    add sp, #8
                    pop {pc}
_numops_subs:
    @scope _numops_subs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    subs r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::subs
                    add sp, #8
                    pop {pc}
_numops_ands:
    @scope _numops_ands
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ands r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::ands
                    add sp, #8
                    pop {pc}
_numops_orrs:
    @scope _numops_orrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    orrs r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::orrs
                    add sp, #8
                    pop {pc}
_numops_eors:
    @scope _numops_eors
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    eors r0, r1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::eors
                    add sp, #8
                    pop {pc}
_numops_lsls:
    @scope _numops_lsls
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsls r2, r3
    lsrs r3, r2, #30
    beq .ok
    cmp r3, #3
    bne .boxed
.ok:
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsls
                    add sp, #8
                    pop {pc}
_numops_lsrs:
    @scope _numops_lsrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsrs r2, r3
    lsrs r3, r2, #30
    bne .boxed
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsrs
                    add sp, #8
                    pop {pc}
_numops_asrs:
    @scope _numops_asrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r0, r3
    movs r2, #1
    orrs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::asrs
                    add sp, #8
                    pop {pc}
@scope _numops_toInt
_numops_toInt:
    asrs r0, r0, #1
    bcc .over
    blx lr
.over:
    lsls r0, r0, #1
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::toInt
pop {pc}
_numops_fromInt:
    lsls r2, r0, #1
    asrs r1, r2, #1
    cmp r0, r1
    bne .over2
    adds r0, r2, #1
    blx lr
.over2:
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::fromInt
pop {pc}
.section code
.object _pxt_helper_cmp_lt
_cmp_lt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    blt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::lt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_gt
_cmp_gt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bgt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::gt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_le
_cmp_le:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    ble .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::le
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_ge
_cmp_ge:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bge .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::ge
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eq
_cmp_eq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eqq
_cmp_eqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neq
_cmp_neq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neqq
_cmp_neqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
_helpers_end:
        .object controller_Controller__C2111_VT
        .balign 4
controller_Controller__C2111_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_Controller__C2111_IfaceVT
        .short 16 ; class-id
        .short 0 ; reserved
        .word 883080986 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
controller_Controller__C2111_IfaceVT:
  .short 136, 134, 132, 162, 128, 126, 124, 146, 120, 118, 116, 114, 112, 110, 108, 106, 144, 174, 100, 98, 96, 94, 92, 90, 88, 86, 180, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 178, 56, 54, 52, 138, 48, 46, 44, 42, 40, 38, 36, 34, 160, 38, 28, 90, 24, 22, 100, 74, 16, 30, 116, 10, 8, 6, 4, 2
  .short 237, 0 ; playerIndex
  .word 4
  .short 77, 0 ; buttons
  .word 8
  .short 63, 0 ; analog
  .word 12
  .short 20, 0 ; _id
  .word 16
  .short 10, 0 ; _connected
  .word 20
  .short 11, 1 ; _controlledSprites
  .word controller_Controller__controlledSprites__P2116_args@fn
  .short 11, 0 ; set _controlledSprites
  .word controller_Controller__controlledSprites__P2117_args@fn
  .short 165, 1 ; id
  .word controller_Controller_id__P2118_args@fn
  .short 189, 1 ; left
  .word controller_Controller_left__P2120_args@fn
  .short 264, 1 ; right
  .word controller_Controller_right__P2121_args@fn
  .short 340, 1 ; up
  .word controller_Controller_up__P2122_args@fn
  .short 120, 1 ; down
  .word controller_Controller_down__P2123_args@fn
  .short 75, 2 ; button
  .word controller_Controller_button__P4668_args@fn
  .short 102, 1 ; connected
  .word controller_Controller_connected__P2132_args@fn
  .short 102, 0 ; set connected
  .word controller_Controller_connected__P2133_args@fn
  .short 3, 2 ; __preUpdate
  .word controller_Controller___preUpdate__P2139_args@fn
  .short 4, 2 ; __update
  .word controller_Controller___update__P2140_args@fn
  .word 0, 0 ; the end
        .object controller_Button__C2166_VT
        .balign 4
controller_Button__C2166_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_Button__C2166_IfaceVT
        .short 17 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word controller_Button_toString__P2171_args@fn
        .word controller_Button_isPressed__P2177_nochk@fn
        .balign 4
controller_Button__C2166_IfaceVT:
  .short 120, 70, 68, 186, 64, 78, 100, 130, 56, 198, 132, 50, 48, 46, 44, 42, 40, 46, 60, 34, 32, 142, 156, 26, 112, 54, 76, 18, 152, 118, 12, 74, 104, 6, 4, 2
  .short 36, 0 ; _owner
  .word 4
  .short 165, 0 ; id
  .word 8
  .short 258, 0 ; repeatDelay
  .word 12
  .short 259, 0 ; repeatInterval
  .word 16
  .short 38, 0 ; _pressed
  .word 20
  .short 39, 0 ; _pressedElasped
  .word 24
  .short 41, 0 ; _repeatCount
  .word 28
  .short 156, 1 ; handlerState
  .word controller_Button_handlerState__P4671_args@fn
  .short 337, 2 ; toString
  .word controller_Button_toString__P2171_args@fn
  .short 246, 2 ; raiseButtonUp
  .word controller_Button_raiseButtonUp__P4672_args@fn
  .short 244, 2 ; raiseButtonDown
  .word controller_Button_raiseButtonDown__P4673_args@fn
  .short 245, 2 ; raiseButtonRepeat
  .word controller_Button_raiseButtonRepeat__P4674_args@fn
  .short 219, 2 ; onEvent
  .word controller_Button_onEvent__P2173_args@fn
  .short 178, 2 ; isPressed
  .word controller_Button_isPressed__P2177_args@fn
  .short 240, 2 ; pressureLevel
  .word controller_Button_pressureLevel__P2178_args@fn
  .short 294, 2 ; setPressed
  .word controller_Button_setPressed__P2179_args@fn
  .short 4, 2 ; __update
  .word controller_Button___update__P2180_args@fn
  .short 267, 2 ; runButtonEvents
  .word controller_Button_runButtonEvents__P4675_args@fn
  .short 150, 2 ; getOrCreateHandlerForEvent
  .word controller_Button_getOrCreateHandlerForEvent__P4676_args@fn
  .word 0, 0 ; the end
        .object controller_AnyButton__C4669_VT
        .balign 4
controller_AnyButton__C4669_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_AnyButton__C4669_IfaceVT
        .short 18 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word controller_AnyButton_isPressed__P4677_nochk@fn
        .balign 4
controller_AnyButton__C4669_IfaceVT:
  .short 120, 70, 68, 186, 64, 78, 100, 138, 56, 198, 140, 50, 48, 46, 44, 42, 40, 46, 60, 34, 32, 142, 156, 26, 120, 54, 84, 18, 152, 70, 12, 82, 112, 6, 4, 2
  .short 36, 0 ; _owner
  .word 4
  .short 165, 0 ; id
  .word 8
  .short 258, 0 ; repeatDelay
  .word 12
  .short 259, 0 ; repeatInterval
  .word 16
  .short 38, 0 ; _pressed
  .word 20
  .short 39, 0 ; _pressedElasped
  .word 24
  .short 41, 0 ; _repeatCount
  .word 28
  .short 178, 2 ; isPressed
  .word controller_AnyButton_isPressed__P4677_args@fn
  .short 156, 1 ; handlerState
  .word controller_Button_handlerState__P4671_args@fn
  .short 337, 2 ; toString
  .word controller_Button_toString__P2171_args@fn
  .short 246, 2 ; raiseButtonUp
  .word controller_Button_raiseButtonUp__P4672_args@fn
  .short 244, 2 ; raiseButtonDown
  .word controller_Button_raiseButtonDown__P4673_args@fn
  .short 245, 2 ; raiseButtonRepeat
  .word controller_Button_raiseButtonRepeat__P4674_args@fn
  .short 219, 2 ; onEvent
  .word controller_Button_onEvent__P2173_args@fn
  .short 240, 2 ; pressureLevel
  .word controller_Button_pressureLevel__P2178_args@fn
  .short 294, 2 ; setPressed
  .word controller_Button_setPressed__P2179_args@fn
  .short 4, 2 ; __update
  .word controller_Button___update__P2180_args@fn
  .short 267, 2 ; runButtonEvents
  .word controller_Button_runButtonEvents__P4675_args@fn
  .short 150, 2 ; getOrCreateHandlerForEvent
  .word controller_Button_getOrCreateHandlerForEvent__P4676_args@fn
  .word 0, 0 ; the end
        .object game_GameOverConfig__C2948_VT
        .balign 4
game_GameOverConfig__C2948_VT:
        .short 60  ; size in bytes
        .byte 4, 249 ; magic
        .word game_GameOverConfig__C2948_IfaceVT
        .short 19 ; class-id
        .short 0 ; reserved
        .word 1192397595 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
game_GameOverConfig__C2948_IfaceVT:
  .short 80, 70, 68, 114, 88, 62, 156, 58, 112, 54, 52, 50, 48, 86, 44, 154, 40, 102, 52, 34, 112, 30, 28, 26, 24, 22, 52, 90, 120, 14, 100, 10, 8, 6, 4, 2
  .short 276, 0 ; scoringType
  .word 4
  .short 353, 0 ; winEffect
  .word 8
  .short 193, 0 ; loseEffect
  .word 12
  .short 195, 0 ; loseSound
  .word 16
  .short 356, 0 ; winSound
  .word 20
  .short 196, 0 ; loseSoundLooping
  .word 24
  .short 357, 0 ; winSoundLooping
  .word 28
  .short 354, 0 ; winMessage
  .word 32
  .short 355, 0 ; winMessageMultiplayer
  .word 36
  .short 194, 0 ; loseMessage
  .word 40
  .short 132, 0 ; effectSetByUser
  .word 44
  .short 306, 0 ; soundSetByUser
  .word 48
  .short 206, 0 ; messageSetByUser
  .word 52
  .short 277, 0 ; scoringTypeSetByUser
  .word 56
  .short 171, 2 ; init
  .word game_GameOverConfig_init__P2964_args@fn
  .word 0, 0 ; the end
        .object Math_FastRandom__C3034_VT
        .balign 4
Math_FastRandom__C3034_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word Math_FastRandom__C3034_IfaceVT
        .short 20 ; class-id
        .short 0 ; reserved
        .word -58771683 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
Math_FastRandom__C3034_IfaceVT:
  .short 40, 30, 20, 18, 40, 14, 44, 10, 8, 6, 4, 2
  .short 191, 0 ; lfsr
  .word 4
  .short 282, 0 ; seed
  .word 8
  .short 216, 2 ; next
  .word Math_FastRandom_next__P3037_args@fn
  .short 247, 2 ; randomRange
  .word Math_FastRandom_randomRange__P3038_args@fn
  .short 236, 2 ; pickRandom
  .word Math_FastRandom_pickRandom__P3039_args@fn
  .word 0, 0 ; the end
        .object controller_ButtonEventHandlerState__C2162_VT
        .balign 4
controller_ButtonEventHandlerState__C2162_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_ButtonEventHandlerState__C2162_IfaceVT
        .short 21 ; class-id
        .short 0 ; reserved
        .word 1101023518 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
controller_ButtonEventHandlerState__C2162_IfaceVT:
  .short 16, 14, 20, 26, 8, 6, 4, 2
  .short 165, 0 ; id
  .word 4
  .short 346, 0 ; user
  .word 8
  .short 323, 0 ; system
  .word 12
  .word 0, 0 ; the end
        .object controller_ButtonHandler__C2160_VT
        .balign 4
controller_ButtonHandler__C2160_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word controller_ButtonHandler__C2160_IfaceVT
        .short 22 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
controller_ButtonHandler__C2160_IfaceVT:
  .short 20, 10, 8, 6, 4, 2
  .short 135, 0 ; event
  .word 4
  .short 82, 0 ; callback
  .word 8
  .word 0, 0 ; the end
        .object control_EventContext__C395_VT
        .balign 4
control_EventContext__C395_VT:
        .short 44  ; size in bytes
        .byte 4, 249 ; magic
        .word control_EventContext__C395_IfaceVT
        .short 23 ; class-id
        .short 0 ; reserved
        .word 1650515226 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_EventContext__C395_IfaceVT:
  .short 136, 134, 132, 130, 224, 126, 124, 122, 120, 118, 116, 122, 112, 110, 108, 106, 104, 214, 100, 98, 96, 94, 92, 162, 88, 86, 84, 162, 80, 198, 116, 74, 72, 70, 68, 66, 80, 62, 60, 114, 56, 54, 52, 50, 152, 46, 44, 42, 40, 38, 100, 82, 32, 158, 28, 26, 24, 22, 20, 18, 16, 38, 44, 98, 8, 6, 4, 2
  .short 157, 0 ; handlers
  .word 4
  .short 141, 0 ; frameCallbacks
  .word 8
  .short 142, 0 ; frameWorker
  .word 12
  .short 143, 0 ; framesInSample
  .word 16
  .short 333, 0 ; timeInSample
  .word 20
  .short 186, 0 ; lastPerfDump
  .word 24
  .short 114, 0 ; deltaTimeMillis
  .word 28
  .short 241, 0 ; prevTimeMillis
  .word 32
  .short 166, 0 ; idleCallbacks
  .word 36
  .short 269, 0 ; runningCallbacks
  .word 40
  .short 113, 1 ; deltaTime
  .word control_EventContext_deltaTime__P400_args@fn
  .short 268, 2 ; runCallbacks
  .word control_EventContext_runCallbacks__P4417_args@fn
  .short 250, 2 ; registerFrameCallbacks
  .word control_EventContext_registerFrameCallbacks__P4418_args@fn
  .short 249, 2 ; register
  .word control_EventContext_register__P401_args@fn
  .short 339, 2 ; unregister
  .word control_EventContext_unregister__P402_args@fn
  .short 251, 2 ; registerFrameHandler
  .word control_EventContext_registerFrameHandler__P403_args@fn
  .short 252, 2 ; registerHandler
  .word control_EventContext_registerHandler__P405_args@fn
  .word 0, 0 ; the end
        .object control_EventHandler__C4412_VT
        .balign 4
control_EventHandler__C4412_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word control_EventHandler__C4412_IfaceVT
        .short 24 ; class-id
        .short 0 ; reserved
        .word 1703617821 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_EventHandler__C4412_IfaceVT:
  .short 24, 46, 20, 34, 56, 14, 20, 42, 8, 6, 4, 2
  .short 317, 0 ; src
  .word 4
  .short 347, 0 ; value
  .word 8
  .short 155, 0 ; handler
  .word 12
  .short 139, 0 ; flags
  .word 16
  .short 249, 2 ; register
  .word control_EventHandler_register__P4413_args@fn
  .short 339, 2 ; unregister
  .word control_EventHandler_unregister__P4414_args@fn
  .word 0, 0 ; the end
        .object sprites_BaseSprite__C2071_VT
        .balign 4
sprites_BaseSprite__C2071_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_BaseSprite__C2071_IfaceVT
        .short 25 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word sprites_BaseSprite___visible__P2074_nochk@fn
        .word sprites_BaseSprite___draw__P2077_nochk@fn
        .word sprites_BaseSprite___drawCore__P2078_nochk@fn
        .word sprites_BaseSprite___update__P2079_nochk@fn
        .balign 4
sprites_BaseSprite__C2071_IfaceVT:
  .short 40, 46, 20, 18, 24, 54, 60, 66, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 165, 0 ; id
  .word 8
  .short 5, 2 ; __visible
  .word sprites_BaseSprite___visible__P2074_args@fn
  .short 366, 1 ; z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 366, 0 ; set z
  .word sprites_BaseSprite_z__P2076_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2077_args@fn
  .short 2, 2 ; __drawCore
  .word sprites_BaseSprite___drawCore__P2078_args@fn
  .short 4, 2 ; __update
  .word sprites_BaseSprite___update__P2079_args@fn
  .word 0, 0 ; the end
        .object Sprite__C2316_VT
        .balign 4
Sprite__C2316_VT:
        .short 124  ; size in bytes
        .byte 4, 249 ; magic
        .word Sprite__C2316_IfaceVT
        .short 26 ; class-id
        .short 0 ; reserved
        .word 1783883544 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word Sprite_toString__P2409_args@fn
        .word Sprite___visible__P2371_nochk@fn
        .word sprites_BaseSprite___draw__P2077_nochk@fn
        .word Sprite___drawCore__P2390_nochk@fn
        .word Sprite___update__P2391_nochk@fn
        .word Sprite_setHitbox__P2369_nochk@fn
        .word Sprite_recalcSize__P4695_nochk@fn
        .word Sprite_drawSprite__P4699_nochk@fn
        .balign 4
Sprite__C2316_IfaceVT:
  .short 520, 974, 516, 538, 1184, 510, 508, 506, 1096, 502, 500, 498, 496, 494, 492, 562, 488, 486, 484, 930, 1096, 478, 476, 474, 472, 1038, 468, 554, 464, 462, 460, 458, 456, 454, 452, 570, 448, 446, 444, 442, 440, 438, 436, 434, 432, 430, 524, 658, 424, 422, 420, 890, 416, 414, 556, 410, 408, 758, 404, 402, 400, 398, 700, 394, 392, 390, 388, 386, 384, 382, 380, 938, 976, 854, 548, 370, 368, 366, 364, 362, 360, 894, 412, 722, 352, 998, 348, 346, 808, 342, 372, 594, 736, 334, 620, 330, 328, 326, 844, 322, 320, 318, 948, 314, 312, 310, 996, 306, 304, 302, 300, 298, 296, 294, 292, 722, 288, 286, 284, 282, 280, 382, 276, 274, 272, 422, 268, 754, 264, 262, 260, 258, 256, 254, 252, 250, 256, 454, 244, 242, 240, 454, 420, 234, 232, 230, 228, 226, 224, 222, 220, 218, 216, 230, 212, 210, 208, 206, 204, 202, 200, 198, 196, 194, 608, 254, 692, 186, 504, 766, 180, 306, 832, 174, 172, 170, 248, 406, 548, 162, 160, 158, 156, 154, 320, 150, 148, 370, 144, 518, 300, 802, 136, 134, 572, 754, 168, 126, 124, 122, 120, 118, 116, 114, 248, 110, 108, 442, 104, 526, 100, 98, 672, 94, 644, 90, 88, 86, 84, 82, 80, 486, 76, 682, 72, 70, 68, 66, 264, 62, 60, 58, 104, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 304, 30, 28, 26, 664, 214, 20, 130, 16, 14, 12, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 165, 0 ; id
  .word 8
  .short 52, 0 ; _x
  .word 12
  .short 53, 0 ; _y
  .word 16
  .short 49, 0 ; _vx
  .word 20
  .short 50, 0 ; _vy
  .word 24
  .short 7, 0 ; _ax
  .word 28
  .short 8, 0 ; _ay
  .word 32
  .short 16, 0 ; _fx
  .word 36
  .short 17, 0 ; _fy
  .word 40
  .short 45, 0 ; _sx
  .word 44
  .short 46, 0 ; _sy
  .word 48
  .short 51, 0 ; _width
  .word 52
  .short 18, 0 ; _height
  .word 56
  .short 12, 0 ; _data
  .word 60
  .short 22, 0 ; _kind
  .word 64
  .short 187, 0 ; layer
  .word 68
  .short 26, 0 ; _lastX
  .word 72
  .short 27, 0 ; _lastY
  .word 76
  .short 6, 0 ; _action
  .word 80
  .short 192, 0 ; lifespan
  .word 84
  .short 21, 0 ; _image
  .word 88
  .short 32, 0 ; _obstacles
  .word 92
  .short 271, 0 ; sayEndTime
  .word 96
  .short 272, 0 ; sayRenderer
  .word 100
  .short 19, 0 ; _hitbox
  .word 104
  .short 35, 0 ; _overlappers
  .word 108
  .short 23, 0 ; _kindsOverlappedWith
  .word 112
  .short 139, 0 ; flags
  .word 116
  .short 116, 0 ; destroyHandler
  .word 120
  .short 358, 1 ; x
  .word Sprite_x__P2329_args@fn
  .short 358, 0 ; set x
  .word Sprite_x__P2330_args@fn
  .short 362, 1 ; y
  .word Sprite_y__P2331_args@fn
  .short 362, 0 ; set y
  .word Sprite_y__P2332_args@fn
  .short 349, 1 ; vx
  .word Sprite_vx__P2333_args@fn
  .short 349, 0 ; set vx
  .word Sprite_vx__P2334_args@fn
  .short 350, 1 ; vy
  .word Sprite_vy__P2335_args@fn
  .short 350, 0 ; set vy
  .word Sprite_vy__P2336_args@fn
  .short 68, 1 ; ax
  .word Sprite_ax__P2337_args@fn
  .short 68, 0 ; set ax
  .word Sprite_ax__P2338_args@fn
  .short 69, 1 ; ay
  .word Sprite_ay__P2339_args@fn
  .short 69, 0 ; set ay
  .word Sprite_ay__P2340_args@fn
  .short 144, 1 ; fx
  .word Sprite_fx__P2341_args@fn
  .short 144, 0 ; set fx
  .word Sprite_fx__P2342_args@fn
  .short 145, 1 ; fy
  .word Sprite_fy__P2343_args@fn
  .short 145, 0 ; set fy
  .word Sprite_fy__P2344_args@fn
  .short 321, 1 ; sx
  .word Sprite_sx__P2345_args@fn
  .short 322, 1 ; sy
  .word Sprite_sy__P2347_args@fn
  .short 110, 1 ; data
  .word Sprite_data__P2351_args@fn
  .short 110, 0 ; set data
  .word Sprite_data__P2352_args@fn
  .short 167, 1 ; image
  .word Sprite_image__P2365_args@fn
  .short 291, 2 ; setImage
  .word Sprite_setImage__P2366_args@fn
  .short 81, 2 ; calcDimensionalHash
  .word Sprite_calcDimensionalHash__P2367_args@fn
  .short 262, 2 ; resetHitbox
  .word Sprite_resetHitbox__P2368_args@fn
  .short 290, 2 ; setHitbox
  .word Sprite_setHitbox__P2369_args@fn
  .short 180, 2 ; isStatic
  .word Sprite_isStatic__P2370_args@fn
  .short 5, 2 ; __visible
  .word Sprite___visible__P2371_args@fn
  .short 248, 2 ; recalcSize
  .word Sprite_recalcSize__P4695_args@fn
  .short 179, 2 ; isScaled
  .word Sprite_isScaled__P4696_args@fn
  .short 352, 1 ; width
  .word Sprite_width__P2372_args@fn
  .short 162, 1 ; height
  .word Sprite_height__P2373_args@fn
  .short 189, 1 ; left
  .word Sprite_left__P2374_args@fn
  .short 189, 0 ; set left
  .word Sprite_left__P2375_args@fn
  .short 264, 1 ; right
  .word Sprite_right__P2376_args@fn
  .short 264, 0 ; set right
  .word Sprite_right__P2377_args@fn
  .short 338, 1 ; top
  .word Sprite_top__P2378_args@fn
  .short 338, 0 ; set top
  .word Sprite_top__P2379_args@fn
  .short 73, 1 ; bottom
  .word Sprite_bottom__P2380_args@fn
  .short 73, 0 ; set bottom
  .word Sprite_bottom__P2381_args@fn
  .short 185, 2 ; kind
  .word Sprite_kind__P2382_args@fn
  .short 292, 2 ; setKind
  .word Sprite_setKind__P2383_args@fn
  .short 176, 2 ; isOutOfScreen
  .word Sprite_isOutOfScreen__P2389_args@fn
  .short 2, 2 ; __drawCore
  .word Sprite___drawCore__P2390_args@fn
  .short 4, 2 ; __update
  .word Sprite___update__P2391_args@fn
  .short 289, 2 ; setFlag
  .word Sprite_setFlag__P2394_args@fn
  .short 227, 2 ; overlapsWith
  .word Sprite_overlapsWith__P2395_args@fn
  .short 96, 2 ; clearObstacles
  .word Sprite_clearObstacles__P2400_args@fn
  .short 253, 2 ; registerObstacle
  .word Sprite_registerObstacle__P2401_args@fn
  .short 115, 2 ; destroy
  .word Sprite_destroy__P2403_args@fn
  .short 13, 2 ; _destroyCore
  .word Sprite__destroyCore__P2404_args@fn
  .short 337, 2 ; toString
  .word Sprite_toString__P2409_args@fn
  .short 126, 2 ; drawSay
  .word Sprite_drawSay__P4697_args@fn
  .short 122, 2 ; drawDebug
  .word Sprite_drawDebug__P4698_args@fn
  .short 127, 2 ; drawSprite
  .word Sprite_drawSprite__P4699_args@fn
  .short 366, 1 ; z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 366, 0 ; set z
  .word sprites_BaseSprite_z__P2076_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2077_args@fn
  .word 0, 0 ; the end
        .object PhysicsEngine__C2486_VT
        .balign 4
PhysicsEngine__C2486_VT:
        .short 4  ; size in bytes
        .byte 4, 249 ; magic
        .word PhysicsEngine__C2486_IfaceVT
        .short 29 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word PhysicsEngine_addSprite__P2488_nochk@fn
        .word PhysicsEngine_removeSprite__P2489_nochk@fn
        .word PhysicsEngine_moveSprite__P2490_nochk@fn
        .word PhysicsEngine_draw__P2491_nochk@fn
        .word PhysicsEngine_move__P2492_nochk@fn
        .balign 4
PhysicsEngine__C2486_IfaceVT:
  .short 56, 22, 44, 34, 16, 14, 12, 18, 8, 6, 4, 2
  .short 59, 2 ; addSprite
  .word PhysicsEngine_addSprite__P2488_args@fn
  .short 255, 2 ; removeSprite
  .word PhysicsEngine_removeSprite__P2489_args@fn
  .short 213, 2 ; moveSprite
  .word PhysicsEngine_moveSprite__P2490_args@fn
  .short 121, 2 ; draw
  .word PhysicsEngine_draw__P2491_args@fn
  .short 212, 2 ; move
  .word PhysicsEngine_move__P2492_args@fn
  .word 0, 0 ; the end
        .object sprites_SpriteSet__C2438_VT
        .balign 4
sprites_SpriteSet__C2438_VT:
        .short 8  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_SpriteSet__C2438_IfaceVT
        .short 31 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word sprites_SpriteSet_toString__P2449_args@fn
        .balign 4
sprites_SpriteSet__C2438_IfaceVT:
  .short 24, 54, 20, 42, 16, 30, 12, 18, 48, 6, 4, 2
  .short 44, 0 ; _sprites
  .word 4
  .short 190, 1 ; length
  .word sprites_SpriteSet_length__P2441_args@fn
  .short 57, 2 ; add
  .word sprites_SpriteSet_add__P2443_args@fn
  .short 254, 2 ; remove
  .word sprites_SpriteSet_remove__P2445_args@fn
  .short 104, 2 ; contains
  .word sprites_SpriteSet_contains__P2446_args@fn
  .short 337, 2 ; toString
  .word sprites_SpriteSet_toString__P2449_args@fn
  .word 0, 0 ; the end
        .object game_Hitbox__C2185_VT
        .balign 4
game_Hitbox__C2185_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word game_Hitbox__C2185_IfaceVT
        .short 32 ; class-id
        .short 0 ; reserved
        .word 538732826 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
game_Hitbox__C2185_IfaceVT:
  .short 136, 230, 220, 130, 128, 126, 132, 186, 120, 150, 188, 114, 112, 110, 108, 106, 104, 102, 100, 98, 136, 94, 92, 90, 88, 142, 84, 82, 80, 78, 180, 74, 72, 70, 68, 66, 64, 62, 76, 58, 56, 54, 52, 50, 48, 94, 68, 42, 40, 38, 36, 34, 32, 110, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 158, 0 ; hash
  .word 4
  .short 232, 0 ; parent
  .word 8
  .short 228, 0 ; ox
  .word 12
  .short 229, 0 ; oy
  .word 16
  .short 352, 0 ; width
  .word 20
  .short 162, 0 ; height
  .word 24
  .short 189, 1 ; left
  .word game_Hitbox_left__P2193_args@fn
  .short 338, 1 ; top
  .word game_Hitbox_top__P2194_args@fn
  .short 264, 1 ; right
  .word game_Hitbox_right__P2195_args@fn
  .short 73, 1 ; bottom
  .word game_Hitbox_bottom__P2196_args@fn
  .short 182, 2 ; isValid
  .word game_Hitbox_isValid__P2197_args@fn
  .short 104, 2 ; contains
  .word game_Hitbox_contains__P2198_args@fn
  .short 343, 2 ; updateIfInvalid
  .word game_Hitbox_updateIfInvalid__P2199_args@fn
  .short 227, 2 ; overlapsWith
  .word game_Hitbox_overlapsWith__P2200_args@fn
  .word 0, 0 ; the end
        .object scene_Scene__C2818_VT
        .balign 4
scene_Scene__C2818_VT:
        .short 104  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Scene__C2818_IfaceVT
        .short 33 ; class-id
        .short 0 ; reserved
        .word 1703617817 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_Scene__C2818_IfaceVT:
  .short 264, 262, 260, 258, 256, 406, 252, 250, 248, 246, 244, 242, 240, 342, 452, 234, 232, 294, 396, 226, 224, 222, 220, 218, 216, 214, 212, 258, 328, 206, 284, 298, 200, 198, 196, 194, 192, 366, 188, 314, 184, 182, 180, 218, 176, 174, 172, 170, 168, 166, 164, 386, 232, 294, 156, 154, 152, 150, 148, 146, 256, 142, 140, 138, 136, 134, 132, 130, 288, 358, 156, 122, 120, 118, 116, 138, 112, 110, 108, 106, 312, 102, 100, 242, 96, 94, 92, 90, 88, 86, 100, 82, 80, 78, 76, 74, 72, 254, 76, 66, 64, 62, 60, 58, 56, 254, 52, 50, 136, 46, 44, 42, 40, 38, 36, 34, 32, 30, 84, 26, 24, 22, 20, 18, 16, 14, 204, 10, 8, 6, 4, 2
  .short 136, 0 ; eventContext
  .word 4
  .short 70, 0 ; background
  .word 8
  .short 327, 0 ; tileMap
  .word 12
  .short 62, 0 ; allSprites
  .word 16
  .short 314, 0 ; spriteNextId
  .word 20
  .short 316, 0 ; spritesByKind
  .word 24
  .short 235, 0 ; physicsEngine
  .word 28
  .short 83, 0 ; camera
  .word 32
  .short 139, 0 ; flags
  .word 36
  .short 117, 0 ; destroyedHandlers
  .word 40
  .short 109, 0 ; createdHandlers
  .word 44
  .short 224, 0 ; overlapHandlers
  .word 48
  .short 225, 0 ; overlapMap
  .word 52
  .short 328, 0 ; tileOverlapHandlers
  .word 56
  .short 97, 0 ; collisionHandlers
  .word 60
  .short 351, 0 ; wallCollisionHandlers
  .word 64
  .short 147, 0 ; gameForeverHandlers
  .word 68
  .short 233, 0 ; particleSources
  .word 72
  .short 105, 0 ; controlledSprites
  .word 76
  .short 106, 0 ; controllerConnectionState
  .word 80
  .short 140, 0 ; followingSprites
  .word 84
  .short 76, 0 ; buttonEventHandlers
  .word 88
  .short 31, 0 ; _millis
  .word 92
  .short 12, 0 ; _data
  .word 96
  .short 242, 0 ; previousScene
  .word 100
  .short 171, 2 ; init
  .word scene_Scene_init__P2842_args@fn
  .short 110, 1 ; data
  .word scene_Scene_data__P2843_args@fn
  .short 207, 2 ; millis
  .word scene_Scene_millis__P2844_args@fn
  .short 59, 2 ; addSprite
  .word scene_Scene_addSprite__P2845_args@fn
  .short 256, 2 ; render
  .word scene_Scene_render__P2847_args@fn
  .word 0, 0 ; the end
        .object scene_Camera__C2756_VT
        .balign 4
scene_Camera__C2756_VT:
        .short 44  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Camera__C2756_IfaceVT
        .short 34 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_Camera__C2756_IfaceVT:
  .short 144, 70, 84, 74, 144, 206, 60, 58, 56, 54, 52, 170, 96, 110, 180, 170, 64, 134, 68, 34, 184, 30, 28, 138, 24, 22, 20, 74, 16, 14, 52, 10, 8, 6, 4, 2
  .short 33, 0 ; _offsetX
  .word 4
  .short 34, 0 ; _offsetY
  .word 8
  .short 123, 0 ; drawOffsetX
  .word 12
  .short 124, 0 ; drawOffsetY
  .word 16
  .short 312, 0 ; sprite
  .word 20
  .short 24, 0 ; _lastUpdatedSpriteX
  .word 24
  .short 25, 0 ; _lastUpdatedSpriteY
  .word 28
  .short 303, 0 ; shakeStartTime
  .word 32
  .short 302, 0 ; shakeDuration
  .word 36
  .short 301, 0 ; shakeAmplitude
  .word 40
  .short 217, 1 ; offsetX
  .word scene_Camera_offsetX__P2761_args@fn
  .short 217, 0 ; set offsetX
  .word scene_Camera_offsetX__P2762_args@fn
  .short 218, 1 ; offsetY
  .word scene_Camera_offsetY__P2763_args@fn
  .short 218, 0 ; set offsetY
  .word scene_Camera_offsetY__P2764_args@fn
  .short 358, 1 ; x
  .word scene_Camera_x__P2765_args@fn
  .short 362, 1 ; y
  .word scene_Camera_y__P2766_args@fn
  .short 189, 1 ; left
  .word scene_Camera_left__P2767_args@fn
  .short 338, 1 ; top
  .word scene_Camera_top__P2769_args@fn
  .short 181, 2 ; isUpdated
  .word scene_Camera_isUpdated__P2772_args@fn
  .short 341, 2 ; update
  .word scene_Camera_update__P2773_args@fn
  .word 0, 0 ; the end
        .object scene_Background__C2644_VT
        .balign 4
scene_Background__C2644_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Background__C2644_IfaceVT
        .short 35 ; class-id
        .short 0 ; reserved
        .word 824528669 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_Background__C2644_IfaceVT:
  .short 32, 54, 20, 18, 40, 14, 12, 26, 8, 6, 4, 2
  .short 98, 0 ; color
  .word 4
  .short 21, 0 ; _image
  .word 8
  .short 83, 0 ; camera
  .word 12
  .short 29, 0 ; _layers
  .word 16
  .short 121, 2 ; draw
  .word scene_Background_draw__P2653_args@fn
  .word 0, 0 ; the end
        .object scene_BackgroundLayer__C2654_VT
        .balign 4
scene_BackgroundLayer__C2654_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_BackgroundLayer__C2654_IfaceVT
        .short 36 ; class-id
        .short 0 ; reserved
        .word 1703617820 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_BackgroundLayer__C2654_IfaceVT:
  .short 40, 38, 52, 34, 72, 30, 28, 26, 48, 22, 28, 18, 48, 14, 12, 58, 8, 6, 4, 2
  .short 119, 0 ; distance
  .word 4
  .short 168, 0 ; img
  .word 8
  .short 260, 0 ; repeatX
  .word 12
  .short 261, 0 ; repeatY
  .word 16
  .short 60, 0 ; alignX
  .word 20
  .short 61, 0 ; alignY
  .word 24
  .short 121, 2 ; draw
  .word scene_BackgroundLayer_draw__P2662_args@fn
  .word 0, 0 ; the end
        .object tiles_TileMap__C2710_VT
        .balign 4
tiles_TileMap__C2710_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word tiles_TileMap__C2710_IfaceVT
        .short 37 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
tiles_TileMap__C2710_IfaceVT:
  .short 136, 134, 132, 130, 128, 126, 124, 122, 184, 230, 116, 114, 112, 110, 108, 106, 232, 238, 100, 98, 96, 94, 92, 90, 128, 86, 172, 82, 80, 94, 76, 74, 72, 70, 140, 226, 64, 62, 60, 58, 64, 158, 148, 202, 104, 46, 44, 66, 40, 38, 68, 34, 112, 30, 28, 26, 168, 22, 20, 18, 16, 134, 12, 10, 8, 6, 4, 2
  .short 43, 0 ; _scale
  .word 4
  .short 28, 0 ; _layer
  .word 8
  .short 30, 0 ; _map
  .word 12
  .short 257, 0 ; renderable
  .word 16
  .short 156, 0 ; handlerState
  .word 20
  .short 273, 1 ; scale
  .word tiles_TileMap_scale__P2713_args@fn
  .short 273, 0 ; set scale
  .word tiles_TileMap_scale__P2714_args@fn
  .short 110, 1 ; data
  .word tiles_TileMap_data__P2715_args@fn
  .short 217, 2 ; offsetX
  .word tiles_TileMap_offsetX__P2716_args@fn
  .short 218, 2 ; offsetY
  .word tiles_TileMap_offsetY__P2717_args@fn
  .short 67, 2 ; areaWidth
  .word tiles_TileMap_areaWidth__P2718_args@fn
  .short 66, 2 ; areaHeight
  .word tiles_TileMap_areaHeight__P2719_args@fn
  .short 187, 1 ; layer
  .word tiles_TileMap_layer__P2720_args@fn
  .short 134, 1 ; enabled
  .word tiles_TileMap_enabled__P2722_args@fn
  .short 152, 2 ; getTile
  .word tiles_TileMap_getTile__P2724_args@fn
  .short 154, 2 ; getTileIndex
  .word tiles_TileMap_getTileIndex__P2725_args@fn
  .short 121, 2 ; draw
  .word tiles_TileMap_draw__P4816_args@fn
  .short 174, 2 ; isObstacle
  .word tiles_TileMap_isObstacle__P2731_args@fn
  .short 149, 2 ; getObstacle
  .word tiles_TileMap_getObstacle__P2732_args@fn
  .short 175, 2 ; isOnWall
  .word tiles_TileMap_isOnWall__P2733_args@fn
  .short 153, 2 ; getTileImage
  .word tiles_TileMap_getTileImage__P2734_args@fn
  .word 0, 0 ; the end
        .object tiles_TileMapData__C2692_VT
        .balign 4
tiles_TileMapData__C2692_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word tiles_TileMapData__C2692_IfaceVT
        .short 38 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
tiles_TileMapData__C2692_IfaceVT:
  .short 176, 70, 76, 66, 152, 102, 116, 58, 56, 118, 52, 50, 72, 118, 44, 90, 152, 134, 36, 34, 32, 30, 28, 26, 24, 22, 20, 50, 32, 14, 12, 10, 8, 6, 4, 2
  .short 110, 0 ; data
  .word 4
  .short 188, 0 ; layers
  .word 8
  .short 332, 0 ; tileset
  .word 12
  .short 78, 0 ; cachedTileView
  .word 16
  .short 43, 0 ; _scale
  .word 20
  .short 51, 0 ; _width
  .word 24
  .short 18, 0 ; _height
  .word 28
  .short 352, 1 ; width
  .word tiles_TileMapData_width__P2694_args@fn
  .short 162, 1 ; height
  .word tiles_TileMapData_height__P2695_args@fn
  .short 273, 1 ; scale
  .word tiles_TileMapData_scale__P2696_args@fn
  .short 273, 0 ; set scale
  .word tiles_TileMapData_scale__P2697_args@fn
  .short 152, 2 ; getTile
  .word tiles_TileMapData_getTile__P2698_args@fn
  .short 153, 2 ; getTileImage
  .word tiles_TileMapData_getTileImage__P2701_args@fn
  .short 183, 2 ; isWall
  .word tiles_TileMapData_isWall__P2703_args@fn
  .short 177, 2 ; isOutsideMap
  .word tiles_TileMapData_isOutsideMap__P2704_args@fn
  .word 0, 0 ; the end
        .object control_FrameCallback__C392_VT
        .balign 4
control_FrameCallback__C392_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word control_FrameCallback__C392_IfaceVT
        .short 39 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_FrameCallback__C392_IfaceVT:
  .short 12, 18, 8, 6, 4, 2
  .short 223, 0 ; order
  .word 4
  .short 155, 0 ; handler
  .word 8
  .word 0, 0 ; the end
        .object control_PollEvent__C4391_VT
        .balign 4
control_PollEvent__C4391_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word control_PollEvent__C4391_IfaceVT
        .short 40 ; class-id
        .short 0 ; reserved
        .word 1650515229 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_PollEvent__C4391_IfaceVT:
  .short 24, 38, 44, 18, 16, 22, 44, 50, 8, 6, 4, 2
  .short 133, 0 ; eid
  .word 4
  .short 348, 0 ; vid
  .word 8
  .short 318, 0 ; start
  .word 12
  .short 334, 0 ; timeOut
  .word 16
  .short 101, 0 ; condition
  .word 20
  .short 221, 0 ; once
  .word 24
  .word 0, 0 ; the end
        .object ArcadePhysicsEngine__C2502_VT
        .balign 4
ArcadePhysicsEngine__C2502_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word ArcadePhysicsEngine__C2502_IfaceVT
        .short 30 ; class-id
        .short 0 ; reserved
        .word -58771687 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word ArcadePhysicsEngine_addSprite__P2511_nochk@fn
        .word ArcadePhysicsEngine_removeSprite__P2512_nochk@fn
        .word ArcadePhysicsEngine_moveSprite__P2516_nochk@fn
        .word ArcadePhysicsEngine_draw__P2513_nochk@fn
        .word ArcadePhysicsEngine_move__P2514_nochk@fn
        .balign 4
ArcadePhysicsEngine__C2502_IfaceVT:
  .short 264, 262, 260, 258, 256, 254, 252, 250, 248, 246, 412, 242, 360, 238, 300, 234, 264, 230, 228, 226, 224, 222, 220, 218, 312, 358, 212, 210, 224, 206, 284, 250, 200, 238, 196, 218, 192, 190, 196, 186, 184, 182, 180, 178, 288, 174, 172, 170, 168, 166, 164, 162, 160, 158, 156, 154, 152, 150, 148, 146, 304, 294, 140, 138, 136, 238, 132, 130, 256, 126, 124, 122, 120, 118, 116, 298, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 218, 80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 224, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 315, 0 ; sprites
  .word 4
  .short 197, 0 ; map
  .word 8
  .short 203, 0 ; maxVelocity
  .word 12
  .short 199, 0 ; maxNegativeVelocity
  .word 16
  .short 210, 0 ; minSingleStep
  .word 20
  .short 200, 0 ; maxSingleStep
  .word 24
  .short 201, 1 ; maxSpeed
  .word ArcadePhysicsEngine_maxSpeed__P2504_args@fn
  .short 201, 0 ; set maxSpeed
  .word ArcadePhysicsEngine_maxSpeed__P2505_args@fn
  .short 211, 1 ; minStep
  .word ArcadePhysicsEngine_minStep__P2506_args@fn
  .short 211, 0 ; set minStep
  .word ArcadePhysicsEngine_minStep__P2507_args@fn
  .short 202, 1 ; maxStep
  .word ArcadePhysicsEngine_maxStep__P2508_args@fn
  .short 202, 0 ; set maxStep
  .word ArcadePhysicsEngine_maxStep__P2509_args@fn
  .short 59, 2 ; addSprite
  .word ArcadePhysicsEngine_addSprite__P2511_args@fn
  .short 255, 2 ; removeSprite
  .word ArcadePhysicsEngine_removeSprite__P2512_args@fn
  .short 121, 2 ; draw
  .word ArcadePhysicsEngine_draw__P2513_args@fn
  .short 212, 2 ; move
  .word ArcadePhysicsEngine_move__P2514_args@fn
  .short 107, 2 ; createMovingSprite
  .word ArcadePhysicsEngine_createMovingSprite__P4740_args@fn
  .short 313, 2 ; spriteCollisions
  .word ArcadePhysicsEngine_spriteCollisions__P4741_args@fn
  .short 278, 2 ; screenEdgeCollisions
  .word ArcadePhysicsEngine_screenEdgeCollisions__P4742_args@fn
  .short 330, 2 ; tilemapCollisions
  .word ArcadePhysicsEngine_tilemapCollisions__P4743_args@fn
  .short 331, 2 ; tilemapOverlaps
  .word ArcadePhysicsEngine_tilemapOverlaps__P4744_args@fn
  .short 213, 2 ; moveSprite
  .word ArcadePhysicsEngine_moveSprite__P2516_args@fn
  .short 84, 2 ; canResolveClipping
  .word ArcadePhysicsEngine_canResolveClipping__P4745_args@fn
  .short 103, 2 ; constrain
  .word ArcadePhysicsEngine_constrain__P4746_args@fn
  .word 0, 0 ; the end
        .object sprites_SpriteMap__C2421_VT
        .balign 4
sprites_SpriteMap__C2421_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_SpriteMap__C2421_IfaceVT
        .short 41 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word sprites_SpriteMap_toString__P2429_args@fn
        .balign 4
sprites_SpriteMap__C2421_IfaceVT:
  .short 72, 70, 68, 66, 168, 62, 60, 122, 112, 94, 52, 50, 56, 126, 116, 58, 136, 62, 36, 34, 32, 30, 28, 58, 24, 22, 20, 66, 104, 14, 12, 122, 8, 6, 4, 2
  .short 91, 0 ; cellWidth
  .word 4
  .short 90, 0 ; cellHeight
  .word 8
  .short 266, 0 ; rowCount
  .word 12
  .short 100, 0 ; columnCount
  .word 16
  .short 74, 0 ; buckets
  .word 20
  .short 215, 2 ; neighbors
  .word sprites_SpriteMap_neighbors__P2423_args@fn
  .short 226, 2 ; overlaps
  .word sprites_SpriteMap_overlaps__P2424_args@fn
  .short 121, 2 ; draw
  .word sprites_SpriteMap_draw__P2425_args@fn
  .short 263, 2 ; resizeBuckets
  .word sprites_SpriteMap_resizeBuckets__P2426_args@fn
  .short 95, 2 ; clear
  .word sprites_SpriteMap_clear__P2427_args@fn
  .short 184, 2 ; key
  .word sprites_SpriteMap_key__P4703_args@fn
  .short 173, 2 ; insertAtKey
  .word sprites_SpriteMap_insertAtKey__P4704_args@fn
  .short 172, 2 ; insertAABB
  .word sprites_SpriteMap_insertAABB__P2428_args@fn
  .short 205, 2 ; mergeAtKey
  .word sprites_SpriteMap_mergeAtKey__P4705_args@fn
  .short 337, 2 ; toString
  .word sprites_SpriteMap_toString__P2429_args@fn
  .word 0, 0 ; the end
        .object scene_systemMenu_PauseMenu__C3070_VT
        .balign 4
scene_systemMenu_PauseMenu__C3070_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_systemMenu_PauseMenu__C3070_IfaceVT
        .short 42 ; class-id
        .short 0 ; reserved
        .word 1644222235 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_systemMenu_PauseMenu__C3070_IfaceVT:
  .short 152, 70, 164, 66, 64, 150, 84, 122, 56, 54, 52, 50, 48, 54, 44, 42, 40, 38, 68, 34, 32, 78, 100, 42, 80, 62, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 222, 0 ; options
  .word 4
  .short 325, 0 ; theme
  .word 8
  .short 284, 0 ; selection
  .word 12
  .short 280, 0 ; scrollRow
  .word 16
  .short 281, 0 ; scrollTarget
  .word 20
  .short 279, 0 ; scrollOffset
  .word 24
  .short 148, 0 ; generator
  .word 28
  .short 305, 2 ; show
  .word scene_systemMenu_PauseMenu_show__P3072_args@fn
  .short 220, 2 ; onUpdate
  .word scene_systemMenu_PauseMenu_onUpdate__P3073_args@fn
  .short 297, 2 ; setSelection
  .word scene_systemMenu_PauseMenu_setSelection__P3074_args@fn
  .short 128, 2 ; drawText
  .word scene_systemMenu_PauseMenu_drawText__P3075_args@fn
  .short 118, 2 ; dispose
  .word scene_systemMenu_PauseMenu_dispose__P3076_args@fn
  .short 345, 2 ; updateScrollTarget
  .word scene_systemMenu_PauseMenu_updateScrollTarget__P5143_args@fn
  .word 0, 0 ; the end
        .object scene_systemMenu_MenuOption__C3062_VT
        .balign 4
scene_systemMenu_MenuOption__C3062_VT:
        .short 36  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_systemMenu_MenuOption__C3062_IfaceVT
        .short 43 ; class-id
        .short 0 ; reserved
        .word 1703617819 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
scene_systemMenu_MenuOption__C3062_IfaceVT:
  .short 72, 110, 84, 66, 64, 62, 60, 138, 56, 54, 52, 50, 120, 46, 44, 42, 40, 62, 36, 130, 40, 142, 28, 26, 24, 126, 76, 18, 64, 46, 12, 74, 96, 6, 4, 2
  .short 85, 0 ; card
  .word 4
  .short 163, 0 ; icon
  .word 8
  .short 338, 0 ; top
  .word 12
  .short 319, 0 ; state
  .word 16
  .short 325, 0 ; theme
  .word 20
  .short 164, 0 ; iconImage
  .word 24
  .short 151, 0 ; getText
  .word 28
  .short 55, 0 ; action
  .word 32
  .short 305, 2 ; show
  .word scene_systemMenu_MenuOption_show__P3064_args@fn
  .short 238, 2 ; position
  .word scene_systemMenu_MenuOption_position__P3065_args@fn
  .short 293, 2 ; setOffset
  .word scene_systemMenu_MenuOption_setOffset__P3066_args@fn
  .short 300, 2 ; setTheme
  .word scene_systemMenu_MenuOption_setTheme__P3067_args@fn
  .short 299, 2 ; setState
  .word scene_systemMenu_MenuOption_setState__P3068_args@fn
  .short 118, 2 ; dispose
  .word scene_systemMenu_MenuOption_dispose__P3069_args@fn
  .short 342, 2 ; updateCard
  .word scene_systemMenu_MenuOption_updateCard__P5142_args@fn
  .word 0, 0 ; the end
        .object scene_Renderable__C2775_VT
        .balign 4
scene_Renderable__C2775_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word scene_Renderable__C2775_IfaceVT
        .short 27 ; class-id
        .short 0 ; reserved
        .word 883080987 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word scene_Renderable___visible__P2777_nochk@fn
        .word sprites_BaseSprite___draw__P2077_nochk@fn
        .word scene_Renderable___drawCore__P2778_nochk@fn
        .word sprites_BaseSprite___update__P2079_nochk@fn
        .balign 4
scene_Renderable__C2775_IfaceVT:
  .short 104, 70, 68, 66, 64, 62, 124, 58, 104, 54, 52, 50, 48, 86, 44, 42, 64, 38, 36, 34, 32, 30, 28, 26, 24, 22, 92, 34, 16, 22, 12, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 165, 0 ; id
  .word 8
  .short 155, 0 ; handler
  .word 12
  .short 304, 0 ; shouldBeVisible
  .word 16
  .short 5, 2 ; __visible
  .word scene_Renderable___visible__P2777_args@fn
  .short 2, 2 ; __drawCore
  .word scene_Renderable___drawCore__P2778_args@fn
  .short 366, 1 ; z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 366, 0 ; set z
  .word sprites_BaseSprite_z__P2076_args@fn
  .short 1, 2 ; __draw
  .word sprites_BaseSprite___draw__P2077_args@fn
  .short 4, 2 ; __update
  .word sprites_BaseSprite___update__P2079_args@fn
  .word 0, 0 ; the end
        .object particles_ParticleSource__C3126_VT
        .balign 4
particles_ParticleSource__C3126_VT:
        .short 56  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ParticleSource__C3126_IfaceVT
        .short 28 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word sprites_BaseSprite___visible__P2074_nochk@fn
        .word particles_ParticleSource___draw__P3132_nochk@fn
        .word sprites_BaseSprite___drawCore__P2078_nochk@fn
        .word sprites_BaseSprite___update__P2079_nochk@fn
        .word particles_ParticleSource_updateParticle__P5228_nochk@fn
        .balign 4
particles_ParticleSource__C3126_IfaceVT:
  .short 360, 134, 188, 130, 344, 126, 124, 122, 184, 118, 116, 114, 184, 110, 188, 194, 104, 102, 100, 98, 96, 94, 92, 218, 88, 86, 188, 82, 80, 246, 76, 74, 72, 118, 76, 250, 64, 94, 60, 178, 248, 198, 148, 298, 48, 46, 44, 82, 200, 38, 212, 34, 56, 270, 28, 26, 224, 22, 228, 34, 128, 150, 12, 10, 8, 6, 4, 2
  .short 54, 0 ; _z
  .word 4
  .short 165, 0 ; id
  .word 8
  .short 243, 0 ; priority
  .word 12
  .short 14, 0 ; _dt
  .word 16
  .short 64, 0 ; anchor
  .word 20
  .short 192, 0 ; lifespan
  .word 24
  .short 230, 0 ; pFlags
  .word 28
  .short 159, 0 ; head
  .word 32
  .short 335, 0 ; timer
  .word 36
  .short 234, 0 ; period
  .word 40
  .short 15, 0 ; _factory
  .word 44
  .short 68, 0 ; ax
  .word 48
  .short 69, 0 ; ay
  .word 52
  .short 1, 2 ; __draw
  .word particles_ParticleSource___draw__P3132_args@fn
  .short 48, 2 ; _update
  .word particles_ParticleSource__update__P3133_args@fn
  .short 40, 2 ; _prune
  .word particles_ParticleSource__prune__P3134_args@fn
  .short 285, 2 ; setAcceleration
  .word particles_ParticleSource_setAcceleration__P3135_args@fn
  .short 296, 2 ; setRelativeToCamera
  .word particles_ParticleSource_setRelativeToCamera__P3137_args@fn
  .short 134, 1 ; enabled
  .word particles_ParticleSource_enabled__P3138_args@fn
  .short 134, 0 ; set enabled
  .word particles_ParticleSource_enabled__P3139_args@fn
  .short 115, 2 ; destroy
  .word particles_ParticleSource_destroy__P3140_args@fn
  .short 95, 2 ; clear
  .word particles_ParticleSource_clear__P3141_args@fn
  .short 286, 2 ; setAnchor
  .word particles_ParticleSource_setAnchor__P3142_args@fn
  .short 295, 2 ; setRate
  .word particles_ParticleSource_setRate__P3143_args@fn
  .short 288, 2 ; setFactory
  .word particles_ParticleSource_setFactory__P3145_args@fn
  .short 344, 2 ; updateParticle
  .word particles_ParticleSource_updateParticle__P5228_args@fn
  .short 125, 2 ; drawParticle
  .word particles_ParticleSource_drawParticle__P5229_args@fn
  .short 5, 2 ; __visible
  .word sprites_BaseSprite___visible__P2074_args@fn
  .short 366, 1 ; z
  .word sprites_BaseSprite_z__P2075_args@fn
  .short 366, 0 ; set z
  .word sprites_BaseSprite_z__P2076_args@fn
  .short 2, 2 ; __drawCore
  .word sprites_BaseSprite___drawCore__P2078_args@fn
  .short 4, 2 ; __update
  .word sprites_BaseSprite___update__P2079_args@fn
  .word 0, 0 ; the end
        .object effects_ParticleEffect__C3237_VT
        .balign 4
effects_ParticleEffect__C3237_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word effects_ParticleEffect__C3237_IfaceVT
        .short 44 ; class-id
        .short 0 ; reserved
        .word 1192397597 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
effects_ParticleEffect__C3237_IfaceVT:
  .short 32, 22, 44, 18, 16, 14, 28, 42, 8, 6, 4, 2
  .short 308, 0 ; sourceFactory
  .word 4
  .short 112, 0 ; defaultRate
  .word 8
  .short 111, 0 ; defaultLifespan
  .word 12
  .short 318, 2 ; start
  .word effects_ParticleEffect_start__P3239_args@fn
  .short 115, 2 ; destroy
  .word effects_ParticleEffect_destroy__P3240_args@fn
  .word 0, 0 ; the end
        .object effects_ImageEffect__C3265_VT
        .balign 4
effects_ImageEffect__C3265_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word effects_ImageEffect__C3265_IfaceVT
        .short 46 ; class-id
        .short 0 ; reserved
        .word 1650515229 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
effects_ImageEffect__C3265_IfaceVT:
  .short 48, 22, 28, 58, 16, 30, 12, 42, 8, 6, 4, 2
  .short 239, 0 ; preferredDelay
  .word 4
  .short 131, 0 ; effect
  .word 8
  .short 137, 0 ; fastRandom
  .word 12
  .short 336, 0 ; times
  .word 16
  .short 65, 2 ; applyTo
  .word effects_ImageEffect_applyTo__P3267_args@fn
  .short 92, 2 ; change
  .word effects_ImageEffect_change__P3268_args@fn
  .word 0, 0 ; the end
        .object music_Melody__C1623_VT
        .balign 4
music_Melody__C1623_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word music_Melody__C1623_IfaceVT
        .short 47 ; class-id
        .short 0 ; reserved
        .word -287244002 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word music_Melody_toString__P1632_args@fn
        .balign 4
music_Melody__C1623_IfaceVT:
  .short 16, 30, 20, 10, 8, 6, 4, 2
  .short 47, 0 ; _text
  .word 4
  .short 37, 0 ; _player
  .word 8
  .short 337, 2 ; toString
  .word music_Melody_toString__P1632_args@fn
  .word 0, 0 ; the end
        .object music_Playable__C1893_VT
        .balign 4
music_Playable__C1893_VT:
        .short 8  ; size in bytes
        .byte 4, 249 ; magic
        .word music_Playable__C1893_IfaceVT
        .short 48 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
music_Playable__C1893_IfaceVT:
  .short 12, 10, 8, 6, 4, 2
  .short 320, 0 ; stopped
  .word 4
  .word 0, 0 ; the end
        .object music_MelodyPlayable__C1898_VT
        .balign 4
music_MelodyPlayable__C1898_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word music_MelodyPlayable__C1898_IfaceVT
        .short 49 ; class-id
        .short 0 ; reserved
        .word 1468534559 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
music_MelodyPlayable__C1898_IfaceVT:
  .short 12, 18, 8, 6, 4, 2
  .short 320, 0 ; stopped
  .word 4
  .short 204, 0 ; melody
  .word 8
  .word 0, 0 ; the end
        .object effects_ScreenEffect__C3241_VT
        .balign 4
effects_ScreenEffect__C3241_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word effects_ScreenEffect__C3241_IfaceVT
        .short 45 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
effects_ScreenEffect__C3241_IfaceVT:
  .short 40, 54, 60, 18, 24, 38, 60, 10, 8, 6, 4, 2
  .short 308, 0 ; sourceFactory
  .word 4
  .short 112, 0 ; defaultRate
  .word 8
  .short 111, 0 ; defaultLifespan
  .word 12
  .short 307, 0 ; source
  .word 16
  .short 275, 0 ; sceneDefaultRate
  .word 20
  .short 318, 2 ; start
  .word effects_ParticleEffect_start__P3239_args@fn
  .short 115, 2 ; destroy
  .word effects_ParticleEffect_destroy__P3240_args@fn
  .word 0, 0 ; the end
        .object particles_ParticleFactory__C3162_VT
        .balign 4
particles_ParticleFactory__C3162_VT:
        .short 4  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ParticleFactory__C3162_IfaceVT
        .short 50 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_ParticleFactory_createParticle__P3164_nochk@fn
        .word particles_ParticleFactory_drawParticle__P3165_nochk@fn
        .balign 4
particles_ParticleFactory__C3162_IfaceVT:
  .short 20, 10, 8, 6, 4, 2
  .short 108, 2 ; createParticle
  .word particles_ParticleFactory_createParticle__P3164_args@fn
  .short 125, 2 ; drawParticle
  .word particles_ParticleFactory_drawParticle__P3165_args@fn
  .word 0, 0 ; the end
        .object particles_SprayFactory__C3166_VT
        .balign 4
particles_SprayFactory__C3166_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_SprayFactory__C3166_IfaceVT
        .short 51 ; class-id
        .short 0 ; reserved
        .word 1101023515 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_SprayFactory_createParticle__P3168_nochk@fn
        .word particles_SprayFactory_drawParticle__P3169_nochk@fn
        .balign 4
particles_SprayFactory__C3166_IfaceVT:
  .short 72, 102, 68, 66, 64, 62, 60, 58, 56, 54, 60, 50, 88, 46, 44, 42, 40, 38, 84, 34, 32, 54, 28, 42, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 310, 0 ; speed
  .word 4
  .short 208, 0 ; minAngle
  .word 8
  .short 311, 0 ; spread
  .word 12
  .short 108, 2 ; createParticle
  .word particles_SprayFactory_createParticle__P3168_args@fn
  .short 125, 2 ; drawParticle
  .word particles_SprayFactory_drawParticle__P3169_args@fn
  .short 298, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3170_args@fn
  .short 287, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3171_args@fn
  .word 0, 0 ; the end
        .object particles_AreaFactory__C3172_VT
        .balign 4
particles_AreaFactory__C3172_VT:
        .short 36  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_AreaFactory__C3172_IfaceVT
        .short 52 ; class-id
        .short 0 ; reserved
        .word 1197357339 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_AreaFactory_createParticle__P3178_nochk@fn
        .word particles_AreaFactory_drawParticle__P3179_nochk@fn
        .balign 4
particles_AreaFactory__C3172_IfaceVT:
  .short 160, 70, 148, 130, 64, 62, 108, 58, 96, 54, 52, 74, 48, 46, 44, 74, 40, 38, 36, 34, 32, 30, 44, 82, 24, 22, 20, 90, 16, 14, 12, 18, 8, 6, 4, 2
  .short 310, 0 ; speed
  .word 4
  .short 208, 0 ; minAngle
  .word 8
  .short 311, 0 ; spread
  .word 12
  .short 360, 0 ; xRange
  .word 16
  .short 364, 0 ; yRange
  .word 20
  .short 209, 0 ; minLifespan
  .word 24
  .short 198, 0 ; maxLifespan
  .word 28
  .short 146, 0 ; galois
  .word 32
  .short 108, 2 ; createParticle
  .word particles_AreaFactory_createParticle__P3178_args@fn
  .short 125, 2 ; drawParticle
  .word particles_AreaFactory_drawParticle__P3179_args@fn
  .short 298, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3170_args@fn
  .short 287, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3171_args@fn
  .word 0, 0 ; the end
        .object particles_ShapeFactory__C3188_VT
        .balign 4
particles_ShapeFactory__C3188_VT:
        .short 48  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ShapeFactory__C3188_IfaceVT
        .short 53 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_ShapeFactory_createParticle__P3192_nochk@fn
        .word particles_ShapeFactory_drawParticle__P3191_nochk@fn
        .balign 4
particles_ShapeFactory__C3188_IfaceVT:
  .short 72, 70, 156, 146, 64, 78, 92, 106, 176, 54, 116, 50, 56, 46, 44, 42, 64, 38, 36, 34, 88, 30, 100, 26, 24, 62, 132, 122, 16, 110, 12, 10, 8, 6, 4, 2
  .short 310, 0 ; speed
  .word 4
  .short 208, 0 ; minAngle
  .word 8
  .short 311, 0 ; spread
  .word 12
  .short 360, 0 ; xRange
  .word 16
  .short 364, 0 ; yRange
  .word 20
  .short 209, 0 ; minLifespan
  .word 24
  .short 198, 0 ; maxLifespan
  .word 28
  .short 146, 0 ; galois
  .word 32
  .short 309, 0 ; sources
  .word 36
  .short 228, 0 ; ox
  .word 40
  .short 229, 0 ; oy
  .word 44
  .short 58, 2 ; addShape
  .word particles_ShapeFactory_addShape__P3190_args@fn
  .short 125, 2 ; drawParticle
  .word particles_ShapeFactory_drawParticle__P3191_args@fn
  .short 108, 2 ; createParticle
  .word particles_ShapeFactory_createParticle__P3192_args@fn
  .short 298, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3170_args@fn
  .short 287, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3171_args@fn
  .word 0, 0 ; the end
        .object particles_ConfettiFactory__C3193_VT
        .balign 4
particles_ConfettiFactory__C3193_VT:
        .short 48  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_ConfettiFactory__C3193_IfaceVT
        .short 54 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word particles_ShapeFactory_createParticle__P3192_nochk@fn
        .word particles_ShapeFactory_drawParticle__P3191_nochk@fn
        .balign 4
particles_ConfettiFactory__C3193_IfaceVT:
  .short 72, 70, 156, 146, 64, 78, 92, 106, 176, 54, 116, 50, 56, 46, 44, 42, 64, 38, 36, 34, 88, 30, 100, 26, 24, 62, 132, 122, 16, 110, 12, 10, 8, 6, 4, 2
  .short 310, 0 ; speed
  .word 4
  .short 208, 0 ; minAngle
  .word 8
  .short 311, 0 ; spread
  .word 12
  .short 360, 0 ; xRange
  .word 16
  .short 364, 0 ; yRange
  .word 20
  .short 209, 0 ; minLifespan
  .word 24
  .short 198, 0 ; maxLifespan
  .word 28
  .short 146, 0 ; galois
  .word 32
  .short 309, 0 ; sources
  .word 36
  .short 228, 0 ; ox
  .word 40
  .short 229, 0 ; oy
  .word 44
  .short 58, 2 ; addShape
  .word particles_ShapeFactory_addShape__P3190_args@fn
  .short 125, 2 ; drawParticle
  .word particles_ShapeFactory_drawParticle__P3191_args@fn
  .short 108, 2 ; createParticle
  .word particles_ShapeFactory_createParticle__P3192_args@fn
  .short 298, 2 ; setSpeed
  .word particles_SprayFactory_setSpeed__P3170_args@fn
  .short 287, 2 ; setDirection
  .word particles_SprayFactory_setDirection__P3171_args@fn
  .word 0, 0 ; the end
        .object particles_Particle__C3107_VT
        .balign 4
particles_Particle__C3107_VT:
        .short 36  ; size in bytes
        .byte 4, 249 ; magic
        .word particles_Particle__C3107_IfaceVT
        .short 55 ; class-id
        .short 0 ; reserved
        .word 1101023514 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
particles_Particle__C3107_IfaceVT:
  .short 136, 134, 132, 130, 128, 126, 124, 178, 120, 118, 116, 114, 160, 110, 140, 106, 104, 102, 100, 98, 96, 94, 92, 130, 88, 86, 84, 82, 80, 94, 76, 74, 72, 70, 68, 66, 64, 70, 60, 58, 56, 54, 52, 50, 48, 46, 68, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 52, 0 ; _x
  .word 4
  .short 53, 0 ; _y
  .word 8
  .short 349, 0 ; vx
  .word 12
  .short 350, 0 ; vy
  .word 16
  .short 192, 0 ; lifespan
  .word 20
  .short 216, 0 ; next
  .word 24
  .short 110, 0 ; data
  .word 28
  .short 98, 0 ; color
  .word 32
  .word 0, 0 ; the end
        .object MovingSprite__C2500_VT
        .balign 4
MovingSprite__C2500_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word MovingSprite__C2500_IfaceVT
        .short 56 ; class-id
        .short 0 ; reserved
        .word 698755868 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
MovingSprite__C2500_IfaceVT:
  .short 56, 38, 68, 34, 32, 30, 76, 26, 24, 22, 20, 58, 16, 22, 12, 34, 8, 6, 4, 2
  .short 312, 0 ; sprite
  .word 4
  .short 79, 0 ; cachedVx
  .word 8
  .short 80, 0 ; cachedVy
  .word 12
  .short 129, 0 ; dx
  .word 16
  .short 130, 0 ; dy
  .word 20
  .short 361, 0 ; xStep
  .word 24
  .short 365, 0 ; yStep
  .word 28
  .word 0, 0 ; the end
        .object tiles_Location__C2668_VT
        .balign 4
tiles_Location__C2668_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word tiles_Location__C2668_IfaceVT
        .short 57 ; class-id
        .short 0 ; reserved
        .word 1783883548 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
tiles_Location__C2668_IfaceVT:
  .short 40, 62, 68, 34, 32, 78, 92, 26, 80, 22, 92, 26, 56, 30, 12, 10, 8, 6, 4, 2
  .short 42, 0 ; _row
  .word 4
  .short 9, 0 ; _col
  .word 8
  .short 327, 1 ; tileMap
  .word tiles_Location_tileMap__P2670_args@fn
  .short 99, 1 ; column
  .word tiles_Location_column__P2671_args@fn
  .short 265, 1 ; row
  .word tiles_Location_row__P2672_args@fn
  .short 358, 1 ; x
  .word tiles_Location_x__P2673_args@fn
  .short 362, 1 ; y
  .word tiles_Location_y__P2674_args@fn
  .short 189, 1 ; left
  .word tiles_Location_left__P2675_args@fn
  .short 338, 1 ; top
  .word tiles_Location_top__P2676_args@fn
  .short 329, 1 ; tileSet
  .word tiles_Location_tileSet__P2679_args@fn
  .word 0, 0 ; the end
        .object sprites_StaticObstacle__C2473_VT
        .balign 4
sprites_StaticObstacle__C2473_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_StaticObstacle__C2473_IfaceVT
        .short 58 ; class-id
        .short 0 ; reserved
        .word 1468534554 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
sprites_StaticObstacle__C2473_IfaceVT:
  .short 136, 134, 132, 130, 128, 126, 132, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 156, 90, 88, 142, 124, 82, 80, 94, 76, 74, 72, 70, 68, 66, 88, 62, 60, 90, 56, 54, 52, 50, 48, 46, 44, 42, 40, 86, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 187, 0 ; layer
  .word 4
  .short 167, 0 ; image
  .word 8
  .short 326, 0 ; tileIndex
  .word 12
  .short 338, 0 ; top
  .word 16
  .short 189, 0 ; left
  .word 20
  .short 358, 1 ; x
  .word sprites_StaticObstacle_x__P2480_args@fn
  .short 362, 1 ; y
  .word sprites_StaticObstacle_y__P2481_args@fn
  .short 162, 1 ; height
  .word sprites_StaticObstacle_height__P2482_args@fn
  .short 352, 1 ; width
  .word sprites_StaticObstacle_width__P2483_args@fn
  .word 0, 0 ; the end
        .object sprites_BaseSpriteSayRenderer__C2236_VT
        .balign 4
sprites_BaseSpriteSayRenderer__C2236_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word sprites_BaseSpriteSayRenderer__C2236_IfaceVT
        .short 59 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word sprites_BaseSpriteSayRenderer_draw__P2238_nochk@fn
        .word sprites_BaseSpriteSayRenderer_update__P2239_nochk@fn
        .word sprites_BaseSpriteSayRenderer_destroy__P2240_nochk@fn
        .balign 4
sprites_BaseSpriteSayRenderer__C2236_IfaceVT:
  .short 24, 22, 28, 42, 16, 46, 52, 26, 8, 6, 4, 2
  .short 324, 0 ; text
  .word 4
  .short 138, 0 ; fgColor
  .word 8
  .short 72, 0 ; bgColor
  .word 12
  .short 121, 2 ; draw
  .word sprites_BaseSpriteSayRenderer_draw__P2238_args@fn
  .short 341, 2 ; update
  .word sprites_BaseSpriteSayRenderer_update__P2239_args@fn
  .short 115, 2 ; destroy
  .word sprites_BaseSpriteSayRenderer_destroy__P2240_args@fn
  .word 0, 0 ; the end
.balign 4
.object _pxt_iface_member_names
_pxt_iface_member_names:
    .word 367
    .word _str1964  ; 0 .
    .word _str1965  ; 1 .__draw
    .word _str1966  ; 2 .__drawCore
    .word _str1967  ; 3 .__preUpdate
    .word _str1968  ; 4 .__update
    .word _str1969  ; 5 .__visible
    .word _str1970  ; 6 ._action
    .word _str1971  ; 7 ._ax
    .word _str1972  ; 8 ._ay
    .word _str1973  ; 9 ._col
    .word _str1974  ; 10 ._connected
    .word _str1975  ; 11 ._controlledSprites
    .word _str1976  ; 12 ._data
    .word _str1977  ; 13 ._destroyCore
    .word _str1978  ; 14 ._dt
    .word _str1979  ; 15 ._factory
    .word _str1980  ; 16 ._fx
    .word _str1981  ; 17 ._fy
    .word _str1982  ; 18 ._height
    .word _str1983  ; 19 ._hitbox
    .word _str1984  ; 20 ._id
    .word _str1985  ; 21 ._image
    .word _str1986  ; 22 ._kind
    .word _str1987  ; 23 ._kindsOverlappedWith
    .word _str1988  ; 24 ._lastUpdatedSpriteX
    .word _str1989  ; 25 ._lastUpdatedSpriteY
    .word _str1990  ; 26 ._lastX
    .word _str1991  ; 27 ._lastY
    .word _str1992  ; 28 ._layer
    .word _str1993  ; 29 ._layers
    .word _str1994  ; 30 ._map
    .word _str1995  ; 31 ._millis
    .word _str1996  ; 32 ._obstacles
    .word _str1997  ; 33 ._offsetX
    .word _str1998  ; 34 ._offsetY
    .word _str1999  ; 35 ._overlappers
    .word _str2000  ; 36 ._owner
    .word _str2001  ; 37 ._player
    .word _str2002  ; 38 ._pressed
    .word _str2003  ; 39 ._pressedElasped
    .word _str2004  ; 40 ._prune
    .word _str2005  ; 41 ._repeatCount
    .word _str2006  ; 42 ._row
    .word _str2007  ; 43 ._scale
    .word _str2008  ; 44 ._sprites
    .word _str2009  ; 45 ._sx
    .word _str2010  ; 46 ._sy
    .word _str2011  ; 47 ._text
    .word _str2012  ; 48 ._update
    .word _str2013  ; 49 ._vx
    .word _str2014  ; 50 ._vy
    .word _str2015  ; 51 ._width
    .word _str2016  ; 52 ._x
    .word _str2017  ; 53 ._y
    .word _str2018  ; 54 ._z
    .word _str2019  ; 55 .action
    .word _str2020  ; 56 .activeCard
    .word _str2021  ; 57 .add
    .word _str2022  ; 58 .addShape
    .word _str2023  ; 59 .addSprite
    .word _str2024  ; 60 .alignX
    .word _str2025  ; 61 .alignY
    .word _str2026  ; 62 .allSprites
    .word _str2027  ; 63 .analog
    .word _str2028  ; 64 .anchor
    .word _str2029  ; 65 .applyTo
    .word _str2030  ; 66 .areaHeight
    .word _str2031  ; 67 .areaWidth
    .word _str2032  ; 68 .ax
    .word _str2033  ; 69 .ay
    .word _str2034  ; 70 .background
    .word _str2035  ; 71 .basicCard
    .word _str2036  ; 72 .bgColor
    .word _str2037  ; 73 .bottom
    .word _str2038  ; 74 .buckets
    .word _str2039  ; 75 .button
    .word _str2040  ; 76 .buttonEventHandlers
    .word _str2041  ; 77 .buttons
    .word _str2042  ; 78 .cachedTileView
    .word _str2043  ; 79 .cachedVx
    .word _str2044  ; 80 .cachedVy
    .word _str2045  ; 81 .calcDimensionalHash
    .word _str2046  ; 82 .callback
    .word _str2047  ; 83 .camera
    .word _str2048  ; 84 .canResolveClipping
    .word _str2049  ; 85 .card
    .word _str2050  ; 86 .cardSpacing
    .word _str2051  ; 87 .cardWidth
    .word _str2052  ; 88 .cardsPerRow
    .word _str2053  ; 89 .cardsTop
    .word _str2054  ; 90 .cellHeight
    .word _str2055  ; 91 .cellWidth
    .word _str2056  ; 92 .change
    .word _str2057  ; 93 .charHeight
    .word _str2058  ; 94 .charWidth
    .word _str2059  ; 95 .clear
    .word _str2060  ; 96 .clearObstacles
    .word _str2061  ; 97 .collisionHandlers
    .word _str2062  ; 98 .color
    .word _str2063  ; 99 .column
    .word _str2064  ; 100 .columnCount
    .word _str2065  ; 101 .condition
    .word _str2066  ; 102 .connected
    .word _str2067  ; 103 .constrain
    .word _str2068  ; 104 .contains
    .word _str2069  ; 105 .controlledSprites
    .word _str2070  ; 106 .controllerConnectionState
    .word _str2071  ; 107 .createMovingSprite
    .word _str2072  ; 108 .createParticle
    .word _str2073  ; 109 .createdHandlers
    .word _str2074  ; 110 .data
    .word _str2075  ; 111 .defaultLifespan
    .word _str2076  ; 112 .defaultRate
    .word _str2077  ; 113 .deltaTime
    .word _str2078  ; 114 .deltaTimeMillis
    .word _str2079  ; 115 .destroy
    .word _str2080  ; 116 .destroyHandler
    .word _str2081  ; 117 .destroyedHandlers
    .word _str2082  ; 118 .dispose
    .word _str2083  ; 119 .distance
    .word _str29  ; 120 .down
    .word _str2084  ; 121 .draw
    .word _str2085  ; 122 .drawDebug
    .word _str2086  ; 123 .drawOffsetX
    .word _str2087  ; 124 .drawOffsetY
    .word _str2088  ; 125 .drawParticle
    .word _str2089  ; 126 .drawSay
    .word _str2090  ; 127 .drawSprite
    .word _str2091  ; 128 .drawText
    .word _str2092  ; 129 .dx
    .word _str2093  ; 130 .dy
    .word _str2094  ; 131 .effect
    .word _str2095  ; 132 .effectSetByUser
    .word _str2096  ; 133 .eid
    .word _str2097  ; 134 .enabled
    .word _str2098  ; 135 .event
    .word _str2099  ; 136 .eventContext
    .word _str2100  ; 137 .fastRandom
    .word _str2101  ; 138 .fgColor
    .word _str2102  ; 139 .flags
    .word _str2103  ; 140 .followingSprites
    .word _str2104  ; 141 .frameCallbacks
    .word _str2105  ; 142 .frameWorker
    .word _str2106  ; 143 .framesInSample
    .word _str2107  ; 144 .fx
    .word _str2108  ; 145 .fy
    .word _str2109  ; 146 .galois
    .word _str2110  ; 147 .gameForeverHandlers
    .word _str2111  ; 148 .generator
    .word _str2112  ; 149 .getObstacle
    .word _str2113  ; 150 .getOrCreateHandlerForEvent
    .word _str2114  ; 151 .getText
    .word _str2115  ; 152 .getTile
    .word _str2116  ; 153 .getTileImage
    .word _str2117  ; 154 .getTileIndex
    .word _str2118  ; 155 .handler
    .word _str2119  ; 156 .handlerState
    .word _str2120  ; 157 .handlers
    .word _str2121  ; 158 .hash
    .word _str2122  ; 159 .head
    .word _str2123  ; 160 .headerFont
    .word _str2124  ; 161 .headerText
    .word _str2125  ; 162 .height
    .word _str2126  ; 163 .icon
    .word _str2127  ; 164 .iconImage
    .word _str2128  ; 165 .id
    .word _str2129  ; 166 .idleCallbacks
    .word _str2130  ; 167 .image
    .word _str2131  ; 168 .img
    .word _str2132  ; 169 .infoFont
    .word _str2133  ; 170 .infoTop
    .word _str2134  ; 171 .init
    .word _str2135  ; 172 .insertAABB
    .word _str2136  ; 173 .insertAtKey
    .word _str2137  ; 174 .isObstacle
    .word _str2138  ; 175 .isOnWall
    .word _str2139  ; 176 .isOutOfScreen
    .word _str2140  ; 177 .isOutsideMap
    .word _str2141  ; 178 .isPressed
    .word _str2142  ; 179 .isScaled
    .word _str2143  ; 180 .isStatic
    .word _str2144  ; 181 .isUpdated
    .word _str2145  ; 182 .isValid
    .word _str2146  ; 183 .isWall
    .word _str2147  ; 184 .key
    .word _str2148  ; 185 .kind
    .word _str2149  ; 186 .lastPerfDump
    .word _str2150  ; 187 .layer
    .word _str2151  ; 188 .layers
    .word _str2152  ; 189 .left
    .word _str2153  ; 190 .length
    .word _str2154  ; 191 .lfsr
    .word _str2155  ; 192 .lifespan
    .word _str2156  ; 193 .loseEffect
    .word _str2157  ; 194 .loseMessage
    .word _str2158  ; 195 .loseSound
    .word _str2159  ; 196 .loseSoundLooping
    .word _str2160  ; 197 .map
    .word _str2161  ; 198 .maxLifespan
    .word _str2162  ; 199 .maxNegativeVelocity
    .word _str2163  ; 200 .maxSingleStep
    .word _str2164  ; 201 .maxSpeed
    .word _str2165  ; 202 .maxStep
    .word _str2166  ; 203 .maxVelocity
    .word _str2167  ; 204 .melody
    .word _str2168  ; 205 .mergeAtKey
    .word _str2169  ; 206 .messageSetByUser
    .word _str2170  ; 207 .millis
    .word _str2171  ; 208 .minAngle
    .word _str2172  ; 209 .minLifespan
    .word _str2173  ; 210 .minSingleStep
    .word _str2174  ; 211 .minStep
    .word _str2175  ; 212 .move
    .word _str2176  ; 213 .moveSprite
    .word _str2177  ; 214 .multiplier
    .word _str2178  ; 215 .neighbors
    .word _str2179  ; 216 .next
    .word _str2180  ; 217 .offsetX
    .word _str2181  ; 218 .offsetY
    .word _str2182  ; 219 .onEvent
    .word _str2183  ; 220 .onUpdate
    .word _str2184  ; 221 .once
    .word _str2185  ; 222 .options
    .word _str2186  ; 223 .order
    .word _str2187  ; 224 .overlapHandlers
    .word _str2188  ; 225 .overlapMap
    .word _str2189  ; 226 .overlaps
    .word _str2190  ; 227 .overlapsWith
    .word _str2191  ; 228 .ox
    .word _str2192  ; 229 .oy
    .word _str2193  ; 230 .pFlags
    .word _str2194  ; 231 .padding
    .word _str2195  ; 232 .parent
    .word _str2196  ; 233 .particleSources
    .word _str2197  ; 234 .period
    .word _str2198  ; 235 .physicsEngine
    .word _str2199  ; 236 .pickRandom
    .word _str2200  ; 237 .playerIndex
    .word _str2201  ; 238 .position
    .word _str2202  ; 239 .preferredDelay
    .word _str2203  ; 240 .pressureLevel
    .word _str2204  ; 241 .prevTimeMillis
    .word _str2205  ; 242 .previousScene
    .word _str2206  ; 243 .priority
    .word _str2207  ; 244 .raiseButtonDown
    .word _str2208  ; 245 .raiseButtonRepeat
    .word _str2209  ; 246 .raiseButtonUp
    .word _str2210  ; 247 .randomRange
    .word _str2211  ; 248 .recalcSize
    .word _str2212  ; 249 .register
    .word _str2213  ; 250 .registerFrameCallbacks
    .word _str2214  ; 251 .registerFrameHandler
    .word _str2215  ; 252 .registerHandler
    .word _str2216  ; 253 .registerObstacle
    .word _str2217  ; 254 .remove
    .word _str2218  ; 255 .removeSprite
    .word _str2219  ; 256 .render
    .word _str2220  ; 257 .renderable
    .word _str2221  ; 258 .repeatDelay
    .word _str2222  ; 259 .repeatInterval
    .word _str2223  ; 260 .repeatX
    .word _str2224  ; 261 .repeatY
    .word _str2225  ; 262 .resetHitbox
    .word _str2226  ; 263 .resizeBuckets
    .word _str2227  ; 264 .right
    .word _str2228  ; 265 .row
    .word _str2229  ; 266 .rowCount
    .word _str2230  ; 267 .runButtonEvents
    .word _str2231  ; 268 .runCallbacks
    .word _str2232  ; 269 .runningCallbacks
    .word _str2233  ; 270 .s
    .word _str2234  ; 271 .sayEndTime
    .word _str2235  ; 272 .sayRenderer
    .word _str2236  ; 273 .scale
    .word _str2237  ; 274 .scene
    .word _str2238  ; 275 .sceneDefaultRate
    .word _str2239  ; 276 .scoringType
    .word _str2240  ; 277 .scoringTypeSetByUser
    .word _str2241  ; 278 .screenEdgeCollisions
    .word _str2242  ; 279 .scrollOffset
    .word _str2243  ; 280 .scrollRow
    .word _str2244  ; 281 .scrollTarget
    .word _str2245  ; 282 .seed
    .word _str2246  ; 283 .selectedCard
    .word _str2247  ; 284 .selection
    .word _str2248  ; 285 .setAcceleration
    .word _str2249  ; 286 .setAnchor
    .word _str2250  ; 287 .setDirection
    .word _str2251  ; 288 .setFactory
    .word _str2252  ; 289 .setFlag
    .word _str2253  ; 290 .setHitbox
    .word _str2254  ; 291 .setImage
    .word _str2255  ; 292 .setKind
    .word _str2256  ; 293 .setOffset
    .word _str2257  ; 294 .setPressed
    .word _str2258  ; 295 .setRate
    .word _str2259  ; 296 .setRelativeToCamera
    .word _str2260  ; 297 .setSelection
    .word _str2261  ; 298 .setSpeed
    .word _str2262  ; 299 .setState
    .word _str2263  ; 300 .setTheme
    .word _str2264  ; 301 .shakeAmplitude
    .word _str2265  ; 302 .shakeDuration
    .word _str2266  ; 303 .shakeStartTime
    .word _str2267  ; 304 .shouldBeVisible
    .word _str2268  ; 305 .show
    .word _str2269  ; 306 .soundSetByUser
    .word _str2270  ; 307 .source
    .word _str2271  ; 308 .sourceFactory
    .word _str2272  ; 309 .sources
    .word _str2273  ; 310 .speed
    .word _str2274  ; 311 .spread
    .word _str2275  ; 312 .sprite
    .word _str2276  ; 313 .spriteCollisions
    .word _str2277  ; 314 .spriteNextId
    .word _str2278  ; 315 .sprites
    .word _str2279  ; 316 .spritesByKind
    .word _str2280  ; 317 .src
    .word _str2281  ; 318 .start
    .word _str2282  ; 319 .state
    .word _str2283  ; 320 .stopped
    .word _str2284  ; 321 .sx
    .word _str2285  ; 322 .sy
    .word _str2286  ; 323 .system
    .word _str2287  ; 324 .text
    .word _str2288  ; 325 .theme
    .word _str2289  ; 326 .tileIndex
    .word _str2290  ; 327 .tileMap
    .word _str2291  ; 328 .tileOverlapHandlers
    .word _str2292  ; 329 .tileSet
    .word _str2293  ; 330 .tilemapCollisions
    .word _str2294  ; 331 .tilemapOverlaps
    .word _str2295  ; 332 .tileset
    .word _str2296  ; 333 .timeInSample
    .word _str2297  ; 334 .timeOut
    .word _str2298  ; 335 .timer
    .word _str2299  ; 336 .times
    .word _str2300  ; 337 .toString
    .word _str2301  ; 338 .top
    .word _str2302  ; 339 .unregister
    .word _str30  ; 340 .up
    .word _str2303  ; 341 .update
    .word _str2304  ; 342 .updateCard
    .word _str2305  ; 343 .updateIfInvalid
    .word _str2306  ; 344 .updateParticle
    .word _str2307  ; 345 .updateScrollTarget
    .word _str2308  ; 346 .user
    .word _str2309  ; 347 .value
    .word _str2310  ; 348 .vid
    .word _str2311  ; 349 .vx
    .word _str2312  ; 350 .vy
    .word _str2313  ; 351 .wallCollisionHandlers
    .word _str2314  ; 352 .width
    .word _str2315  ; 353 .winEffect
    .word _str2316  ; 354 .winMessage
    .word _str2317  ; 355 .winMessageMultiplayer
    .word _str2318  ; 356 .winSound
    .word _str2319  ; 357 .winSoundLooping
    .word _str2320  ; 358 .x
    .word _str2321  ; 359 .xOffset
    .word _str2322  ; 360 .xRange
    .word _str2323  ; 361 .xStep
    .word _str2324  ; 362 .y
    .word _str2325  ; 363 .yOffset
    .word _str2326  ; 364 .yRange
    .word _str2327  ; 365 .yStep
    .word _str2328  ; 366 .z
    .word 0
_vtables_end:
.balign 4
.object _pxt_config_data
_pxt_config_data:
    .word 4, 1054  ; PIN_BTN_A=1054
    .word 5, 1055  ; PIN_BTN_B=1055
    .word 32, 17  ; PIN_DISPLAY_SCK=17
    .word 33, 1  ; PIN_DISPLAY_MISO=1
    .word 34, 13  ; PIN_DISPLAY_MOSI=13
    .word 36, 10  ; PIN_DISPLAY_DC=10
    .word 37, 160  ; DISPLAY_WIDTH=160
    .word 38, 128  ; DISPLAY_HEIGHT=128
    .word 39, 128  ; DISPLAY_CFG0=128
    .word 40, 1539  ; DISPLAY_CFG1=1539
    .word 41, 8  ; DISPLAY_CFG2=8
    .word 43, 34  ; PIN_DISPLAY_RST=34
    .word 44, 26  ; PIN_DISPLAY_BL=26
    .word 47, 1050  ; PIN_BTN_LEFT=1050
    .word 48, 1053  ; PIN_BTN_RIGHT=1053
    .word 49, 1051  ; PIN_BTN_UP=1051
    .word 50, 1052  ; PIN_BTN_DOWN=1052
    .word 51, 1056  ; PIN_BTN_MENU=1056
    .word 60, 12  ; PIN_JACK_TX=12
    .word 65, 0  ; PIN_JACK_SND=0
    .word 71, 9  ; PIN_BTNMX_LATCH=9
    .word 72, 32  ; PIN_BTNMX_CLOCK=32
    .word 73, 1  ; PIN_BTNMX_DATA=1
    .word 78, 4242  ; DISPLAY_TYPE=4242
    .word 0
            .balign 4
            .object _str1964
_str1964:
 .word pxt::string_inline_ascii_vt
    .short 0
    .string ""
            .balign 4
            .object _str1965
_str1965:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "__draw"
            .balign 4
            .object _str1966
_str1966:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "__drawCore"
            .balign 4
            .object _str1967
_str1967:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "__preUpdate"
            .balign 4
            .object _str1968
_str1968:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "__update"
            .balign 4
            .object _str1969
_str1969:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "__visible"
            .balign 4
            .object _str1970
_str1970:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_action"
            .balign 4
            .object _str1971
_str1971:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_ax"
            .balign 4
            .object _str1972
_str1972:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_ay"
            .balign 4
            .object _str1973
_str1973:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "_col"
            .balign 4
            .object _str1974
_str1974:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_connected"
            .balign 4
            .object _str1975
_str1975:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "_controlledSprites"
            .balign 4
            .object _str1976
_str1976:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_data"
            .balign 4
            .object _str1977
_str1977:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_destroyCore"
            .balign 4
            .object _str1978
_str1978:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_dt"
            .balign 4
            .object _str1979
_str1979:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_factory"
            .balign 4
            .object _str1980
_str1980:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_fx"
            .balign 4
            .object _str1981
_str1981:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_fy"
            .balign 4
            .object _str1982
_str1982:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_height"
            .balign 4
            .object _str1983
_str1983:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_hitbox"
            .balign 4
            .object _str1984
_str1984:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_id"
            .balign 4
            .object _str1985
_str1985:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_image"
            .balign 4
            .object _str1986
_str1986:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_kind"
            .balign 4
            .object _str1987
_str1987:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "_kindsOverlappedWith"
            .balign 4
            .object _str1988
_str1988:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "_lastUpdatedSpriteX"
            .balign 4
            .object _str1989
_str1989:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "_lastUpdatedSpriteY"
            .balign 4
            .object _str1990
_str1990:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_lastX"
            .balign 4
            .object _str1991
_str1991:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_lastY"
            .balign 4
            .object _str1992
_str1992:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_layer"
            .balign 4
            .object _str1993
_str1993:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_layers"
            .balign 4
            .object _str1994
_str1994:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "_map"
            .balign 4
            .object _str1995
_str1995:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_millis"
            .balign 4
            .object _str1996
_str1996:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_obstacles"
            .balign 4
            .object _str1997
_str1997:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_offsetX"
            .balign 4
            .object _str1998
_str1998:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_offsetY"
            .balign 4
            .object _str1999
_str1999:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_overlappers"
            .balign 4
            .object _str2000
_str2000:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_owner"
            .balign 4
            .object _str2001
_str2001:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_player"
            .balign 4
            .object _str2002
_str2002:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_pressed"
            .balign 4
            .object _str2003
_str2003:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "_pressedElasped"
            .balign 4
            .object _str2004
_str2004:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_prune"
            .balign 4
            .object _str2005
_str2005:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_repeatCount"
            .balign 4
            .object _str2006
_str2006:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "_row"
            .balign 4
            .object _str2007
_str2007:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_scale"
            .balign 4
            .object _str2008
_str2008:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_sprites"
            .balign 4
            .object _str2009
_str2009:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_sx"
            .balign 4
            .object _str2010
_str2010:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_sy"
            .balign 4
            .object _str2011
_str2011:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_text"
            .balign 4
            .object _str2012
_str2012:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_update"
            .balign 4
            .object _str2013
_str2013:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_vx"
            .balign 4
            .object _str2014
_str2014:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "_vy"
            .balign 4
            .object _str2015
_str2015:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_width"
            .balign 4
            .object _str2016
_str2016:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "_x"
            .balign 4
            .object _str2017
_str2017:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "_y"
            .balign 4
            .object _str2018
_str2018:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "_z"
            .balign 4
            .object _str2019
_str2019:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "action"
            .balign 4
            .object _str2020
_str2020:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "activeCard"
            .balign 4
            .object _str2021
_str2021:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "add"
            .balign 4
            .object _str2022
_str2022:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "addShape"
            .balign 4
            .object _str2023
_str2023:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "addSprite"
            .balign 4
            .object _str2024
_str2024:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "alignX"
            .balign 4
            .object _str2025
_str2025:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "alignY"
            .balign 4
            .object _str2026
_str2026:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "allSprites"
            .balign 4
            .object _str2027
_str2027:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "analog"
            .balign 4
            .object _str2028
_str2028:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "anchor"
            .balign 4
            .object _str2029
_str2029:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "applyTo"
            .balign 4
            .object _str2030
_str2030:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "areaHeight"
            .balign 4
            .object _str2031
_str2031:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "areaWidth"
            .balign 4
            .object _str2032
_str2032:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "ax"
            .balign 4
            .object _str2033
_str2033:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "ay"
            .balign 4
            .object _str2034
_str2034:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "background"
            .balign 4
            .object _str2035
_str2035:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "basicCard"
            .balign 4
            .object _str2036
_str2036:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "bgColor"
            .balign 4
            .object _str2037
_str2037:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "bottom"
            .balign 4
            .object _str2038
_str2038:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "buckets"
            .balign 4
            .object _str2039
_str2039:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "button"
            .balign 4
            .object _str2040
_str2040:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "buttonEventHandlers"
            .balign 4
            .object _str2041
_str2041:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "buttons"
            .balign 4
            .object _str2042
_str2042:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "cachedTileView"
            .balign 4
            .object _str2043
_str2043:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "cachedVx"
            .balign 4
            .object _str2044
_str2044:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "cachedVy"
            .balign 4
            .object _str2045
_str2045:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "calcDimensionalHash"
            .balign 4
            .object _str2046
_str2046:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "callback"
            .balign 4
            .object _str2047
_str2047:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "camera"
            .balign 4
            .object _str2048
_str2048:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "canResolveClipping"
            .balign 4
            .object _str2049
_str2049:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "card"
            .balign 4
            .object _str2050
_str2050:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "cardSpacing"
            .balign 4
            .object _str2051
_str2051:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "cardWidth"
            .balign 4
            .object _str2052
_str2052:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "cardsPerRow"
            .balign 4
            .object _str2053
_str2053:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "cardsTop"
            .balign 4
            .object _str2054
_str2054:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "cellHeight"
            .balign 4
            .object _str2055
_str2055:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "cellWidth"
            .balign 4
            .object _str2056
_str2056:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "change"
            .balign 4
            .object _str2057
_str2057:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "charHeight"
            .balign 4
            .object _str2058
_str2058:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "charWidth"
            .balign 4
            .object _str2059
_str2059:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "clear"
            .balign 4
            .object _str2060
_str2060:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "clearObstacles"
            .balign 4
            .object _str2061
_str2061:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "collisionHandlers"
            .balign 4
            .object _str2062
_str2062:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "color"
            .balign 4
            .object _str2063
_str2063:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "column"
            .balign 4
            .object _str2064
_str2064:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "columnCount"
            .balign 4
            .object _str2065
_str2065:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "condition"
            .balign 4
            .object _str2066
_str2066:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "connected"
            .balign 4
            .object _str2067
_str2067:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "constrain"
            .balign 4
            .object _str2068
_str2068:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "contains"
            .balign 4
            .object _str2069
_str2069:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "controlledSprites"
            .balign 4
            .object _str2070
_str2070:
 .word pxt::string_inline_ascii_vt
    .short 25
    .string "controllerConnectionState"
            .balign 4
            .object _str2071
_str2071:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "createMovingSprite"
            .balign 4
            .object _str2072
_str2072:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "createParticle"
            .balign 4
            .object _str2073
_str2073:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "createdHandlers"
            .balign 4
            .object _str2074
_str2074:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "data"
            .balign 4
            .object _str2075
_str2075:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "defaultLifespan"
            .balign 4
            .object _str2076
_str2076:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "defaultRate"
            .balign 4
            .object _str2077
_str2077:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "deltaTime"
            .balign 4
            .object _str2078
_str2078:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "deltaTimeMillis"
            .balign 4
            .object _str2079
_str2079:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "destroy"
            .balign 4
            .object _str2080
_str2080:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "destroyHandler"
            .balign 4
            .object _str2081
_str2081:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "destroyedHandlers"
            .balign 4
            .object _str2082
_str2082:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "dispose"
            .balign 4
            .object _str2083
_str2083:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "distance"
            .balign 4
            .object _str29
_str29:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "down"
            .balign 4
            .object _str2084
_str2084:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "draw"
            .balign 4
            .object _str2085
_str2085:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "drawDebug"
            .balign 4
            .object _str2086
_str2086:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "drawOffsetX"
            .balign 4
            .object _str2087
_str2087:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "drawOffsetY"
            .balign 4
            .object _str2088
_str2088:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "drawParticle"
            .balign 4
            .object _str2089
_str2089:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "drawSay"
            .balign 4
            .object _str2090
_str2090:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "drawSprite"
            .balign 4
            .object _str2091
_str2091:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "drawText"
            .balign 4
            .object _str2092
_str2092:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "dx"
            .balign 4
            .object _str2093
_str2093:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "dy"
            .balign 4
            .object _str2094
_str2094:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "effect"
            .balign 4
            .object _str2095
_str2095:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "effectSetByUser"
            .balign 4
            .object _str2096
_str2096:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "eid"
            .balign 4
            .object _str2097
_str2097:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "enabled"
            .balign 4
            .object _str2098
_str2098:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "event"
            .balign 4
            .object _str2099
_str2099:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "eventContext"
            .balign 4
            .object _str2100
_str2100:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "fastRandom"
            .balign 4
            .object _str2101
_str2101:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "fgColor"
            .balign 4
            .object _str2102
_str2102:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "flags"
            .balign 4
            .object _str2103
_str2103:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "followingSprites"
            .balign 4
            .object _str2104
_str2104:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "frameCallbacks"
            .balign 4
            .object _str2105
_str2105:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "frameWorker"
            .balign 4
            .object _str2106
_str2106:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "framesInSample"
            .balign 4
            .object _str2107
_str2107:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "fx"
            .balign 4
            .object _str2108
_str2108:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "fy"
            .balign 4
            .object _str2109
_str2109:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "galois"
            .balign 4
            .object _str2110
_str2110:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "gameForeverHandlers"
            .balign 4
            .object _str2111
_str2111:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "generator"
            .balign 4
            .object _str2112
_str2112:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "getObstacle"
            .balign 4
            .object _str2113
_str2113:
 .word pxt::string_inline_ascii_vt
    .short 26
    .string "getOrCreateHandlerForEvent"
            .balign 4
            .object _str2114
_str2114:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "getText"
            .balign 4
            .object _str2115
_str2115:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "getTile"
            .balign 4
            .object _str2116
_str2116:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "getTileImage"
            .balign 4
            .object _str2117
_str2117:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "getTileIndex"
            .balign 4
            .object _str2118
_str2118:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "handler"
            .balign 4
            .object _str2119
_str2119:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "handlerState"
            .balign 4
            .object _str2120
_str2120:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "handlers"
            .balign 4
            .object _str2121
_str2121:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "hash"
            .balign 4
            .object _str2122
_str2122:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "head"
            .balign 4
            .object _str2123
_str2123:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "headerFont"
            .balign 4
            .object _str2124
_str2124:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "headerText"
            .balign 4
            .object _str2125
_str2125:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "height"
            .balign 4
            .object _str2126
_str2126:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "icon"
            .balign 4
            .object _str2127
_str2127:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "iconImage"
            .balign 4
            .object _str2128
_str2128:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "id"
            .balign 4
            .object _str2129
_str2129:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "idleCallbacks"
            .balign 4
            .object _str2130
_str2130:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "image"
            .balign 4
            .object _str2131
_str2131:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "img"
            .balign 4
            .object _str2132
_str2132:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "infoFont"
            .balign 4
            .object _str2133
_str2133:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "infoTop"
            .balign 4
            .object _str2134
_str2134:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "init"
            .balign 4
            .object _str2135
_str2135:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "insertAABB"
            .balign 4
            .object _str2136
_str2136:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "insertAtKey"
            .balign 4
            .object _str2137
_str2137:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "isObstacle"
            .balign 4
            .object _str2138
_str2138:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isOnWall"
            .balign 4
            .object _str2139
_str2139:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "isOutOfScreen"
            .balign 4
            .object _str2140
_str2140:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "isOutsideMap"
            .balign 4
            .object _str2141
_str2141:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "isPressed"
            .balign 4
            .object _str2142
_str2142:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isScaled"
            .balign 4
            .object _str2143
_str2143:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isStatic"
            .balign 4
            .object _str2144
_str2144:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "isUpdated"
            .balign 4
            .object _str2145
_str2145:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isValid"
            .balign 4
            .object _str2146
_str2146:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "isWall"
            .balign 4
            .object _str2147
_str2147:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "key"
            .balign 4
            .object _str2148
_str2148:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "kind"
            .balign 4
            .object _str2149
_str2149:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "lastPerfDump"
            .balign 4
            .object _str2150
_str2150:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "layer"
            .balign 4
            .object _str2151
_str2151:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "layers"
            .balign 4
            .object _str2152
_str2152:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "left"
            .balign 4
            .object _str2153
_str2153:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "length"
            .balign 4
            .object _str2154
_str2154:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "lfsr"
            .balign 4
            .object _str2155
_str2155:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "lifespan"
            .balign 4
            .object _str2156
_str2156:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "loseEffect"
            .balign 4
            .object _str2157
_str2157:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "loseMessage"
            .balign 4
            .object _str2158
_str2158:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "loseSound"
            .balign 4
            .object _str2159
_str2159:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "loseSoundLooping"
            .balign 4
            .object _str2160
_str2160:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "map"
            .balign 4
            .object _str2161
_str2161:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "maxLifespan"
            .balign 4
            .object _str2162
_str2162:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "maxNegativeVelocity"
            .balign 4
            .object _str2163
_str2163:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "maxSingleStep"
            .balign 4
            .object _str2164
_str2164:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "maxSpeed"
            .balign 4
            .object _str2165
_str2165:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "maxStep"
            .balign 4
            .object _str2166
_str2166:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "maxVelocity"
            .balign 4
            .object _str2167
_str2167:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "melody"
            .balign 4
            .object _str2168
_str2168:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "mergeAtKey"
            .balign 4
            .object _str2169
_str2169:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "messageSetByUser"
            .balign 4
            .object _str2170
_str2170:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "millis"
            .balign 4
            .object _str2171
_str2171:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "minAngle"
            .balign 4
            .object _str2172
_str2172:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "minLifespan"
            .balign 4
            .object _str2173
_str2173:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "minSingleStep"
            .balign 4
            .object _str2174
_str2174:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "minStep"
            .balign 4
            .object _str2175
_str2175:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "move"
            .balign 4
            .object _str2176
_str2176:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "moveSprite"
            .balign 4
            .object _str2177
_str2177:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "multiplier"
            .balign 4
            .object _str2178
_str2178:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "neighbors"
            .balign 4
            .object _str2179
_str2179:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "next"
            .balign 4
            .object _str2180
_str2180:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "offsetX"
            .balign 4
            .object _str2181
_str2181:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "offsetY"
            .balign 4
            .object _str2182
_str2182:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "onEvent"
            .balign 4
            .object _str2183
_str2183:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "onUpdate"
            .balign 4
            .object _str2184
_str2184:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "once"
            .balign 4
            .object _str2185
_str2185:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "options"
            .balign 4
            .object _str2186
_str2186:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "order"
            .balign 4
            .object _str2187
_str2187:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "overlapHandlers"
            .balign 4
            .object _str2188
_str2188:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "overlapMap"
            .balign 4
            .object _str2189
_str2189:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "overlaps"
            .balign 4
            .object _str2190
_str2190:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "overlapsWith"
            .balign 4
            .object _str2191
_str2191:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "ox"
            .balign 4
            .object _str2192
_str2192:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "oy"
            .balign 4
            .object _str2193
_str2193:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "pFlags"
            .balign 4
            .object _str2194
_str2194:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "padding"
            .balign 4
            .object _str2195
_str2195:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "parent"
            .balign 4
            .object _str2196
_str2196:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "particleSources"
            .balign 4
            .object _str2197
_str2197:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "period"
            .balign 4
            .object _str2198
_str2198:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "physicsEngine"
            .balign 4
            .object _str2199
_str2199:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "pickRandom"
            .balign 4
            .object _str2200
_str2200:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "playerIndex"
            .balign 4
            .object _str2201
_str2201:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "position"
            .balign 4
            .object _str2202
_str2202:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "preferredDelay"
            .balign 4
            .object _str2203
_str2203:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "pressureLevel"
            .balign 4
            .object _str2204
_str2204:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "prevTimeMillis"
            .balign 4
            .object _str2205
_str2205:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "previousScene"
            .balign 4
            .object _str2206
_str2206:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "priority"
            .balign 4
            .object _str2207
_str2207:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "raiseButtonDown"
            .balign 4
            .object _str2208
_str2208:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "raiseButtonRepeat"
            .balign 4
            .object _str2209
_str2209:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "raiseButtonUp"
            .balign 4
            .object _str2210
_str2210:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "randomRange"
            .balign 4
            .object _str2211
_str2211:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "recalcSize"
            .balign 4
            .object _str2212
_str2212:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "register"
            .balign 4
            .object _str2213
_str2213:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "registerFrameCallbacks"
            .balign 4
            .object _str2214
_str2214:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "registerFrameHandler"
            .balign 4
            .object _str2215
_str2215:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "registerHandler"
            .balign 4
            .object _str2216
_str2216:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "registerObstacle"
            .balign 4
            .object _str2217
_str2217:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "remove"
            .balign 4
            .object _str2218
_str2218:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "removeSprite"
            .balign 4
            .object _str2219
_str2219:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "render"
            .balign 4
            .object _str2220
_str2220:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "renderable"
            .balign 4
            .object _str2221
_str2221:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "repeatDelay"
            .balign 4
            .object _str2222
_str2222:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "repeatInterval"
            .balign 4
            .object _str2223
_str2223:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "repeatX"
            .balign 4
            .object _str2224
_str2224:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "repeatY"
            .balign 4
            .object _str2225
_str2225:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "resetHitbox"
            .balign 4
            .object _str2226
_str2226:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "resizeBuckets"
            .balign 4
            .object _str2227
_str2227:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "right"
            .balign 4
            .object _str2228
_str2228:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "row"
            .balign 4
            .object _str2229
_str2229:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "rowCount"
            .balign 4
            .object _str2230
_str2230:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "runButtonEvents"
            .balign 4
            .object _str2231
_str2231:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "runCallbacks"
            .balign 4
            .object _str2232
_str2232:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "runningCallbacks"
            .balign 4
            .object _str2233
_str2233:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "s"
            .balign 4
            .object _str2234
_str2234:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "sayEndTime"
            .balign 4
            .object _str2235
_str2235:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "sayRenderer"
            .balign 4
            .object _str2236
_str2236:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "scale"
            .balign 4
            .object _str2237
_str2237:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "scene"
            .balign 4
            .object _str2238
_str2238:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "sceneDefaultRate"
            .balign 4
            .object _str2239
_str2239:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "scoringType"
            .balign 4
            .object _str2240
_str2240:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "scoringTypeSetByUser"
            .balign 4
            .object _str2241
_str2241:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "screenEdgeCollisions"
            .balign 4
            .object _str2242
_str2242:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "scrollOffset"
            .balign 4
            .object _str2243
_str2243:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "scrollRow"
            .balign 4
            .object _str2244
_str2244:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "scrollTarget"
            .balign 4
            .object _str2245
_str2245:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "seed"
            .balign 4
            .object _str2246
_str2246:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "selectedCard"
            .balign 4
            .object _str2247
_str2247:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "selection"
            .balign 4
            .object _str2248
_str2248:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "setAcceleration"
            .balign 4
            .object _str2249
_str2249:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setAnchor"
            .balign 4
            .object _str2250
_str2250:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "setDirection"
            .balign 4
            .object _str2251
_str2251:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "setFactory"
            .balign 4
            .object _str2252
_str2252:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setFlag"
            .balign 4
            .object _str2253
_str2253:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setHitbox"
            .balign 4
            .object _str2254
_str2254:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setImage"
            .balign 4
            .object _str2255
_str2255:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setKind"
            .balign 4
            .object _str2256
_str2256:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setOffset"
            .balign 4
            .object _str2257
_str2257:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "setPressed"
            .balign 4
            .object _str2258
_str2258:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setRate"
            .balign 4
            .object _str2259
_str2259:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "setRelativeToCamera"
            .balign 4
            .object _str2260
_str2260:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "setSelection"
            .balign 4
            .object _str2261
_str2261:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setSpeed"
            .balign 4
            .object _str2262
_str2262:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setState"
            .balign 4
            .object _str2263
_str2263:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setTheme"
            .balign 4
            .object _str2264
_str2264:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "shakeAmplitude"
            .balign 4
            .object _str2265
_str2265:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "shakeDuration"
            .balign 4
            .object _str2266
_str2266:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "shakeStartTime"
            .balign 4
            .object _str2267
_str2267:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "shouldBeVisible"
            .balign 4
            .object _str2268
_str2268:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "show"
            .balign 4
            .object _str2269
_str2269:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "soundSetByUser"
            .balign 4
            .object _str2270
_str2270:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "source"
            .balign 4
            .object _str2271
_str2271:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "sourceFactory"
            .balign 4
            .object _str2272
_str2272:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "sources"
            .balign 4
            .object _str2273
_str2273:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "speed"
            .balign 4
            .object _str2274
_str2274:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "spread"
            .balign 4
            .object _str2275
_str2275:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "sprite"
            .balign 4
            .object _str2276
_str2276:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "spriteCollisions"
            .balign 4
            .object _str2277
_str2277:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "spriteNextId"
            .balign 4
            .object _str2278
_str2278:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "sprites"
            .balign 4
            .object _str2279
_str2279:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "spritesByKind"
            .balign 4
            .object _str2280
_str2280:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "src"
            .balign 4
            .object _str2281
_str2281:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "start"
            .balign 4
            .object _str2282
_str2282:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "state"
            .balign 4
            .object _str2283
_str2283:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "stopped"
            .balign 4
            .object _str2284
_str2284:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "sx"
            .balign 4
            .object _str2285
_str2285:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "sy"
            .balign 4
            .object _str2286
_str2286:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "system"
            .balign 4
            .object _str2287
_str2287:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "text"
            .balign 4
            .object _str2288
_str2288:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "theme"
            .balign 4
            .object _str2289
_str2289:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "tileIndex"
            .balign 4
            .object _str2290
_str2290:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "tileMap"
            .balign 4
            .object _str2291
_str2291:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "tileOverlapHandlers"
            .balign 4
            .object _str2292
_str2292:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "tileSet"
            .balign 4
            .object _str2293
_str2293:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "tilemapCollisions"
            .balign 4
            .object _str2294
_str2294:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "tilemapOverlaps"
            .balign 4
            .object _str2295
_str2295:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "tileset"
            .balign 4
            .object _str2296
_str2296:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "timeInSample"
            .balign 4
            .object _str2297
_str2297:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "timeOut"
            .balign 4
            .object _str2298
_str2298:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "timer"
            .balign 4
            .object _str2299
_str2299:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "times"
            .balign 4
            .object _str2300
_str2300:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "toString"
            .balign 4
            .object _str2301
_str2301:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "top"
            .balign 4
            .object _str2302
_str2302:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "unregister"
            .balign 4
            .object _str30
_str30:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "up"
            .balign 4
            .object _str2303
_str2303:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "update"
            .balign 4
            .object _str2304
_str2304:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "updateCard"
            .balign 4
            .object _str2305
_str2305:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "updateIfInvalid"
            .balign 4
            .object _str2306
_str2306:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "updateParticle"
            .balign 4
            .object _str2307
_str2307:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "updateScrollTarget"
            .balign 4
            .object _str2308
_str2308:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "user"
            .balign 4
            .object _str2309
_str2309:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "value"
            .balign 4
            .object _str2310
_str2310:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "vid"
            .balign 4
            .object _str2311
_str2311:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "vx"
            .balign 4
            .object _str2312
_str2312:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "vy"
            .balign 4
            .object _str2313
_str2313:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "wallCollisionHandlers"
            .balign 4
            .object _str2314
_str2314:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "width"
            .balign 4
            .object _str2315
_str2315:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "winEffect"
            .balign 4
            .object _str2316
_str2316:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "winMessage"
            .balign 4
            .object _str2317
_str2317:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "winMessageMultiplayer"
            .balign 4
            .object _str2318
_str2318:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "winSound"
            .balign 4
            .object _str2319
_str2319:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "winSoundLooping"
            .balign 4
            .object _str2320
_str2320:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "x"
            .balign 4
            .object _str2321
_str2321:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "xOffset"
            .balign 4
            .object _str2322
_str2322:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "xRange"
            .balign 4
            .object _str2323
_str2323:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "xStep"
            .balign 4
            .object _str2324
_str2324:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "y"
            .balign 4
            .object _str2325
_str2325:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "yOffset"
            .balign 4
            .object _str2326
_str2326:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "yRange"
            .balign 4
            .object _str2327
_str2327:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "yStep"
            .balign 4
            .object _str2328
_str2328:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "z"
            .balign 4
            .object _str0
_str0:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ","
            .balign 4
            .object _str1
_str1:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\n"
            .balign 4
            .object _str2
_str2:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "string"
            .balign 4
            .object _str3
_str3:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "number"
            .balign 4
            .object _str4
_str4:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "..."
            .balign 4
            .object _str5
_str5:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "[object Object]"
            .balign 4
            .object _str6
_str6:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "[Object]"
            .balign 4
            .object _str7
_str7:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "{"
            .balign 4
            .object _str8
_str8:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "\n    "
            .balign 4
            .object _str9
_str9:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string ": "
            .balign 4
            .object _str10
_str10:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "\n    ..."
            .balign 4
            .object _str11
_str11:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "\n}"
            .balign 4
            .object _str12
_str12:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "fps:"
            .balign 4
            .object _str13
_str13:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "."
            .balign 4
            .object _str14
_str14:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "/100 fps - "
            .balign 4
            .object _str15
_str15:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string " frames ("
            .balign 4
            .object _str16
_str16:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "ms/"
            .balign 4
            .object _str17
_str17:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "ms)"
            .balign 4
            .object _str18
_str18:
 .word pxt::string_inline_ascii_vt
    .short 34
    .string "~15 e3:3 r:1 d#:3 r:1 d:4 r:1 c#:8"
            .balign 4
            .object _str19
_str19:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "g4:1 c5 e g:2 e:1 g:3"
            .balign 4
            .object _str24
_str24:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "#run"
            .balign 4
            .object _str25
_str25:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "#scope"
            .balign 4
            .object _str27
_str27:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "btn "
            .balign 4
            .object _str28
_str28:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string " "
            .balign 4
            .object _str31
_str31:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "sim"
            .balign 4
            .object _str32
_str32:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "("
            .balign 4
            .object _str33
_str33:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string ")->("
            .balign 4
            .object _str34
_str34:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ")"
            .balign 4
            .object _str35
_str35:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "v"
            .balign 4
            .object _str36
_str36:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "a"
            .balign 4
            .object _str37
_str37:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string " buckets, "
            .balign 4
            .object _str38
_str38:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string " filled"
            .balign 4
            .object _str39
_str39:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string " sprites"
            .balign 4
            .object _str43
_str43:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string " sprites:"
            .balign 4
            .object _str47
_str47:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "YOU WIN!"
            .balign 4
            .object _str48
_str48:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "${WINNER} WINS!"
            .balign 4
            .object _str49
_str49:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "GAME OVER"
            .balign 4
            .object _str51
_str51:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "#volume"
            .balign 4
            .object _str52
_str52:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "#brightness"
            .balign 4
            .object _str53
_str53:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "console"
            .balign 4
            .object _str54
_str54:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "VOLUME DOWN ("
            .balign 4
            .object _str55
_str55:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "VOLUME UP ("
            .balign 4
            .object _str56
_str56:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "BRIGHTNESS DOWN ("
            .balign 4
            .object _str57
_str57:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "BRIGHTNESS UP ("
            .balign 4
            .object _str58
_str58:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "HIDE STATS"
            .balign 4
            .object _str59
_str59:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "SHOW STATS"
            .balign 4
            .object _str60
_str60:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "HIDE CONSOLE"
            .balign 4
            .object _str61
_str61:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "SHOW CONSOLE"
            .balign 4
            .object _str62
_str62:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "SLEEP"
            .balign 4
            .object _str63
_str63:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "CLOSE"
            .balign 4
            .object _str64
_str64:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "PAUSED"
            .balign 4
            .object _str76
_str76:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\x09"
            .balign 4
            .object _str85
_str85:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "server"
            .balign 4
            .object _str86
_str86:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "my-project"
.object _dbl26
.balign 4
_dbl26:
 .word pxt::number_vt
        .hex 0000c0ffffffdf41
.object _dbl40
.balign 4
_dbl40:
 .word pxt::number_vt
        .hex 9a9999999999b93f
.object _dbl42
.balign 4
_dbl42:
 .word pxt::number_vt
        .hex 000000000000e83f
.object _dbl50
.balign 4
_dbl50:
 .word pxt::number_vt
        .hex 182d4454fb21f93f
.object _dbl77
.balign 4
_dbl77:
 .word pxt::number_vt
        .hex 1a271792bf15b03f
.object _dbl78
.balign 4
_dbl78:
 .word pxt::number_vt
        .hex 182d4454fb211940
.object _dbl79
.balign 4
_dbl79:
 .word pxt::number_vt
        .hex 399d52a246df913f
.balign 4
.object _hexlit20
_hexlit20:
 .word pxt::buffer_vt
                .word 5272
                .hex 
.balign 4
.object _hexlit21
_hexlit21:
 .word pxt::buffer_vt
                .word 2470
                .hex 20000000000000000000000000000000000000000000000000002100000000000006fc0000000000000000000000000000000000220000001c00000000001c0000000000000000000000000000002300a000f807a000f807a00000000000000000000000000000002400000018022404460c8803000000000000000000000000000025003802c4017800200390040803000000000000000000000000260080037804a4041803800340040000000000000000000000002700000000001c00000000000000000000000000000000000000280000000000f8010606010800000000000000000000000000002900000001080606f801000000000000000000000000000000002a00040014000e001400040000000000000000000000000000002b0040004000f8034000400000000000000000000000000000002c000000000000090006000000000000000000000000000000002d000000800080008000000000000000000000000000000000002e000000000000060000000000000000000000000000000000002f00000c800360001c000300000000000000000000000000000030000000f80304040404f80300000000000000000000000000003100000004040404fc07000400040000000000000000000000003200000008060405c4043804000000000000000000000000000033000000080244044404b803000000000000000000000000000034000000800170010801fc070001000000000000000000000000350000023c0424042404c403000000000000000000000000000036000000f0034804440488030000000000000000000000000000370000000400c40734000c00000000000000000000000000000038000000b80344044404b803000000000000000000000000000039000000780284048802f00100000000000000000000000000003a000000000030060000000000000000000000000000000000003b000000000018090006000000000000000000000000000000003c004000a000a000a000100100000000000000000000000000003d002001200120012001200100000000000000000000000000003e0000001001a000a000a00040000000000000000000000000003f000000080084066400180000000000000000000000000000004000f0030c04c20822092409f80900000000000000000000000041000007f8008400f8000007000000000000000000000000000042000000fc0744044404b803000000000000000000000000000043000000f001080204040404080200000000000000000000000044000000fc0704040802f001000000000000000000000000000045000000fc07440444044404000000000000000000000000000046000000fc07440044004400000000000000000000000000000047000000f00108024404c803000000000000000000000000000048000000fc0740004000fc070000000000000000000000000000490000000404fc070404040400000000000000000000000000004a000000000200040004fc0300000000000000000000000000004b000000fc074000f0000c0304040000000000000000000000004c000000fc0700040004000400000000000000000000000000004d000000fc0738007000fc0700000000000000000000000000004e000000fc073800c003fc0700000000000000000000000000004f000000f80304040404f803000000000000000000000000000050000000fc07840084004400780000000000000000000000000051000000fc0102020206fc09000000000000000000000000000052000000fc074400c4013806000000000000000000000000000053000000180224044404880300000000000000000000000000005400000004000400fc070400040000000000000000000000000055000000fc0300040004fc03000000000000000000000000000056000c00f0030004f0030c00000000000000000000000000000057007c008007e001f0010007fc0000000000000000000000000058000404b8034000b80304040000000000000000000000000000590004003800c00730000c0000000000000000000000000000005a0004040407e4041c04040400000000000000000000000000005b0000000000ff0f0108010800000000000000000000000000005c0003001c0060008003000c00000000000000000000000000005d00000001080108ff0f000000000000000000000000000000005e004000380004003800400000000000000000000000000000005f00000800080008000800080000000000000000000000000000600000000000020004000000000000000000000000000000000061000000200390049004e007000000000000000000000000000062000000fc0710041004e003000000000000000000000000000063000000c001200210043004000200000000000000000000000064000000e00310041004fc07000000000000000000000000000065000000e00390049004e0040000000000000000000000000000660000001000f80714001400000000000000000000000000000067000000b806440944093c09040600000000000000000000000068000000fc0710001000e0070000000000000000000000000000690000000000f4070000000000000000000000000000000000006a00000800080008fd07000000000000000000000000000000006b000000fe078000e001100610040000000000000000000000006c0000000000fc030004000400000000000000000000000000006d00f00710001000e0071000e0070000000000000000000000006e000000f00710001000e00700000000000000000000000000006f000000e00310041004e003000000000000000000000000000070000000fc0f04010401f800000000000000000000000000000071000000f80004010401fc0f000000000000000000000000000072000000f00720001000100000000000000000000000000000007300000060029004900420030000000000000000000000000000740000001000fc0310041004000000000000000000000000000075000000f00300040004f007000000000000000000000000000076003000c0030004c003300000000000000000000000000000007700f0000007e003c0010007f000000000000000000000000000780010046003800060031004000000000000000000000000000079000c0870088007f0000c0000000000000000000000000000007a000000000410079004700410040000000000000000000000007b0000004000be070108010800000000000000000000000000007c0000000000ff0f0000000000000000000000000000000000007d00000001080108be07400000000000000000000000000000007e00800040004000800080004000000000000000000000000000
.balign 4
.object _hexlit22
_hexlit22:
 .word pxt::buffer_vt
                .word 904
                .hex 20000000000000002100001700000000220000030003000023000a1f0a1f0a0024000a17151d0a00250013090412190026000a15150a100027000003000000002800000e11000000290000110e0000002a00000a040a00002b0000040e0400002c000010080000002d000004040400002e000008000000002f0010080402010030000e11110e0000310000121f100000320019151512000033000911150b000034000c0a091f080035001715151509003600081416150800370011090503010038000a1515150a00390002150d0502003a00000a000000003b0000100a0000003c0000040a1100003d00000a0a0a00003e0000110a0400003f0002011505020040000e1115090e0041001e05051e000042001f15150a000043000e111111000044001f11110e000045001f151511000046001f050501000047000e1111150c0048001f04041f00004900111f110000004a000911110f01004b001f040a1100004c001f10101000004d001f0204021f004e001f0204081f004f000e11110e000050001f0505020000510006091916000052001f05050a10005300121515090000540001011f01010055000f10100f0000560007081008070057001f0804081f0058001b04041b0000590001021c0201005a001915131100005b00001f111100005c000102040810005d000011111f00005e000002010200005f00101010101000600000010200000061000c12121e100062001f141408000063000c121212000064000814141f000065000e15151200006600041e0501000067000215150f000068001f04041800006900001d000000006a000010100d00006b001f040a1000006c00000f101000006d001e0204021e006e001e02021c00006f000c12120c000070001e0a0a0400007100040a0a1e000072001c0202020000730010140a0200007400000f1414100075000e10101e1000760006081008060077001e1008101e007800120c0c12000079001214080402007a00121a161200007b0000041f1100007c00001f000000007d00111f040000007e00000404080800d3000c1213130c00f3000c12130d000004010e05051e100005010609191f080006010c121313120007010c121313000018010f0b1b19000019010e151d1a000041011f14121000004201100f1412000043011f0205081f0044011e03031c00005a0110140b0302005b0110140b0300007901121a171300007a01121a171300007b01121b171200007c01121b17120000
.balign 4
.object _hexlit23
_hexlit23:
 .word pxt::buffer_vt
                .word 48
                .hex 000000ffffffff2121ff93c4ff8135fff609249ca378dc52003fad87f2ff8e2ec4a4839f5c406ce5cdc491463d000000
.balign 4
.object _hexlit41
_hexlit41:
 .word pxt::buffer_vt
                .word 8
                .hex 8704000000000000
.balign 4
.object _hexlit44
_hexlit44:
 .word pxt::buffer_vt
                .word 36
                .hex 870407000800000000000000404400005055040450555505505501011011000000000000
.balign 4
.object _hexlit45
_hexlit45:
 .word pxt::buffer_vt
                .word 136
                .hex 87041000100000000000000000000000000000000000000000000050050000000000000550000000005045444404000000455544444400040045555555550404004555555555450500455555555511050045555555150101004555111111000100501511110100000000000550000000000000500500000000000000000000000000000000000000
.balign 4
.object _hexlit46
_hexlit46:
 .word pxt::buffer_vt
                .word 136
                .hex 870410001000000000000000000000000000000000000000006666666666060060ffffff666f660060fffffff6ff660060fff1ff666f660060fff1ff6666660060fffff16666660060fffff16666660060fff1ff6666660060fff1ff66f6660060ffffff6666660060fffffff6666600006666666666060000000000000000000000000000000000
.balign 4
.object _hexlit65
_hexlit65:
 .word pxt::buffer_vt
                .word 728
                .hex
.balign 4
.object _hexlit66
_hexlit66:
 .word pxt::buffer_vt
                .word 728
                .hex
.balign 4
.object _hexlit67
_hexlit67:
 .word pxt::buffer_vt
                .word 728
                .hex 8704240024000000004444444444444444444444444444444400000040343333333333333333333333333333430400004443444444444444444444444444444434440000344411111111111111111111111111114443000034141111111111111111111111111111414300003414111111111111111111111111111141430000341411111111111111111111111111114143000034141111111111111111111111111111414300003414111111111111111111111111111141430000341411111111111111111111111111114143000034141111111111111111111111111111414300003414111111111111111111111111111141430000341411111111111111111111111111114143000034141111111111111111111111111111414300003414111111111111111111111111111141430000341411111111111111111111111111114143000034141111111111111111111111111111414300003414111111111111111111111111111141430000341411111111111111111111111111114143000034141111111111111111111111111111414300003414111111111111111111111111111141430000341411111111111111111111111111114143000034141111111111111111111111111111414300003414111111111111111111111111111141430000341411111111111111111111111111114143000034141111111111111111111111111111414300003414111111111111111111111111111141430000341411111111111111111111111111114143000034141111111111111111111111111111414300003414111111111111111111111111111141430000341411111111111111111111111111114143000034141111111111111111111111111111414300003444111111111111111111111111111144430000444344444444444444444444444444443444000040343333333333333333333333333333430400000044444444444444444444444444444444000000
.balign 4
.object _hexlit68
_hexlit68:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d00000000000000000000000070666607000000000000000000000000006776000000000000000000000000660700007066000000000000000000006766777766760000000000000000000060666666660600000000000000000066006766667600660000000000000000667600000000676600000000000000006766767777676676000000000000000060666666666666060000000000000000006766666666760000000000000000000000676666760000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit69
_hexlit69:
 .word pxt::buffer_vt
                .word 520
                .hex 8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0bb000000000000000000000000b000404500b0000000000000000000005b0b000400540b0000000000000000b0550400000054b5000000000000000000440040bb0040040000000000000000000040d4ddbb0000000000000000000000004055ddbd000000000000000000004b005455d5dd0b400b000000000000005b045411d5dd0b540b000000000000004b005411d5dd0b400b0000000000000000004055ddbd00000000000000000000000040d4ddbb0000000000000000000000440040bb0040040000000000000000b0550400000054b50000000000000000005b04000400540b000000000000000000b000404500b0000000000000000000000000b0bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit70
_hexlit70:
 .word pxt::buffer_vt
                .word 520
                .hex
.balign 4
.object _hexlit71
_hexlit71:
 .word pxt::buffer_vt
                .word 520
                .hex 8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d0000000000000000000000007066660700000000000000000000000000677600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit72
_hexlit72:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0cbcc0c0000000000000000000000b0db55d5cd0c00000000000000000000db555555ddcd000000000000000000b055555555d59d0b0000000000000000db55555555d59db900000000000000005b55555555d5ddb900000000000000b05db5cccc5bdddd990b000000000000b055ccccccccdddd9d0b000000000000b0b5ccccccccdbdd9d0b000000000000b0c5ccccccccdcdd9d0b000000000000b0c5ccdccbccdcdd9d0c000000000000b0cdcc5b55ccdcdd9d0c00000000000000ccdc55b5ccdcddc90000000000000000cccc5b55ccdbddc90000000000000000c0ccdccbccdd9d0c000000000000000000ccccccdbddcd00000000000000000000c0dcddddcd0c0000000000000000000000c0cccc0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit73
_hexlit73:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000000000000b0bbbbbbbbcb00c0cd000000000000001bddddddddbd0c1ccd000000000000b011cbccccccbc0c1ccd000000000000b01d6c666666bc0cbccd000000000000b01d6c616661bc0c1ccd000000000000b01d6c161666bccc1bcd000000000000b01d6c666166bcccbbcd000000000000b01d6c666666bccc1bcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666661bcccbbcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666666bc0c1ccd000000000000b01dcbccccccbc0cbccd000000000000c0b1bbbbbbbbbb0cdccb000000000000c0bbbbbbbbbbcb00dc0c00000000000000cccccccccc0c00cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit74
_hexlit74:
 .word pxt::buffer_vt
                .word 520
                .hex 87042000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004000000000000000000000000000054450000000000000000000000440b00bbbb00b0440000000000000040550b00000000b0550400000000000040b5000044bb00005b04000000000000b00b0044ddddbb00b00b0000000000000000405d55d5dd0b00000000000000000000d4555555ddbd0000000000000000000054555555d5bd0000000000000000b44055555555d5dd0b4b000000000040b54055555555d5dd0b5b040000000040b54055555555d5dd0b5b040000000000b44055115555d5dd0b4b000000000000000054115555d5bd00000000000000000000d4555555ddbd00000000000000000000405d55d5dd0b0000000000000000b00b0044ddddbb00b00b00000000000040b5000044bb00005b0400000000000040550b00000000b0550400000000000000440b00bbbb00b0440000000000000000000000544500000000000000000000000000004004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit75
_hexlit75:
 .word pxt::buffer_vt
                .word 520
                .hex 870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb00000000000000000000000000b055bb00bbbbbb000000000000000000b0b5bdbcbbbbddcb0000000000000000b0dbcb5b5555bbdd0c00000000000000b0cbdcbdbb5b55dbcd0000000000000000c0dddb11d15bb5bd0c00000000000000bbbd111111b155bb0c00000000000000db1b111111115bb5cb00000000000000db1bb11d1199b9d5cb00000000000000db1b11bb9199b955cb000000000000005b1b11b19b99995bcb000000000000005b1d1111bb99995ccb00000000000000b0b511bbbb99995ccb00000000000000b0d51d919999d95b0b00000000000000005bdb919999c9d50b0000000000000000b0d51b99d9bcb5000000000000000000005bd5bbbc550b00000000000000000000b05b5555bd000000000000000000000000b0bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
.balign 4
.object _hexlit80
_hexlit80:
 .word pxt::buffer_vt
                .word 12
                .hex 87040100010000000f000000
.balign 4
.object _hexlit81
_hexlit81:
 .word pxt::buffer_vt
                .word 12
                .hex 8704010002000000ff000000
.balign 4
.object _hexlit82
_hexlit82:
 .word pxt::buffer_vt
                .word 16
                .hex 87040200010000000f0000000f000000
.balign 4
.object _hexlit83
_hexlit83:
 .word pxt::buffer_vt
                .word 16
                .hex 8704020002000000ff0000000f000000
.balign 4
.object _hexlit84
_hexlit84:
 .word pxt::buffer_vt
                .word 16
                .hex 87040200020000000f000000ff000000
.balign 4
.section code
.object _perf_counters
_pxt_perf_counters:
    .word 0
_literals_end:
